//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $constantcolour;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float4 $texexpansion0;
//   float4x4 $transmodel;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//   float4x4 $uvmtx2;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $constantcolour  c0       1
//   $usevertexcolour c1       1
//   $transmodel      c2       3
//   $obviewpos       c5       1
//   $uvmtx0          c6       2
//   $uvmtx2          c8       2
//   $texexpansion0   c10      1
//   $modelviewproj   c11      4
//

// Shader type: vertex 

xvs_3_0
defconst $constantcolour, float, vector, [1, 4], c0
defconst $modelviewproj, float, matrix_columns, [4, 4], c11-14
defconst $obviewpos, float, vector, [1, 3], c5
defconst $texexpansion0, float, vector, [1, 4], c10
defconst $transmodel, float, matrix_columns, [4, 4], c2-4
defconst $usevertexcolour, float, scalar, [1, 1], c1
defconst $uvmtx0, float, matrix_columns, [4, 4], c6-7
defconst $uvmtx2, float, matrix_columns, [4, 4], c8-9
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=7
config VsResource=1
// VsExportCount=5

// interpolators: 6 interpolants: 6, components: 24
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3
dcl_texcoord4 o4
dcl_color o5

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, -1, 0, 0


/*    0.0 */     exec
/*    6   */     vfetch r2.xy__, r0.x, texcoord
/*    7   */     vfetch r2.__xy, r0.x, texcoord1
/*    8   */     vfetch r1, r0.x, position
/*    9   */     vfetch r4, r0.x, color
/*   10   */     vfetch r3, r0.x, texcoord2
/*    0.1 */     alloc position
/*    1.0 */     exec
/*   11   */     mul r6, r4.zyxw, c0
               + rcp r0.x, r1.w
/*   12   */     mul r0.xyz, r0.x, r1.xyz
/*   13   */     mad r1, r0.z, c13, c14
/*   14   */     mad r1, r0.y, c12.xzyw, r1.xzyw
/*   15   */     mad r7, r0.x, c11.xywz, r1.xzwy
/*   16   */     mov oPos, r7.xywz
/*    1.1 */     alloc interpolators
/*    2.0 */     exec
/*   17   */     cndge r1.y, r3.w, c255.x, c255.y
/*   18   */     dp3 r0.w, r3.zxy, r3.zxy
               + movs r4.w, -c1_abs.x
/*   19   */     mad r0.w, r3_abs.w, r3_abs.w, r0.w
/*   20   */     mul r2, r2.wzxy, c10.zzx
               + rsq r1.x, r0_abs.w
/*   21   */     dp2add r0.w, r2.wz, c6.yx, c6.w
/*   22   */     add r4.xyz, r0.xyz, -c5.xyz
               + mulsc r0.z, c7.x, r0.w
/*    2.1 */     exec
/*   23   */     mul r0.xy, r2.wz, c7.yx
               + movs r0._, r1.x
/*   24   */     mul r5.xzw, r1.x, r3.xyyz
               + muls_prev r5.y, r3_abs.w
/*   25   */     add r1.xzw, r5.wxxz, r5.wxxz
               + addsc r2.w, c7.w, r0.y
/*   26   */     mul r3, r5.yyxy, r1.zwx
               + addsc r2.z, c7.w, r0.z
/*   27   */     mov o3, r7.xywz
/*   28   */     cndge o5, r4.w, c0, r6
/*    3.0 */     exec
/*   29   */     dp3 o0.w, r4.zxy, c2.zxy
/*   30   */     dp3 o1.w, r4.zxy, c3.zxy
/*   31   */     dp3 o2.w, r4.zxy, c4.zxy
/*   32   */     dp2add o4.z, r2.xy, c8.yx, c8.w
/*   33   */     dp2add o4.w, r2.xy, c9.yx, c9.w
/*   34   */     mul r4, r5.zxxz, r1.wzwx
               + adds r2.x, r3.zy
/*    3.1 */     exec
/*   35   */     add r0.y, r4.y, r4.x
               + subs r1.w, r3.zy
/*   36   */     add r3.z, r4.w, r3.x
               + movs r0._, r4.z
/*   37   */     add r2.y, r4.w, -r3.x
               + adds_prev r3.x, -r3.w
/*   38   */     mad r1.xz, r5.w, r1.x, r4.yx
/*   39   */     add r0.x, r2.w, r0.x
               + movs r0._, r4.z
/*   40   */     mad o4.y, r0.x, c7.y, r2.z
/*    4.0 */     exec
/*   41   */     add r3.y, -r1.x, c255.x
               + adds_prev r1.x, r3.w
/*   42   */     add r1.z, -r1.z, c255.x
               + subsc r2.z, c255.x, r0.y
/*   43   */     dp2add o4.x, r0.xw, c6.yx, c6.w
/*   44   */     dp3 o0.x, r1.wzx, c2.zxy
/*   45   */     dp3 o0.z, r2.zxy, c2.zxy
/*   46   */     dp3 o1.z, r2.zxy, c3.zxy
/*    4.1 */     exec
/*   47   */     dp3 o2.z, r2.zxy, c4.zxy
/*   48   */     mul r2.xz, r1.zx, c4.xy
               + movs r0.y, r1.z
/*   49   */     mul r4, r1.xy, c2.yxyz
               + mulsc r2.y, c3.x, r0.y
/*   50   */     mul r0.xyz, r3.xzy, r1.y
               + mulsc r2.w, c3.y, r1.x
/*   51   */     dp3 o0.y, r4.wyz, r3.zxy
/*   52   */     dp3 o1.y, r0.yxz, c3.zxy
/*    5.0 */     exece
/*   53   */     dp3 o2.y, r0.yxz, c4.zxy
/*   54   */     add r0.xy, r2.xy, r2.zw
/*   55   */     mad o1.x, r1.w, c3.z, r0.y
/*   56   */     mad o2.x, r1.w, c4.z, r0.x
/*    5.1 */     cnop

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 6 (6) start of fetch run
// 1: dcl_texcoord1 at 7 (7)
// 2: dcl_position0 at 8 (8)
// 3: dcl_color0 at 9 (9)
// 4: dcl_texcoord2 at 10 (a) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xyzw
//    [0] 29
//    [1] 44
//    [2] 45
//    [3] 51

// [1] texcoord1 o1.xyzw
//    [4] 30
//    [5] 46
//    [6] 52
//    [7] 55

// [2] texcoord2 o2.xyzw
//    [8] 31
//    [9] 47
//    [10] 53
//    [11] 56

// [3] texcoord3 o3.xyzw
//    [12] 27

// [4] texcoord4 o4.xyzw
//    [13] 32
//    [14] 33
//    [15] 40
//    [16] 43

// [5] color0 o5.xyzw
//    [17] 28

