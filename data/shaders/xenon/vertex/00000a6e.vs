//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $arraybounds[5];
//   float4 $arraypos[5];
//   float4 $colmult;
//   float $grassvar;
//   float $grassvar2;
//   float $grassvar3;
//   float3 $grassworldpos;
//   float4x4 $modelviewproj;
//   float4 $winddir;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $arraybounds   c0       5
//   $arraypos      c5       5
//   $grassvar      c10      1
//   $grassvar2     c11      1
//   $grassvar3     c12      1
//   $winddir       c13      1
//   $grassworldpos c14      1
//   $colmult       c15      1
//   $modelviewproj c16      4
//

// Shader type: vertex 

xvs_3_0
defconst $arraybounds[0], float, vector, [1, 4], c0
defconst $arraybounds[1], float, vector, [1, 4], c1
defconst $arraybounds[2], float, vector, [1, 4], c2
defconst $arraybounds[3], float, vector, [1, 4], c3
defconst $arraybounds[4], float, vector, [1, 4], c4
defconst $arraypos[0], float, vector, [1, 4], c5
defconst $arraypos[1], float, vector, [1, 4], c6
defconst $arraypos[2], float, vector, [1, 4], c7
defconst $arraypos[3], float, vector, [1, 4], c8
defconst $arraypos[4], float, vector, [1, 4], c9
defconst $colmult, float, vector, [1, 4], c15
defconst $grassvar, float, scalar, [1, 1], c10
defconst $grassvar2, float, scalar, [1, 1], c11
defconst $grassvar3, float, scalar, [1, 1], c12
defconst $grassworldpos, float, vector, [1, 3], c14
defconst $modelviewproj, float, matrix_columns, [4, 4], c16-19
defconst $winddir, float, vector, [1, 4], c13
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=7
config VsResource=1
// VsExportCount=1

// interpolators: 2 interpolants: 2, components: 6
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 0, 0, 0, 0
def c251, 4, 6.28318548, 0.25, 3
def c252, 3.05185094e-005, 0.001953125, 1, 0.159154937
def c253, -3.14159274, 9.99999975e-005, 0.0009765625, 0.5
def c254, 0, 0.00100000005, 0.00999999978, 0.100000001
def c255, 1.00100005, 0, 0, 0


/*    0.0 */     exec
/*   12   */     vfetch r1, r0.x, position
/*   13   */     vfetch r3.xy__, r0.x, texcoord
/*   14   */     vfetch r5.xyz_, r0.x, color
/*   15   */     serialize
                 add r2.xyz, -c5.zxy, c14.zxy
/*   16   */     mad r4.yw, r1.yyz, c252.y, c14.yyz
/*   17   */     mad r0.yz, r1.zzx, c252.y, c254.zzx
/*    0.1 */     exec
/*   18   */     mad r1.xz, r1.zx, c252.y, r2.xy
/*   19   */     mad r0.x, r1.y, c252.y, r2.z
/*   20   */     mulsc r6.z, c0.y, r0.x
/*   21   */     add r0.xy, r0.yz, c14.zx
               + addsc r6.x, c254.z, r1.x
/*   22   */     add r2.xy, r4.yw, -c6.yz
               + addsc r6.y, c254.x, r1.z
/*   23   */     add r1.y, r0.y, -c6.x
               + mulsc r2.z, c1.y, r2.x
/*    1.0 */     exec
/*   24   */     mad r0.z, r0.y, c251.w, r4.w
/*   25   */     mul r7.yz, r6.xxz, r6.xxz
               + addsc r0.z, c13.w, r0.z
/*   26   */     mul r4.xz, c13.xz, c253.w
               + muls r3.z, r1.yy
/*   27   */     dp2add r7.x, r2.yz, r2.yz, c254.x
/*   28   */     mad r0.z, r0.z, c252.w, c253.w
/*   29   */     frc r0.z, r0.z
               + muls r3.w, r1.zz
/*    1.1 */     exec
/*   30   */     mad r0.z, r0.z, c251.y, c253.x
/*   31   */     add r7.yzw, r3.zzw, r7.xxyz
/*   32   */     mad r7.x, r1.x, r1.x, r7.w
/*   33   */     mul r2.w, r1.w, c253.z
               + sin r0.z, r0.z
/*   34   */     add r0.z, r4.x, r0.z
               + rsq r0.w, r7_abs.z
/*   35   */     mul r1.zw, r6.xxxy, r0.w
               + mulsc r1.x, c254.w, r0.z
/*    2.0 */     exec
/*   36   */     mul r1.xzw, r2.w, r1.xzzw
/*   37   */     add r4.x, r0.y, r1.x
/*   38   */     add r0.z, r4.w, r4.x
               + movs r0._, c0.w
/*   39   */     add r0.z, r0.z, c13.w
               + muls_prev r6.y, c11.x
/*   40   */     mad r0.z, r0.z, c252.w, c253.w
/*   41   */     frc r0.z, r0.z
               + movs r0._, c1.w
/*    2.1 */     exec
/*   42   */     mul r6.x, r0.z, c251.y
               + muls_prev r6.z, c11.x
/*   43   */     add r2.xyz, r6.xyz, c253.xy
/*   44   */     sgt r6.xy, r6.yz, r7.xy
               + cos r0.z, r2.x
/*   45   */     cndeq r0.w, r6.x, c254.y, c255.x
/*   46   */     rcp r2.x, r2.z
/*   47   */     add r0.z, r4.z, r0.z
               + rcp r2.y, r2.y
/*    3.0 */     exec
/*   48   */     mul r2.xy, r7.xy, r2.yx
/*   49   */     mul r6.z, r0.z, c254.w
               + sqrt_sat r0.z, r2_abs.x
/*   50   */     mad_sat r1.x, -r0.z, r0.z, c252.z
/*   51   */     mul r1.zw, r1.zzzw, r1.x
/*   52   */     mul r1.zw, r1.zzzw, c10.x
               + subsc r6.w, c252.z, r1.x
/*   53   */     cndeq r2.xz, r6.x, c254.x, r1.wz
/*    3.1 */     exec    // PredicateClean=false
/*   54   */     mul r1.xz, r2.w, r6.wz
/*   55   */     add r4.z, r4.w, r1.z
               + mulsc r0.z, c251.z, r1.x
/*   56   */     mul r0.z, r0.z, c10.x
               + setp_ne r0._, r6.y
/*   57   */     mul r1.x, r0.z, c12.x
               + sqrt_sat r0.z, r2_abs.y
/*   58   */     cndeq r2.y, r6.x, c254.x, -r1.x
/*   59   */     (p0) mad_sat r0.z, -r0.z, r0.z, c252.z
/*    4.0 */ (p0) exec
/*   60   */     (p0) subsc r1.x, -c6.z, -r0.x
/*   61   */     (p0) mad r1.z, r1.x, r1.x, r3.z
/*   62   */     (p0) add r1.w, -r0.z, c252.z
               + (p0) rsq r1.z, r1_abs.z
/*   63   */     (p0) mul r1.x, r1.x, r1.z
/*   64   */     (p0) mul r1.z, r1.y, r1.z
/*   65   */     (p0) mul r1.xyz, r2.w, r1.wxz
/*    4.1 */     exec
/*   66   */     (p0) mul r6.xy, r1.yz, r0.z
               + (p0) mulsc r6.z, c251.z, r1.x
/*   67   */     (p0) mul r1.xyz, r6.xyz, c10.x
/*   68   */     (p0) add r2.xz, r1.yx, r2.xz
               + (p0) addsc r0.w, c252.z, r0.w
/*   69   */     (p0) mad r2.y, -r1.z, c12.x, r2.y
/*   70   */     mul r0.z, c2.w, c11.x
               + subsc r1.y, -c7.x, -r0.y
/*   71   */     add r6.xy, r4.yw, -c7.yz
               + addsc r3.z, c253.y, r0.z
/*    5.0 */     exec    // PredicateClean=false
/*   72   */     mul r6.z, r6.x, c2.y
               + muls r1.x, r1.yy
/*   73   */     dp2add r1.w, r6.yz, r6.yz, r1.x
/*   74   */     sgt r1.z, r0.z, r1.w
               + rcp r0.z, r3.z
/*   75   */     mul r0.z, r1.w, r0.z
               + setp_ne r0._, r1.z
/*   76   */     sqrt_sat r0.z, r0_abs.z
/*   77   */     (p0) mad_sat r0.z, -r0.z, r0.z, c252.z
/*    5.1 */ (p0) exec
/*   78   */     (p0) subsc r3.z, -c7.z, -r0.x
/*   79   */     (p0) mad r1.x, r3.z, r3.z, r1.x
/*   80   */     (p0) add r1.w, -r0.z, c252.z
               + (p0) rsq r1.z, r1_abs.x
/*   81   */     (p0) mul r1.x, r3.z, r1.z
/*   82   */     (p0) mul r1.z, r1.y, r1.z
/*   83   */     (p0) mul r1.xyz, r2.w, r1.wxz
/*    6.0 */     exec
/*   84   */     (p0) mul r6.xy, r1.yz, r0.z
               + (p0) mulsc r6.z, c251.z, r1.x
/*   85   */     (p0) mul r1.xyz, r6.xyz, c10.x
/*   86   */     (p0) add r2.xz, r1.yx, r2.xz
               + (p0) addsc r0.w, c252.z, r0.w
/*   87   */     (p0) mad r2.y, -r1.z, c12.x, r2.y
/*   88   */     mul r0.z, c3.w, c11.x
               + subsc r1.x, -c8.x, -r0.y
/*   89   */     add r6.xy, r4.yw, -c8.yz
               + addsc r3.z, c253.y, r0.z
/*    6.1 */     exec    // PredicateClean=false
/*   90   */     mul r6.z, r6.x, c3.y
               + muls r1.y, r1.xx
/*   91   */     dp2add r1.w, r6.yz, r6.yz, r1.y
/*   92   */     sgt r1.z, r0.z, r1.w
               + rcp r0.z, r3.z
/*   93   */     mul r0.z, r1.w, r0.z
               + setp_ne r0._, r1.z
/*   94   */     sqrt_sat r0.z, r0_abs.z
/*   95   */     (p0) mad_sat r0.z, -r0.z, r0.z, c252.z
/*    7.0 */ (p0) exec
/*   96   */     (p0) subsc r3.z, -c8.z, -r0.x
/*   97   */     (p0) mad r1.y, r3.z, r3.z, r1.y
/*   98   */     (p0) add r1.w, -r0.z, c252.z
               + (p0) rsq r1.z, r1_abs.y
/*   99   */     (p0) mul r1.y, r3.z, r1.z
/*  100   */     (p0) mul r1.z, r1.x, r1.z
/*  101   */     (p0) mul r1.xyz, r2.w, r1.wyz
/*    7.1 */     exec
/*  102   */     (p0) mul r6.xy, r1.yz, r0.z
               + (p0) mulsc r6.z, c251.z, r1.x
/*  103   */     (p0) mul r1.xyz, r6.xyz, c10.x
/*  104   */     (p0) add r2.xz, r1.yx, r2.xz
               + (p0) addsc r0.w, c252.z, r0.w
/*  105   */     (p0) mad r2.y, -r1.z, c12.x, r2.y
/*  106   */     mul r0.z, c4.w, c11.x
               + subsc r1.x, -c9.x, -r0.y
/*  107   */     add r6.xy, r4.yw, -c9.yz
               + addsc r1.w, c253.y, r0.z
/*    8.0 */     exec    // PredicateClean=false
/*  108   */     mul r6.z, r6.x, c4.y
               + muls r0.y, r1.xx
/*  109   */     dp2add r1.z, r6.yz, r6.yz, r0.y
/*  110   */     sgt r1.y, r0.z, r1.z
               + rcp r0.z, r1.w
/*  111   */     mul r0.z, r1.z, r0.z
               + setp_ne r0._, r1.y
/*  112   */     sqrt_sat r0.z, r0_abs.z
/*  113   */     (p0) mad_sat r1.y, -r0.z, r0.z, c252.z
/*    8.1 */ (p0) exec
/*  114   */     (p0) subsc r0.x, -c9.z, -r0.x
/*  115   */     (p0) mad r0.y, r0.x, r0.x, r0.y
/*  116   */     (p0) add r0.z, -r1.y, c252.z
               + (p0) rsq r0.y, r0_abs.y
/*  117   */     (p0) mul r0.x, r0.x, r0.y
/*  118   */     (p0) mul r0.y, r1.x, r0.y
/*  119   */     (p0) mul r0.xyz, r2.w, r0.zxy
/*    9.0 */ (p0) exec
/*  120   */     (p0) mul r1.xy, r0.yz, r1.y
               + (p0) mulsc r1.z, c251.z, r0.x
/*  121   */     (p0) mul r0.xyz, r1.xyz, c10.x
/*  122   */     (p0) add r2.xz, r0.yx, r2.xz
               + (p0) addsc r0.w, c252.z, r0.w
/*  123   */     (p0) mad r2.y, -r0.z, c12.x, r2.y
/*    9.1 */     alloc position
/*   10.0 */     exec
/*  124   */     rcp r0.x, r0.w
/*  125   */     mad r1.xyz, r0.x, r2.xyz, r4.xyz
/*  126   */     mad r0, r1.z, c18, c19
/*  127   */     mad r0, r1.y, c17.xzyw, r0.xzyw
/*  128   */     mad oPos, r1.x, c16, r0.xzyw
/*   10.1 */     alloc interpolators
/*   11.0 */     exece
/*  129   */     mul r0.xyz, r5.xyz, c251.x
/*  130   */     mul o0.xy, r3.xy, c252.x
/*  131   */     mul o1.xyz1, r0.xyz, c15.xyz
/*   11.1 */     cnop

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_position0 at 12 (c) start of fetch run
// 1: dcl_texcoord0 at 13 (d)
// 2: dcl_color0 at 14 (e) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xy
//    [0] 130

// [1] color0 o1.xyzw
//    [1] 131

