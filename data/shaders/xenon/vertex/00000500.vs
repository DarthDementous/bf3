//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $cml[6];
//   float4 $constantcolour;
//   float4 $latten0;
//   float4x4 $modelview;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float4x4 $spotlightmatrix;
//   float4 $texexpansion0;
//   float4x4 $transmodel;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $uvmtx0          c0       2
//   $constantcolour  c2       1
//   $usevertexcolour c3       1
//   $transmodel      c4       3
//   $obviewpos       c7       1
//   $cml             c8       6
//   $latten0         c14      1
//   $wlightpos       c15      3
//   $worldviewpos    c18      1
//   $modelview       c19      4
//   $spotlightmatrix c23      4
//   $texexpansion0   c27      1
//   $modelviewproj   c28      4
//

// Shader type: vertex 

xvs_3_0
defconst $cml[0], float, vector, [1, 4], c8
defconst $cml[1], float, vector, [1, 4], c9
defconst $cml[2], float, vector, [1, 4], c10
defconst $cml[3], float, vector, [1, 4], c11
defconst $cml[4], float, vector, [1, 4], c12
defconst $cml[5], float, vector, [1, 4], c13
defconst $constantcolour, float, vector, [1, 4], c2
defconst $latten0, float, vector, [1, 4], c14
defconst $modelview, float, matrix_columns, [4, 4], c19-22
defconst $modelviewproj, float, matrix_columns, [4, 4], c28-31
defconst $obviewpos, float, vector, [1, 3], c7
defconst $spotlightmatrix, float, matrix_columns, [4, 4], c23-26
defconst $texexpansion0, float, vector, [1, 4], c27
defconst $transmodel, float, matrix_columns, [4, 4], c4-6
defconst $usevertexcolour, float, scalar, [1, 1], c3
defconst $uvmtx0, float, matrix_columns, [4, 4], c0-1
defconst $wlightpos, float, matrix_columns, [4, 4], c15-17
defconst $worldviewpos, float, vector, [1, 3], c18
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=12
config VsResource=1
// VsExportCount=6

// interpolators: 7 interpolants: 7, components: 24
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3.xyz
dcl_texcoord4 o4.xy
dcl_color o5
dcl_color1 o6.xyz

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0, 1, -1, 0


/*    0.0 */     exec
/*    9   */     vfetch r0._xy_, r0.x, texcoord
/*   10   */     vfetch r1, r0.x, position
/*   11   */     vfetch r3, r0.x, color
/*   12   */     vfetch r2, r0.x, texcoord1
/*    0.1 */     alloc position
/*    1.0 */     exec
/*   13   */     mul r5, r3.zyxw, c2
               + rcp r0.x, r1.w
/*   14   */     mul r3.xzw, r0.x, r1.xyyz
               + movs r1.w, -c3_abs.x
/*   15   */     mad r4, r3.w, c30, c31
/*   16   */     mad r4, r3.z, c29.xzyw, r4.xzyw
/*   17   */     mad oPos, r3.x, c28, r4.xzyw
/*    1.1 */     alloc interpolators
/*    2.0 */     exec
/*   18   */     cndge r3.y, r2.w, c255.y, c255.z
/*   19   */     mad r4, r3.w, c21.xwzy, c22.xwzy
/*   20   */     add r6.xyz, r3.xzw, -c7.xyz
/*   21   */     dp3 r1.y, r6.zxy, c4.zxy
/*   22   */     dp3 r1.z, r6.zxy, c5.zxy
               + mulsc r0.x, c27.x, r0.y
/*   23   */     dp3 r1.x, r6.zxy, c6.zxy
               + mulsc r0.w, c27.x, r0.z
/*    2.1 */     exec
/*   24   */     mad r4, r3.z, c20.xzyw, r4.xzwy
/*   25   */     mad r4, r3.x, c19.xywz, r4.xzwy
/*   26   */     cndge o5, r1.w, c2, r5
/*   27   */     dp2add o4.x, r0.wx, c0.yx, c0.w
/*   28   */     dp2add o4.y, r0.wx, c1.yx, c1.w
/*   29   */     dp3 r6.w, r2.zxy, r2.zxy
               + addsc r0.x, c18.x, r1.y
/*    3.0 */     exec
/*   30   */     mul r5.xyz, r4.z, c26.xzy
               + addsc r0.z, c18.y, r1.z
/*   31   */     mul r3.xzw, r4.w, c25.xzzy
               + addsc r0.y, c18.z, r1.x
/*   32   */     add r7.xy, -r0.y, c17.yx
               + muls r5.w, r2_abs.ww
/*   33   */     add r8.xy, -r0.x, c15.yx
               + subsc r7.z, c16.y, r0.z
/*   34   */     mad r0.xyw, r4.y, c24.xzy, r3.xzw
/*   35   */     mad r6.xyz, r4.x, c23.xzy, r0.xyw
/*    3.1 */     exec
/*   36   */     mul r0.xy, r8.xy, r8.xy
               + subsc r7.w, c16.x, r0.z
/*   37   */     cndeq r4.xzw, c255.xy, r8.y, r7.yyyw
/*   38   */     dp2add r0.x, r7.zx, r7.zx, r0.x
/*   39   */     dp2add r0.y, r7.wy, r7.wy, r0.y
/*   40   */     add o3.xyz, r6.xzy, r5.xzy
/*   41   */     add r0.z, r6.w, r5.w
               + log r0.y, r0_abs.y
/*    4.0 */     exec
/*   42   */     mov r8.zw, r7.xxxz
               + rsq r0.z, r0_abs.z
/*   43   */     mul r1.w, r0.z, r2_abs.w
               + log r0.x, r0_abs.x
/*   44   */     mul r3.xzw, r0.z, r2.yzzx
/*   45   */     add r2.xyz, r3.xzw, r3.xzw
               + mulsc r2.w, c14.x, r0.y
/*   46   */     mul r0.zw, r3.zzzx, r2.y
               + mulsc r0.y, c14.z, r0.x
/*   47   */     mul r6, r3.xw, r2.xzxy
               + exp r0.x, r2.w
/*    4.1 */     exec
/*   48   */     mul r5.xyw, r1.w, r2.yxz
               + adds r3.x, r6.yx
/*   49   */     add r2.w, r0.w, r5.w
               + exp r0.y, r0.y
/*   50   */     mul_sat r3.zw, r0.xxxy, c14.yyyw
               + movs r0._, r0.w
/*   51   */     add r2.xy, r6.wz, -r5.yx
               + adds_prev r5.w, -r5.w
/*   52   */     add r5.yz, r6.zzw, r5.xxy
               + mulsc r0.w, c5.z, r2.x
/*   53   */     add r0.xz, r6.xy, r0.z
               + mulsc r0.y, c6.z, r2.x
/*    5.0 */     exec
/*   54   */     add o0.xy00, -r3.zw, c255.y
/*   55   */     add r3.xzw, -r3.xzzw, c255.y
               + subsc r5.x, c255.y, r0.x
/*   56   */     mul r11, r5.xywz, c4.xyyx
               + subsc r2.z, c255.y, r0.z
/*   57   */     mul r12, r5.xzwy, c5.xxy
               + mulsc r6.y, c6.z, r3.x
/*   58   */     mul r9, r5.xzwy, c6.xxy
               + mulsc r6.w, c5.z, r3.x
/*   59   */     mul r5.xyz, r2.ywz, r3.y
               + adds r10.x, r9.xw
/*    5.1 */     exec
/*   60   */     add r10.zw, r12.xxxy, r12.wwwz
               + adds r10.y, r9.yz
/*   61   */     dp3 r9.y, r5.yxz, c5.zxy
               + adds r0.x, r11.xy
/*   62   */     mul r3, r3.xy, c4.zxyz
               + adds r0.z, r11.wz
/*   63   */     mad r0.x, r2.x, c4.z, r0.x
/*   64   */     dp3 r9.z, r5.yxz, c6.zxy
               + movs r0._, r0.z
/*   65   */     dp3 r9.x, r3.wyz, r2.wyz
               + adds_prev r6.x, r3.x
/*    6.0 */     exec
/*   66   */     add r0.yz, r10.zzx, r0.wwy
               + movs r0._, r10.y
/*   67   */     dp3 r4.y, r9.zxy, r1.xyz
               + adds_prev r6.z, r6.y
/*   68   */     mul r5, r0.yyz, r7.zwxy
               + movs r0._, r10.w
/*   69   */     mul r7, r9.zzy, r7
               + adds_prev r6.y, r6.w
/*   70   */     dp3 r3.z, r6.zyx, r8.zwx
/*   71   */     dp3 r2.z, r6.zyx, r4.zwx
/*    6.1 */     exec
/*   72   */     dp3 r4.x, r0.zxy, r1.xyz
/*   73   */     dp3 r4.z, r6.zxy, r1.xyz
/*   74   */     mad r1.xy, r9.x, r8.xy, r7.zw
/*   75   */     mad r0.xw, r0.x, r8.xy, r5.xy
/*   76   */     dp3 r0.y, r6.zxy, r6.zxy
               + movs r0._, r0.x
/*   77   */     add r3.y, r1.x, r7.x
               + adds_prev r3.x, r5.z
/*    7.0 */     exec
/*   78   */     add r2.y, r1.y, r7.y
               + rsq r0.y, r0_abs.y
/*   79   */     mul r0.xyz, r6.xyz, r0.y
               + movs r0._, r0.w
/*   80   */     dp3 r0.w, r4.zxy, r4.zxy
               + adds_prev r2.x, r5.w
/*   81   */     sgt r1.yzw, -r0.yyxz, c255.x
               + rsq r1.x, r0_abs.w
/*   82   */     mul r0.xyw, r0.yzx, r0.yzx
               + movas r0._, r1.w
/*   83   */     mul r5.xyz, r0.y, c[12+a0].xzy
               + movas r0._, r1.y
/*    7.1 */     exec
/*   84   */     mad r0.xyz, r0.x, c[10+a0].xyz, r5.xzy
/*   85   */     dp3 r1.y, r2.zxy, r2.zxy
               + movas r0._, r1.z
/*   86   */     dp3 r2.w, r3.zxy, r3.zxy
               + rsq r1.w, r1_abs.y
/*   87   */     mul r1.xyz, r4.xyz, r1.x
               + rsq r2.w, r2_abs.w
/*   88   */     mul_sat o2.w, r3.z, r2.w
/*   89   */     mad o2.xyz, r3.xyz, r2.w, -r1.xyz
/*    8.0 */     exece
/*   90   */     mul_sat o1.w, r2.z, r1.w
/*   91   */     mad o1.xyz, r2.xyz, r1.w, -r1.xyz
/*   92   */     mad o6.xyz, r0.w, c[8+a0].xyz, r0.xyz
/*    8.1 */     cnop

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 9 (9) start of fetch run
// 1: dcl_position0 at 10 (a)
// 2: dcl_color0 at 11 (b)
// 3: dcl_texcoord1 at 12 (c) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xyzw
//    [0] 54

// [1] texcoord1 o1.xyzw
//    [1] 90
//    [2] 91

// [2] texcoord2 o2.xyzw
//    [3] 88
//    [4] 89

// [3] texcoord3 o3.xyz
//    [5] 40

// [4] texcoord4 o4.xy
//    [6] 27
//    [7] 28

// [5] color0 o5.xyzw
//    [8] 26

// [6] color1 o6.xyz
//    [9] 92

