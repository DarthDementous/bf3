//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $constantcolour;
//   float4x4 $modelviewproj;
//   float4 $texexpansion0;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//   float4 $winddir;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $uvmtx0          c0       2
//   $winddir         c2       1
//   $constantcolour  c3       1
//   $usevertexcolour c4       1
//   $texexpansion0   c5       1
//   $modelviewproj   c6       4
//

// Shader type: vertex 

xvs_3_0
defconst $constantcolour, float, vector, [1, 4], c3
defconst $modelviewproj, float, matrix_columns, [4, 4], c6-9
defconst $texexpansion0, float, vector, [1, 4], c5
defconst $usevertexcolour, float, scalar, [1, 1], c4
defconst $uvmtx0, float, matrix_columns, [4, 4], c0-1
defconst $winddir, float, vector, [1, 4], c2
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=5
config VsResource=1
// VsExportCount=2

// interpolators: 3 interpolants: 3, components: 12
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_color o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, -3.14159274, 0.159154937, 3, 6.28318548
def c255, 0, 1, 0.100000001, 0.5


/*    0.0 */     exec
/*    5   */     vfetch r2.xy__, r0.x, texcoord
/*    6   */     vfetch r2.__xy, r0.x, texcoord1
/*    7   */     vfetch r4.xywz, r0.x, position
/*    8   */     vfetch r3.xwyz, r0.x, color
/*    0.1 */     alloc position
/*    1.0 */     exec
/*    9   */     cndeq r5.xyz, c255.xxy, r4.wx, r3.y
/*   10   */     mul r1.xyz, r3.wzx, c3.xyz
               + rcp r4.z, r4.z
/*   11   */     mul r0.yzw, r4.z, r4.wwxy
/*   12   */     addsc r0.x, c2.w, r0.y
/*   13   */     mad r0.x, r0.z, c254.z, r0.x
/*   14   */     mad r0.x, r0.x, c254.y, c255.w
/*    1.1 */     exec
/*   15   */     mov r1.w, -c4_abs.x
               + frcs r0.x, r0.x
/*   16   */     mad r0.x, r0.x, c254.w, c254.x
/*   17   */     mul r4.xy, c2.xz, c255.w
               + sin r0.x, r0.x
/*   18   */     add r0.x, r4.x, r0.x
/*   19   */     mulsc r4.w, c255.z, r0.x
/*   20   */     dp3 r0.x, r4.zzw, r5.xyz
/*    2.0 */     exec
/*   21   */     addsc r0.x, c2.w, r0.x
/*   22   */     mad r0.x, r0.x, c254.y, c255.w
/*   23   */     frcs r0.x, r0.x
/*   24   */     mad r0.x, r0.x, c254.w, c254.x
/*   25   */     mul r3.x, r4.w, r3.y
               + cos r0.x, r0.x
/*   26   */     add r0.x, r4.y, r0.x
/*    2.1 */     exec
/*   27   */     mulsc r0.x, c255.z, r0.x
/*   28   */     mul r3.y, r0.x, r3.y
/*   29   */     add r3.xy, r0.zy, r3.xy
/*   30   */     mad r4, r3.y, c8, c9
/*   31   */     mad r0, r0.w, c7.xzyw, r4.xzyw
/*   32   */     mad r3, r3.x, c6.xywz, r0.xzwy
/*    3.0 */     exec
/*   33   */     mov oPos, r3.xywz
/*    3.1 */     alloc interpolators
/*    4.0 */     exec
/*   34   */     mul r0.xy, r2.xy, c5.x
/*   35   */     mul r4.xyz, r3.xyz, c255.w
/*   36   */     add o0.xy, r4.xy, r4.z
/*   37   */     mov o0.zw, r3.wwwz
/*   38   */     mul o1.zw, r2.zzzw, c5.w
/*   39   */     cndge o2.xyz1, r1.w, c3.xyz, r1.xyz
/*    4.1 */     exece
/*   40   */     dp2add o1.x, r0.yx, c0.yx, c0.w
/*   41   */     dp2add o1.y, r0.yx, c1.yx, c1.w

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 5 (5) start of fetch run
// 1: dcl_texcoord1 at 6 (6)
// 2: dcl_position0 at 7 (7)
// 3: dcl_color0 at 8 (8) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xyzw
//    [0] 36
//    [1] 37

// [1] texcoord1 o1.xyzw
//    [2] 38
//    [3] 40
//    [4] 41

// [2] color0 o2.xyzw
//    [5] 39

