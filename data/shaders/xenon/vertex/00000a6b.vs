//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $constantcolour;
//   float4x4 $modelview;
//   float4x4 $modelviewproj;
//   float4 $texexpansion0;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $constantcolour  c0       1
//   $usevertexcolour c1       1
//   $uvmtx0          c2       2
//   $modelview       c4       4
//   $texexpansion0   c8       1
//   $modelviewproj   c9       4
//

// Shader type: vertex 

xvs_3_0
defconst $constantcolour, float, vector, [1, 4], c0
defconst $modelview, float, matrix_columns, [4, 4], c4-7
defconst $modelviewproj, float, matrix_columns, [4, 4], c9-12
defconst $texexpansion0, float, vector, [1, 4], c8
defconst $usevertexcolour, float, scalar, [1, 1], c1
defconst $uvmtx0, float, matrix_columns, [4, 4], c2-3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
config VsResource=1
// VsExportCount=3

// interpolators: 4 interpolants: 4, components: 14
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0.xyz
dcl_texcoord1 o1.xyz
dcl_texcoord2 o2
dcl_color o3

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


/*    0.0 */     exec
/*    4   */     vfetch r5.xy__, r0.x, texcoord
/*    5   */     vfetch r5.__xy, r0.x, texcoord1
/*    6   */     vfetch r1, r0.x, position
/*    7   */     vfetch r4, r0.x, color
/*    8   */     vfetch r0, r0.x, texcoord2
/*    0.1 */     alloc position
/*    1.0 */     exec
/*    9   */     dp3 r6.w, r0.zxy, r0.zxy
               + rcp r2.x, r1.w
/*   10   */     mul r2.xyz, r2.x, r1.xyz
/*   11   */     mad r1, r2.z, c11, c12
/*   12   */     mad r1, r2.y, c10.xzyw, r1.xzyw
/*   13   */     mad oPos, r2.x, c9, r1.xzyw
/*    1.1 */     alloc interpolators
/*    2.0 */     exec
/*   14   */     mul r3.xy, r5.xy, c8.x
/*   15   */     mul r6.xyz, r2.x, c4.xzy
/*   16   */     mul r1.xyz, r2.y, c5.xzy
               + muls r1.w, r0_abs.ww
/*   17   */     add r1, r6.xwzy, r1.xwzy
               + movs r2.w, -c1_abs.x
/*   18   */     mul o2.zw, r5.zzzw, c8.w
/*   19   */     mul r4, r4.zyxw, c0
               + rsq r1.y, r1_abs.y
/*    2.1 */     exec
/*   20   */     cndge o3, r2.w, c0, r4
/*   21   */     dp2add o2.x, r3.yx, c2.yx, c2.w
/*   22   */     dp2add o2.y, r3.yx, c3.yx, c3.w
/*   23   */     mad r1.xzw, r2.z, c6.xzzy, r1.xwwz
/*   24   */     add o0.xyz, r1.xwz, c7.xyz
/*   25   */     mul r1.xzw, r1.y, r0.zxxy
               + movs r0._, r1.y
/*    3.0 */     exec
/*   26   */     add r0.xyz, r1.xzw, r1.xzw
               + muls_prev r0.w, r0_abs.w
/*   27   */     mul r1.xy, r0.w, r0.zy
/*   28   */     mul r0, r1.zwwz, r0.yxzx
/*   29   */     add r0.w, r0.w, r1.x
               + adds r1.z, r0.xz
/*   30   */     add r0.x, -r1.z, c255.x
               + movs r0._, r0.y
/*   31   */     mul r0.xyz, r0.x, c6.xzy
               + adds_prev r1.x, -r1.y
/*    3.1 */     exece
/*   32   */     mad r0.xyz, r1.x, c5.xzy, r0.xyz
/*   33   */     mad o1.xyz, r0.w, c4.xyz, r0.xzy

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 4 (4) start of fetch run
// 1: dcl_texcoord1 at 5 (5)
// 2: dcl_position0 at 6 (6)
// 3: dcl_color0 at 7 (7)
// 4: dcl_texcoord2 at 8 (8) end of fetch run, don't move this fetch

// Output declaration table:
// [0] texcoord0 o0.xyz
//    [0] 24

// [1] texcoord1 o1.xyz
//    [1] 33

// [2] texcoord2 o2.xyzw
//    [2] 18
//    [3] 21
//    [4] 22

// [3] color0 o3.xyzw
//    [5] 20

