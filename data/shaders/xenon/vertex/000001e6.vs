//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $constantcolour;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float4 $texexpansion0;
//   float4x4 $transmodel;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $uvmtx0          c0       2
//   $constantcolour  c2       1
//   $usevertexcolour c3       1
//   $transmodel      c4       3
//   $obviewpos       c7       1
//   $texexpansion0   c8       1
//   $modelviewproj   c9       4
//

// Shader type: vertex 

xvs_3_0
defconst $constantcolour, float, vector, [1, 4], c2
defconst $modelviewproj, float, matrix_columns, [4, 4], c9-12
defconst $obviewpos, float, vector, [1, 3], c7
defconst $texexpansion0, float, vector, [1, 4], c8
defconst $transmodel, float, matrix_columns, [4, 4], c4-6
defconst $usevertexcolour, float, scalar, [1, 1], c3
defconst $uvmtx0, float, matrix_columns, [4, 4], c0-1
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=9
config VsResource=1
// VsExportCount=5

// interpolators: 6 interpolants: 6, components: 24
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3
dcl_texcoord4 o4
dcl_color o5

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0, 1, 0.5, -1


/*    0.0 */     exec
/*    5   */     vfetch r7.xy__, r0.x, texcoord
/*    6   */     vfetch r7.__xy, r0.x, texcoord1
/*    7   */     vfetch r2, r0.x, position
/*    8   */     vfetch r3, r0.x, color
/*    9   */     vfetch r0, r0.x, texcoord2
/*    0.1 */     alloc position
/*    1.0 */     exec
/*   10   */     dp3 r1.x, r0.zxy, r0.zxy
               + rcp r1.y, r2.w
/*   11   */     mul r1.yzw, r1.y, r2.xxyz
/*   12   */     mad r2, r1.w, c11, c12
/*   13   */     mad r2, r1.z, c10.xzyw, r2.xzyw
/*   14   */     mad r8, r1.y, c9.xywz, r2.xzwy
/*   15   */     mov oPos, r8.xywz
/*    1.1 */     alloc interpolators
/*    2.0 */     exec
/*   16   */     cndge r2.x, r0.w, c255.y, c255.w
/*   17   */     mul r6, r3.zyxw, c2
/*   18   */     mul r3.xy, r7.xy, c8.x
/*   19   */     mad r1.x, r0_abs.w, r0_abs.w, r1.x
/*   20   */     add r5.xyz, r1.yzw, -c7.xyz
               + rsq r1.w, r1_abs.x
/*   21   */     mul r2.yzw, r1.w, r0.zzyx
/*    2.1 */     exec
/*   22   */     add r1.xyz, r2.yzw, r2.yzw
               + movs r0._, r1.w
/*   23   */     mul r9.xyz, r8.xyz, c255.z
               + muls_prev r0.x, r0_abs.w
/*   24   */     mul r0.xyw, r0.x, r1.yzx
/*   25   */     mul r4, r2.zyw, r1.yxzy
               + movs r0.z, -c3_abs.x
/*   26   */     add o3.xy, r9.xy, r9.z
/*   27   */     mov o3.zw, r8.wwwz
/*    3.0 */     exec
/*   28   */     mul o4.zw, r7.zzzw, c8.w
/*   29   */     cndge o5, r0.z, c2, r6
/*   30   */     dp3 o0.w, r5.zxy, c4.zxy
/*   31   */     dp3 o1.w, r5.zxy, c5.zxy
/*   32   */     dp3 o2.w, r5.zxy, c6.zxy
/*   33   */     dp2add o4.x, r3.yx, c0.yx, c0.w
/*    3.1 */     exec
/*   34   */     dp2add o4.y, r3.yx, c1.yx, c1.w
/*   35   */     mad r3.yz, r2.wwz, r1.x, -r0.xxy
/*   36   */     mad r1.zw, r2.zzzw, r1.x, r0.yyyx
/*   37   */     mul r2.yzw, r2.x, c4.xxyz
               + movs r0._, r4.w
/*   38   */     add r0.xyz, r4.zxz, r4.yyx
               + adds_prev r1.x, -r0.w
/*   39   */     add r3.xw, -r0.yz, c255.y
               + subsc r1.y, c255.y, r0.x
/*    4.0 */     exec
/*   40   */     dp3 o0.y, r2.wyz, r1.zxy
/*   41   */     mov r0.yz, r3.yyx
               + movs r0._, r4.w
/*   42   */     mul r2.xyz, r1.xzy, r2.x
               + adds_prev r0.x, r0.w
/*   43   */     cndeq r1.xyz, c255.xy, r1.w, r3.wwz
/*   44   */     dp3 o0.z, r1.yzx, c4.zyx
/*   45   */     dp3 o1.y, r2.yxz, c5.zxy
/*    4.1 */     exece
/*   46   */     dp3 o1.z, r1.yzx, c5.zyx
/*   47   */     dp3 o2.y, r2.yxz, c6.zxy
/*   48   */     dp3 o2.z, r1.yzx, c6.zyx
/*   49   */     dp3 o0.x, r0.yzx, c4.zxy
/*   50   */     dp3 o1.x, r0.yzx, c5.zxy
/*   51   */     dp3 o2.x, r0.yzx, c6.zxy

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 5 (5) start of fetch run
// 1: dcl_texcoord1 at 6 (6)
// 2: dcl_position0 at 7 (7)
// 3: dcl_color0 at 8 (8)
// 4: dcl_texcoord2 at 9 (9) end of fetch run, don't move this fetch

// Output declaration table:
// [0] texcoord0 o0.xyzw
//    [0] 30
//    [1] 40
//    [2] 44
//    [3] 49

// [1] texcoord1 o1.xyzw
//    [4] 31
//    [5] 45
//    [6] 46
//    [7] 50

// [2] texcoord2 o2.xyzw
//    [8] 32
//    [9] 47
//    [10] 48
//    [11] 51

// [3] texcoord3 o3.xyzw
//    [12] 26
//    [13] 27

// [4] texcoord4 o4.xyzw
//    [14] 28
//    [15] 33
//    [16] 34

// [5] color0 o5.xyzw
//    [17] 29

