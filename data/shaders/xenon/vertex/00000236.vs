//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $constantcolour;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float3 $sundir;
//   float4 $texexpansion0;
//   float4x4 $transmodel;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $uvmtx0          c0       2
//   $constantcolour  c2       1
//   $usevertexcolour c3       1
//   $transmodel      c4       3
//   $obviewpos       c7       1
//   $sundir          c8       1
//   $texexpansion0   c9       1
//   $modelviewproj   c10      4
//

// Shader type: vertex 

xvs_3_0
defconst $constantcolour, float, vector, [1, 4], c2
defconst $modelviewproj, float, matrix_columns, [4, 4], c10-13
defconst $obviewpos, float, vector, [1, 3], c7
defconst $sundir, float, vector, [1, 3], c8
defconst $texexpansion0, float, vector, [1, 4], c9
defconst $transmodel, float, matrix_columns, [4, 4], c4-6
defconst $usevertexcolour, float, scalar, [1, 1], c3
defconst $uvmtx0, float, matrix_columns, [4, 4], c0-1
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=9
config VsResource=1
// VsExportCount=6

// interpolators: 7 interpolants: 7, components: 26
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3.xyz
dcl_texcoord4 o4.xyz
dcl_texcoord5 o5
dcl_color o6

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, -1, 1, 0, 0


/*    0.0 */     exec
/*    7   */     vfetch r9.xy__, r0.x, texcoord
/*    8   */     vfetch r9.__xy, r0.x, texcoord1
/*    9   */     vfetch r1, r0.x, position
/*   10   */     vfetch r3, r0.x, color
/*   11   */     vfetch r2.xwyz, r0.x, texcoord2
/*    0.1 */     alloc position
/*    1.0 */     exec
/*   12   */     dp3 r0.w, r2.wxz, r2.wxz
               + rcp r0.x, r1.w
/*   13   */     mul r0.xyz, r0.x, r1.zxy
/*   14   */     mad r1, r0.x, c12, c13
/*   15   */     mad r1, r0.z, c11.xzyw, r1.xzyw
/*   16   */     mad oPos, r0.y, c10, r1.xzyw
/*    1.1 */     alloc interpolators
/*    2.0 */     exec
/*   17   */     cndge r1.w, r2.y, c255.y, c255.x
/*   18   */     mul r8, r3.zyxw, c2
/*   19   */     mul r4.xy, r9.xy, c9.x
/*   20   */     mad r0.w, r2_abs.y, r2_abs.y, r0.w
/*   21   */     add r1.xyz, r0.yzx, -c7.xyz
/*   22   */     dp3 r5.w, r1.zxy, c4.zxy
               + subsc r3.x, c7.x, r0.y
/*    2.1 */     exec
/*   23   */     dp3 r6.w, r1.zxy, c5.zxy
               + subsc r3.y, c7.y, r0.z
/*   24   */     dp3 r7.w, r1.zxy, c6.zxy
               + subsc r3.w, c7.z, r0.x
/*   25   */     dp3 r0.z, r3.wxy, r3.wxy
               + rsq r3.z, r0_abs.w
/*   26   */     mul r1.xyz, r3.z, r2.zwx
/*   27   */     add r0.xyw, r1.xyz, r1.xyz
               + movs r4.z, -c3_abs.x
/*   28   */     mul o5.zw, r9.zzzw, c9.w
/*    3.0 */     exec
/*   29   */     cndge o6, r4.z, c2, r8
/*   30   */     dp2add o5.x, r4.yx, c0.yx, c0.w
/*   31   */     dp2add o5.y, r4.yx, c1.yx, c1.w
/*   32   */     mul r2.xz, r1.yx, r0.y
               + movs r0._, r3.z
/*   33   */     mul r4, r1.xz, r0.xxwy
               + muls_prev r1.x, r2_abs.y
/*   34   */     mul r0.xyw, r1.x, r0.xwy
               + adds r1.x, r4.zx
/*    3.1 */     exec
/*   35   */     add r3.z, r4.w, -r0.x
               + rsq r0.z, r0_abs.z
/*   36   */     mul r6.xyz, r3.xyw, r0.z
               + movs r0._, r4.y
/*   37   */     add r1.y, r4.w, r0.x
               + adds_prev r3.y, r0.w
/*   38   */     add r0.xz, r4.xz, r2.x
               + movs r0._, r2.z
/*   39   */     add r1.z, -r1.x, c255.y
               + adds_prev r1.x, -r0.y
/*   40   */     dp3 r2.x, r6.zxy, r1.zyx
               + subsc r3.x, c255.y, r0.x
/*    4.0 */     exec
/*   41   */     dp3 r2.y, r6.zxy, r3.zxy
/*   42   */     dp3 r5.y, r1.zyx, c5.zxy
/*   43   */     dp3 r5.z, r1.zyx, c6.zxy
               + movs r0._, r4.y
/*   44   */     dp3 r7.x, r3.zxy, c4.zxy
               + adds_prev r4.y, -r0.w
/*   45   */     dp3 r7.y, r3.zxy, c5.zxy
               + movs r0._, r2.z
/*   46   */     dp3 r7.z, r3.zxy, c6.zxy
               + adds_prev r4.w, r0.y
/*    4.1 */     exec
/*   47   */     mul r3, r1.wzw, c4.xzyz
               + subsc r4.z, c255.y, r0.z
/*   48   */     mul r0.xyz, r4.yzw, r1.w
/*   49   */     dp3 r4.x, r0.zxy, r6.zxy
/*   50   */     dp3 r6.x, r3.wxz, r4.wyz
/*   51   */     dp3 r6.y, r0.zxy, c5.zxy
/*   52   */     dp3 r6.z, r0.zxy, c6.zxy
               + movs r0.y, r1.y
/*    5.0 */     exec
/*   53   */     mov o2.xw, r7.zw
/*   54   */     dp3 r3.x, r7.zxy, -c8.zxy
               + mulsc r4.y, c4.x, r0.y
/*   55   */     mov o0.y, r6.x
               + movs o0.x, r7.x
/*   56   */     mov o1.yw, r6.yyw
/*   57   */     dp3 r4.w, r6.zxy, -c8.zxy
               + mulsc r4.z, c4.y, r1.x
/*   58   */     add r1.zw, r4.xxxy, r4.wwwz
/*    5.1 */     exec
/*   59   */     add r5.x, r1.w, r3.y
               + movs r0._, r1.w
/*   60   */     mov o0.w, r5.w
               + adds_prev o0.z, r3.y
/*   61   */     mov o1.z, r5.y
               + movs o1.x, r7.y
/*   62   */     mov o2.z, r5.z
               + movs o2.y, r6.z
/*   63   */     dp3 r3.w, r5.zxy, -c8.zxy
/*   64   */     mov r3.z, r3.w
               + movs r3.y, r4.w
/*    6.0 */     exece
/*   65   */     mov o4.xyz, r3.xyz
/*   66   */     add r1.xy, r3.xw, r2.yx
/*   67   */     dp3 r0.x, r1.yxz, r1.yxz
/*   68   */     rsq r0.x, r0_abs.x
/*   69   */     mul o3.xyz, r1.xzy, r0.x
/*    6.1 */     cnop

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 7 (7) start of fetch run
// 1: dcl_texcoord1 at 8 (8)
// 2: dcl_position0 at 9 (9)
// 3: dcl_color0 at 10 (a)
// 4: dcl_texcoord2 at 11 (b) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xyzw
//    [0] 55
//    [1] 60

// [1] texcoord1 o1.xyzw
//    [2] 56
//    [3] 61

// [2] texcoord2 o2.xyzw
//    [4] 53
//    [5] 62

// [3] texcoord3 o3.xyz
//    [6] 69

// [4] texcoord4 o4.xyz
//    [7] 65

// [5] texcoord5 o5.xyzw
//    [8] 28
//    [9] 30
//    [10] 31

// [6] color0 o6.xyzw
//    [11] 29

