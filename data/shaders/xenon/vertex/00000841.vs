//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $constantcolour;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float4 $texexpansion0;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//   float4 $winddir;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $uvmtx0          c0       2
//   $winddir         c2       1
//   $constantcolour  c3       1
//   $usevertexcolour c4       1
//   $obviewpos       c5       1
//   $texexpansion0   c6       1
//   $modelviewproj   c7       4
//

// Shader type: vertex 

xvs_3_0
defconst $constantcolour, float, vector, [1, 4], c3
defconst $modelviewproj, float, matrix_columns, [4, 4], c7-10
defconst $obviewpos, float, vector, [1, 3], c5
defconst $texexpansion0, float, vector, [1, 4], c6
defconst $usevertexcolour, float, scalar, [1, 1], c4
defconst $uvmtx0, float, matrix_columns, [4, 4], c0-1
defconst $winddir, float, vector, [1, 4], c2
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=8
config VsResource=1
// VsExportCount=3

// interpolators: 4 interpolants: 4, components: 13
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0.xyz
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3

def c252, 0, 0, 0, 0
def c253, -3.14159274, 0.5, 0.159154937, 3
def c254, 0, 1, 0.100000001, -1
def c255, 6.28318548, 0, 0, 0


/*    0.0 */     exec
/*    6   */     vfetch r6.__xy, r0.x, texcoord
/*    7   */     vfetch r5._xy_, r0.x, texcoord1
/*    8   */     vfetch r6.xy__, r0.x, texcoord2
/*    9   */     vfetch r1, r0.x, position
/*   10   */     vfetch r3, r0.x, color
/*   11   */     vfetch r2, r0.x, texcoord3
/*    0.1 */     alloc position
/*    1.0 */     exec
/*   12   */     cndeq r0.yzw, c254.xxxy, r1.zzx, r3.w
/*   13   */     mul r7.xy, c2.xz, c253.y
               + rcp r8.x, r1.w
/*   14   */     mul r1.xzw, r8.x, r1.zxxy
/*   15   */     mul r4.xzw, r3.zyyx, c3.xyyz
               + addsc r0.x, c2.w, r1.x
/*   16   */     mad r0.x, r1.z, c253.w, r0.x
/*   17   */     mad r0.x, r0.x, c253.z, c253.y
/*    1.1 */     exec
/*   18   */     mov r5.x, -c4_abs.x
               + frcs r0.x, r0.x
/*   19   */     mad r0.x, r0.x, c255.x, c253.x
/*   20   */     dp3 r7.z, r2.zxy, r2.zxy
               + sin r0.x, r0.x
/*   21   */     add r0.x, r7.x, r0.x
/*   22   */     mulsc r8.y, c254.z, r0.x
/*   23   */     mad r1.y, r8.y, r3.w, r1.z
/*    2.0 */     exec
/*   24   */     dp3 r0.x, r8.xxy, r0.yzw
/*   25   */     addsc r0.x, c2.w, r0.x
/*   26   */     mad r0.x, r0.x, c253.z, c253.y
/*   27   */     frcs r0.x, r0.x
/*   28   */     mad r0.x, r0.x, c255.x, c253.x
/*   29   */     mul r0.y, r2_abs.w, r2_abs.w
               + cos r0.x, r0.x
/*    2.1 */     exec
/*   30   */     add r0.xy, r7.yz, r0.xy
/*   31   */     mulsc r0.x, c254.z, r0.x
/*   32   */     mad r0.x, r0.x, r3.w, r1.x
/*   33   */     mad r3, r0.x, c9, c10
/*   34   */     mad r3, r1.w, c8.xzyw, r3.xzyw
/*   35   */     mad oPos, r1.y, c7, r3.xzyw
/*    3.0 */     alloc interpolators
/*    3.1 */     exec
/*   36   */     cndge r3.z, r2.w, c254.y, c254.w
/*   37   */     mul r0.zw, r6.zzzw, c6.x
               + rsq r0.y, r0_abs.y
/*   38   */     add r3.xy, -r1.yw, c5.xy
               + movs r0._, r0.y
/*   39   */     mul r2.xyz, r0.y, r2.yzx
               + muls_prev r2.w, r2_abs.w
/*   40   */     add r1.xyz, r2.xyz, r2.xyz
               + subsc r3.w, c5.z, r0.x
/*   41   */     mul r7, r2.zzxz, r1.xzy
               + movs r0._, r2.w
/*    4.0 */     exec
/*   42   */     mul r2, r2.xyw, r1.xyyz
               + muls_prev r0.y, r1.x
/*   43   */     add r1.x, r7.w, r0.y
               + adds r0.x, r2.xy
/*   44   */     add r1.zw, r7.xxxz, -r2.zzzw
               + movs r0._, r7.w
/*   45   */     add r2, r7.yyxz, r2.yxzw
               + adds_prev r4.y, -r0.y
/*   46   */     mul o1.zw, r5.yyyz, c6.y
/*   47   */     mul o2.xy, r6.xy, c6.w
/*    4.1 */     exec
/*   48   */     cndge o3.xyz1, r5.x, c3.xyz, r4.xzw
/*   49   */     dp2add o1.x, r0.wz, c0.yx, c0.w
/*   50   */     dp2add o1.y, r0.wz, c1.yx, c1.w
/*   51   */     add r0.yz, -r2.xxy, c254.y
               + movs r0._, r2.w
/*   52   */     mul r0.yz, r0.yyz, r3.zzw
               + muls_prev r1.y, r3.z
/*   53   */     mul r1.yzw, r1.yyzw, r3.wwzy
               + subsc r4.x, c254.y, r0.x
/*    5.0 */     exece
/*   54   */     cndeq r2.xyz, c254.xy, r2.z, r4.yyx
/*   55   */     dp3 o0.x, r2.yzx, r3.wxy
/*   56   */     mul r2.xy, r1.xz, r3.x
/*   57   */     mad r2.z, r0.y, r3.y, r2.y
/*   58   */     add r0.x, r2.x, r1.w
               + movs r0._, r2.z
/*   59   */     add o0.z, r0.x, r0.z
               + adds_prev o0.y, r1.y
/*    5.1 */     cnop

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 6 (6) start of fetch run
// 1: dcl_texcoord1 at 7 (7)
// 2: dcl_texcoord2 at 8 (8)
// 3: dcl_position0 at 9 (9)
// 4: dcl_color0 at 10 (a)
// 5: dcl_texcoord3 at 11 (b) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xyz
//    [0] 55
//    [1] 59

// [1] texcoord1 o1.xyzw
//    [2] 46
//    [3] 49
//    [4] 50

// [2] texcoord2 o2.xy
//    [5] 47

// [3] color0 o3.xyzw
//    [6] 48

