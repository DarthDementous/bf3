//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $constantcolour;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float4 $texexpansion0;
//   float4x4 $transmodel;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//   float4x4 $uvmtx1;
//   float4x4 $uvmtx2;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $constantcolour  c0       1
//   $usevertexcolour c1       1
//   $transmodel      c2       3
//   $obviewpos       c5       1
//   $uvmtx0          c6       2
//   $uvmtx1          c8       2
//   $uvmtx2          c10      2
//   $texexpansion0   c12      1
//   $modelviewproj   c13      4
//

// Shader type: vertex 

xvs_3_0
defconst $constantcolour, float, vector, [1, 4], c0
defconst $modelviewproj, float, matrix_columns, [4, 4], c13-16
defconst $obviewpos, float, vector, [1, 3], c5
defconst $texexpansion0, float, vector, [1, 4], c12
defconst $transmodel, float, matrix_columns, [4, 4], c2-4
defconst $usevertexcolour, float, scalar, [1, 1], c1
defconst $uvmtx0, float, matrix_columns, [4, 4], c6-7
defconst $uvmtx1, float, matrix_columns, [4, 4], c8-9
defconst $uvmtx2, float, matrix_columns, [4, 4], c10-11
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=9
config VsResource=1
// VsExportCount=6

// interpolators: 7 interpolants: 7, components: 28
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3
dcl_texcoord4 o4
dcl_texcoord5 o5
dcl_color o6

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0, 1, -1, 0


/*    0.0 */     exec
/*    7   */     vfetch r9.__xy, r0.x, texcoord
/*    8   */     vfetch r1.__xy, r0.x, texcoord1
/*    9   */     vfetch r1.xy__, r0.x, texcoord2
/*   10   */     vfetch r9.xy__, r0.x, texcoord3
/*   11   */     vfetch r2, r0.x, position
/*   12   */     vfetch r3, r0.x, color
/*    0.1 */     exec
/*   13   */     vfetch r4, r0.x, texcoord4
/*    1.0 */     alloc position
/*    1.1 */     exec
/*   14   */     mul r7, r3.zyxw, c0
               + rcp r0.x, r2.w
/*   15   */     mul r0.xyw, r0.x, r2.xyz
/*   16   */     mad r2, r0.w, c15, c16
/*   17   */     mad r2, r0.y, c14.xzyw, r2.xzyw
/*   18   */     mad r8, r0.x, c13.xywz, r2.xzwy
/*   19   */     mov oPos, r8.xywz
/*    2.0 */     alloc interpolators
/*    2.1 */     exec
/*   20   */     cndge r6.x, r4.w, c255.y, c255.z
/*   21   */     dp3 r0.z, r4.zxy, r4.zxy
               + movs r3.w, -c1_abs.x
/*   22   */     mul r1, r1.wxyz, c12.yzzy
/*   23   */     mul r2.zw, r9.wwwz, c12.x
/*   24   */     mad r0.z, r4_abs.w, r4_abs.w, r0.z
/*   25   */     add r5.xyz, r0.xyw, -c5.xyz
/*    3.0 */     exec
/*   26   */     mul r0.xy, r1.yz, c11.xy
               + rsq r0.w, r0_abs.z
/*   27   */     dp2add r1.y, r1.zy, c10.yx, c10.w
/*   28   */     mul r6.yzw, r0.w, r4.yyzx
               + mulsc r0.z, c11.x, r1.y
/*   29   */     add r4.xyz, r6.ywz, r6.ywz
               + movs r0._, r0.w
/*   30   */     mul r2.xy, r6.zy, r4.z
               + muls_prev r0.w, r4_abs.w
/*   31   */     mul r3.xyz, r0.w, r4.zxy
               + addsc r0.w, c11.w, r0.x
/*    3.1 */     exec
/*   32   */     mul r4, r6.yw, r4.xyxz
               + addsc r1.z, c11.w, r0.z
/*   33   */     mul o5.zw, r9.xxxy, c12.w
/*   34   */     mov o3, r8.xywz
/*   35   */     cndge o6, r3.w, c0, r7
/*   36   */     dp3 o0.w, r5.zxy, c2.zxy
/*   37   */     dp3 o1.w, r5.zxy, c3.zxy
/*    4.0 */     exec
/*   38   */     dp3 o2.w, r5.zxy, c4.zxy
/*   39   */     dp2add o4.x, r2.zw, c6.yx, c6.w
/*   40   */     dp2add o4.y, r2.zw, c7.yx, c7.w
/*   41   */     dp2add o4.z, r1.xw, c8.yx, c8.w
/*   42   */     dp2add o4.w, r1.xw, c9.yx, c9.w
/*   43   */     add r2.z, r2.y, r3.z
               + adds r0.x, r4.yx
/*    4.1 */     exec
/*   44   */     add r1.x, r0.w, r0.y
               + movs r0._, r2.y
/*   45   */     add r0.zw, r4.xxxy, r2.x
               + adds_prev r5.w, -r3.z
/*   46   */     mad o5.y, r1.x, c11.y, r1.z
/*   47   */     add r2.xw, r4.zw, -r3.xy
               + subsc r2.y, c255.y, r0.w
/*   48   */     add r5.yz, r4.zzw, r3.xxy
               + subsc r5.x, c255.y, r0.z
/*   49   */     dp2add o5.x, r1.xy, c10.yx, c10.w
/*    5.0 */     exec
/*   50   */     mul r1, r5.xywz, c2.xyyx
               + subsc r6.y, c255.y, r0.x
/*   51   */     cndeq r3.xyz, c255.xy, r6.y, r5.zzw
/*   52   */     mul r4.xyz, r2.xzy, r6.x
/*   53   */     cndeq r5.xyz, c255.xy, r2.w, r5.xxy
/*   54   */     mul r0, r6.xxyx, c2.xyz
/*   55   */     dp3 o0.y, r0.wxy, r2.zxy
/*    5.1 */     exec
/*   56   */     dp3 o1.x, r5.yzx, c3.xyz
/*   57   */     dp3 o1.y, r4.yxz, c3.zxy
/*   58   */     dp3 o1.z, r3.yzx, c3.xyz
/*   59   */     dp3 o2.x, r5.yzx, c4.xyz
/*   60   */     dp3 o2.y, r4.yxz, c4.zxy
/*   61   */     dp3 o2.z, r3.yzx, c4.xyz
/*    6.0 */     exece
/*   62   */     add r0.xy, r1.xw, r1.yz
/*   63   */     add o0.z, r0.y, r0.z
/*   64   */     mad o0.x, r2.w, c2.z, r0.x
/*    6.1 */     cnop

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 7 (7) start of fetch run
// 1: dcl_texcoord1 at 8 (8)
// 2: dcl_texcoord2 at 9 (9)
// 3: dcl_texcoord3 at 10 (a)
// 4: dcl_position0 at 11 (b)
// 5: dcl_color0 at 12 (c)
// 6: dcl_texcoord4 at 13 (d) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xyzw
//    [0] 36
//    [1] 55
//    [2] 63
//    [3] 64

// [1] texcoord1 o1.xyzw
//    [4] 37
//    [5] 56
//    [6] 57
//    [7] 58

// [2] texcoord2 o2.xyzw
//    [8] 38
//    [9] 59
//    [10] 60
//    [11] 61

// [3] texcoord3 o3.xyzw
//    [12] 34

// [4] texcoord4 o4.xyzw
//    [13] 39
//    [14] 40
//    [15] 41
//    [16] 42

// [5] texcoord5 o5.xyzw
//    [17] 33
//    [18] 46
//    [19] 49

// [6] color0 o6.xyzw
//    [20] 35

