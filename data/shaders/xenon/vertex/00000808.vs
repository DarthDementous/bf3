//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $constantcolour;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float4 $texexpansion0;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $uvmtx0          c0       2
//   $constantcolour  c2       1
//   $usevertexcolour c3       1
//   $obviewpos       c4       1
//   $texexpansion0   c5       1
//   $modelviewproj   c6       4
//

// Shader type: vertex 

xvs_3_0
defconst $constantcolour, float, vector, [1, 4], c2
defconst $modelviewproj, float, matrix_columns, [4, 4], c6-9
defconst $obviewpos, float, vector, [1, 3], c4
defconst $texexpansion0, float, vector, [1, 4], c5
defconst $usevertexcolour, float, scalar, [1, 1], c3
defconst $uvmtx0, float, matrix_columns, [4, 4], c0-1
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=6
config VsResource=1
// VsExportCount=3

// interpolators: 4 interpolants: 4, components: 13
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0.xyz
dcl_texcoord1 o1
dcl_texcoord2 o2.xy
dcl_color o3

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, -1, 0, 0


/*    0.0 */     exec
/*    5   */     vfetch r5.__xy, r0.x, texcoord
/*    6   */     vfetch r6.xy__, r0.x, texcoord1
/*    7   */     vfetch r5.xy__, r0.x, texcoord2
/*    8   */     vfetch r4, r0.x, position
/*    9   */     vfetch r3, r0.x, color
/*   10   */     vfetch r1, r0.x, texcoord3
/*    0.1 */     alloc position
/*    1.0 */     exec
/*   11   */     dp3 r2.x, r1.zxy, r1.zxy
               + rcp r0.x, r4.w
/*   12   */     mul r0.xyz, r0.x, r4.xyz
/*   13   */     mad r4, r0.z, c8, c9
/*   14   */     mad r4, r0.y, c7.xzyw, r4.xzyw
/*   15   */     mad oPos, r0.x, c6, r4.xzyw
/*    1.1 */     alloc interpolators
/*    2.0 */     exec
/*   16   */     cndge r0.w, r1.w, c255.x, c255.y
/*   17   */     mul r3, r3.zyxw, c2
/*   18   */     mad r2.z, r1_abs.w, r1_abs.w, r2.x
/*   19   */     mul r2.xy, r5.zw, c5.x
               + rsq r2.w, r2_abs.z
/*   20   */     mul r4.xyz, r2.w, r1.yzx
               + movs r2.z, -c3_abs.x
/*   21   */     add r1.xyz, r4.xyz, r4.xyz
               + movs r0._, r2.w
/*    2.1 */     exec
/*   22   */     mul o1.zw, r6.xxxy, c5.y
/*   23   */     mul o2.xy, r5.xy, c5.w
/*   24   */     cndge o3, r2.z, c2, r3
/*   25   */     dp2add o1.x, r2.yx, c0.yx, c0.w
/*   26   */     dp2add o1.y, r2.yx, c1.yx, c1.w
/*   27   */     mul r3.yz, r4.zzx, r1.xxy
               + muls_prev r1.w, r1_abs.w
/*    3.0 */     exec
/*   28   */     mul r2.xyz, r1.w, r1.yzx
/*   29   */     mul r5, r4.xyz, r1.xyzy
/*   30   */     add r3.x, r5.w, r2.z
/*   31   */     add r1.xyz, -r0.xyz, c4.xyz
               + movs r0._, r3.y
/*   32   */     add r4.z, r5.w, -r2.z
               + adds_prev r4.y, r2.x
/*   33   */     add r0.xyz, r5.xz, r5.yxy
               + movs r0._, r3.z
/*    3.1 */     exec
/*   34   */     add r3.yw, r3.zzy, -r2.yyx
               + adds_prev r1.w, r2.y
/*   35   */     mul r2.x, r3.w, r0.w
               + subsc r3.z, c255.x, r0.y
/*   36   */     add r4.xw, -r0.xz, c255.x
               + movs r0._, r1.w
/*   37   */     mul r2.y, r4.w, r0.w
               + muls_prev r2.z, r0.w
/*   38   */     dp3 o0.x, r4.zxy, r1.zxy
/*   39   */     dp3 o0.z, r3.zxy, r1.zxy
/*    4.0 */     exece
/*   40   */     dp3 o0.y, r2.zxy, r1.zxy
/*    4.1 */     cnop

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 5 (5) start of fetch run
// 1: dcl_texcoord1 at 6 (6)
// 2: dcl_texcoord2 at 7 (7)
// 3: dcl_position0 at 8 (8)
// 4: dcl_color0 at 9 (9)
// 5: dcl_texcoord3 at 10 (a) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xyz
//    [0] 38
//    [1] 39
//    [2] 40

// [1] texcoord1 o1.xyzw
//    [3] 22
//    [4] 25
//    [5] 26

// [2] texcoord2 o2.xy
//    [6] 23

// [3] color0 o3.xyzw
//    [7] 24

