//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $cml[6];
//   float4 $constantcolour;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float4 $texexpansion0;
//   float4x4 $transmodel;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//   float4 $winddir;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $uvmtx0          c0       2
//   $winddir         c2       1
//   $constantcolour  c3       1
//   $usevertexcolour c4       1
//   $transmodel      c5       3
//   $obviewpos       c8       1
//   $cml             c9       6
//   $texexpansion0   c15      1
//   $modelviewproj   c16      4
//

// Shader type: vertex 

xvs_3_0
defconst $cml[0], float, vector, [1, 4], c9
defconst $cml[1], float, vector, [1, 4], c10
defconst $cml[2], float, vector, [1, 4], c11
defconst $cml[3], float, vector, [1, 4], c12
defconst $cml[4], float, vector, [1, 4], c13
defconst $cml[5], float, vector, [1, 4], c14
defconst $constantcolour, float, vector, [1, 4], c3
defconst $modelviewproj, float, matrix_columns, [4, 4], c16-19
defconst $obviewpos, float, vector, [1, 3], c8
defconst $texexpansion0, float, vector, [1, 4], c15
defconst $transmodel, float, matrix_columns, [4, 4], c5-7
defconst $usevertexcolour, float, scalar, [1, 1], c4
defconst $uvmtx0, float, matrix_columns, [4, 4], c0-1
defconst $winddir, float, vector, [1, 4], c2
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=13
config VsResource=1
// VsExportCount=5

// interpolators: 6 interpolants: 6, components: 21
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3.xy
dcl_color o4
dcl_color1 o5.xyz

def c252, 0, 0, 0, 0
def c253, -3.14159274, 0.5, 0.159154937, 3
def c254, 0, 1, 0.100000001, -1
def c255, 6.28318548, 0, 0, 0


/*    0.0 */     exec
/*    8   */     vfetch r0._xy_, r0.x, texcoord
/*    9   */     vfetch r1, r0.x, position
/*   10   */     vfetch r6, r0.x, color
/*   11   */     vfetch r4.xywz, r0.x, texcoord1
/*    0.1 */     alloc position
/*    1.0 */     exec
/*   12   */     cndeq r11.xyz, c254.xxy, r1.zx, r6.w
/*   13   */     dp3 r0.x, r4.wxy, r4.wxy
               + rcp r5.y, r1.w
/*   14   */     mad r0.x, r4_abs.z, r4_abs.z, r0.x
/*   15   */     mul r1.xyz, r5.y, r1.zxy
/*   16   */     mul r7.w, r1.y, c253.w
               + rsq r0.x, r0_abs.x
/*   17   */     mul r5.xzw, r0.x, r4.xwwy
/*    1.1 */     exec
/*   18   */     add r3.xyz, r5.zwx, r5.zwx
               + movs r0._, r0.x
/*   19   */     mul r4.xy, r5.zx, r3.xy
               + muls_prev r0.x, r4_abs.z
/*   20   */     mul r2.xyz, r0.x, r3.yxz
/*   21   */     mul r3, r5.xwwx, r3.xyxz
/*   22   */     add r8.zw, r3.zzzx, r2.zzzx
               + adds r0.x, r3.wy
/*   23   */     add r10.xy, r3.zx, -r2.zx
               + movs r0._, r4.y
/*    2.0 */     exec
/*   24   */     add r10.z, -r0.x, c254.y
               + adds_prev r10.w, r2.y
/*   25   */     dp2add r0.x, r10.yw, c7.zy, c254.x
/*   26   */     cndeq r5.xzw, c254.xy, r8.w, r10.zzzx
/*   27   */     dp3 r3.x, r5.zwx, c5.zyx
               + movs r0._, r3.y
/*   28   */     dp3 r3.y, r5.zwx, c6.zyx
               + adds_prev r1.w, r4.x
/*   29   */     dp3 r3.z, r5.zwx, c7.zyx
               + movs r0._, r3.w
/*    2.1 */     exec
/*   30   */     dp3 r0.w, r3.zxy, r3.zxy
               + adds_prev r2.w, r4.x
/*   31   */     add r5.x, -r1.w, c254.y
               + rsq r0.w, r0_abs.w
/*   32   */     mul r7.xyz, r3.xyz, r0.w
/*   33   */     sgt r13.xyz, -r7.xyz, c254.x
               + addsc r9.w, c2.w, r1.x
/*   34   */     mul r12.xyz, r7.xyz, r7.xyz
               + movas r0._, r13.z
/*   35   */     mul r7.xyz, r12.z, c[13+a0].xzy
               + movas r0._, r13.y
/*    3.0 */     exec
/*   36   */     mul r9.xyz, r12.y, c[11+a0].xzy
               + movas r0._, r13.x
/*   37   */     mad r9.xyz, r12.x, c[9+a0].xyz, r9.xzy
/*   38   */     add r7, r9, r7.xzyw
/*   39   */     mad r0.w, r7.w, c253.z, c253.y
/*   40   */     mul r9.yz, c2.xxz, c253.y
               + frcs r0.w, r0.w
/*   41   */     mad r0.w, r0.w, c255.x, c253.x
/*    3.1 */     exec
/*   42   */     mul r9.x, r5.x, c7.x
               + sin r0.w, r0.w
/*   43   */     add r2.xz, r9.yx, r0.wx
/*   44   */     mulsc r5.z, c254.z, r2.x
/*   45   */     dp3 r0.x, r5.yyz, r11.xyz
/*   46   */     addsc r0.x, c2.w, r0.x
/*   47   */     mad r0.x, r0.x, c253.z, c253.y
/*    4.0 */     exec
/*   48   */     mov r1.w, -c4_abs.x
               + frcs r0.x, r0.x
/*   49   */     mad r0.x, r0.x, c255.x, c253.x
/*   50   */     mul r5.z, r5.z, r6.w
               + cos r0.x, r0.x
/*   51   */     add r0.x, r9.z, r0.x
/*   52   */     mulsc r0.x, c254.z, r0.x
/*   53   */     mul r5.y, r0.x, r6.w
/*    4.1 */     exec
/*   54   */     add r5.yz, r1.xxy, r5.yyz
/*   55   */     mad r9, r5.y, c18, c19
/*   56   */     mad r9, r1.z, c17.xzyw, r9.xzyw
/*   57   */     mad oPos, r5.z, c16, r9.xzyw
/*    5.0 */     alloc interpolators
/*    5.1 */     exec
/*   58   */     mul r6.xyz, r6.zyx, c3.xyz
               + mulsc r0.x, c15.x, r0.y
/*   59   */     cndge r0.w, r4.z, c254.y, c254.w
/*   60   */     mul r9.xyz, r0.w, c5.xyz
               + movs r0._, r4.y
/*   61   */     add r8.y, -r2.w, c254.y
               + adds_prev r8.x, -r2.y
/*   62   */     mul r4.xyz, r8.xzy, r0.w
               + mulsc r0.w, c15.x, r0.z
/*   63   */     dp3 r2.y, r4.yxz, c7.zxy
               + subsc r1.z, -c8.y, -r1.z
/*    6.0 */     exec
/*   64   */     add r1.xy, r5.zy, -c8.xz
               + movs r5.y, r10.y
/*   65   */     dp3 r2.w, r1.yxz, c7.zxy
               + movs r5.z, r10.w
/*   66   */     dp3 o0.y, r9.zxy, r8.zxy
/*   67   */     mov o5.xyz, r7.xyz
/*   68   */     cndge o4.xyz1, r1.w, c3.xyz, r6.xyz
/*   69   */     dp3 o0.x, r5.yzx, c5.zyx
/*    6.1 */     exec
/*   70   */     dp3 o0.w, r1.yxz, c5.zxy
               + movs o0.z, r3.x
/*   71   */     dp3 o1.x, r5.yzx, c6.zyx
/*   72   */     dp3 o1.y, r4.yxz, c6.zxy
/*   73   */     dp3 o1.w, r1.yxz, c6.zxy
               + movs o1.z, r3.y
/*   74   */     dp2add o3.x, r0.wx, c0.yx, c0.w
/*   75   */     dp2add o3.y, r0.wx, c1.yx, c1.w
/*    7.0 */     exece
/*   76   */     mov o2.xyw, r2.zyw
               + movs o2.z, r3.z
/*    7.1 */     cnop

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 8 (8) start of fetch run
// 1: dcl_position0 at 9 (9)
// 2: dcl_color0 at 10 (a)
// 3: dcl_texcoord1 at 11 (b) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xyzw
//    [0] 66
//    [1] 69
//    [2] 70

// [1] texcoord1 o1.xyzw
//    [3] 71
//    [4] 72
//    [5] 73

// [2] texcoord2 o2.xyzw
//    [6] 76

// [3] texcoord3 o3.xy
//    [7] 74
//    [8] 75

// [4] color0 o4.xyzw
//    [9] 68

// [5] color1 o5.xyz
//    [10] 67

