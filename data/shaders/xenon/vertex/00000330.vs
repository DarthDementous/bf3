//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $constantcolour;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float4 $texexpansion0;
//   float4x4 $transmodel;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $uvmtx0          c0       2
//   $constantcolour  c2       1
//   $usevertexcolour c3       1
//   $transmodel      c4       3
//   $obviewpos       c7       1
//   $wlightpos       c8       3
//   $worldviewpos    c11      1
//   $texexpansion0   c12      1
//   $modelviewproj   c13      4
//

// Shader type: vertex 

xvs_3_0
defconst $constantcolour, float, vector, [1, 4], c2
defconst $modelviewproj, float, matrix_columns, [4, 4], c13-16
defconst $obviewpos, float, vector, [1, 3], c7
defconst $texexpansion0, float, vector, [1, 4], c12
defconst $transmodel, float, matrix_columns, [4, 4], c4-6
defconst $usevertexcolour, float, scalar, [1, 1], c3
defconst $uvmtx0, float, matrix_columns, [4, 4], c0-1
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=11
config VsResource=1
// VsExportCount=4

// interpolators: 5 interpolants: 5, components: 19
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2.xyz
dcl_texcoord3 o3
dcl_color o4

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0, 1, -1, 0


/*    0.0 */     exec
/*    7   */     vfetch r6.xy__, r0.x, texcoord
/*    8   */     vfetch r6.__xy, r0.x, texcoord1
/*    9   */     vfetch r1, r0.x, position
/*   10   */     vfetch r3, r0.x, color
/*   11   */     vfetch r0, r0.x, texcoord2
/*    0.1 */     alloc position
/*    1.0 */     exec
/*   12   */     dp3 r2.z, r0.zxy, r0.zxy
               + rcp r2.x, r1.w
/*   13   */     mul r1.xyz, r2.x, r1.xyz
/*   14   */     mad r4, r1.z, c15, c16
/*   15   */     mad r4, r1.y, c14.xzyw, r4.xzyw
/*   16   */     mad oPos, r1.x, c13, r4.xzyw
/*    1.1 */     alloc interpolators
/*    2.0 */     exec
/*   17   */     cndge r1.w, r0.w, c255.y, c255.z
/*   18   */     mul r4, r3.zyxw, c2
/*   19   */     mul r2.xy, r6.xy, c12.x
/*   20   */     mad r2.z, r0_abs.w, r0_abs.w, r2.z
/*   21   */     add r1.xyz, r1.xyz, -c7.xyz
               + rsq r2.w, r2_abs.z
/*   22   */     dp3 r5.x, r1.zxy, c4.zxy
/*    2.1 */     exec
/*   23   */     dp3 r5.y, r1.zxy, c5.zxy
/*   24   */     dp3 r5.z, r1.zxy, c6.zxy
/*   25   */     mul r1.xyz, r2.w, r0.xyz
               + movs r2.z, -c3_abs.x
/*   26   */     add r3.xyz, r1.yzx, r1.yzx
               + movs r0._, r2.w
/*   27   */     add o2.xyz, r5.xyz, c11.xyz
/*   28   */     mul o3.zw, r6.zzzw, c12.w
/*    3.0 */     exec
/*   29   */     cndge o4, r2.z, c2, r4
/*   30   */     dp2add o3.x, r2.yx, c0.yx, c0.w
/*   31   */     dp2add o3.y, r2.yx, c1.yx, c1.w
/*   32   */     mul r4, r1.yx, r3.xzxy
               + muls_prev r0.y, r0_abs.w
/*   33   */     add r0.xzw, r5.xyyz, c11.xyyz
               + adds r1.x, r4.yx
/*   34   */     mul r2.xz, r1.yz, r3.y
               + subsc r7.x, c9.y, r0.z
/*    3.1 */     exec
/*   35   */     add r7.zw, -r0.x, c8.yyyx
               + subsc r7.y, c9.x, r0.z
/*   36   */     mul r6.xyz, r0.y, r3.yxz
               + subsc r3.x, c10.y, r0.w
/*   37   */     add r2.w, r2.x, r6.z
               + subsc r3.z, c10.x, r0.w
/*   38   */     add r1.yz, r4.wwz, r6.yyx
               + movs r0._, r2.x
/*   39   */     add r2.xy, r4.wz, -r6.yx
               + adds_prev r0.x, -r6.z
/*   40   */     add r0.yz, r4.xxy, r2.z
               + mulsc r8.x, c4.z, r2.x
/*    4.0 */     exec
/*   41   */     add r0.y, -r0.y, c255.y
               + mulsc r8.y, c6.z, r2.x
/*   42   */     mul r0.w, r0.y, c6.x
               + subsc r1.x, c255.y, r1.x
/*   43   */     mad r9.y, r1.z, c6.y, r0.w
/*   44   */     mul r11, r1.wwwz, c4.xyzy
               + subsc r2.z, c255.y, r0.z
/*   45   */     mul r4.xyz, r2.ywz, r1.w
               + mulsc r8.z, c5.z, r2.x
/*   46   */     cndeq r6.yzw, c255.xxy, r0.x, r1.xxxy
/*    4.1 */     exec
/*   47   */     dp3 r6.x, r6.zwy, c4.zxy
               + mulsc r10.z, c5.x, r1.y
/*   48   */     mad r9.x, r0.y, c4.x, r11.w
/*   49   */     dp3 r2.x, r11.zxy, r2.wyz
               + mulsc r10.w, c5.y, r1.z
/*   50   */     dp3 r2.y, r4.yxz, c5.zxy
               + mulsc r10.x, c5.x, r0.y
/*   51   */     dp3 r6.y, r6.zwy, c6.zxy
               + mulsc r10.y, c5.y, r0.x
/*   52   */     dp3 r2.z, r4.yxz, c6.zxy
               + adds r9.z, r10.xw
/*    5.0 */     exec
/*   53   */     mul r4.zw, r2.z, r3.xxxz
               + adds r9.w, r10.zy
/*   54   */     dp3 r3.y, r2.zxy, r5.zxy
               + movs r0._, r6.y
/*   55   */     mad r6.z, r1.x, c5.z, r9.w
/*   56   */     mul r1, r2.xyxy, r7.wyzx
               + muls_prev r0.w, r3.x
/*   57   */     add r2.xyz, r9.xyz, r8.xyz
               + movs r0._, r6.y
/*   58   */     mul r4.xy, r2.y, r3.xz
               + muls_prev r0.y, r3.z
/*    5.1 */     exec
/*   59   */     dp3 r3.x, r2.yxz, r5.zxy
               + adds r1.z, r1.zw
/*   60   */     mul r2, r2.xxz, r7.zwxy
               + adds r1.w, r1.xy
/*   61   */     mul r7, r6.zzx, r7
               + adds r1.x, r2.xz
/*   62   */     add r0.xz, r7.zw, r7.xy
               + adds r1.y, r2.yw
/*   63   */     dp3 r3.z, r6.yxz, r5.zxy
               + movs r0._, r0.x
/*   64   */     dp3 r0.x, r3.zxy, r3.zxy
               + adds_prev r2.z, r0.w
/*    6.0 */     exec
/*   65   */     add r2.xy, r1.xz, r4.xz
               + movs r0._, r0.z
/*   66   */     add r1.xy, r1.yw, r4.yw
               + adds_prev r1.z, r0.y
/*   67   */     dp3 r0.y, r1.zxy, r1.zxy
               + rsq r0.x, r0_abs.x
/*   68   */     dp3 r1.w, r2.zxy, r2.zxy
               + rsq r0.w, r0_abs.y
/*   69   */     mul r0.xyz, r3.xyz, r0.x
               + rsq r1.w, r1_abs.w
/*   70   */     mul_sat o1.w, r2.z, r1.w
/*    6.1 */     exece
/*   71   */     mad o1.xyz, r2.xyz, r1.w, -r0.xyz
/*   72   */     mul_sat o0.w, r1.z, r0.w
/*   73   */     mad o0.xyz, r1.xyz, r0.w, -r0.xyz

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 7 (7) start of fetch run
// 1: dcl_texcoord1 at 8 (8)
// 2: dcl_position0 at 9 (9)
// 3: dcl_color0 at 10 (a)
// 4: dcl_texcoord2 at 11 (b) end of fetch run, don't move this fetch

// Output declaration table:
// [0] texcoord0 o0.xyzw
//    [0] 72
//    [1] 73

// [1] texcoord1 o1.xyzw
//    [2] 70
//    [3] 71

// [2] texcoord2 o2.xyz
//    [4] 27

// [3] texcoord3 o3.xyzw
//    [5] 28
//    [6] 30
//    [7] 31

// [4] color0 o4.xyzw
//    [8] 29

