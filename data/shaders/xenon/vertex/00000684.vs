//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $constantcolour;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float4 $texexpansion0;
//   float4x4 $transmodel;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//   float4x4 $uvmtx1;
//   float4x4 $uvmtx2;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $constantcolour  c0       1
//   $usevertexcolour c1       1
//   $transmodel      c2       3
//   $obviewpos       c5       1
//   $uvmtx0          c6       2
//   $uvmtx1          c8       2
//   $uvmtx2          c10      2
//   $texexpansion0   c12      1
//   $modelviewproj   c13      4
//

// Shader type: vertex 

xvs_3_0
defconst $constantcolour, float, vector, [1, 4], c0
defconst $modelviewproj, float, matrix_columns, [4, 4], c13-16
defconst $obviewpos, float, vector, [1, 3], c5
defconst $texexpansion0, float, vector, [1, 4], c12
defconst $transmodel, float, matrix_columns, [4, 4], c2-4
defconst $usevertexcolour, float, scalar, [1, 1], c1
defconst $uvmtx0, float, matrix_columns, [4, 4], c6-7
defconst $uvmtx1, float, matrix_columns, [4, 4], c8-9
defconst $uvmtx2, float, matrix_columns, [4, 4], c10-11
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=10
config VsResource=1
// VsExportCount=6

// interpolators: 7 interpolants: 7, components: 28
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3
dcl_texcoord4 o4
dcl_texcoord5 o5
dcl_color o6

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0, 1, -1, 0


/*    0.0 */     exec
/*    7   */     vfetch r10.__xy, r0.x, texcoord
/*    8   */     vfetch r4.__xy, r0.x, texcoord1
/*    9   */     vfetch r4.xy__, r0.x, texcoord2
/*   10   */     vfetch r10.xy__, r0.x, texcoord3
/*   11   */     vfetch r1, r0.x, position
/*   12   */     vfetch r3, r0.x, color
/*    0.1 */     exec
/*   13   */     vfetch r2, r0.x, texcoord4
/*    1.0 */     alloc position
/*    1.1 */     exec
/*   14   */     mul r8, r3.zyxw, c0
               + rcp r0.x, r1.w
/*   15   */     mul r1.xyz, r0.x, r1.xyz
/*   16   */     mad r0, r1.z, c15, c16
/*   17   */     mad r0, r1.y, c14.xzyw, r0.xzyw
/*   18   */     mad r9, r1.x, c13.xywz, r0.xzwy
/*   19   */     mov oPos, r9.xywz
/*    2.0 */     alloc interpolators
/*    2.1 */     exec
/*   20   */     cndge r5.x, r2.w, c255.y, c255.z
/*   21   */     dp3 r0.x, r2.zxy, r2.zxy
               + movs r3.w, -c1_abs.x
/*   22   */     mul r7, r4.xywz, c12.zzy
/*   23   */     mul r0.yw, r10.wwz, c12.x
/*   24   */     mad r1.w, r2_abs.w, r2_abs.w, r0.x
/*   25   */     mul r0.xz, r0.wy, c7.xy
               + rsq r3.x, r1_abs.w
/*    3.0 */     exec
/*   26   */     dp2add r1.w, r0.yw, c6.yx, c6.w
/*   27   */     dp2add r0.w, r7.zw, c8.yx, c8.w
/*   28   */     add r5.yzw, r1.xxyz, -c5.xxyz
               + mulsc r1.y, c9.x, r0.w
/*   29   */     mul r1.xz, r7.wz, c9.xy
               + mulsc r0.y, c7.x, r1.w
/*   30   */     mul r4.xyz, r3.x, r2.yzx
               + movs r0._, r3.x
/*   31   */     add r3.xyz, r4.xzy, r4.xzy
               + muls_prev r2.x, r2_abs.w
/*    3.1 */     exec
/*   32   */     mul r2.xyw, r2.x, r3.yxz
               + addsc r2.z, c7.w, r0.x
/*   33   */     mul r6, r4.xyz, r3.xzyx
               + addsc r0.x, c9.w, r1.x
/*   34   */     mul o5.zw, r10.xxxy, c12.w
/*   35   */     mov o3, r9.xywz
/*   36   */     cndge o6, r3.w, c0, r8
/*   37   */     dp3 o0.w, r5.wyz, c2.zxy
/*    4.0 */     exec
/*   38   */     dp3 o1.w, r5.wyz, c3.zxy
/*   39   */     dp3 o2.w, r5.wyz, c4.zxy
/*   40   */     dp2add o5.x, r7.yx, c10.yx, c10.w
/*   41   */     dp2add o5.y, r7.yx, c11.yx, c11.w
/*   42   */     mad r4.yw, r4.zzx, r3.z, -r2.yyx
/*   43   */     mad r3.zw, r4.xxxz, r3.z, r2.xxxy
/*    4.1 */     exec
/*   44   */     add r3.x, r6.w, -r2.w
               + addsc r3.y, c9.w, r1.y
/*   45   */     add r0.x, r0.x, r1.z
               + addsc r1.y, c7.w, r0.y
/*   46   */     mul r5.yzw, r5.x, c2.xxyz
               + movs r0._, r2.z
/*   47   */     add r2.xyz, r6.zxz, r6.yyx
               + adds_prev r1.x, r0.z
/*   48   */     mad o4.y, r1.x, c7.y, r1.y
/*   49   */     mad o4.w, r0.x, c9.y, r3.y
/*    5.0 */     exec
/*   50   */     add r4.xz, -r2.yz, c255.y
               + subsc r3.y, c255.y, r2.x
/*   51   */     dp2add o4.x, r1.xw, c6.yx, c6.w
/*   52   */     dp2add o4.z, r0.xw, c8.yx, c8.w
/*   53   */     dp3 o0.y, r5.wyz, r3.zxy
/*   54   */     mov r0.yz, r4.yyx
               + movs r0._, r6.w
/*   55   */     mul r2.xyz, r3.xzy, r5.x
               + adds_prev r0.x, r2.w
/*    5.1 */     exec
/*   56   */     cndeq r1.xyz, c255.xy, r3.w, r4.zzw
/*   57   */     dp3 o0.z, r1.yzx, c2.zyx
/*   58   */     dp3 o1.y, r2.yxz, c3.zxy
/*   59   */     dp3 o1.z, r1.yzx, c3.zyx
/*   60   */     dp3 o2.y, r2.yxz, c4.zxy
/*   61   */     dp3 o2.z, r1.yzx, c4.zyx
/*    6.0 */     exece
/*   62   */     dp3 o0.x, r0.yzx, c2.zxy
/*   63   */     dp3 o1.x, r0.yzx, c3.zxy
/*   64   */     dp3 o2.x, r0.yzx, c4.zxy
/*    6.1 */     cnop

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 7 (7) start of fetch run
// 1: dcl_texcoord1 at 8 (8)
// 2: dcl_texcoord2 at 9 (9)
// 3: dcl_texcoord3 at 10 (a)
// 4: dcl_position0 at 11 (b)
// 5: dcl_color0 at 12 (c)
// 6: dcl_texcoord4 at 13 (d) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xyzw
//    [0] 37
//    [1] 53
//    [2] 57
//    [3] 62

// [1] texcoord1 o1.xyzw
//    [4] 38
//    [5] 58
//    [6] 59
//    [7] 63

// [2] texcoord2 o2.xyzw
//    [8] 39
//    [9] 60
//    [10] 61
//    [11] 64

// [3] texcoord3 o3.xyzw
//    [12] 35

// [4] texcoord4 o4.xyzw
//    [13] 48
//    [14] 49
//    [15] 51
//    [16] 52

// [5] texcoord5 o5.xyzw
//    [17] 34
//    [18] 40
//    [19] 41

// [6] color0 o6.xyzw
//    [20] 36

