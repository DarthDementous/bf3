//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $cml[6];
//   float4 $constantcolour;
//   float4 $latten0;
//   float4x4 $modelview;
//   float4x4 $modelviewproj;
//   float3 $obviewpos;
//   float4x4 $spotlightmatrix;
//   float4 $texexpansion0;
//   float4x4 $transmodel;
//   float $usevertexcolour;
//   float4x4 $uvmtx0;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   $uvmtx0          c0       2
//   $constantcolour  c2       1
//   $usevertexcolour c3       1
//   $transmodel      c4       3
//   $obviewpos       c7       1
//   $cml             c8       6
//   $latten0         c14      1
//   $wlightpos       c15      3
//   $worldviewpos    c18      1
//   $modelview       c19      4
//   $spotlightmatrix c23      4
//   $texexpansion0   c27      1
//   $modelviewproj   c28      4
//

// Shader type: vertex 

xvs_3_0
defconst $cml[0], float, vector, [1, 4], c8
defconst $cml[1], float, vector, [1, 4], c9
defconst $cml[2], float, vector, [1, 4], c10
defconst $cml[3], float, vector, [1, 4], c11
defconst $cml[4], float, vector, [1, 4], c12
defconst $cml[5], float, vector, [1, 4], c13
defconst $constantcolour, float, vector, [1, 4], c2
defconst $latten0, float, vector, [1, 4], c14
defconst $modelview, float, matrix_columns, [4, 4], c19-22
defconst $modelviewproj, float, matrix_columns, [4, 4], c28-31
defconst $obviewpos, float, vector, [1, 3], c7
defconst $spotlightmatrix, float, matrix_columns, [4, 4], c23-26
defconst $texexpansion0, float, vector, [1, 4], c27
defconst $transmodel, float, matrix_columns, [4, 4], c4-6
defconst $usevertexcolour, float, scalar, [1, 1], c3
defconst $uvmtx0, float, matrix_columns, [4, 4], c0-1
defconst $wlightpos, float, matrix_columns, [4, 4], c15-17
defconst $worldviewpos, float, vector, [1, 3], c18
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=7
config VsResource=1
// VsExportCount=8

// interpolators: 9 interpolants: 9, components: 33
// UsesMemexport: false
dcl_index r0.x
dcl_texcoord o0.xyz
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3
dcl_texcoord4 o4
dcl_texcoord5 o5.xyz
dcl_texcoord6 o6
dcl_color o7
dcl_color1 o8.xyz

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, -1, 0


/*    0.0 */     exec
/*    8   */     vfetch r7.xy__, r0.x, texcoord
/*    9   */     vfetch r7.__xy, r0.x, texcoord1
/*   10   */     vfetch r1, r0.x, position
/*   11   */     vfetch r3, r0.x, color
/*   12   */     vfetch r2, r0.x, texcoord2
/*    0.1 */     alloc position
/*    1.0 */     exec
/*   13   */     rcp r0.x, r1.w
/*   14   */     mul r0.xyz, r0.x, r1.zxy
/*   15   */     mad r1, r0.x, c30, c31
/*   16   */     mad r1, r0.z, c29.xzyw, r1.xzyw
/*   17   */     mad oPos, r0.y, c28, r1.xzyw
/*    1.1 */     alloc interpolators
/*    2.0 */     exec
/*   18   */     dp3 r4.w, r2.zxy, r2.zxy
               + movs r1.z, -c3_abs.x
/*   19   */     mul r5, r3.zyxw, c2
               + muls r1.w, r2_abs.ww
/*   20   */     cndge r0.w, r2.w, c255.x, c255.z
/*   21   */     mul r1.xy, r7.xy, c27.x
               + subsc r6.x, c7.x, r0.y
/*   22   */     mad r3, r0.x, c21, c22
/*   23   */     mad r3, r0.z, c20.xzwy, r3.xzwy
/*    2.1 */     exec
/*   24   */     mad r3, r0.y, c19.wzxy, r3.zyxw
/*   25   */     mul o6.zw, r7.zzzw, c27.y
/*   26   */     cndge o7, r1.z, c2, r5
/*   27   */     dp2add o6.x, r1.yx, c0.yx, c0.w
/*   28   */     dp2add o6.y, r1.yx, c1.yx, c1.w
/*   29   */     mul r1.xyz, r3.x, c26.xyz
               + subsc r3.x, -c7.x, -r0.y
/*    3.0 */     exec
/*   30   */     mul r4.xyz, r3.y, c25.xyz
               + subsc r3.y, -c7.y, -r0.z
/*   31   */     mad r4.xyz, r3.w, c24.xyz, r4.xyz
/*   32   */     mad r4.xyz, r3.z, c23.xyz, r4.xyz
/*   33   */     add o5.xyz, r4.xyz, r1.xyz
/*   34   */     add r1.y, r4.w, r1.w
               + subsc r3.w, -c7.z, -r0.x
/*   35   */     dp3 r1.x, r3.wxy, c6.zxy
               + rsq r1.y, r1_abs.y
/*    3.1 */     exec
/*   36   */     mul r5.xyz, r1.y, r2.xzy
               + movs r0._, r1.y
/*   37   */     add r1.yzw, r5.yyzx, r5.yyzx
               + muls_prev r5.w, r2_abs.w
/*   38   */     mul r2.xz, r5.w, r1.yw
               + subsc r6.y, c7.y, r0.z
/*   39   */     mul r4.yzw, r5.xxzx, r1.yyyz
               + subsc r6.z, c7.z, r0.x
/*   40   */     mul r7, r5.zywx, r1.zyzw
               + movs r0._, r4.w
/*   41   */     add r5.y, r4.z, -r2.z
               + adds_prev r4.x, -r2.x
/*    4.0 */     exec
/*   42   */     dp3 r1.y, r3.wxy, c5.zxy
               + movs r0._, r4.y
/*   43   */     add r3.z, r4.y, -r7.z
               + adds_prev r5.x, r7.z
/*   44   */     dp3 r1.z, r3.wxy, c4.zxy
               + movs r0._, r4.w
/*   45   */     add r0.xyz, r7.xw, r7.yyx
               + adds_prev r3.y, r2.x
/*   46   */     add r3.x, -r0.x, c255.x
               + subsc r5.z, c255.x, r0.z
/*   47   */     dp3 o0.x, r3.zxy, r6.zxy
/*    4.1 */     exec
/*   48   */     dp3 o0.z, r5.zxy, r6.zxy
/*   49   */     dp3 o2.x, r3.zxy, c5.zxy
/*   50   */     dp3 o3.x, r3.zxy, c6.zxy
/*   51   */     dp3 r2.x, r5.zxy, c4.zxy
               + movs r0._, r4.z
/*   52   */     dp3 r2.y, r5.zxy, c5.zxy
               + adds_prev r4.z, r2.z
/*   53   */     dp3 r2.z, r5.zxy, c6.zxy
               + subsc r4.y, c255.x, r0.y
/*    5.0 */     exec
/*   54   */     mul r5.xyz, r4.yxz, r0.w
               + mulsc r0.x, c4.x, r0.w
/*   55   */     dp3 o0.y, r5.zyx, r6.zxy
/*   56   */     dp3 r2.w, r5.zyx, c6.zxy
               + mulsc r0.y, c4.y, r0.w
/*   57   */     dp3 r1.w, r5.zyx, c5.zxy
               + mulsc r0.z, c4.z, r0.w
/*   58   */     dp3 o1.y, r0.zxy, r4.zxy
               + movs o1.w, r1.z
/*   59   */     dp3 o1.x, r3.zxy, c4.zxy
               + movs o1.z, r2.x
/*    5.1 */     exec
/*   60   */     mov o2.yw, r1.wwy
               + movs o2.z, r2.y
/*   61   */     mov o3.yz, r2.wwz
               + movs o3.w, r1.x
/*   62   */     dp3 r0.w, r2.zxy, r2.zxy
/*   63   */     add r0.xyz, r1.xzy, c18.zxy
/*   64   */     add r3.xy, -r0.x, c17.xy
/*   65   */     add r1.xy, -r0.y, c15.xy
               + subsc r3.z, c16.x, r0.z
/*    6.0 */     exec
/*   66   */     mul r1.xy, r1.xy, r1.xy
               + rsq r0.w, r0_abs.w
/*   67   */     mul r2.xzw, r2.xyyz, r0.w
               + subsc r3.w, c16.y, r0.z
/*   68   */     dp2add r0.x, r3.wy, r3.wy, r1.y
/*   69   */     dp2add r0.w, r3.zx, r3.zx, r1.x
/*   70   */     sgt r1.xyw, -r2.zwx, c255.y
               + log r2.y, r0_abs.x
/*   71   */     mul r0.xyz, r2.zwx, r2.zwx
               + movas r0._, r1.y
/*    6.1 */     exec
/*   72   */     mul r3.xyz, r0.y, c[12+a0].xzy
               + movas r0._, r1.x
/*   73   */     log r2.x, r0_abs.w
/*   74   */     mad r1.xyz, r0.x, c[10+a0].xyz, r3.xzy
/*   75   */     mul r0.xy, r2.xy, c14.xz
               + movas r0._, r1.w
/*   76   */     exp r0.x, r0.x
/*   77   */     exp r0.y, r0.y
/*    7.0 */     exece
/*   78   */     mad o8.xyz, r0.z, c[8+a0].xyz, r1.xyz
/*   79   */     mul_sat r0.xy, r0.xy, c14.yw
/*   80   */     add o4.xy00, -r0.xy, c255.x
/*    7.1 */     cnop

// PDB hint 00000000-00000000-00000000


// Input declaration patch table:
// 0: dcl_texcoord0 at 8 (8) start of fetch run
// 1: dcl_texcoord1 at 9 (9)
// 2: dcl_position0 at 10 (a)
// 3: dcl_color0 at 11 (b)
// 4: dcl_texcoord2 at 12 (c) end of fetch run

// Output declaration table:
// [0] texcoord0 o0.xyz
//    [0] 47
//    [1] 48
//    [2] 55

// [1] texcoord1 o1.xyzw
//    [3] 58
//    [4] 59

// [2] texcoord2 o2.xyzw
//    [5] 49
//    [6] 60

// [3] texcoord3 o3.xyzw
//    [7] 50
//    [8] 61

// [4] texcoord4 o4.xyzw
//    [9] 80

// [5] texcoord5 o5.xyz
//    [10] 33

// [6] texcoord6 o6.xyzw
//    [11] 25
//    [12] 27
//    [13] 28

// [7] color0 o7.xyzw
//    [14] 26

// [8] color1 o8.xyz
//    [15] 78

