      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00946005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: c80c0504 00acac00 a1860100	      ALU:	MULv	R4.__zw = abs(R6).xxxy, C257.xxxy
06: b8106061 1f1ffe3f 00004000	      FETCH:	SAMPLE	R6.__x_ = R3.zwz CONST(1) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: b8300081 1f1ffffb 00004000	      FETCH:	SAMPLE	R0.w___ = R4.zwz CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: c80c0504 00061b00 e1020200	   (S)ALU:	MULv	R4.__zw = R2.zzzw, R2.wwww
09: c80c0504 00061b06 eb010104	      ALU:	MULADDv	R4.__zw = R4.zzzw, R1.zzzw, R1.wwww
0a: c80c0504 00061b06 eb000004	      ALU:	MULADDv	R4.__zw = R4.zzzw, R0.zzzw, R0.wwww
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 58210606 00c6c61b e0040484	      ALU:	ADDv	R6.x___ = R4.zzzz, R4.zzzz
                          						    	RECIPSQ_IEEE	R6._y__ = abs(R4).wwww
0c: c80c0504 00ac0600 e1060200	      ALU:	MULv	R4.__zw = R6.xxxy, R2.zzzw
0d: c8060507 00bc1600 e1060100	      ALU:	MULv	R7._yz_ = R6.xxyy, R1.zzww
0e: c8090506 00b01a00 e1060000	      ALU:	MULv	R6.x__w = R6.xyyy, R0.zwww
0f: a8110607 046c1b00 c00600fe	      ALU:	ADDv	R7.x___ = -R6.xxxx, R0.wwww
                          						    	MUL_CONST_0	R6.x___ = C510.w, R0.x
10: 14020506 051bc6b1 e1040207	      ALU:	MULv	R6._y__ = -R4.wwww, R2.zzzz
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: c8020506 04c6c6b1 eb070106	      ALU:	MULADDv	R6._y__ = R6.yyyy, -R7.zzzz, R1.zzzz
12: c8020506 041bc6b1 eb060006	      ALU:	MULADDv	R6._y__ = R6.yyyy, -R6.wwww, R0.zzzz
13: 04270706 04beb11b a006fd01	      ALU:	ADDv	R6.xyz_ = -R6.zxyy, C509.yyyy
                          						    	ADD_PREVs	R7._y__ = R1.wwww
14: 14010500 01c6c6c6 e1060604	      ALU:	MULv	R0.x___ = R6.zzzz, R6.zzzz
15: 04480707 006c6c1b e1000002	      ALU:	MULv	R7.___w = R0.xxxx, R0.xxxx
                          						    	ADD_PREVs	R7.__z_ = R2.wwww
16: c8020500 00bebe00 f0070700	      ALU:	DOT3v	R0._y__ = R7.zxyy, R7.zxyy
      04006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 58210000 046c6cb1 2003fe80	      ALU:	ADDv	R0.x___ = -C259.xxxx, C510.xxxx
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R0).yyyy
18: c80f0501 00007100 e1070000	      ALU:	MULv	R1 = R7, R0.yyyx
19: c80f0500 00a6cd00 f2010100	      ALU:	CUBEv	R0 = R1.zzxy, R1.yxzz
1a: 4c140202 001b1bc6 e2000080	      ALU:	MAXv	R2.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R2.x___ = abs(R0).zzzz
1b: c8030502 006d6cc6 cb0002fe	      ALU:	MULADDv	R2.xy__ = C510.zzzz, R0.yxxx, R2.xxxx
1c: 10280081 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R4.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0025601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 90484041 1f1ff688 0000c000	      FETCH:	SAMPLE	R4.xyzw = R2.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1e: 10082061 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1f: 14070501 00c0c01b e0050502	   (S)ALU:	ADDv	R1.xyz_ = R5.xyzz, R5.xyzz
20: 0c810500 001b1b1b a104ff05	      ALU:	MULv	R0.x___ = R4.wwww, C511.wwww
                          						    	MUL_PREVs	R5.___w = R5.wwww
21: a8170307 00c0c041 c1010200	      ALU:	MULv	R7.xyz_ = R1.xyzz, R2.xyzz
                          						    	MUL_CONST_0	R3.x___ = C256.x, R0.y
22: a8280302 00b11b42 45fd0400	      ALU:	SETGTv	R2.___w = C509.yyyy, R4.wwww
                          						    	MUL_CONST_0	R3._y__ = C256.x, R0.z
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: a8410305 006c1b43 8000fe00	      ALU:	ADDv	R5.x___ = R0.xxxx, C510.wwww
                          						    	MUL_CONST_0	R3.__z_ = C256.x, R0.w
24: 2c120505 00bec06c b007ff05	      ALU:	DOT3v	R5._y__ = R7.zxyy, C511.xyzz
                          						    	FRACs	R5.x___ = R5.xxxx
25: 14270502 00c0c0b1 e1030205	      ALU:	MULv	R2.xyz_ = R3.xyzz, R2.xyzz
                          						    	MAXs	R5._y__ = R5.yyyy
26: 14410505 026c6c6c c00005fd	      ALU:	ADDv	R5.x___ = R0.xxxx, -R5.xxxx
                          						    	MAXs	R5.__z_ = C509.xxxx
27: 14210505 006cc6b6 a005fd05	      ALU:	ADDv	R5.x___ = R5.xxxx, C509.zzzz
                          						    	MAXs	R5._y__ = R5.zzyy
28: 38110500 00b1b16c a305fd05	      ALU:	MINv	R0.x___ = R5.yyyy, C509.yyyy
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: 14070505 006cc06c e1050402	      ALU:	MULv	R5.xyz_ = R5.xxxx, R4.xyzz
2a: c8070505 001bc0c0 ee020504	      ALU:	CNDGTv	R5.xyz_ = R4.xyzz, R2.wwww, R5.xyzz
2b: 0c170103 006cc06c e1000501	      ALU:	MULv	R3.xyz_ = R0.xxxx, R5.xyzz
                          						    	MUL_PREVs	R1.x___ = R1.xxxx
2c: 15010505 001b6cb1 a0010302	      ALU:	ADDv	R5.x___ = R1.wwww, C259.xxxx CLAMP
2d: 0c270105 00c06cb1 e1030501	      ALU:	MULv	R5.xyz_ = R3.xyzz, R5.xxxx
                          						    	MUL_PREVs	R1._y__ = R1.yyyy
2e: 14070505 00c0b1c6 a105fe02	      ALU:	MULv	R5.xyz_ = R5.xyzz, C510.yyyy
      0000402f 00002200     	EXEC_END ADDR(0x2f) CNT(0x4) BOOL_ADDR(0x80)
2f: 0c470105 00c0c6c6 a1050201	      ALU:	MULv	R5.xyz_ = R5.xyzz, C258.zzzz
                          						    	MUL_PREVs	R1.__z_ = R1.zzzz
30: 14070505 00c0151b e1050005	      ALU:	MULv	R5.xyz_ = R5.xyzz, R0.yzww
31: c8070505 00c0b1c0 eb010605	      ALU:	MULADDv	R5.xyz_ = R5.xyzz, R1.xyzz, R6.yyyy
32: 0c878000 00c06c6c a1050406	      ALU:	MULv	export0.xyz_ = R5.xyzz, C260.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.xxxx	; COLOR
      00000000 00000000     	NOP
