//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $tranpcy;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $matvalue      c2       1
//   $fresnelterm   c3       1
//   $compressedhdr c4       1
//   $diff          s0       1
//   $tranpcy       s1       1
//   $lmap          s2       1
//   $bump          s3       1
//   $screenshadmap s4       1
//   $envmap        s5       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c4
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c3
defconst $invscreensize, float, vector, [1, 2], c1
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c2
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $tranpcy, sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=9
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=6

// interpolators: 6 interpolants: 6, components: 22
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xy
dcl_color_centroid r5

def c252, 0, 0, 0, 0
def c253, 2, 1, -127.5, 0.150000006
def c254, 0.5, 3.29999995, -1, 1.5
def c255, 0.143999994, 0.298999995, 0.587000012, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    6   */     mul r6.zw, r6_abs.xxxy, c1.xxxy
/*    7   */     tfetch2D r4.__x_, r3.zw, tf1, FetchValidOnly=false
/*    8   */     tfetch2D r6.yw__, r3.xy, tf3, FetchValidOnly=false
/*    9   */     tfetch2D r3.__w_, r6.zw, tf4, FetchValidOnly=false
/*   10   */     serialize
                 mad r8.xz, r6.xy, c253.x, c254.z
/*   11   */     mul r7.xy, r8.xz, r8.xz
               + mulsc r7.z, c254.x, r3.z
/*    1.0 */     exec
/*   12   */     add r6.xy, -r7.xz, c253.y
/*   13   */     add r4.w, r6.x, -r7.y
/*   14   */     mul r6.w, r1.w, r1.w
               + sqrt r8.w, r4_abs.w
/*   15   */     dp3 r7.y, r8.wxz, r2.zxy
/*   16   */     dp3 r7.x, r8.wxz, r0.zxy
               + muls r8.y, r0.ww
/*   17   */     dp3 r7.z, r8.wxz, r1.zxy
               + movs r5._, r7.x
/*    1.1 */     exec
/*   18   */     mul r6.z, r7.z, r1.w
               + muls_prev r8.x, r0.w
/*   19   */     add r8.xw, r8.yx, r6.wz
               + muls r8.z, r2.ww
/*   20   */     mad r8.y, r7.y, r2.w, r8.w
/*   21   */     add r8.xy, r8.xy, r8.zy
/*   22   */     add r7.w, -c3.x, c253.x
               + rsq r4.w, r8_abs.x
/*   23   */     mul r9.y, r4.w, r1.w
               + movs r5._, r4.w
/*    2.0 */     exec
/*   24   */     mul r9.z, r4.w, r2.w
               + muls_prev r9.x, r0.w
/*   25   */     dp3 r4.w, -r9.zxy, r7.yxz
/*   26   */     add r4.zw, -r4.zzzw, c253.y
/*   27   */     muls r6.z, r4.ww
/*   28   */     muls r8.z, r6.zz
/*   29   */     mul r7, r8.yyyz, r7
/*    2.1 */     exec
/*   30   */     add r1.y, -r7.z, r1.w
               + movs r5._, -r7.x
/*   31   */     add r1.z, -r7.y, r2.w
               + adds_prev r1.x, r0.w
/*   32   */     dp3 r0.x, r1.zxy, r1.zxy
/*   33   */     rsq r0.x, r0_abs.x
/*   34   */     mul r0.xyz, r1.xyz, r0.x
/*   35   */     cube r0, r0.zzxy, r0.yxz
/*    3.0 */     exec
/*   36   */     mov r1.z, r0.w
               + rcp r1.x, r0_abs.z
/*   37   */     mad r1.xy, r0.yx, r1.x, c254.w
/*   38   */     tfetch2D r0._xyz, r4.xy, tf2
/*   39   */     tfetchCube r8, r1.xyz, tf5
/*   40   */     tfetch2D r2, r3.xy, tf0
/*   41   */     serialize
                 add r1.xyz, r5.xyz, r5.xyz
               + movs r5._, r2.w
/*    3.1 */     exec
/*   42   */     mul r0.x, r8.w, c255.w
               + muls_prev r5.w, r5.w
/*   43   */     mul r9.xyz, r1.xyz, r2.xyz
               + mulsc r3.x, c0.x, r0.y
/*   44   */     sgt r1.w, c253.y, r8.w
               + mulsc r3.y, c0.x, r0.z
/*   45   */     add r5.x, r0.x, c254.x
               + mulsc r3.z, c0.x, r0.w
/*   46   */     dp3 r5.y, r9.zxy, c255.xyz
               + frcs r5.x, r5.x
/*   47   */     mul r2.xyz, r3.xyz, r2.xyz
               + movs r5.y, r5.y
/*    4.0 */     exec
/*   48   */     add r5.x, r0.x, -r5.x
               + movs r5.z, c253.w
/*   49   */     add r5.x, r5.x, c253.z
               + maxs r5.y, r5.yz
/*   50   */     min r0.x, r5.y, c253.y
               + exp r5.x, r5.x
/*   51   */     mul r5.xyz, r5.x, r8.xyz
               + movs r5._, r2.x
/*   52   */     cndgt r5.xyz, r1.w, r5.xyz, r8.xyz
/*   53   */     mul r3.xyz, r0.x, r5.xyz
               + muls_prev r1.x, r1.x
/*    4.1 */     exec
/*   54   */     add_sat r5.x, r7.w, c3.x
               + movs r5._, r2.y
/*   55   */     mul r5.xyz, r3.xyz, r5.x
               + muls_prev r1.y, r1.y
/*   56   */     mul r5.xyz, r5.xyz, c254.y
               + movs r5._, r2.z
/*   57   */     mul r5.xyz, r5.xyz, c2.z
               + muls_prev r1.z, r1.z
/*   58   */     mul r5.xyz, r5.xyz, r0.yzw
               + movs r5._, r5.w
/*   59   */     mad r5.xyz, r1.xyz, r6.y, r5.xyz
/*    5.0 */     exece
/*   60   */     mul oC0.xyz, r5.xyz, c4.x
               + muls_prev oC0.w, r4.z
/*    5.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x003f SamplingPattern 0x001f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xy
// [5] color0 r5.xyzw

