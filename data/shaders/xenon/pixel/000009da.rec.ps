      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 100080a1 1f1ffff8 00004000	      FETCH:	SAMPLE	R8.x___ = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: b0800007 00000083 e207070b	   (S)ALU:	ADD_CONST_0	R0.___w = C267.y, R2.w
07: 14080704 00bebe1b f0000003	      ALU:	DOT3v	R4.___w = R0.zxyy, R0.zxyy
08: 04480606 00b1b1c6 0103ff0b	      ALU:	MULv	R6.___w = C259.yyyy, C511.yyyy
                          						    	ADD_PREVs	R6.__z_ = C267.zzzz
09: c8040709 016cb11b ab080306	      ALU:	MULADDv	R9.__z_ = -R6.wwww, R8.xxxx, C259.yyyy
0a: 4c4c060a 04c6acc6 a0060a04	      ALU:	ADDv	R10.__zw = -R6.zzzz, C266.xxxy
                          						    	RECIP_IEEE	R6.__z_ = R4.zzzz
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: b8130a0c 00c6b043 c1060409	      ALU:	MULv	R12.xy__ = R6.zzzz, R4.xyyy
                          						    	SUB_CONST_0	R10.x___ = C265.x, R0.w
0c: 08140b06 001b6cc6 a0010b03	      ALU:	ADDv	R6.__z_ = R1.wwww, C267.xxxx
                          						    	MULs	R11.x___ = R3.zzzz
0d: b8230a08 04c6b083 80060809	      ALU:	ADDv	R8.xy__ = -R6.zzzz, C264.xyyy
                          						    	SUB_CONST_0	R10._y__ = C265.y, R0.w
0e: 588c0806 0071711b e1080884	      ALU:	MULv	R6.__zw = R8.yyyx, R8.yyyx
                          						    	RECIPSQ_IEEE	R8.___w = abs(R4).wwww
0f: c8040706 001919c6 f10a0a06	      ALU:	DOT2ADDv	R6.__z_ = R6.zzzz, R10.ywww, R10.ywww
10: c8080706 00c4c41b f10a0a06	      ALU:	DOT2ADDv	R6.___w = R6.wwww, R10.xzzz, R10.xzzz
      05006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 58140908 001b1b1b a1080386	      ALU:	MULv	R8.__z_ = R8.wwww, C259.wwww
                          						    	RECIPSQ_IEEE	R9.x___ = abs(R6).wwww
12: 582c0908 0006acc6 e1080086	      ALU:	MULv	R8.__zw = R8.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R9._y__ = abs(R6).zzzz
13: c80f0708 0000c000 e1080900	      ALU:	MULv	R8 = R8, R9.xyzz
14: c80c070c 0006ac00 e0080500	      ALU:	ADDv	R12.__zw = R8.zzzw, R5.xxxy
15: b82880a1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R8.__x_ = R5.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 1048b0a1 1f1ff447 00004000	      FETCH:	SAMPLE	R11._xyz = R5.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 103800c1 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R6.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: b8185181 1f1ff443 00004000	      FETCH:	SAMPLE	R5.wxyz = R12.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 10586181 1f1fffd8 00004000	      FETCH:	SAMPLE	R6.xw__ = R12.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: c8080704 006c6cc6 0b01ffff	   (S)ALU:	MULADDv	R4.___w = C511.zzzz, C257.xxxx, C511.xxxx
1b: 08810905 006c1bc6 e1050702	      ALU:	MULv	R5.x___ = R5.xxxx, R7.wwww
                          						    	MULs	R9.___w = R2.zzzz
1c: a8210400 00c61b41 8504ff00	      ALU:	SETGTv	R0.x___ = R4.zzzz, C511.wwww
                          						    	MUL_CONST_0	R4._y__ = C256.x, R0.y
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: c8010704 00c6c61b eb010109	      ALU:	MULADDv	R4.x___ = R9.wwww, R1.zzzz, R1.zzzz
1e: a8480404 001b6c42 81040200	      ALU:	MULv	R4.___w = R4.wwww, C258.xxxx
                          						    	MUL_CONST_0	R4.__z_ = C256.x, R0.z
1f: a88e040b 001b0143 c1040b00	      ALU:	MULv	R11._yzw = R4.wwww, R11.yyzw
                          						    	MUL_CONST_0	R4.___w = C256.x, R0.w
20: 082f0004 00000061 e0040b06	      ALU:	ADDv	R4 = R4, R11
                          						    	MULs	R0._y__ = R6.yyxx
21: 58210606 00b16c6c e1000084	      ALU:	MULv	R6.x___ = R0.yyyy, R0.xxxx
                          						    	RECIPSQ_IEEE	R6._y__ = abs(R4).xxxx
22: 40140100 00b1c61b e1060186	      ALU:	MULv	R0.__z_ = R6.yyyy, R1.zzzz
                          						    	LOG_IEEE	R1.x___ = abs(R6).wwww
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: 40420101 00b1c6c6 e1060286	      ALU:	MULv	R1._y__ = R6.yyyy, R2.zzzz
                          						    	LOG_IEEE	R1.__z_ = abs(R6).zzzz
24: 140b0700 00c0c0b1 e0070706	      ALU:	ADDv	R0.xy_w = R7.xyzz, R7.xyzz
25: 0c130107 00c4c4c6 a1010403	      ALU:	MULv	R7.xy__ = R1.xzzz, C260.xzzz
                          						    	MUL_PREVs	R1.x___ = R3.zzzz
26: 381f0702 000dad6c e10a0907	      ALU:	MULv	R2 = R10.yxzw, R9.yxxy
                          						    	EXP_IEEE	R7.x___ = R7.xxxx
27: 382f0701 002270b1 e1020107	      ALU:	MULv	R1 = R2.zyxw, R1.xyyx
                          						    	EXP_IEEE	R7._y__ = R7.yyyy
28: c8030702 00b0c6c5 eb080001	      ALU:	MULADDv	R2.xy__ = R1.yzzz, R8.xyyy, R0.zzzz
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c9030708 00b01900 a1070400	      ALU:	MULv	R8.xy__ = R7.xyyy, C260.ywww CLAMP
2a: c8070707 04cdc600 a008ff00	      ALU:	ADDv	R7.xyz_ = -R8.yxzz, C511.zzzz
2b: ad260601 00616b84 e0020107	      ALU:	ADDv	R1._yz_ = R2.yyxx, R1.wwxx CLAMP
                          						    	MUL_CONST_1	R6._y__ = C263.y, R7.x
2c: c8090701 00b0b200 e1060100	      ALU:	MULv	R1.x__w = R6.xyyy, R1.zyyy
2d: c8030707 006db000 e1010700	      ALU:	MULv	R7.xy__ = R1.yxxx, R7.xyyy
2e: c8040700 00b16c1b ab070701	      ALU:	MULADDv	R0.__z_ = R1.wwww, R7.yyyy, C263.xxxx
      0000602f 00002200     	EXEC_END ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: ac170201 00101545 e1000505	      ALU:	MULv	R1.xyz_ = R0.xyww, R5.yzww
                          						    	MUL_CONST_1	R2.x___ = C261.x, R7.y
30: ac2c0202 0071ac84 a1070605	      ALU:	MULv	R2.__zw = R7.yyyx, C262.xxxy
                          						    	MUL_CONST_1	R2._y__ = C261.y, R7.x
31: c8030700 00c41900 e0020200	      ALU:	ADDv	R0.xy__ = R2.xzzz, R2.ywww
32: 14070700 00c0c06c e1010005	      ALU:	MULv	R0.xyz_ = R1.xyzz, R0.xyzz
33: c8070700 00c015c0 eb010400	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R4.yzww
34: 0c878000 00c06cc6 a1000c07	      ALU:	MULv	export0.xyz_ = R0.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R7.zzzz	; COLOR
      00000000 00000000     	NOP
