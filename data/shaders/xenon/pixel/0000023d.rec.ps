      09556007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: 1028a0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: b81890a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R5.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 1048b0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R11.xyz_ = R5.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 103880a1 1f1fffd9 00004000	      FETCH:	SAMPLE	R8.yw__ = R5.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 100850a1 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 14080603 00bebe6c d0030301	   (S)ALU:	DOT3v	R3.___w = R3.zxyy, R3.zxyy
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: 0c470607 006262b1 c00606fd	      ALU:	ADDv	R7.xyz_ = R6.zyxx, R6.zyxx
                          						    	MUL_PREVs	R6.__z_ = C509.yyyy
0e: 14070607 0065cd6c c1070506	      ALU:	MULv	R7.xyz_ = R7.yzxx, R5.yxzz
0f: c8030605 00b01bc6 8b08fefe	      ALU:	MULADDv	R5.xy__ = C510.zzzz, R8.xyyy, C510.wwww
10: 0c270608 00621bb1 810bfdfd	      ALU:	MULv	R8.xyz_ = R11.zyxx, C509.wwww
                          						    	MUL_PREVs	R6._y__ = C509.yyyy
11: 58810306 0062c01b b00bff83	      ALU:	DOT3v	R6.x___ = R11.zyxx, C511.xyzz
                          						    	RECIPSQ_IEEE	R3.___w = abs(R3).wwww
12: 14070603 001bc0b1 e1030306	      ALU:	MULv	R3.xyz_ = R3.wwww, R3.xyzz
      00006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: 0c170608 00c0626c e1080906	      ALU:	MULv	R8.xyz_ = R8.xyzz, R9.zyxx
                          						    	MUL_PREVs	R6.x___ = R6.xxxx
14: c8020606 046d6db1 d10505fe	      ALU:	DOT2ADDv	R6._y__ = C510.yyyy, -R5.yxxx, R5.yxxx
15: a0470508 00c06cb1 a108fd86	      ALU:	MULv	R8.xyz_ = R8.xyzz, C509.xxxx
                          						    	SQRT_IEEE	R5.__z_ = abs(R6).yyyy
16: b0110600 00bebe84 f00500fe	      ALU:	DOT3v	R0.x___ = R5.zxyy, R0.zxyy
                          						    	ADD_CONST_0	R6.x___ = C510.y, R6.x
17: b0220600 00bebe86 f00501fe	      ALU:	DOT3v	R0._y__ = R5.zxyy, R1.zxyy
                          						    	ADD_CONST_0	R6._y__ = C510.y, R6.z
18: a9140100 00bebe45 f0030502	      ALU:	DOT3v	R0.__z_ = R3.zxyy, R5.zxyy CLAMP
                          						    	MUL_CONST_0	R1.x___ = C258.x, R6.y
      00006019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 40820a01 006c6cc6 a206fe00	      ALU:	MAXv	R1._y__ = R6.xxxx, C510.xxxx
                          						    	LOG_IEEE	R10.___w = R0.zzzz
1a: 161f0603 00ac00c6 e1010a04	      ALU:	MULv	R3 = R1.xxxy, R10
                          						    	MAXs	R6.x___ = R4.zzzz CLAMP
1b: c8070603 00c06cc0 ab090003	      ALU:	MULADDv	R3.xyz_ = R3.xyzz, R9.xyzz, C256.xxxx
1c: 38140100 00bebe1b f0050203	      ALU:	DOT3v	R0.__z_ = R5.zxyy, R2.zxyy
                          						    	EXP_IEEE	R1.x___ = R3.wwww
1d: 14070601 00c06c1b e1080105	      ALU:	MULv	R1.xyz_ = R8.xyzz, R1.xxxx
1e: 0c870601 00c0621b a1010306	      ALU:	MULv	R1.xyz_ = R1.xyzz, C259.zyxx
                          						    	MUL_PREVs	R6.___w = R6.wwww
      0000201f 00001000     	EXEC ADDR(0x1f) CNT(0x2)
1f: 70070601 00c06c6c 81010405	      ALU:	MULv	R1.xyz_ = R1.xyzz, C260.xxxx
20: c8070601 00c0cd65 eb070301	      ALU:	MULADDv	R1.xyz_ = R1.yzxx, R7.xyzz, R3.yxzz
      00006021 00005600     	COND_PRED_EXEC ADDR(0x21) CNT(0x6) BOOL_ADDR(0x80) COND(1)
21: c8020606 186c6c00 21040300	      ALU:	MULv	R6._y__ = C260.xxxx, C259.xxxx COND(1)
22: c80d0603 1aac6eb1 6cfe0404	      ALU:	CNDEv	R3.x_zw = R4.yyyy, C510.xxxy, -R4.zxxx COND(1)
23: 17420603 19bebec6 f0050404	      ALU:	DOT3v	R3._y__ = R5.zxyy, R4.zxyy CLAMP COND(1)
                          						    	MAXs	R6.__z_ = -R4.zzzz CLAMP
24: 15010603 18be14b1 f0050303	      ALU:	DOT3v	R3.x___ = R5.zxyy, R3.xzww CLAMP COND(1)
25: 04140606 1b6cc66c e0030606	      ALU:	ADDv	R6.__z_ = R3.xxxx, -R6.zzzz COND(1)
                          						    	ADD_PREVs	R6.x___ = -R6.xxxx
26: c8010606 18c6c66c ab06fd06	      ALU:	MULADDv	R6.x___ = R6.xxxx, R6.zzzz, C509.zzzz COND(1)
      00005027 00005600     	COND_PRED_EXEC ADDR(0x27) CNT(0x5) BOOL_ADDR(0x80) COND(1)
27: c8020606 18b16c00 e1060600	      ALU:	MULv	R6._y__ = R6.yyyy, R6.xxxx COND(1)
28: c8090603 186d1b00 a106ff00	      ALU:	MULv	R3.x__w = R6.yxxx, C511.wwww COND(1)
29: c8030606 181bc500 a1030300	      ALU:	MULv	R6.xy__ = R3.wwww, C259.yzzz COND(1)
2a: c8060603 18616c00 a1060400	      ALU:	MULv	R3._yz_ = R6.yyxx, C260.xxxx COND(1)
2b: c8070601 18c0be00 e0010300	      ALU:	ADDv	R1.xyz_ = R1.xyzz, R3.zxyy COND(1)
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      0000602c 00001200     	EXEC ADDR(0x2c) CNT(0x6) BOOL_ADDR(0x80)
2c: b0120606 001bb143 80010e0e	      ALU:	ADDv	R6._y__ = R1.wwww, C270.yyyy
                          						    	ADD_CONST_0	R6.x___ = C270.x, R0.w
2d: b0430604 04b1b0c3 a0060c0e	      ALU:	ADDv	R4.xy__ = -R6.yyyy, C268.xyyy
                          						    	ADD_CONST_0	R6.__z_ = C270.z, R2.w
2e: b84c0402 046cac46 a0060b0d	      ALU:	ADDv	R2.__zw = -R6.xxxx, C267.xxxy
                          						    	SUB_CONST_0	R4.__z_ = C269.x, R6.z
2f: b8880400 00bebe86 f000000d	      ALU:	DOT3v	R0.___w = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R4.___w = C269.y, R6.z
30: 58430606 00c7c71b e1020280	      ALU:	MULv	R6.xy__ = R2.wzzz, R2.wzzz
                          						    	RECIPSQ_IEEE	R6.__z_ = abs(R0).wwww
31: c8010606 0019196c f1040406	      ALU:	DOT2ADDv	R6.x___ = R6.xxxx, R4.ywww, R4.ywww
      00006032 00001200     	EXEC ADDR(0x32) CNT(0x6) BOOL_ADDR(0x80)
32: c8020606 00c4c4b1 f1040406	      ALU:	DOT2ADDv	R6._y__ = R6.yyyy, R4.xzzz, R4.xzzz
33: 58100206 000000b1 e2060686	      ALU:	RECIPSQ_IEEE	R2.x___ = abs(R6).yyyy
34: 58200206 0000006c e2060686	      ALU:	RECIPSQ_IEEE	R2._y__ = abs(R6).xxxx
35: 40200606 000000b1 e2060686	      ALU:	LOG_IEEE	R6._y__ = abs(R6).yyyy
36: 40100606 0000006c e2060686	      ALU:	LOG_IEEE	R6.x___ = abs(R6).xxxx
37: a84d0600 0084c645 e1000607	      ALU:	MULv	R0.x_zw = R0.xzzy, R6.zzzz
                          						    	MUL_CONST_0	R6.__z_ = C263.x, R6.y
      00006038 00001200     	EXEC ADDR(0x38) CNT(0x6) BOOL_ADDR(0x80)
38: a8230603 001ab0c4 e1020207	      ALU:	MULv	R3.xy__ = R2.zwww, R2.xyyy
                          						    	MUL_CONST_0	R6._y__ = C263.z, R6.x
39: 381f0602 000dadc6 e1040206	      ALU:	MULv	R2 = R4.yxzw, R2.yxxy
                          						    	EXP_IEEE	R6.x___ = R6.zzzz
3a: 38230600 00b06cb1 e1030006	      ALU:	MULv	R0.xy__ = R3.xyyy, R0.xxxx
                          						    	EXP_IEEE	R6._y__ = R6.yyyy
3b: c9020600 0018c7b1 f1020000	      ALU:	DOT2ADDv	R0._y__ = R0.yyyy, R2.xwww, R0.wzzz CLAMP
3c: c9010600 00c5c76c f1020000	      ALU:	DOT2ADDv	R0.x___ = R0.xxxx, R2.yzzz, R0.wzzz CLAMP
3d: c9030606 00b01900 a1060700	      ALU:	MULv	R6.xy__ = R6.xyyy, C263.ywww CLAMP
      0000603e 00001200     	EXEC ADDR(0x3e) CNT(0x6) BOOL_ADDR(0x80)
3e: c8030606 04b0b100 a006fe00	      ALU:	ADDv	R6.xy__ = -R6.xyyy, C510.yyyy
3f: c80c0600 00acac00 a1060a00	      ALU:	MULv	R0.__zw = R6.xxxy, C266.xxxy
40: c8030606 00b0b000 e1000600	      ALU:	MULv	R6.xy__ = R0.xyyy, R6.xyyy
41: c8040606 001ab06c d10000fe	      ALU:	DOT2ADDv	R6.__z_ = C510.xxxx, R0.zwww, R0.xyyy
42: c8030600 00b0b000 a1060900	      ALU:	MULv	R0.xy__ = R6.xyyy, C265.xyyy
43: c80c0600 00acac00 a1060800	      ALU:	MULv	R0.__zw = R6.xxxy, C264.xxxy
      00004044 00002200     	EXEC_END ADDR(0x44) CNT(0x4) BOOL_ADDR(0x80)
44: c8030606 00c41900 e0000000	      ALU:	ADDv	R6.xy__ = R0.xzzz, R0.ywww
45: c8070606 00bebebe eb070601	      ALU:	MULADDv	R6.xyz_ = R1.zxyy, R7.zxyy, R6.zxyy
46: c8070606 00626c00 a1060f00	      ALU:	MULv	R6.xyz_ = R6.zyxx, C271.xxxx
47: c80f8000 00000000 e2060600	      ALU:	MAXv	export0 = R6, R6	; COLOR
      00000000 00000000     	NOP
