      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096008 00001200     	EXEC ADDR(0x8) CNT(0x6) BOOL_ADDR(0x80)
08: 10211081 1f1ffe88 00004000	      FETCH:	SAMPLE	R17.xyz_ = R4.xyx CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 08880709 071b1b1b e1000002	   (S)ALU:	MULv	R9.___w = -R0.wwww, -R0.wwww
                          						    	MULs	R7.___w = -R2.wwww
0a: 08840803 016c1b1b 2108ff01	      ALU:	MULv	R3.__z_ = C264.xxxx, C511.wwww
                          						    	MULs	R8.___w = -R1.wwww
0b: 08170709 00161ac6 e1000002	      ALU:	MULv	R9.xyz_ = R0.zzww, R0.zwww
                          						    	MULs	R7.x___ = R2.zzzz
0c: 08270708 00161acb e1010102	      ALU:	MULv	R8.xyz_ = R1.zzww, R1.zwww
                          						    	MULs	R7._y__ = R2.wwzz
0d: 084f0708 0034341b e0090802	      ALU:	ADDv	R8 = R9.xzyw, R8.xzyw
                          						    	MULs	R7.__z_ = R2.wwww
      0000600e 00001200     	EXEC ADDR(0xe) CNT(0x6) BOOL_ADDR(0x80)
0e: c80f0508 00003400 e0080700	      ALU:	ADDv	R8 = R8, R7.xzyw
0f: 58480706 00bec0b1 b011fe88	      ALU:	DOT3v	R6.___w = R17.zxyy, C510.xyzz
                          						    	RECIPSQ_IEEE	R7.__z_ = abs(R8).yyyy
10: 58810707 00c6c66c e0080888	      ALU:	ADDv	R7.x___ = R8.zzzz, R8.zzzz
                          						    	RECIPSQ_IEEE	R7.___w = abs(R8).xxxx
11: c8070508 0014ca00 e1070000	      ALU:	MULv	R8.xyz_ = R7.xzww, R0.zwzz
12: c8070509 00cf1600 e1070100	      ALU:	MULv	R9.xyz_ = R7.wxzz, R1.zzww
13: c8020507 04b11b00 e0090100	      ALU:	ADDv	R7._y__ = -R9.yyyy, R1.wwww
      00006014 00001200     	EXEC ADDR(0x14) CNT(0x6) BOOL_ADDR(0x80)
14: 140d050e 0104da6c e1070208	      ALU:	MULv	R14.x_zw = R7.xzzw, R2.zwwz
15: 04140707 046c1b1b e00e0200	      ALU:	ADDv	R7.__z_ = -R14.xxxx, R2.wwww
                          						    	ADD_PREVs	R7.x___ = R0.wwww
16: c8010501 00bebe00 f0070700	      ALU:	DOT3v	R1.x___ = R7.zxyy, R7.zxyy
17: 5811010a 00c61b6c e1030681	      ALU:	MULv	R10.x___ = R3.zzzz, R6.wwww
                          						    	RECIPSQ_IEEE	R1.x___ = abs(R1).xxxx
18: c8070507 00c06c00 e1070100	      ALU:	MULv	R7.xyz_ = R7.xyzz, R1.xxxx
19: c80f0507 00a6cd00 f2070700	      ALU:	CUBEv	R7 = R7.zzxy, R7.yxzz
      0540601a 00001200     	EXEC ADDR(0x1a) CNT(0x6) BOOL_ADDR(0x80)
1a: 4c14010d 001b1bc6 e2070787	      ALU:	MAXv	R13.__z_ = R7.wwww, R7.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R7).zzzz
1b: c806050a 00616c00 e1070100	      ALU:	MULv	R10._yz_ = R7.yyxx, R1.xxxx
1c: c80b050d 00656100 a00afd00	      ALU:	ADDv	R13.xy_w = R10.yzxx, C509.yyxx
1d: b8181081 1f1ffff8 00004000	      FETCH:	SAMPLE	R1.x___ = R4.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1e: 9038c1a1 1f1ff688 0000c000	      FETCH:	SAMPLE	R12.xyzw = R13.xyz CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1f: 10084081 1f1ff611 00004000	      FETCH:	SAMPLE	R4.yzxw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026020 00001200     	EXEC ADDR(0x20) CNT(0x6) BOOL_ADDR(0x80)
20: c808050a 046c6c00 2009fc00	   (S)ALU:	ADDv	R10.___w = -C265.xxxx, C508.xxxx
21: 14010507 001bc61b a0020701	      ALU:	ADDv	R7.x___ = R2.wwww, C263.zzzz
22: 04480306 001b6cb1 80000707	      ALU:	ADDv	R6.___w = R0.wwww, C263.xxxx
                          						    	ADD_PREVs	R3.__z_ = C263.yyyy
23: b817100a 00c0c047 e0050504	      ALU:	ADDv	R10.xyz_ = R5.xyzz, R5.xyzz
                          						    	SUB_CONST_0	R16.x___ = C260.x, R6.w
24: b82c1010 046cac87 a0070604	      ALU:	ADDv	R16.__zw = -R7.xxxx, C262.xxxy
                          						    	SUB_CONST_0	R16._y__ = C260.y, R6.w
25: bc1e0f0b 00fc6c42 200b0005	      ALU:	ADDv	R11._yzw = C267.xxyz, C256.xxxx
                          						    	SUB_CONST_1	R15.x___ = C261.x, R3.z
      00006026 00001200     	EXEC ADDR(0x26) CNT(0x6) BOOL_ADDR(0x80)
26: bc210f00 001b1b82 a10cfe05	      ALU:	MULv	R0.x___ = R12.wwww, C510.wwww
                          						    	SUB_CONST_1	R15._y__ = C261.y, R3.z
27: 14270007 00c0b1c6 a111fc04	      ALU:	MULv	R7.xyz_ = R17.xyzz, C508.yyyy
                          						    	MAXs	R0._y__ = R4.zzzz
28: b08a0709 00bcbc80 c10f0ffc	      ALU:	MULv	R9._y_w = R15.xxyy, R15.xxyy
                          						    	ADD_CONST_0	R7.___w = C508.y, R0.x
29: c8080506 0019191b f1101009	      ALU:	DOT2ADDv	R6.___w = R9.wwww, R16.ywww, R16.ywww
2a: c8080509 00c4c4b1 f1101009	      ALU:	DOT2ADDv	R9.___w = R9.yyyy, R16.xzzz, R16.xzzz
2b: 58180b07 001b001b e8070089	      ALU:	FRACv	R7.___w = R7.wwww
                          						    	RECIPSQ_IEEE	R11.x___ = abs(R9).wwww
      0000602c 00001200     	EXEC ADDR(0x2c) CNT(0x6) BOOL_ADDR(0x80)
2c: 58810800 026c1b1b e0000788	      ALU:	ADDv	R0.x___ = R0.xxxx, -R7.wwww
                          						    	RECIPSQ_IEEE	R8.___w = abs(R8).wwww
2d: b0870706 0015c0c0 c00b06fc	      ALU:	ADDv	R6.xyz_ = R11.yzww, R6.xyzz
                          						    	ADD_CONST_0	R7.___w = C508.z, R0.x
2e: 58280b0b 021b1b1b e1080086	      ALU:	MULv	R11.___w = R8.wwww, -R0.wwww
                          						    	RECIPSQ_IEEE	R11._y__ = abs(R6).wwww
2f: 14080506 006c1b1b 65fd0c08	      ALU:	SETGTv	R6.___w = C509.xxxx, R12.wwww
30: 0c4f0b10 0100a01b e1100b02	      ALU:	MULv	R16 = R16, R11.xyxy
                          						    	MUL_PREVs	R11.__z_ = -R2.wwww
31: 3883070e 00b0b01b e10f0b07	      ALU:	MULv	R14.xy__ = R15.xyyy, R11.xyyy
                          						    	EXP_IEEE	R7.___w = R7.wwww
      00006032 00001200     	EXEC ADDR(0x32) CNT(0x6) BOOL_ADDR(0x80)
32: c803050b 021b1bb0 eb08010e	      ALU:	MULADDv	R11.xy__ = R14.xyyy, R8.wwww, -R1.wwww
33: 140f050f 01aa16c6 e0100b09	      ALU:	ADDv	R15 = R16.zwxy, R11.zzww
34: 0c270111 001bc0c6 e1070c01	      ALU:	MULv	R17.xyz_ = R7.wwww, R12.xyzz
                          						    	MUL_PREVs	R1._y__ = R1.zzzz
35: c807050c 001bc0c0 ee06110c	      ALU:	CNDGTv	R12.xyz_ = R12.xyzz, R6.wwww, R17.xyzz
36: c804050b 04b1c6b1 eb080001	      ALU:	MULADDv	R11.__z_ = R1.yyyy, -R8.yyyy, R0.zzzz
37: a81c0000 00717141 c10b0bff	      ALU:	MULv	R0.__zw = R11.yyyx, R11.yyyx
                          						    	MUL_CONST_0	R0.x___ = C511.x, R0.y
      00006038 00001200     	EXEC ADDR(0x38) CNT(0x6) BOOL_ADDR(0x80)
38: c8040500 00b3b3c6 f10f0f00	      ALU:	DOT2ADDv	R0.__z_ = R0.zzzz, R15.wyyy, R15.wyyy
39: c8020500 006e6e1b f10f0f00	      ALU:	DOT2ADDv	R0._y__ = R0.wwww, R15.zxxx, R15.zxxx
3a: 5828000b 04c6c6b1 e10e0280	      ALU:	MULv	R11.___w = -R14.zzzz, R2.zzzz
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R0).yyyy
3b: 58430002 001a1bc6 e1100e80	      ALU:	MULv	R2.xy__ = R16.zwww, R14.wwww
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
3c: 14030508 00b0c6b1 e110080b	      ALU:	MULv	R8.xy__ = R16.xyyy, R8.zzzz
3d: 0c4f0e0f 0094c1c6 e10f0000	      ALU:	MULv	R15 = R15.xzwy, R0.yyzz
                          						    	MUL_PREVs	R14.__z_ = R0.zzzz
      0000603e 00001200     	EXEC ADDR(0x3e) CNT(0x6) BOOL_ADDR(0x80)
3e: 140c0502 002c1b6c e10f0e0b	      ALU:	MULv	R2.__zw = R15.xxxw, R14.wwww
3f: 0c8c0e08 00f1c6b1 e10f0800	      ALU:	MULv	R8.__zw = R15.yyyz, R8.zzzz
                          						    	MUL_PREVs	R14.___w = R0.yyyy
40: c80f0508 00dd6c0d eb0e0908	      ALU:	MULADDv	R8 = R8.yxzw, R14.yxwz, R9.xxxx
41: a94f0009 00342584 c00802ff	      ALU:	ADDv	R9 = R8.xzyw, R2.yzxw CLAMP
                          						    	MUL_CONST_0	R0.__z_ = C511.y, R4.x
42: a8880002 00c66cc5 810902ff	      ALU:	MULv	R2.___w = R9.zzzz, C258.xxxx
                          						    	MUL_CONST_0	R0.___w = C511.z, R4.y
43: 14270008 00c0bec6 e10a0409	      ALU:	MULv	R8.xyz_ = R10.xyzz, R4.zxyy
                          						    	MAXs	R0._y__ = R9.zzzz
      00006044 00001200     	EXEC ADDR(0x44) CNT(0x6) BOOL_ADDR(0x80)
44: 28140000 00cfbec6 f0000a09	      ALU:	DOT3v	R0.__z_ = R0.wxzz, R10.zxyy
                          						    	SETNEs	R0.x___ = R9.zzzz
45: 28860001 00111b6c a009fd09	      ALU:	ADDv	R1._yz_ = R9.yyww, C509.wwww
                          						    	SETNEs	R0.___w = R9.xxxx
46: 14160001 00c11c6c e1010009	      ALU:	MULv	R1._yz_ = R1.yyzz, R0.xxww
                          						    	MAXs	R0.x___ = R9.xxxx
47: 40220109 006cb1b1 a1090281	      ALU:	MULv	R9._y__ = R9.xxxx, C258.yyyy
                          						    	LOG_IEEE	R1._y__ = abs(R1).yyyy
48: 404c0109 00ec71c6 a1090381	      ALU:	MULv	R9.__zw = R9.xxxz, C259.yyyx
                          						    	LOG_IEEE	R1.__z_ = abs(R1).zzzz
49: a8160901 001bc180 c10d0101	      ALU:	MULv	R1._yz_ = R13.wwww, R1.yyzz
                          						    	MUL_CONST_0	R9.x___ = C257.y, R0.x
      0000604a 00001200     	EXEC ADDR(0x4a) CNT(0x6) BOOL_ADDR(0x80)
4a: 381f0b09 000071b1 e1090301	      ALU:	MULv	R9 = R9, R3.yyyx
                          						    	EXP_IEEE	R11.x___ = R1.yyyy
4b: 38240b0a 001bc6c6 e0090901	      ALU:	ADDv	R10.__z_ = R9.wwww, R9.zzzz
                          						    	EXP_IEEE	R11._y__ = R1.zzzz
4c: a84e0201 00767b41 c00b0b01	      ALU:	ADDv	R1._yzw = R11.zzyx, R11.wwyx
                          						    	MUL_CONST_0	R2.__z_ = C257.x, R0.y
4d: ac110b00 00c6b143 8200fe01	      ALU:	MAXv	R0.x___ = R0.zzzz, C510.yyyy
                          						    	MUL_CONST_1	R11.x___ = C257.x, R1.w
4e: ac2c0b0b 00dbac82 81010201	      ALU:	MULv	R11.__zw = R1.wwwz, C258.xxxy
                          						    	MUL_CONST_1	R11._y__ = C257.y, R1.z
4f: ac180200 006c6c43 8300fd03	      ALU:	MINv	R0.___w = R0.xxxx, C509.xxxx
                          						    	MUL_CONST_1	R2.x___ = C259.x, R1.w
      00006050 00001200     	EXEC ADDR(0x50) CNT(0x6) BOOL_ADDR(0x80)
50: ac230200 04b06c82 8001fd03	      ALU:	ADDv	R0.xy__ = -R1.xyyy, C509.xxxx
                          						    	MUL_CONST_1	R2._y__ = C259.y, R1.z
51: 084f0001 000060b1 e1020300	      ALU:	MULv	R1 = R2, R3.xyxx
                          						    	MULs	R0.__z_ = R0.yyyy
52: 00470902 001bc061 e1000c01	      ALU:	MULv	R2.xyz_ = R0.wwww, R12.xyzz
                          						    	ADDs	R9.__z_ = R1.yyxx
53: 088f0803 0034bcc6 e10b0300	      ALU:	MULv	R3 = R11.xzyw, R3.xxyy
                          						    	MULs	R8.___w = R0.zzzz
54: 0013090a 001ab066 e0010903	      ALU:	ADDv	R10.xy__ = R1.zwww, R9.xyyy
                          						    	ADDs	R9.x___ = R3.zzxx
55: 002f0901 000000bb e1080a03	      ALU:	MULv	R1 = R8, R10
                          						    	ADDs	R9._y__ = R3.wwyy
      00006056 00001200     	EXEC ADDR(0x56) CNT(0x6) BOOL_ADDR(0x80)
56: 14270003 00c0c01b e0090901	      ALU:	ADDv	R3.xyz_ = R9.xyzz, R9.xyzz
                          						    	MAXs	R0._y__ = R1.wwww
57: b2470003 00c0c041 c1030509	      ALU:	MULv	R3.xyz_ = R3.xyzz, R5.xyzz
                          						    	ADD_CONST_0	R0.__z_ = C265.x, R0.y CLAMP
58: 14070502 00c0c61b e1020004	      ALU:	MULv	R2.xyz_ = R2.xyzz, R0.zzzz
59: c8070501 00c0c0c0 eb030701	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R3.xyzz, R7.xyzz
5a: c8070501 00c0c0c0 eb080601	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R8.xyzz, R6.xyzz
5b: 0c870502 00c0c01b e1020705	      ALU:	MULv	R2.xyz_ = R2.xyzz, R7.xyzz
                          						    	MUL_PREVs	R5.___w = R5.wwww
      0000305c 00002200     	EXEC_END ADDR(0x5c) CNT(0x3) BOOL_ADDR(0x80)
5c: 14070505 00b4c61b a102fd05	      ALU:	MULv	R5.xyz_ = R2.xzyy, C509.zzzz
5d: c8070505 00b4c6c0 ab050801	      ALU:	MULADDv	R5.xyz_ = R1.xyzz, R5.xzyy, C264.zzzz
5e: 0c878000 00c06c6c a1050a00	      ALU:	MULv	export0.xyz_ = R5.xyzz, C266.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
