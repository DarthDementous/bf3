      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: c8030004 00b0b000 22080800	      ALU:	MAXv	R4.xy__ = C264.xyyy, C264.xyyy
06: 144c0104 00acac6c 020c0c0a	      ALU:	MAXv	R4.__zw = C268.xxxy, C268.xxxy
                          						    	MAXs	R1.__z_ = C266.xxxx
07: 14830101 00b0b0b1 0206060a	      ALU:	MAXv	R1.xy__ = C262.xyyy, C262.xyyy
                          						    	MAXs	R1.___w = C266.yyyy
08: 141c0503 00acac6c 02030305	      ALU:	MAXv	R3.__zw = C259.xxxy, C259.xxxy
                          						    	MAXs	R5.x___ = C261.xxxx
09: 142c0505 00acacb1 02010105	      ALU:	MAXv	R5.__zw = C257.xxxy, C257.xxxy
                          						    	MAXs	R5._y__ = C261.yyyy
0a: 14130306 00b0b06c 020e0e00	      ALU:	MAXv	R6.xy__ = C270.xyyy, C270.xyyy
                          						    	MAXs	R3.x___ = C256.xxxx
      0400600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 142c0300 00acacb1 020f0f00	      ALU:	MAXv	R0.__zw = C271.xxxy, C271.xxxy
                          						    	MAXs	R3._y__ = C256.yyyy
0c: 14430600 00b0b06c 0204040d	      ALU:	MAXv	R0.xy__ = C260.xyyy, C260.xyyy
                          						    	MAXs	R6.__z_ = C269.xxxx
0d: 14830607 00b0b0b1 020b0b0d	      ALU:	MAXv	R7.xy__ = C267.xyyy, C267.xyyy
                          						    	MAXs	R6.___w = C269.yyyy
0e: 144c0207 00acac6c 02070709	      ALU:	MAXv	R7.__zw = C263.xxxy, C263.xxxy
                          						    	MAXs	R2.__z_ = C265.xxxx
0f: 14830202 00b0b0b1 02020209	      ALU:	MAXv	R2.xy__ = C258.xyyy, C258.xyyy
                          						    	MAXs	R2.___w = C265.yyyy
10: 10082041 1f1ffff8 00004000	      FETCH:	SAMPLE	R2.x___ = R2.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      05556011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: b80820e1 1f1fffc7 00004000	      FETCH:	SAMPLE	R2._x__ = R7.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: b8082041 1f1ffe3f 00004000	      FETCH:	SAMPLE	R2.__x_ = R2.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
13: 100820e1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R2.___x = R7.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: 10080001 1f1ffff8 00004000	      FETCH:	SAMPLE	R0.x___ = R0.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: b80800c1 1f1fffc7 00004000	      FETCH:	SAMPLE	R0._x__ = R6.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: b8080001 1f1ffe3f 00004000	      FETCH:	SAMPLE	R0.__x_ = R0.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      05556017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 100800c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R6.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: 10083061 1f1ffff8 00004000	      FETCH:	SAMPLE	R3.x___ = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: b80830a1 1f1fffc7 00004000	      FETCH:	SAMPLE	R3._x__ = R5.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: b8083061 1f1ffe3f 00004000	      FETCH:	SAMPLE	R3.__x_ = R3.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: 100830a1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R3.___x = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1c: 10081021 1f1ffff8 00004000	      FETCH:	SAMPLE	R1.x___ = R1.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0095601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: b8081081 1f1fffc7 00004000	      FETCH:	SAMPLE	R1._x__ = R4.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1e: b8081021 1f1ffe3f 00004000	      FETCH:	SAMPLE	R1.__x_ = R1.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1f: 10081081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R1.___x = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
20: c8010004 006cb100 2110ff00	   (S)ALU:	MULv	R4.x___ = C272.xxxx, C511.yyyy
21: c80f0001 006c0d00 e1040100	      ALU:	MULv	R1 = R4.xxxx, R1.yxzw
22: c80f0003 006cff00 e1040300	      ALU:	MULv	R3 = R4.xxxx, R3.wxyz
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: 382f0400 006c3eb1 e1040003	      ALU:	MULv	R0 = R4.xxxx, R0.zxyw
                          						    	EXP_IEEE	R4._y__ = R3.yyyy
24: 381f0402 006cffc6 e1040203	      ALU:	MULv	R2 = R4.xxxx, R2.wxyz
                          						    	EXP_IEEE	R4.x___ = R3.zzzz
25: 38120404 00b16cb1 e0040402	      ALU:	ADDv	R4._y__ = R4.yyyy, R4.xxxx
                          						    	EXP_IEEE	R4.x___ = R2.yyyy
26: 38120404 00b16c1b e0040403	      ALU:	ADDv	R4._y__ = R4.yyyy, R4.xxxx
                          						    	EXP_IEEE	R4.x___ = R3.wwww
27: 38120404 00b16cb1 e0040400	      ALU:	ADDv	R4._y__ = R4.yyyy, R4.xxxx
                          						    	EXP_IEEE	R4.x___ = R0.yyyy
28: 38120303 00b16c6c e0040403	      ALU:	ADDv	R3._y__ = R4.yyyy, R4.xxxx
                          						    	EXP_IEEE	R3.x___ = R3.xxxx
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: 38120303 00b16cb1 e0030301	      ALU:	ADDv	R3._y__ = R3.yyyy, R3.xxxx
                          						    	EXP_IEEE	R3.x___ = R1.yyyy
2a: 38120303 00b16cc6 e0030302	      ALU:	ADDv	R3._y__ = R3.yyyy, R3.xxxx
                          						    	EXP_IEEE	R3.x___ = R2.zzzz
2b: 38120303 00b16c1b e0030301	      ALU:	ADDv	R3._y__ = R3.yyyy, R3.xxxx
                          						    	EXP_IEEE	R3.x___ = R1.wwww
2c: 38120303 00b16c1b e0030302	      ALU:	ADDv	R3._y__ = R3.yyyy, R3.xxxx
                          						    	EXP_IEEE	R3.x___ = R2.wwww
2d: 38120303 00b16cc6 e0030301	      ALU:	ADDv	R3._y__ = R3.yyyy, R3.xxxx
                          						    	EXP_IEEE	R3.x___ = R1.zzzz
2e: 38120202 00b16c6c e0030302	      ALU:	ADDv	R2._y__ = R3.yyyy, R3.xxxx
                          						    	EXP_IEEE	R2.x___ = R2.xxxx
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: 38120101 00b16c6c e0020201	      ALU:	ADDv	R1._y__ = R2.yyyy, R2.xxxx
                          						    	EXP_IEEE	R1.x___ = R1.xxxx
30: 38120101 00b16cc6 e0010100	      ALU:	ADDv	R1._y__ = R1.yyyy, R1.xxxx
                          						    	EXP_IEEE	R1.x___ = R0.zzzz
31: 38120101 00b16c1b e0010100	      ALU:	ADDv	R1._y__ = R1.yyyy, R1.xxxx
                          						    	EXP_IEEE	R1.x___ = R0.wwww
32: 38120000 00b16c6c e0010100	      ALU:	ADDv	R0._y__ = R1.yyyy, R1.xxxx
                          						    	EXP_IEEE	R0.x___ = R0.xxxx
33: c8020000 00b16c00 e0000000	      ALU:	ADDv	R0._y__ = R0.yyyy, R0.xxxx
34: a8100000 00000041 c20000ff	      ALU:	MUL_CONST_0	R0.x___ = C511.x, R0.y
      00003035 00002200     	EXEC_END ADDR(0x35) CNT(0x3) BOOL_ADDR(0x80)
35: 40100000 0000006c e2000080	      ALU:	LOG_IEEE	R0.x___ = abs(R0).xxxx
36: a8100000 00000080 c2000010	      ALU:	MUL_CONST_0	R0.x___ = C272.y, R0.x
37: 38f8c000 0000006c e2000000	      ALU:	MAXv	export0.___w = R0, R0	; COLOR
                          						    	EXP_IEEE	export0 = R0.xxxx	; COLOR
