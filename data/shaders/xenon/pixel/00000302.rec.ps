      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: c8070508 00ca1a00 e1020200	      ALU:	MULv	R8.xyz_ = R2.zwzz, R2.zwww
07: c8070508 00ca1ac0 eb010108	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R1.zwzz, R1.zwww
08: c80b0508 00cacb62 eb000008	      ALU:	MULADDv	R8.xy_w = R8.zyxx, R0.zwzz, R0.wwzz
09: 58810808 006c6c1b e0080888	      ALU:	ADDv	R8.x___ = R8.xxxx, R8.xxxx
                          						    	RECIPSQ_IEEE	R8.___w = abs(R8).wwww
0a: 58480806 001bc6b1 a0020788	      ALU:	ADDv	R6.___w = R2.wwww, C263.zzzz
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R8).yyyy
0b: c807050c 00cf1600 e1080000	      ALU:	MULv	R12.xyz_ = R8.wxzz, R0.zzww
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c80d050b 00d80600 e1080100	      ALU:	MULv	R11.x_zw = R8.xwwz, R1.zzzw
0d: c8020508 046c1b00 e00b0100	      ALU:	ADDv	R8._y__ = -R11.xxxx, R1.wwww
0e: 14070509 01cf16b1 e108020c	      ALU:	MULv	R9.xyz_ = R8.wxzz, R2.zzww
0f: 04140808 04b11b1b e0090200	      ALU:	ADDv	R8.__z_ = -R9.yyyy, R2.wwww
                          						    	ADD_PREVs	R8.x___ = R0.wwww
10: c8040504 00bebe00 f0080800	      ALU:	DOT3v	R4.__z_ = R8.zxyy, R8.zxyy
11: 58430400 00b0b0c6 a1870884	      ALU:	MULv	R0.xy__ = abs(R7).xyyy, C264.xyyy
                          						    	RECIPSQ_IEEE	R4.__z_ = abs(R4).zzzz
      05006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8070507 00c0c600 e1080400	      ALU:	MULv	R7.xyz_ = R8.xyzz, R4.zzzz
13: c80f0507 00a6cd00 f2070700	      ALU:	CUBEv	R7 = R7.zzxy, R7.yxzz
14: 4c440408 001b1bc6 e2070787	      ALU:	MAXv	R8.__z_ = R7.wwww, R7.wwww
                          						    	RECIP_IEEE	R4.__z_ = abs(R7).zzzz
15: c8030508 006dc6c6 cb0704fe	      ALU:	MULADDv	R8.xy__ = C510.zzzz, R7.yxxx, R4.zzzz
16: 90288101 1f1ff688 0000c000	      FETCH:	SAMPLE	R8.xyzw = R8.xyz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 10180001 1f1fffc1 00004000	      FETCH:	SAMPLE	R0.yx__ = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 10084081 1f1ff611 00004000	      FETCH:	SAMPLE	R4.yzxw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: c804050a 046c6c00 200bfe00	   (S)ALU:	ADDv	R10.__z_ = -C267.xxxx, C510.xxxx
1a: 14010507 001b6c1b a0000701	      ALU:	ADDv	R7.x___ = R0.wwww, C263.xxxx
1b: 044b050a 00c0c0b1 c0050507	      ALU:	ADDv	R10.xy_w = R5.xyzz, R5.xyzz
                          						    	ADD_PREVs	R5.__z_ = C263.yyyy
1c: a82c0c0d 046cac41 80070409	      ALU:	ADDv	R13.__zw = -R7.xxxx, C260.xxxy
                          						    	MUL_CONST_0	R12._y__ = C265.x, R0.y
1d: bc170d07 00c06c46 000d0005	      ALU:	ADDv	R7.xyz_ = C269.xyzz, C256.xxxx
                          						    	SUB_CONST_1	R13.x___ = C261.x, R5.z
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: bc210d05 001b1b86 8108ff05	      ALU:	MULv	R5.x___ = R8.wwww, C511.wwww
                          						    	SUB_CONST_1	R13._y__ = C261.y, R5.z
1f: 14270506 00c0c0c6 e0070604	      ALU:	ADDv	R6.xyz_ = R7.xyzz, R6.xyzz
                          						    	MAXs	R5._y__ = R4.zzzz
20: ac170e07 0010be45 c10a04ff	      ALU:	MULv	R7.xyz_ = R10.xyww, R4.zxyy
                          						    	MUL_CONST_1	R14.x___ = C511.x, R5.y
21: a8280e07 00c61b84 45fd08ff	      ALU:	SETGTv	R7.___w = C509.zzzz, R8.wwww
                          						    	MUL_CONST_0	R14._y__ = C511.y, R4.x
22: a8430e0b 041bb0c5 800606ff	      ALU:	ADDv	R11.xy__ = -R6.wwww, C262.xyyy
                          						    	MUL_CONST_0	R14.__z_ = C511.z, R4.y
23: b44a0509 00bcbc84 c10b0bfd	      ALU:	MULv	R9._y_w = R11.xxyy, R11.xxyy
                          						    	ADD_CONST_1	R5.__z_ = C509.y, R5.x
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 2c820605 00bebfc6 f00e0a05	      ALU:	DOT3v	R5._y__ = R14.zxyy, R10.wxyy
                          						    	FRACs	R6.___w = R5.zzzz
25: c8040505 00b3b31b f10d0d09	      ALU:	DOT2ADDv	R5.__z_ = R9.wwww, R13.wyyy, R13.wyyy
26: c8080509 006e6eb1 f10d0d09	      ALU:	DOT2ADDv	R9.___w = R9.yyyy, R13.zxxx, R13.zxxx
27: 58120a05 00b16c1b a205fd89	      ALU:	MAXv	R5._y__ = R5.yyyy, C509.xxxx
                          						    	RECIPSQ_IEEE	R10.x___ = abs(R9).wwww
28: 58210a05 026c1bc6 e0050685	      ALU:	ADDv	R5.x___ = R5.xxxx, -R6.wwww
                          						    	RECIPSQ_IEEE	R10._y__ = abs(R5).zzzz
29: b4180506 00b1c604 8305fdfd	      ALU:	MINv	R6.___w = R5.yyyy, C509.zzzz
                          						    	ADD_CONST_1	R5.x___ = C509.w, R5.x
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 140f050d 010dadc6 e10d0a0c	      ALU:	MULv	R13 = R13.yxzw, R10.yxxy
2b: 0c1c0c0c 00066cc6 e10d0c00	      ALU:	MULv	R12.__zw = R13.zzzw, R12.xxxx
                          						    	MUL_PREVs	R12.x___ = R0.zzzz
2c: 38160505 0061c66c e10d0b05	      ALU:	MULv	R5._yz_ = R13.yyxx, R11.zzzz
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
2d: 1407050d 016cc01b e105080b	      ALU:	MULv	R13.xyz_ = R5.xxxx, R8.xyzz
2e: c8070508 001bc0c0 ee070d08	      ALU:	CNDGTv	R8.xyz_ = R8.xyzz, R7.wwww, R13.xyzz
2f: 0c170508 001bc0c6 e1060801	      ALU:	MULv	R8.xyz_ = R6.wwww, R8.xyzz
                          						    	MUL_PREVs	R5.x___ = R1.zzzz
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: a8470c01 0014c080 c00c0509	      ALU:	ADDv	R1.xyz_ = R12.xzww, R5.xyzz
                          						    	MUL_CONST_0	R12.__z_ = C265.y, R0.x
31: c801050c 04c6c66c eb090201	      ALU:	MULADDv	R12.x___ = R1.xxxx, -R9.zzzz, R2.zzzz
32: c8070505 04c0c600 a00cfd00	      ALU:	ADDv	R5.xyz_ = -R12.xyzz, C509.zzzz
33: 08130500 00c5b06c e1050305	      ALU:	MULv	R0.xy__ = R5.yzzz, R3.xyyy
                          						    	MULs	R5.x___ = R5.xxxx
34: 08400b05 0000006c e2050505	      ALU:	MULs	R11.__z_ = R5.xxxx
35: c8070505 00c0c000 e10b0a00	      ALU:	MULv	R5.xyz_ = R11.xyzz, R10.xyzz
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: c9030505 00b06cc5 eb050901	      ALU:	MULADDv	R5.xy__ = R1.yzzz, R5.xyyy, R9.xxxx CLAMP
37: b6130005 006d6d46 c100050b	      ALU:	MULv	R5.xy__ = R0.yxxx, R5.yxxx
                          						    	ADD_CONST_1	R0.x___ = C267.x, R5.z CLAMP
38: c8070500 00c06c00 e1080000	      ALU:	MULv	R0.xyz_ = R8.xyzz, R0.xxxx
39: c8040501 006db01b 910503fe	      ALU:	DOT2ADDv	R1.__z_ = C510.wwww, R5.yxxx, C259.xyyy
3a: c8030502 006db000 a1050100	      ALU:	MULv	R2.xy__ = R5.yxxx, C257.xyyy
3b: ac470200 00b4b145 8100fe02	      ALU:	MULv	R0.xyz_ = R0.xzyy, C510.yyyy
                          						    	MUL_CONST_1	R2.__z_ = C258.x, R5.y
      0000503c 00002200     	EXEC_END ADDR(0x3c) CNT(0x5) BOOL_ADDR(0x80)
3c: ac870200 00b4c684 81000a02	      ALU:	MULv	R0.xyz_ = R0.xzyy, C266.zzzz
                          						    	MUL_CONST_1	R2.___w = C258.y, R5.x
3d: 14030501 00c4191b e0020204	      ALU:	ADDv	R1.xy__ = R2.xzzz, R2.ywww
3e: c8070500 00c0c0c0 eb070100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R7.xyzz, R1.xyzz
3f: c8070500 00c0c0c0 eb070600	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R7.xyzz, R6.xyzz
40: 0c878000 00c06c1b a1000c05	      ALU:	MULv	export0.xyz_ = R0.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
      00000000 00000000     	NOP
