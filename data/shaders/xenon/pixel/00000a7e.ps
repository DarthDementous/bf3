//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $ambientcolour;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float $lightningintensity;
//   sampler2D $lookuptex;
//   sampler2D $lookuptex2;
//   float4 $matvalue;
//   float $maxangle;
//   float $minangle;
//   float3 $reentrydir;
//   float $reentryenabled;
//   sampler2D $spec;
//   float $texblend;
//   float $texscroll;
//   float $texstretch;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   $lightningintensity c0       1
//   $incanglow          c1       1
//   $incanflag          c2       1
//   $compressedhdr      c3       1
//   $matvalue           c4       1
//   $fresnelterm        c5       1
//   $reentrydir         c6       1
//   $reentryenabled     c7       1
//   $texblend           c8       1
//   $texscroll          c9       1
//   $maxangle           c10      1
//   $minangle           c11      1
//   $texstretch         c12      1
//   $ambientcolour      c13      1
//   $diff               s0       1
//   $incan              s1       1
//   $spec               s2       1
//   $envmap             s3       1
//   $lookuptex          s4       1
//   $lookuptex2         s5       1
//

// Shader type: pixel 

xps_3_0
defconst $ambientcolour, float, vector, [1, 4], c13
defconst $compressedhdr, float, vector, [1, 2], c3
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s3
defconst $fresnelterm, float, scalar, [1, 1], c5
defconst $incan, sampler2d, object, [1, 1], s1
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $lightningintensity, float, scalar, [1, 1], c0
defconst $lookuptex, sampler2d, object, [1, 1], s4
defconst $lookuptex2, sampler2d, object, [1, 1], s5
defconst $matvalue, float, vector, [1, 4], c4
defconst $maxangle, float, scalar, [1, 1], c10
defconst $minangle, float, scalar, [1, 1], c11
defconst $reentrydir, float, vector, [1, 3], c6
defconst $reentryenabled, float, scalar, [1, 1], c7
defconst $spec, sampler2d, object, [1, 1], s2
defconst $texblend, float, scalar, [1, 1], c8
defconst $texscroll, float, scalar, [1, 1], c9
defconst $texstretch, float, scalar, [1, 1], c12
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=10
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 6 interpolants: 6, components: 21
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xy
dcl_color_centroid r4
dcl_color1_centroid r5.xyz

def c252, 2, 0.150000006, 0, 0
def c253, 0, 1.5, -0.5, 10
def c254, -127.5, 1, 3.29999995, 0.5
def c255, 0.298999995, 0.587000012, 0.143999994, 255


/*    0.0 */     exec
/*    9   */     mul r3.zw, r2.zzzw, r2.zzzw
/*   10   */     mad r3.zw, r1.zzzw, r1.zzzw, r3.zzzw
/*   11   */     mad r3.zw, r0.zzzw, r0.zzzw, r3.zzzw
/*   12   */     rsq r7.x, r3_abs.z
/*   13   */     rsq r8.z, r3_abs.w
/*   14   */     mul r7.yzw, r7.x, c6.xxyz
               + movs r4._, r8.z
/*    0.1 */     exec
/*   15   */     mul r8.xy, r7.xy, r0.z
               + muls_prev r3.z, r1.w
/*   16   */     mul r6.xy, r7.xz, r1.z
               + movs r4._, r8.z
/*   17   */     mul r6.zw, r7.xxxw, r2.z
               + muls_prev r3.w, r2.w
/*   18   */     mul r9.zw, -r3.zzzw, r6.xxxz
/*   19   */     mul r3.zw, r8.xxxz, r0.w
/*   20   */     mul r9.x, -r3.w, r8.x
/*    1.0 */     exec
/*   21   */     mad r4.w, r6.x, r1.w, r3.z
/*   22   */     mad r9.y, r6.z, r2.w, r4.w
/*   23   */     add r3.zw, r9.xxxy, r9.zzzy
/*   24   */     mad r7.z, -r8.x, r3.w, r0.w
/*   25   */     add r4.w, r3.z, r9.w
/*   26   */     mul r0.xy, r6.zx, r3.w
/*    1.1 */     exec
/*   27   */     add r7.x, -r0.x, r2.w
               + subsc r0.z, c254.y, r4.w
/*   28   */     mul r0.x, r0.z, r0.z
               + movs r4._, -r0.y
/*   29   */     mul r7.w, r0.x, r0.x
               + adds_prev r7.y, r1.w
/*   30   */     dp3 r0.y, r7.xzy, r7.xzy
/*   31   */     add r0.x, -c5.x, c252.x
               + rsq r0.y, r0_abs.y
/*   32   */     mul r1, r7, r0.yyyx
/*    2.0 */     exec
/*   33   */     cube r0, r1.xxzy, r1.yzx
/*   34   */     mov r2.z, r0.w
               + rcp r2.x, r0_abs.z
/*   35   */     mad r2.xy, r0.yx, r2.x, c253.y
/*   36   */     tfetch2D r7.xyz_, r3.xy, tf1
/*   37   */     tfetch2D r9.xyz_, r3.xy, tf0
/*   38   */     tfetch2D r10.x_yz, r3.xy, tf2
/*    2.1 */     exec
/*   39   */     tfetchCube r2, r2.xyz, tf3
/*   40   */     serialize
                 add r4.yzw, r4.zzyx, r4.zzyx
               + movs r4._, c1.x
/*   41   */     add r0.xyz, c13.zyx, c0.x
               + muls_prev r10.y, c253.w
/*   42   */     mul r1.xyz, r10.wzx, c254.w
               + movs r4.x, r2.w
/*   43   */     mul r10.xzw, r9.xyyz, c255.xyyz
               + mulsc r0.w, c255.w, r4.x
/*   44   */     sgt r5.w, c254.y, r2.w
               + movs r4._, r4.w
/*    3.0 */     exec
/*   45   */     dp3 r3.z, r10.wxz, r4.ywz
               + muls_prev r4.w, r9.x
/*   46   */     add r4.x, r0.w, c254.w
               + movs r4._, r4.z
/*   47   */     frc r4.x, r4.x
               + muls_prev r4.z, r9.y
/*   48   */     add r10.x, r0.w, -r4.x
               + movs r4._, r4.y
/*   49   */     add r4.xy, r10.xy, c254.xy
               + muls_prev r0.w, r9.z
/*   50   */     max r2.w, r3.z, c252.y
               + mulsc r3.w, c2.x, r4.y
/*    3.1 */     exec
/*   51   */     add r3.z, r8.y, r6.y
               + exp r4.x, r4.x
/*   52   */     mad r0.xyz, r3.w, r7.xyz, r0.zyx
/*   53   */     mul r7.xyz, r4.x, r2.zyx
               + movs r4._, r3.z
/*   54   */     cndgt r2.xyz, r5.w, r7.zyx, r2.xyz
/*   55   */     add r0.xyz, r0.xyz, r5.xyz
               + adds_prev r4.y, r6.w
/*   56   */     min r4.x, r2.w, c254.y
               + movs r4._, r4.w
/*    4.0 */     exec    // PredicateClean=false
/*   57   */     mul r2.xyz, r4.x, r2.xyz
               + muls_prev r0.x, r0.x
/*   58   */     add_sat r4.x, r1.w, c5.x
               + movs r4._, r4.z
/*   59   */     mul r4.xzw, r2.xyyz, r4.x
               + muls_prev r0.y, r0.y
/*   60   */     mul r4.xzw, r4.xzzw, r1.zyyx
               + movs r4._, r0.w
/*   61   */     mul r4.xzw, r4.xzzw, c254.z
               + muls_prev r0.z, r0.z
/*   62   */     mul r4.xzw, r4.wzzx, c4.z
               + setp_eq r4._, c7.x
/*    4.1 */     exec
/*   63   */     mad r0.xyz, r0.xzy, c3.x, r4.wxz
/*    5.0 */ (!p0) jmp L13
/*    5.1 */     exec
/*   64   */     sgts r0.w, -r4_abs.x
/*    6.0 */     jmp L16
       label L13
/*    6.1 */     exec
/*   65   */     add r4.zw, r3.xxxy, c253.z
               + rcp r4.x, c12.x
/*   66   */     mad_sat r4.xz, r4.wz, r4.x, c254.w
/*   67   */     addsc r0.w, c9.x, r4.z
/*   68   */     floors r4.w, r0.w
/*   69   */     add r1.x, r0.w, -r4.w
               + movs r1.y, r4.x
/*   70   */     tfetch2D r2.xyz_, r1.xy, tf4
/*    7.0 */     exec
/*   71   */     tfetch2D r5.xyz_, r1.xy, tf5
/*   72   */     serialize
                 add r1.z, -c8.x, c254.y
               + subsc r1.y, -c11.x, -r4.y
/*   73   */     sgt r0.w, c10.x, r4.y
               + movs r4._, c10.x
/*   74   */     sgt r1.x, r4.y, c11.x
               + adds_prev r4.x, -c11.x
/*   75   */     mul r4.yzw, r5.zzyx, c8.x
               + rcp r4.x, r4.x
/*   76   */     mad r4.yzw, r1.z, r2.zzyx, r4.yyzw
/*    7.1 */     exec
/*   77   */     mul r4.x, r1.y, r4.x
/*   78   */     cndeq r4.x, r1.x, c253.x, r4.x
/*   79   */     cndeq r4.yzw, r1.x, r0.xxyz, r4.wwyz
/*   80   */     cndeq r0.xyz, r0.w, r0.xyz, r4.yzw
/*   81   */     cndeq r0.w, r0.w, c253.x, r4.x
       label L16
/*    8.0 */     alloc colors
/*    8.1 */     exece
/*   82   */     mov oC0, r0.xzyw

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x003f SamplingPattern 0x000f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xy
// [4] color0 r4.xyzw
// [5] color1 r5.xyz

