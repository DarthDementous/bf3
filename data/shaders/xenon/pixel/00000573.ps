//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spotlightmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $compressedhdr c14      1
//   $diff          s0       1
//   $tranpcy       s1       1
//   $lmap          s2       1
//   $incan         s3       1
//   $screenshadmap s4       1
//   $spotlightmap  s5       1
//   $envmap        s6       1
//

// Shader type: pixel 

xps_3_0
defconst $compressedhdr, float, vector, [1, 2], c14
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s6
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s3
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $spotlightmap, sampler2d, object, [1, 1], s5
defconst $tranpcy, sampler2d, object, [1, 1], s1
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=16
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=7

// interpolators: 7 interpolants: 7, components: 25
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4
dcl_texcoord5 r5.xy
dcl_color_centroid r6

def c252, 0.150000006, -127.5, 2, 10
def c253, 0.5, 1, 3.29999995, 1.5
def c254, 0.298999995, 0.587000012, 0.143999994, 255
def c255, 0.200000003, 0, 0, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     mul r8.xyz, r2.zwz, r2.zw
/*    8   */     mad r8.xyz, r1.zwz, r1.zw, r8.xyz
/*    9   */     mad r8.xyz, r0.zwz, r0.zw, r8.xyz
/*   10   */     mul r5.zw, r7_abs.xxxy, c3.xxxy
               + rsq r7.z, r8_abs.y
/*   11   */     add r7.x, r8.z, r8.z
               + rsq r7.w, r8_abs.x
/*   12   */     mul r14.xyz, r7.wxz, r0.zzw
/*    1.0 */     exec
/*   13   */     mul r13.xyz, r7.wxz, r1.zzw
/*   14   */     add r7.y, -r13.y, r1.w
/*   15   */     mul r10.xyz, r7.wxz, r2.zzw
               + movs r6._, -r14.y
/*   16   */     add r7.z, -r10.y, r2.w
               + adds_prev r7.x, r0.w
/*   17   */     dp3 r3.w, r7.zxy, r7.zxy
               + rcp r7.w, r3.z
/*   18   */     mul r8.xz, r7.w, r3.xy
               + rsq r3.w, r3_abs.w
/*    1.1 */     exec
/*   19   */     mul r7.xyz, r7.xyz, r3.w
/*   20   */     cube r7, r7.zzxy, r7.yxz
/*   21   */     mov r9.z, r7.w
               + rcp r3.w, r7_abs.z
/*   22   */     mad r9.xy, r7.yx, r3.w, c253.w
/*   23   */     tfetch2D r7.w___, r5.zw, tf4
/*   24   */     tfetch2D r8._x__, r4.zw, tf1
/*    2.0 */     exec
/*   25   */     tfetch2D r5.xyz_, r5.xy, tf2
/*   26   */     tfetch2D r7._xyz, r4.xy, tf3
/*   27   */     tfetchCube r12, r9.xyz, tf6
/*   28   */     tfetch2D r9, r4.xy, tf0
/*   29   */     tfetch2D r8.x_w_, r8.xz, tf5
/*   30   */     serialize
                 add r4.w, -c13.x, c252.z
/*    2.1 */     exec
/*   31   */     mul r4.z, c1.x, c252.w
/*   32   */     add r1.w, r1.w, c11.y
               + movs r6._, r0.w
/*   33   */     add r3.w, r2.w, c11.z
               + adds_prev r0.y, c11.x
/*   34   */     sgt r11.z, r3.z, c255.x
               + movs r0.x, r12.w
/*   35   */     add r15.xy, -r3.w, c10.xy
               + mulsc r4.x, c254.w, r0.x
/*   36   */     add r16.xy, -r0.y, c8.xy
               + subsc r15.z, c9.x, r1.w
/*    3.0 */     exec
/*   37   */     mul r0.xy, r16.xy, r16.xy
               + subsc r15.w, c9.y, r1.w
/*   38   */     dp2add r4.y, r15.wy, r15.wy, r0.y
/*   39   */     dp2add r3.w, r15.zx, r15.zx, r0.x
/*   40   */     add r0.xy, r4.xz, c253.xy
               + muls r16.z, r8.xz
/*   41   */     frc r3.y, r0.x
               + mulsc r3.x, c2.x, r0.y
/*   42   */     add r0.x, r4.x, -r3.y
               + rsq r11.x, r3_abs.w
/*    3.1 */     exec
/*   43   */     mul r3.xyz, r3.x, r7.yzw
               + log r7.y, r3_abs.w
/*   44   */     mad r3.xyz, r5.xyz, c0.x, r3.xyz
/*   45   */     sgt r3.w, c253.y, r12.w
               + addsc r4.x, c252.y, r0.x
/*   46   */     mul r7.w, -r10.z, r2.z
               + log r7.z, r4_abs.y
/*   47   */     mul r8.xz, r7.yz, c4.xz
               + rsq r11.y, r4_abs.y
/*   48   */     mul r2.xyz, r16.xyz, r11.xyz
               + movs r6._, -r13.z
/*    4.0 */     exec
/*   49   */     mul r11, r15.yxzw, r11.yxxy
               + muls_prev r1.x, r1.z
/*   50   */     mad r1.z, -r14.z, r0.z, r1.x
/*   51   */     mul r1.xy, r2.xy, r14.x
               + exp r0.x, r8.x
/*   52   */     mul r7.yz, r11.zzw, r13.x
               + exp r0.y, r4.x
/*   53   */     mul r4.xyz, r0.y, r12.xyz
               + exp r0.y, r8.z
/*   54   */     cndgt r4.xyz, r3.w, r4.xyz, r12.xyz
/*    4.1 */     exec
/*   55   */     add r8.xzw, r1.zxxy, r7.wyyz
               + movs r6._, r9.w
/*   56   */     mad_sat r7.zw, r11.xxxy, r10.x, r8.wwwz
/*   57   */     add r0.zw, -r8.xxxy, c253.y
               + muls_prev r1.x, r6.w
/*   58   */     mul oC0.w, r1.x, r0.w
/*   59   */     add r6.xyz, r6.xyz, r6.xyz
/*   60   */     mul r8.xyz, r9.xyz, c254.xyz
/*    5.0 */     exec
/*   61   */     mul r1.xyz, r6.xyz, r9.xyz
/*   62   */     dp3 r6.y, r8.zxy, r6.zxy
               + mulsc_sat r6.x, c4.y, r0.x
/*   63   */     max r6.z, r6.y, c252.x
               + mulsc_sat r6.y, c4.w, r0.y
/*   64   */     min r0.y, r6.z, c253.y
               + movs r6._, r2.z
/*   65   */     add r6.zw, -r6.yyyx, c253.y
               + muls_prev r7.y, r7.w
/*   66   */     mul r6.xy, r7.zy, r6.zw
/*    5.1 */     exec
/*   67   */     mul r2.zw, r6.yyyx, c6.xxxy
               + muls r0.x, r0.zz
/*   68   */     mul r0.yzw, r0.y, r4.xxyz
               + mulsc r2.x, c5.x, r6.y
/*   69   */     mul r4.xy, r6.yz, c7.xy
               + mulsc r2.y, c5.y, r6.x
/*   70   */     mad r4.z, r4.y, r7.z, r4.x
/*   71   */     add r4.xy, r2.xz, r2.yw
               + muls r1.w, r0.xx
/*   72   */     mul r6, r1.wxyz, r4.wxyz
/*    6.0 */     exec
/*   73   */     add_sat r0.x, r6.x, c13.x
/*   74   */     mul r7.yzw, r0.yyzw, r0.x
/*   75   */     mul r0, r7, c253.xz
/*   76   */     mul r1.xyz, r1.xzy, r3.xzy
               + movs r6.x, r0.x
/*   77   */     mul r0.xyz, r0.yzw, c12.z
               + subsc r0.w, c253.y, r6.x
/*   78   */     mad r6.xyz, r1.xzy, r0.w, r6.yzw
/*    6.1 */     exece
/*   79   */     mad r6.xyz, r0.xyz, r5.xyz, r6.xyz
/*   80   */     mul oC0.xyz, r6.xyz, c14.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x007f SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xy
// [6] color0 r6.xyzw

