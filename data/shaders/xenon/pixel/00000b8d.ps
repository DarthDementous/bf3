//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $avgsampleoffsets[16];
//   float2 $hdrweight;
//   sampler2D $inputtex;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   $avgsampleoffsets c0      16
//   $hdrweight        c16      1
//   $inputtex         s0       1
//

// Shader type: pixel 

xps_3_0
defconst $avgsampleoffsets[0], float, vector, [1, 2], c0
defconst $avgsampleoffsets[1], float, vector, [1, 2], c1
defconst $avgsampleoffsets[2], float, vector, [1, 2], c2
defconst $avgsampleoffsets[3], float, vector, [1, 2], c3
defconst $avgsampleoffsets[4], float, vector, [1, 2], c4
defconst $avgsampleoffsets[5], float, vector, [1, 2], c5
defconst $avgsampleoffsets[6], float, vector, [1, 2], c6
defconst $avgsampleoffsets[7], float, vector, [1, 2], c7
defconst $avgsampleoffsets[8], float, vector, [1, 2], c8
defconst $avgsampleoffsets[9], float, vector, [1, 2], c9
defconst $avgsampleoffsets[10], float, vector, [1, 2], c10
defconst $avgsampleoffsets[11], float, vector, [1, 2], c11
defconst $avgsampleoffsets[12], float, vector, [1, 2], c12
defconst $avgsampleoffsets[13], float, vector, [1, 2], c13
defconst $avgsampleoffsets[14], float, vector, [1, 2], c14
defconst $avgsampleoffsets[15], float, vector, [1, 2], c15
defconst $hdrweight, float, vector, [1, 2], c16
defconst $inputtex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=7
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 2 interpolants: 2, components: 6
// UsesMemexport: false
dcl_texcoord r0.xy
dcl_color_centroid r1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.0625, 1.44269502, 0, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    5   */     mov r4.xy, c9.xy
/*    6   */     mov r4.zw, c7.xxxy
               + movs r3.z, c8.x
/*    7   */     mov r3.xy, c11.xy
               + movs r3.w, c8.y
/*    8   */     mov r1.zw, c12.xxxy
               + movs r5.x, c14.x
/*    9   */     mov r5.zw, c10.xxxy
               + movs r5.y, c14.y
/*   10   */     mov r6.xy, c3.xy
               + movs r1.x, c0.x
/*    1.0 */     exec
/*   11   */     mov r0.zw, c2.xxxy
               + movs r1.y, c0.y
/*   12   */     mov r0.xy, c15.xy
               + movs r6.z, c1.x
/*   13   */     mov r7.xy, c6.xy
               + movs r6.w, c1.y
/*   14   */     mov r7.zw, c4.xxxy
               + movs r2.z, c5.x
/*   15   */     mov r2.xy, c13.xy
               + movs r2.w, c5.y
/*   16   */     tfetch2D r2.x___, r2.xy, tf0
/*    1.1 */     exec
/*   17   */     tfetch2D r2._x__, r7.zw, tf0
/*   18   */     tfetch2D r2.__x_, r2.zw, tf0
/*   19   */     tfetch2D r2.___x, r7.xy, tf0
/*   20   */     tfetch2D r0.x___, r0.xy, tf0
/*   21   */     tfetch2D r0._x__, r6.zw, tf0
/*   22   */     tfetch2D r0.__x_, r0.zw, tf0
/*    2.0 */     exec
/*   23   */     tfetch2D r0.___x, r6.xy, tf0
/*   24   */     tfetch2D r1.x___, r1.xy, tf0
/*   25   */     tfetch2D r1._x__, r5.zw, tf0
/*   26   */     tfetch2D r1.__x_, r1.zw, tf0
/*   27   */     tfetch2D r1.___x, r5.xy, tf0
/*   28   */     tfetch2D r3.x___, r3.xy, tf0
/*    2.1 */     exec
/*   29   */     tfetch2D r3._x__, r4.zw, tf0
/*   30   */     tfetch2D r3.__x_, r3.zw, tf0
/*   31   */     tfetch2D r3.___x, r4.xy, tf0
/*   32   */     serialize
                 mul r4.x, c16.x, c255.y
/*   33   */     mul r3, r4.x, r3.yxzw
/*   34   */     mul r1, r4.x, r1.wxyz
/*    3.0 */     exec
/*   35   */     mul r0, r4.x, r0.yxzw
               + exp r4.y, r1.y
/*   36   */     mul r2, r4.x, r2.yxzw
               + exp r4.x, r0.x
/*   37   */     add r4.y, r4.x, r4.y
               + exp r4.x, r0.z
/*   38   */     add r4.x, r4.y, r4.x
               + exp r4.y, r0.w
/*   39   */     add r4.y, r4.x, r4.y
               + exp r4.x, r2.x
/*   40   */     add r4.x, r4.y, r4.x
               + exp r4.y, r2.z
/*    3.1 */     exec
/*   41   */     add r4.y, r4.x, r4.y
               + exp r4.x, r2.w
/*   42   */     add r4.x, r4.y, r4.x
               + exp r4.y, r3.x
/*   43   */     add r4.y, r4.x, r4.y
               + exp r4.x, r3.z
/*   44   */     add r4.x, r4.y, r4.x
               + exp r4.y, r3.w
/*   45   */     add r4.y, r4.x, r4.y
               + exp r4.x, r1.z
/*   46   */     add r3.x, r4.y, r4.x
               + exp r3.y, r3.y
/*    4.0 */     exec
/*   47   */     add r3.y, r3.x, r3.y
               + exp r3.x, r1.w
/*   48   */     add r2.x, r3.y, r3.x
               + exp r2.y, r2.y
/*   49   */     add r1.y, r2.x, r2.y
               + exp r1.x, r1.x
/*   50   */     add r0.x, r1.y, r1.x
               + exp r0.y, r0.y
/*   51   */     add r0.y, r0.x, r0.y
/*   52   */     mulsc r0.x, c255.x, r0.y
/*    4.1 */     exece
/*   53   */     log r0.x, r0_abs.x
/*   54   */     mulsc r0.x, c16.y, r0.x
/*   55   */     exp oC0.xyz1, r0.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x0003 SamplingPattern 0x0001
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xy
// [1] color0 r1.xyzw

