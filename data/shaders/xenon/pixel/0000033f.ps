//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   float $usendotl;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $suncolour     c3       1
//   $sunintensity  c4       1
//   $usendotl      c5       1
//   $invscreensize c6       1
//   $latten0       c7       1
//   $lcol          c8       3
//   $wlightpos     c11      3
//   $worldviewpos  c14      1
//   $matvalue      c15      1
//   $fresnelterm   c16      1
//   $compressedhdr c17      1
//   $diff          s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $bump          s3       1
//   $spec          s4       1
//   $screenshadmap s5       1
//   $envmap        s6       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c17
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s6
defconst $fresnelterm, float, scalar, [1, 1], c16
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c6
defconst $latten0, float, vector, [1, 4], c7
defconst $lcol, float, matrix_columns, [4, 4], c8-10
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c15
defconst $screenshadmap, sampler2d, object, [1, 1], s5
defconst $spec, sampler2d, object, [1, 1], s4
defconst $suncolour, float, vector, [1, 3], c3
defconst $sunintensity, float, scalar, [1, 1], c4
defconst $usendotl, float, scalar, [1, 1], c5
defconst $wlightpos, float, matrix_columns, [4, 4], c11-13
defconst $worldviewpos, float, vector, [1, 3], c14
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=7

// interpolators: 7 interpolants: 7, components: 26
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_color_centroid r6

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 0, 0, 0, 0
def c251, 4, 0.25, 0.300000012, 0
def c252, 2, 1.5, -127.5, 10
def c253, 0, 1, 0.5, -1
def c254, 0.298999995, 0.587000012, 0.143999994, 3.29999995
def c255, 0.0599999987, 0.150000006, 0.289999992, 255


/*    0.0 */     exec
/*   10   */     tfetch2D r13.xyz_, r5.xy, tf2
/*   11   */     tfetch2D r8.xzy_, r5.zw, tf1
/*   12   */     tfetch2D r9.yw__, r5.xy, tf3, FetchValidOnly=false
/*   13   */     tfetch2D r10.xyz_, r5.xy, tf4
/*   14   */     tfetch2D r12, r5.xy, tf0
/*   15   */     serialize
                 mul r4.w, c15.x, c252.w
/*    0.1 */     exec
/*   16   */     mul r3.w, r12.w, r6.w
/*   17   */     dp3 r5.w, r3.zxy, r3.zxy
/*   18   */     add r5.xyz, r6.xyz, r6.xyz
/*   19   */     mul r11.xyz, r5.zxy, r12.zxy
/*   20   */     dp3 r6.x, r10.zxy, c255.xyz
/*   21   */     mad r9.xy, r9.xy, c252.x, c253.w
/*    1.0 */     exec
/*   22   */     mul r10.xyz, r10.xyz, c253.z
/*   23   */     mul r14.xyz, r10.zyx, r8.yzx
               + rsq r6.y, r5_abs.w
/*   24   */     mul r3.xyz, r6.y, r3.xyz
               + movs r6._, c1.x
/*   25   */     dp2add r6.z, -r9.yx, r9.yx, c253.y
/*   26   */     mul r6.x, r4.w, r6.x
               + muls_prev r6.y, c252.w
/*   27   */     add r6.xy, r6.xy, c253.y
               + sqrt r9.z, r6_abs.z
/*    1.1 */     exec
/*   28   */     dp3 r2.z, r9.zxy, r2.zxy
               + mulsc r6.z, c2.x, r6.y
/*   29   */     dp3 r2.x, r9.zxy, r0.zxy
               + movs r6.x, r6.x
/*   30   */     dp3_sat r6.y, r3.zxy, r9.zxy
               + movs r6.w, c253.x
/*   31   */     dp3 r2.y, r9.zxy, r1.zxy
               + maxs r6.w, r6.xw
/*   32   */     mul r6.x, r2.y, r1.w
               + log r13.w, r6.y
/*   33   */     mad r6.x, r2.x, r0.w, r6.x
/*    2.0 */     exec
/*   34   */     mad r4.w, r2.z, r2.w, r6.x
/*   35   */     mul r6, r6.zzwz, r13.xywz
/*   36   */     mad r13.xyz, r8.xzy, c0.x, r6.xyw
/*   37   */     mul r3.xyz, r14.xyz, c251.x
               + adds r4.w, r4.ww
/*   38   */     mul r6.xyw, r4.w, r2.zyx
               + exp r6.z, r6.z
/*   39   */     mul r14.xyz, r3.xyz, r6.z
               + movs r6._, -r6.x
/*    2.1 */     exec
/*   40   */     add r3.y, -r6.y, r1.w
               + adds_prev r3.x, r2.w
/*   41   */     mul r6.xyz, r14.xyz, c3.zyx
               + movs r6._, -r6.w
/*   42   */     mul r6.xyz, r6.xyz, c4.x
               + adds_prev r3.z, r0.w
/*   43   */     mad r1.xyz, r11.yzx, r13.xyz, r6.zyx
/*   44   */     dp3 r6.y, r3.xzy, r3.xzy
               + movs_sat r6.x, r4.z
/*   45   */     mul r0.xyz, r12.xyz, c254.xyz
               + rsq r6.y, r6_abs.y
/*    3.0 */     exec    // PredicateClean=false
/*   46   */     mul r6.yzw, r3.zzyx, r6.y
               + setp_ne r6._, c5.x
/*    3.1 */ (p0) exec
/*   47   */     (p0) mul r3.y, c4.x, c3.x
/*   48   */     (p0) cndeq r12.xyz, c253.xxy, -r4.zx, r4.y
/*   49   */     (p0) dp3_sat r4.w, r9.zxy, r4.zxy
               + (p0) movs_sat r3.x, -r4.z
/*   50   */     (p0) dp3_sat r3.z, r9.zxy, r12.xyz
               + (p0) movs r6._, r4.w
/*   51   */     (p0) add r3.x, r3.z, -r3.x
               + (p0) adds_prev r6.x, -r6.x
/*   52   */     (p0) mad r3.x, r3.x, c251.y, r6.x
/*    4.0 */ (p0) exec
/*   53   */     (p0) mul r3.y, r3.y, r3.x
/*   54   */     (p0) mul r4.xw, r3.yx, c251.z
/*   55   */     (p0) mul r3.xy, r4.w, c3.yz
/*   56   */     (p0) mul r4.yz, r3.yyx, c4.x
/*   57   */     (p0) add r1.xyz, r1.xyz, r4.xzy
/*    4.1 */     alloc colors
/*    5.0 */     exec
/*   58   */     mul r3.xy, r7_abs.xy, c6.xy
/*   59   */     cube r6, r6.wwyz, r6.zyw
/*   60   */     mov r4.z, r6.w
               + rcp r3.z, r6_abs.z
/*   61   */     mad r4.xy, r6.yx, r3.z, c252.y
/*   62   */     tfetchCube r13, r4.xyz, tf6
/*   63   */     tfetch2D r6.__w_, r3.xy, tf5
/*    5.1 */     exec
/*   64   */     serialize
                 add r3.x, r0.w, c14.x
               + muls r6.y, r2.ww
/*   65   */     add r7.z, -c16.x, c252.x
               + addsc r6.x, c14.z, r2.w
/*   66   */     mul r12.w, r6.z, c253.z
               + addsc r6.z, c14.y, r1.w
/*   67   */     add r14.zw, -r6.x, c13.xxxy
               + subsc r14.x, c12.x, r6.z
/*   68   */     sgt r6.w, c253.y, r13.w
               + subsc r14.y, c12.y, r6.z
/*   69   */     dp3 r6.z, r0.zxy, r5.zxy
               + movs r6.x, r13.w
/*    6.0 */     exec
/*   70   */     add r9.xy, -r3.x, c11.xy
               + mulsc r6.x, c255.w, r6.x
/*   71   */     mad r6.y, r1.w, r1.w, r6.y
/*   72   */     mad r3.x, r0.w, r0.w, r6.y
/*   73   */     dp3 r6.y, r2.zxy, r2.zxy
               + addsc r0.z, c253.z, r6.x
/*   74   */     mul r0.xy, r9.yx, r9.yx
               + rsq r6.y, r6_abs.y
/*   75   */     max r6.z, r6.z, c255.y
               + frcs r0.z, r0.z
/*    6.1 */     exec
/*   76   */     dp2add r0.x, r14.yw, r14.yw, r0.x
/*   77   */     min r6.z, r6.z, c253.y
               + rsq r3.z, r3_abs.x
/*   78   */     dp2add r0.y, r14.xz, r14.xz, r0.y
/*   79   */     mul r3.x, r3.z, r1.w
               + rsq r7.x, r0_abs.y
/*   80   */     mul r3.y, r3.z, r0.w
               + rsq r7.y, r0_abs.x
/*   81   */     mul r3.z, r3.z, r2.w
               + log r0.y, r0_abs.y
/*    7.0 */     exec
/*   82   */     add r6.x, r6.x, -r0.z
               + log r0.z, r0_abs.x
/*   83   */     mul r4.xyz, r2.zyx, r6.y
               + addsc r0.x, c252.z, r6.x
/*   84   */     mul r6.xy, r0.yz, c7.xz
               + exp r0.x, r0.x
/*   85   */     mul r5, r14.yxzw, r7.yxxy
               + exp r6.x, r6.x
/*   86   */     mul r0.xyz, r0.x, r13.xyz
               + exp r6.y, r6.y
/*   87   */     cndgt r0.xyz, r6.w, r0.xyz, r13.xyz
/*    7.1 */     exec
/*   88   */     dp3 r12.z, -r3.zyx, r2.zxy
               + mulsc_sat r12.x, c7.y, r6.x
/*   89   */     mul r3.xyz, r6.z, r0.xyz
               + mulsc_sat r12.y, c7.w, r6.y
/*   90   */     add r0, -r12, c253.y
/*   91   */     muls r6.x, r0.zz
/*   92   */     muls r9.z, r6.xx
/*   93   */     mul r6.xyz, r9.xzy, r7.xzy
/*    8.0 */     exec
/*   94   */     mul r2.xw, r6.xz, r4.z
               + addsc_sat r6.x, c16.x, r6.y
/*   95   */     dp2add_sat r2.w, r5.xw, r4.yx, r2.w
/*   96   */     dp2add_sat r2.z, r5.yz, r4.yx, r2.x
/*   97   */     mul r6.xyz, r3.xyz, r6.x
/*   98   */     mul r6.xyz, r6.xyz, r10.xyz
/*   99   */     mul r3.xy, r0.xy, c10.xy
               + mulsc r2.x, c254.w, r6.x
/*    8.1 */     exec
/*  100   */     mul r4.xy, r3.xy, r2.zw
               + mulsc r2.y, c254.w, r6.y
/*  101   */     mul r6.xy, r2.wz, r0.yx
               + mulsc r2.z, c254.w, r6.z
/*  102   */     dp2add r3.z, r6.yx, c9.xy, c253.x
/*  103   */     mul r2.xyz, r2.xyz, c15.z
               + mulsc r4.z, c8.x, r6.y
/*  104   */     mul r2.xyz, r2.xzy, r8.xyz
               + mulsc r4.w, c8.y, r6.x
/*  105   */     add r3.xy, r4.xz, r4.yw
/*    9.0 */     exece
/*  106   */     mad r6.xyz, r11.yzx, r3.yzx, r2.xzy
/*  107   */     mad r6.xyz, r0.w, r1.xzy, r6.xzy
/*  108   */     mul r3.xyz, r6.xzy, c17.x
/*  109   */     mov oC0, r3
/*    9.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x007f SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] color0 r6.xyzw

