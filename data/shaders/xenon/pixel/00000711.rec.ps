      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506003 00001200     	EXEC ADDR(0x3) CNT(0x6) BOOL_ADDR(0x80)
03: c80f0003 00a0c100 a1010000	      ALU:	MULv	R3 = R1.xyxy, C256.yyzz
04: c80f0007 00a01c00 a1010000	      ALU:	MULv	R7 = R1.xyxy, C256.xxww
05: 10184021 1f1ffe88 00004000	      FETCH:	SAMPLE	R4.xyz_ = R1.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: b85850e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R7.zwz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: b8486061 1f1ffe88 00004000	      FETCH:	SAMPLE	R6.xyz_ = R3.zwz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 10383061 1f1ff447 00004000	      FETCH:	SAMPLE	R3._xyz = R3.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: 102870e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R7.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: b8682021 1f1ffe88 00004000	      FETCH:	SAMPLE	R2.xyz_ = R1.zwz CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 10081021 1f1ffe81 00004000	      FETCH:	SAMPLE	R1.yxz_ = R1.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: ac100300 00000041 c2000001	   (S)ALU:	MUL_CONST_1	R3.x___ = C257.x, R1.y
0d: a8210000 00bebe41 f0000001	      ALU:	DOT3v	R0.x___ = R0.zxyy, R0.zxyy
                          						    	MUL_CONST_0	R0._y__ = C257.x, R2.y
0e: a8870008 04c06c42 a007ff01	      ALU:	ADDv	R8.xyz_ = -R7.xyzz, C511.xxxx
                          						    	MUL_CONST_0	R0.___w = C257.x, R2.z
      0000600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: a0170009 04156c6c a003ff80	      ALU:	ADDv	R9.xyz_ = -R3.yzww, C511.xxxx
                          						    	SQRT_IEEE	R0.x___ = abs(R0).xxxx
10: aa17000a 04c06c80 8006ffff	      ALU:	ADDv	R10.xyz_ = -R6.xyzz, C511.xxxx
                          						    	MUL_CONST_0	R0.x___ = C511.y, R0.x CLAMP
11: 1407000b 04c06cb1 a005ff00	      ALU:	ADDv	R11.xyz_ = -R5.xyzz, C511.xxxx
12: c8070005 006cc0c0 eb000b05	      ALU:	MULADDv	R5.xyz_ = R5.xyzz, R0.xxxx, R11.xyzz
13: c8070006 006cc0c0 eb000a06	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R0.xxxx, R10.xyzz
14: c80e0003 006cfc01 eb000903	      ALU:	MULADDv	R3._yzw = R3.yyzw, R0.xxxx, R9.xxyz
      00006015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: c8070000 006cc0c0 eb000807	      ALU:	MULADDv	R0.xyz_ = R7.xyzz, R0.xxxx, R8.xyzz
16: 0c270307 02c9b46c e0030001	      ALU:	ADDv	R7.xyz_ = R3.ywzz, -R0.xzyy
                          						    	MUL_PREVs	R3._y__ = R1.xxxx
17: c8070000 00c06cb4 eb070400	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R7.xyzz, R4.xxxx
18: 14070006 02c0b41b e0060000	      ALU:	ADDv	R6.xyz_ = R6.xyzz, -R0.xzyy
19: c8070000 00c0b1b4 eb060400	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R6.xyzz, R4.yyyy
1a: 0c470305 02b4b4c6 e0050001	      ALU:	ADDv	R5.xyz_ = R5.xzyy, -R0.xzyy
                          						    	MUL_PREVs	R3.__z_ = R1.zzzz
      0000401b 00002200     	EXEC_END ADDR(0x1b) CNT(0x4) BOOL_ADDR(0x80)
1b: c8070000 00c0c6b4 eb050400	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R5.xyzz, R4.zzzz
1c: c80e0000 00417600 e1030000	      ALU:	MULv	R0._yzw = R3.yyzx, R0.zzyx
1d: c8010000 001b6c00 e1000200	      ALU:	MULv	R0.x___ = R0.wwww, R2.xxxx
1e: 14878000 00c06c1b a1000202	      ALU:	MULv	export0.xyz_ = R0.xyzz, C258.xxxx	; COLOR
                          						    	MAXs	export0.___w = R2.wwww	; COLOR
