      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: 10306061 1f1ffecf 00004000	      FETCH:	SAMPLE	R6._yw_ = R3.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 08840604 001b1b1b e1010102	   (S)ALU:	MULv	R4.__z_ = R1.wwww, R1.wwww
                          						    	MULs	R6.___w = R2.wwww
09: c8010506 001b1bc6 eb000004	      ALU:	MULADDv	R6.x___ = R4.zzzz, R0.wwww, R0.wwww
0a: c8070506 00c0c300 e0060600	      ALU:	ADDv	R6.xyz_ = R6.xyzz, R6.wyzz
0b: c8030507 00c56c00 a006fc00	      ALU:	ADDv	R7.xy__ = R6.yzzz, C508.xxxx
0c: c8080504 046d6db1 d10707fc	      ALU:	DOT2ADDv	R4.___w = C508.yyyy, -R7.yxxx, R7.yxxx
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: a0440704 001b6c1b a0000884	      ALU:	ADDv	R4.__z_ = R0.wwww, C264.xxxx
                          						    	SQRT_IEEE	R7.__z_ = abs(R4).wwww
0e: c801050b 00bebe00 f0070000	      ALU:	DOT3v	R11.x___ = R7.zxyy, R0.zxyy
0f: c802050b 00bebe00 f0070100	      ALU:	DOT3v	R11._y__ = R7.zxyy, R1.zxyy
10: 58840b0b 00bebe6c f0070286	      ALU:	DOT3v	R11.__z_ = R7.zxyy, R2.zxyy
                          						    	RECIPSQ_IEEE	R11.___w = abs(R6).xxxx
11: c8050507 001a1b00 e10b0200	      ALU:	MULv	R7.x_z_ = R11.zwww, R2.wwww
12: c80c0508 002c1b00 e10b0000	      ALU:	MULv	R8.__zw = R11.xxxw, R0.wwww
      00006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c8030508 00191b00 e10b0100	      ALU:	MULv	R8.xy__ = R11.ywww, R1.wwww
14: c8080504 00c66c00 e0080800	      ALU:	ADDv	R4.___w = R8.zzzz, R8.xxxx
15: c8010506 001b6c00 e0040700	      ALU:	ADDv	R6.x___ = R4.wwww, R7.xxxx
16: c8060506 04116100 e1080b00	      ALU:	MULv	R6._yz_ = -R8.yyww, R11.yyxx
17: c8030506 006e6d00 e0060600	      ALU:	ADDv	R6.xy__ = R6.zxxx, R6.yxxx
18: c80e0506 00b18c00 e1060b00	      ALU:	MULv	R6._yzw = R6.yyyy, R11.xxzy
      00006019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 14020508 051b1bb1 e0060106	      ALU:	ADDv	R8._y__ = -R6.wwww, R1.wwww
1a: 04140808 04c61b1b e0060200	      ALU:	ADDv	R8.__z_ = -R6.zzzz, R2.wwww
                          						    	ADD_PREVs	R8.x___ = R0.wwww
1b: c8010500 00bebe00 f0080800	      ALU:	DOT3v	R0.x___ = R8.zxyy, R8.zxyy
1c: 58180008 046c6c6c 200aff80	      ALU:	ADDv	R8.___w = -C266.xxxx, C511.xxxx
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
1d: c8070500 00c06c00 e1080000	      ALU:	MULv	R0.xyz_ = R8.xyzz, R0.xxxx
1e: c80f0500 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
      0550601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 4c840408 001b1bc6 e2000080	      ALU:	MAXv	R8.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R4.___w = abs(R0).zzzz
20: c8030508 006d1bc6 cb0004fd	      ALU:	MULADDv	R8.xy__ = C509.zzzz, R0.yxxx, R4.wwww
21: b8189061 1f1ffff8 00004000	      FETCH:	SAMPLE	R9.x___ = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: 10286081 1f1ff447 00004000	      FETCH:	SAMPLE	R6._xyz = R4.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
23: 9048c101 1f1ff688 0000c000	      FETCH:	SAMPLE	R12.xyzw = R8.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
24: 10083061 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: 14010500 001bb11b a0010802	   (S)ALU:	ADDv	R0.x___ = R1.wwww, C264.yyyy
26: 0443000a 046cb0c6 80000608	      ALU:	ADDv	R10.xy__ = -R0.xxxx, C262.xyyy
                          						    	ADD_PREVs	R0.__z_ = C264.zzzz
27: 141b0504 00c0c01b e005050c	      ALU:	ADDv	R4.xy_w = R5.xyzz, R5.xyzz
                          						    	MAXs	R5.x___ = R12.wwww
28: ac270501 0010c004 c10403fe	      ALU:	MULv	R1.xyz_ = R4.xyww, R3.xyzz
                          						    	MUL_CONST_1	R5._y__ = C510.w, R5.x
29: b8410a05 00b16c42 8005fd07	      ALU:	ADDv	R5.x___ = R5.yyyy, C509.xxxx
                          						    	SUB_CONST_0	R10.__z_ = C263.x, R0.z
2a: b8810a05 006c0082 c8050007	      ALU:	FRACv	R5.x___ = R5.xxxx
                          						    	SUB_CONST_0	R10.___w = C263.y, R0.z
      0000602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: b8210905 02b16c46 c0050505	      ALU:	ADDv	R5.x___ = R5.yyyy, -R5.xxxx
                          						    	SUB_CONST_0	R9._y__ = C261.x, R4.z
2c: b8420905 006cc686 8005fc05	      ALU:	ADDv	R5._y__ = R5.xxxx, C508.zzzz
                          						    	SUB_CONST_0	R9.__z_ = C261.y, R4.z
2d: 38210505 00b11bb1 65fc0c05	      ALU:	SETGTv	R5.x___ = C508.yyyy, R12.wwww
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
2e: a8170700 00b1c045 e1050c00	      ALU:	MULv	R0.xyz_ = R5.yyyy, R12.xyzz
                          						    	MUL_CONST_0	R7.x___ = C256.x, R6.y
2f: c8070502 006cc0c0 ee05000c	      ALU:	CNDGTv	R2.xyz_ = R12.xyzz, R5.xxxx, R0.xyzz
30: a8210705 00bebe46 f00b0b00	      ALU:	DOT3v	R5.x___ = R11.zxyy, R11.zxyy
                          						    	MUL_CONST_0	R7._y__ = C256.x, R6.z
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: c8020505 04c6c66c eb070b06	      ALU:	MULADDv	R5._y__ = R6.xxxx, -R7.zzzz, R11.zzzz
32: a8480709 04b1b147 a005fc00	      ALU:	ADDv	R9.___w = -R5.yyyy, C508.yyyy
                          						    	MUL_CONST_0	R7.__z_ = C256.x, R6.w
33: 581e0000 008b8b6c e1090985	      ALU:	MULv	R0._yzw = R9.wwzy, R9.wwzy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R5).xxxx
34: c8010505 001919c6 f10a0a00	      ALU:	DOT2ADDv	R5.x___ = R0.zzzz, R10.ywww, R10.ywww
35: c8020505 00c4c41b f10a0a00	      ALU:	DOT2ADDv	R5._y__ = R0.wwww, R10.xzzz, R10.xzzz
36: 58170807 00c0c0b1 e1070385	      ALU:	MULv	R7.xyz_ = R7.xyzz, R3.xyzz
                          						    	RECIPSQ_IEEE	R8.x___ = abs(R5).yyyy
      00006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: 58280801 00bec06c b001fe85	      ALU:	DOT3v	R1.___w = R1.zxyy, C510.xyzz
                          						    	RECIPSQ_IEEE	R8._y__ = abs(R5).xxxx
38: 40280500 001b1bb1 a201fc85	      ALU:	MAXv	R0.___w = R1.wwww, C508.wwww
                          						    	LOG_IEEE	R5._y__ = abs(R5).yyyy
39: 40180501 00b1b16c e1000085	      ALU:	MULv	R1.___w = R0.yyyy, R0.yyyy
                          						    	LOG_IEEE	R5.x___ = abs(R5).xxxx
3a: ac470003 00b46c45 c10b0001	      ALU:	MULv	R3.xyz_ = R11.xzyy, R0.xxxx
                          						    	MUL_CONST_1	R0.__z_ = C257.x, R5.y
3b: ac230500 00c5b0c4 c1090801	      ALU:	MULv	R0.xy__ = R9.yzzz, R8.xyyy
                          						    	MUL_CONST_1	R5._y__ = C257.z, R5.x
3c: 381f050a 000dadc6 e10a0800	      ALU:	MULv	R10 = R10.yxzw, R8.yxxy
                          						    	EXP_IEEE	R5.x___ = R0.zzzz
      0000603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: 38230500 00b06cb1 e1000305	      ALU:	MULv	R0.xy__ = R0.xyyy, R3.xxxx
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
3e: c9020508 0018b2b1 f10a0300	      ALU:	DOT2ADDv	R8._y__ = R0.yyyy, R10.xwww, R3.zyyy CLAMP
3f: c9010508 00c5b26c f10a0300	      ALU:	DOT2ADDv	R8.x___ = R0.xxxx, R10.yzzz, R3.zyyy CLAMP
40: c9060509 00bc1100 a1050100	      ALU:	MULv	R9._yz_ = R5.xxyy, C257.yyww CLAMP
41: c8070500 04c0b100 a009fc00	      ALU:	ADDv	R0.xyz_ = -R9.xyzz, C508.yyyy
42: a8180900 001bb141 8300fc04	      ALU:	MINv	R0.___w = R0.wwww, C508.yyyy
                          						    	MUL_CONST_0	R9.x___ = C260.x, R0.y
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: a8230905 006db282 c1080004	      ALU:	MULv	R5.xy__ = R8.yxxx, R0.zyyy
                          						    	MUL_CONST_0	R9._y__ = C260.y, R0.z
44: c8040508 00b0b01b d10908fd	      ALU:	DOT2ADDv	R8.__z_ = C509.wwww, R9.xyyy, R8.xyyy
45: ac170902 001bc045 c1000202	      ALU:	MULv	R2.xyz_ = R0.wwww, R2.xyzz
                          						    	MUL_CONST_1	R9.x___ = C258.x, R5.y
46: ac2c0909 0071ac84 81050302	      ALU:	MULv	R9.__zw = R5.yyyx, C259.xxxy
                          						    	MUL_CONST_1	R9._y__ = C258.y, R5.x
47: c8030508 00c41900 e0090900	      ALU:	ADDv	R8.xy__ = R9.xzzz, R9.ywww
48: c80f0501 00000000 e1010800	      ALU:	MULv	R1 = R1, R8
      00006049 00001200     	EXEC ADDR(0x49) CNT(0x6) BOOL_ADDR(0x80)
49: c8070501 00c010c0 eb070401	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R7.xyzz, R4.xyww
4a: b6800005 00000043 c205050a	      ALU:	ADD_CONST_1	R0.___w = C266.x, R1.w CLAMP
4b: 14070502 00c01b1b e1020003	      ALU:	MULv	R2.xyz_ = R2.xyzz, R0.wwww
4c: 0c870502 00c0b11b a102fd05	      ALU:	MULv	R2.xyz_ = R2.xyzz, C509.yyyy
                          						    	MUL_PREVs	R5.___w = R5.wwww
4d: 14070505 00c0c61b a1020905	      ALU:	MULv	R5.xyz_ = R2.xyzz, C265.zzzz
4e: c8070505 00c015c0 eb050601	      ALU:	MULADDv	R5.xyz_ = R1.xyzz, R5.xyzz, R6.yzww
      0000104f 00002200     	EXEC_END ADDR(0x4f) CNT(0x1) BOOL_ADDR(0x80)
4f: 0c878000 00c06c6c a1050b00	      ALU:	MULv	export0.xyz_ = R5.xyzz, C267.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
