      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: b81060a1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R6.___x = R5.zwz CONST(1) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: c8040704 046c6c00 2007fc00	   (S)ALU:	ADDv	R4.__z_ = -C263.xxxx, C508.xxxx
08: c8030704 001a1b00 e1020200	      ALU:	MULv	R4.xy__ = R2.zwww, R2.wwww
09: c8030704 001a1bb0 eb010104	      ALU:	MULADDv	R4.xy__ = R4.xyyy, R1.zwww, R1.wwww
0a: c8030704 001a1bb0 eb000004	      ALU:	MULADDv	R4.xy__ = R4.xyyy, R0.zwww, R0.wwww
0b: 58210909 006c6cb1 e0040484	      ALU:	ADDv	R9.x___ = R4.xxxx, R4.xxxx
                          						    	RECIPSQ_IEEE	R9._y__ = abs(R4).yyyy
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c8090704 006dc700 e1090200	      ALU:	MULv	R4.x__w = R9.yxxx, R2.wzzz
0d: c80c0709 00ac0600 e1090100	      ALU:	MULv	R9.__zw = R9.xxxy, R1.zzzw
0e: c8030709 00b01a00 e1090000	      ALU:	MULv	R9.xy__ = R9.xyyy, R0.zwww
0f: c8010709 046c1b00 e0090000	      ALU:	ADDv	R9.x___ = -R9.xxxx, R0.wwww
10: 14080703 056cc6c6 e1040209	      ALU:	MULv	R3.___w = -R4.xxxx, R2.zzzz
11: c8080703 041bc61b eb090103	      ALU:	MULADDv	R3.___w = R3.wwww, -R9.wwww, R1.zzzz
      00006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8040706 04b1c61b eb090003	      ALU:	MULADDv	R6.__z_ = R3.wwww, -R9.yyyy, R0.zzzz
13: 04230904 041a6c1b a006fd01	      ALU:	ADDv	R4.xy__ = -R6.zwww, C509.xxxx
                          						    	ADD_PREVs	R9._y__ = R1.wwww
14: 14010700 016c6c1b e1040404	      ALU:	MULv	R0.x___ = R4.xxxx, R4.xxxx
15: 04480909 006c6c1b e1000002	      ALU:	MULv	R9.___w = R0.xxxx, R0.xxxx
                          						    	ADD_PREVs	R9.__z_ = R2.wwww
16: c8010700 00bebe00 f0090900	      ALU:	DOT3v	R0.x___ = R9.zxyy, R9.zxyy
17: 58830402 00b0b06c a1880580	      ALU:	MULv	R2.xy__ = abs(R8).xyyy, C261.xyyy
                          						    	RECIPSQ_IEEE	R4.___w = abs(R0).xxxx
      05006018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: c80f0701 0000db00 e1090400	      ALU:	MULv	R1 = R9, R4.wwwz
19: c80f0700 00a6cd00 f2010100	      ALU:	CUBEv	R0 = R1.zzxy, R1.yxzz
1a: 4c440208 001b1bc6 e2000080	      ALU:	MAXv	R8.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R2.__z_ = abs(R0).zzzz
1b: c8030708 006dc6c6 cb0002fc	      ALU:	MULADDv	R8.xy__ = C508.zzzz, R0.yxxx, R2.zzzz
1c: 103890a1 1f1ff447 00004000	      FETCH:	SAMPLE	R9._xyz = R5.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1d: 102810c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R1.xyz_ = R6.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0255601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: 10582041 1f1ff7ff 00004000	      FETCH:	SAMPLE	R2.___w = R2.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1f: 104820a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R2.xyz_ = R5.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
20: 90688101 1f1ff688 0000c000	      FETCH:	SAMPLE	R8.xyzw = R8.xyz CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
21: 100800a1 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: c8080706 006c1b00 2101fc00	   (S)ALU:	MULv	R6.___w = C257.xxxx, C508.wwww
23: c8080703 00bebe00 f0030300	      ALU:	DOT3v	R3.___w = R3.zxyy, R3.zxyy
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 58880300 001b1b1b e1000783	      ALU:	MULv	R0.___w = R0.wwww, R7.wwww
                          						    	RECIPSQ_IEEE	R3.___w = abs(R3).wwww
25: 15040704 001bc66c c1030306	      ALU:	MULv	R4.__z_ = R3.wwww, R3.zzzz CLAMP
26: 0c210303 00bec01b 9002fefc	      ALU:	DOT3v	R3.x___ = R2.zxyy, C510.xyzz
                          						    	MUL_PREVs	R3._y__ = C508.wwww
27: c8040706 00b16c00 e1030300	      ALU:	MULv	R6.__z_ = R3.yyyy, R3.xxxx
28: c80e0707 00fcfc00 e0070700	      ALU:	ADDv	R7._yzw = R7.xxyz, R7.xxyz
29: c8070703 00c0c000 a100ff00	      ALU:	MULv	R3.xyz_ = R0.xyzz, C511.xyzz
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 14170705 0015c01b e1070008	      ALU:	MULv	R5.xyz_ = R7.yzww, R0.xyzz
                          						    	MAXs	R7.x___ = R8.wwww
2b: ac180703 006c1b04 65fd08ff	      ALU:	SETGTv	R3.___w = C509.xxxx, R8.wwww
                          						    	MUL_CONST_1	R7.x___ = C511.w, R7.x
2c: b48f0402 0000b184 a102fcfc	      ALU:	MULv	R2 = R2, C508.yyyy
                          						    	ADD_CONST_1	R4.___w = C508.y, R7.x
2d: 2c870400 00c0c01b e1020104	      ALU:	MULv	R0.xyz_ = R2.xyzz, R1.xyzz
                          						    	FRACs	R4.___w = R4.wwww
2e: c8020706 026c1b00 e0070400	      ALU:	ADDv	R6._y__ = R7.xxxx, -R4.wwww
2f: a8110607 00bec300 d00307fd	      ALU:	DOT3v	R7.x___ = R3.zxyy, R7.wyzz
                          						    	MUL_CONST_0	R6.x___ = C509.w, R0.x
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: a82e0607 00fb7c01 8006fdfd	      ALU:	ADDv	R7._yzw = R6.wwyz, C509.xxyx
                          						    	MUL_CONST_0	R6._y__ = C509.w, R0.y
31: 38430303 001819c6 a207fe07	      ALU:	MAXv	R3.xy__ = R7.xwww, C510.ywww
                          						    	EXP_IEEE	R3.__z_ = R7.zzzz
32: ac47030a 00c6c045 e1030802	      ALU:	MULv	R10.xyz_ = R3.zzzz, R8.xyzz
                          						    	MUL_CONST_1	R3.__z_ = C258.x, R7.y
33: c8070708 001bc0c0 ee030a08	      ALU:	CNDGTv	R8.xyz_ = R8.xyzz, R3.wwww, R10.xyzz
34: 40180903 006c6cc6 a303fd04	      ALU:	MINv	R3.___w = R3.xxxx, C509.xxxx
                          						    	LOG_IEEE	R9.x___ = R4.zzzz
35: a84f0607 00c50002 c10309fd	      ALU:	MULv	R7 = R3.yzzz, R9
                          						    	MUL_CONST_0	R6.__z_ = C509.w, R0.z
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: c8070703 00c06c15 ab010007	      ALU:	MULADDv	R3.xyz_ = R7.yzww, R1.xyzz, C256.xxxx
37: 381e0707 001bfc6c e1030807	      ALU:	MULv	R7._yzw = R3.wwww, R8.xxyz
                          						    	EXP_IEEE	R7.x___ = R7.xxxx
38: c8070700 00c06c00 e1060700	      ALU:	MULv	R0.xyz_ = R6.xyzz, R7.xxxx
39: b6170700 00c0c043 81000307	      ALU:	MULv	R0.xyz_ = R0.xyzz, C259.xyzz
                          						    	ADD_CONST_1	R7.x___ = C263.x, R1.w CLAMP
3a: c8070700 00c06c00 a1000400	      ALU:	MULv	R0.xyz_ = R0.xyzz, C260.xxxx
3b: c8070700 00c0c0c0 eb050300	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R5.xyzz, R3.xyzz
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: c8070707 00156c00 e1070700	      ALU:	MULv	R7.xyz_ = R7.yzww, R7.xxxx
3d: c8070707 00c0c000 e1070200	      ALU:	MULv	R7.xyz_ = R7.xyzz, R2.xyzz
3e: 142d0707 00f0c61b a107fd02	      ALU:	MULv	R7.x_zw = R7.xyyz, C509.zzzz
                          						    	MAXs	R7._y__ = R2.wwww
3f: bc870702 0014c645 a10706fd	      ALU:	MULv	R2.xyz_ = R7.xzww, C262.zzzz
                          						    	SUB_CONST_1	R7.___w = C509.x, R7.y
40: 14070707 00c0c01b e1020100	      ALU:	MULv	R7.xyz_ = R2.xyzz, R1.xyzz
41: c8070707 001bc0c0 eb070007	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R7.wwww, R0.xyzz
      00001042 00002200     	EXEC_END ADDR(0x42) CNT(0x1) BOOL_ADDR(0x80)
42: 0c878000 00c06cb1 a1070804	      ALU:	MULv	export0.xyz_ = R7.xyzz, C264.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R4.yyyy	; COLOR
