      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05006005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: c803000b 00b0b000 a1870600	      ALU:	MULv	R11.xy__ = abs(R7).xyyy, C262.xyyy
06: c8030008 00b06c00 a1040100	      ALU:	MULv	R8.xy__ = R4.xyyy, C257.xxxx
07: c80f000c 00a0c100 a1040000	      ALU:	MULv	R12 = R4.xyxy, C256.yyzz
08: c80f000a 00a01c00 a1040000	      ALU:	MULv	R10 = R4.xyxy, C256.xxww
09: 10087081 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 10184081 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R4.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0555600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 10688101 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R8.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: b8589141 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R10.zwz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 10791161 1f1fffc8 00004000	      FETCH:	SAMPLE	R17.xy__ = R11.xyx CONST(7) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: b848b181 1f1ffe88 00004000	      FETCH:	SAMPLE	R11.xyz_ = R12.zwz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: 1038d181 1f1ffe88 00004000	      FETCH:	SAMPLE	R13.xyz_ = R12.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 1028c141 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R10.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: c80d000a 00f06c00 20090200	   (S)ALU:	ADDv	R10.x_zw = C265.xyyz, C258.xxxx
12: c8010000 00bebe00 f0000000	      ALU:	DOT3v	R0.x___ = R0.zxyy, R0.zxyy
13: c80e000e 04fc6c00 a00cff00	      ALU:	ADDv	R14._yzw = -R12.xxyz, C511.xxxx
14: c807000f 04c06c00 a00dff00	      ALU:	ADDv	R15.xyz_ = -R13.xyzz, C511.xxxx
15: a0470010 04c06c6c a00bff80	      ALU:	ADDv	R16.xyz_ = -R11.xyzz, C511.xxxx
                          						    	SQRT_IEEE	R0.__z_ = abs(R0).xxxx
16: c8030000 026d6db1 8b1107ff	      ALU:	MULADDv	R0.xy__ = C511.yyyy, R17.yxxx, -C263.yxxx
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: a8170e11 04c06c80 8009ff03	      ALU:	ADDv	R17.xyz_ = -R9.xyzz, C511.xxxx
                          						    	MUL_CONST_0	R14.x___ = C259.y, R0.x
18: a8270a12 04c06c41 8008ff04	      ALU:	ADDv	R18.xyz_ = -R8.xyzz, C511.xxxx
                          						    	MUL_CONST_0	R10._y__ = C260.x, R0.y
19: a8170a06 0014c041 c00a0603	      ALU:	ADDv	R6.xyz_ = R10.xzww, R6.xyzz
                          						    	MUL_CONST_0	R10.x___ = C259.x, R0.y
1a: a9440a00 00c6c641 8100ff05	      ALU:	MULv	R0.__z_ = R0.zzzz, C511.zzzz CLAMP
                          						    	MUL_CONST_0	R10.__z_ = C261.x, R0.y
1b: c8070008 00c6c0c0 eb001208	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R0.zzzz, R18.xyzz
1c: c8070009 00c6c0c0 eb001109	      ALU:	MULADDv	R9.xyz_ = R9.xyzz, R0.zzzz, R17.xyzz
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: c807000b 00c6c0c0 eb00100b	      ALU:	MULADDv	R11.xyz_ = R11.xyzz, R0.zzzz, R16.xyzz
1e: c807000d 00c6c0c0 eb000f0d	      ALU:	MULADDv	R13.xyz_ = R13.xyzz, R0.zzzz, R15.xyzz
1f: c807000c 00c615c0 eb000e0c	      ALU:	MULADDv	R12.xyz_ = R12.xyzz, R0.zzzz, R14.yzww
20: a8270e0a 00c06c80 c10a0104	      ALU:	MULv	R10.xyz_ = R10.xyzz, R1.xxxx
                          						    	MUL_CONST_0	R14._y__ = C260.y, R0.x
21: a8470e0d 02b4b480 c00d0c05	      ALU:	ADDv	R13.xyz_ = R13.xzyy, -R12.xzyy
                          						    	MUL_CONST_0	R14.__z_ = C261.y, R0.x
22: c8070000 00c0b100 e10e0100	      ALU:	MULv	R0.xyz_ = R14.xyzz, R1.yyyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c8070000 00c01b00 e1000300	      ALU:	MULv	R0.xyz_ = R0.xyzz, R3.wwww
24: c8070001 00c06cb4 eb0d040c	      ALU:	MULADDv	R1.xyz_ = R12.xzyy, R13.xyzz, R4.xxxx
25: c8070003 02c0b400 e00b0100	      ALU:	ADDv	R3.xyz_ = R11.xyzz, -R1.xzyy
26: c8070000 00c01bc0 eb0a0200	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R10.xyzz, R2.wwww
27: c8070000 00c0c000 e1000700	      ALU:	MULv	R0.xyz_ = R0.xyzz, R7.xyzz
28: c8070001 00c0b1b4 eb030401	      ALU:	MULADDv	R1.xyz_ = R1.xzyy, R3.xyzz, R4.yyyy
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c8070002 02b4b400 e0090100	      ALU:	ADDv	R2.xyz_ = R9.xzyy, -R1.xzyy
2a: c8070001 00c0c6b4 eb020401	      ALU:	MULADDv	R1.xyz_ = R1.xzyy, R2.xyzz, R4.zzzz
2b: c8070002 02c0b400 e0080100	      ALU:	ADDv	R2.xyz_ = R8.xyzz, -R1.xzyy
2c: c8070001 00c01bb4 eb020401	      ALU:	MULADDv	R1.xyz_ = R1.xzyy, R2.xyzz, R4.wwww
2d: c8070001 00c0c000 e1010700	      ALU:	MULv	R1.xyz_ = R1.xyzz, R7.xyzz
2e: c8070000 00c0c0c0 eb010600	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R6.xyzz
      0000102f 00002200     	EXEC_END ADDR(0x2f) CNT(0x1) BOOL_ADDR(0x80)
2f: 14878000 00c06c1b a1000805	      ALU:	MULv	export0.xyz_ = R0.xyzz, C264.xxxx	; COLOR
                          						    	MAXs	export0.___w = R5.wwww	; COLOR
      00000000 00000000     	NOP
