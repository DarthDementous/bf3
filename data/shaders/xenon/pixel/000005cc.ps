//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $ambientcolour;
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $frametexture;
//   float2 $invscreensize;
//   float4x4 $lcol;
//   float $lightningintensity;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   float4 $shadowmask;
//   sampler2D $spec;
//   sampler2D $spotlightmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   $lightningintensity c0       1
//   $lcol               c1       3
//   $wlightpos          c4       3
//   $worldviewpos       c7       1
//   $invscreensize      c8       1
//   $shadowmask         c9       1
//   $matvalue           c10      1
//   $apptime            c11      1
//   $compressedhdr      c12      1
//   $ambientcolour      c13      1
//   $tranpcy            s0       1
//   $spec               s1       1
//   $spotlightmap       s2       1
//   $screenshadmap      s3       1
//   $frametexture       s4       1
//   $noisetex           s5       1
//   $bump               s6       1
//   $diff               s7       1
//

// Shader type: pixel 

xps_3_0
defconst $ambientcolour, float, vector, [1, 4], c13
defconst $apptime, float, scalar, [1, 1], c11
defconst $bump, sampler2d, object, [1, 1], s6
defconst $compressedhdr, float, vector, [1, 2], c12
defconst $diff, sampler2d, object, [1, 1], s7
defconst $frametexture, sampler2d, object, [1, 1], s4
defconst $invscreensize, float, vector, [1, 2], c8
defconst $lcol, float, matrix_columns, [4, 4], c1-3
defconst $lightningintensity, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c10
defconst $noisetex, sampler3d, object, [1, 1], s5
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $shadowmask, float, vector, [1, 4], c9
defconst $spec, sampler2d, object, [1, 1], s1
defconst $spotlightmap, sampler2d, object, [1, 1], s2
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c4-6
defconst $worldviewpos, float, vector, [1, 3], c7
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=16
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=9

// interpolators: 9 interpolants: 9, components: 34
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_color_centroid r7
dcl_color1_centroid r8.xyz

def c252, 0, 0, 0, 0
def c253, 0.5, 0, 0.0529999994, 0
def c254, 9.99999975e-005, -1, 1, 0.200000003
def c255, 0.0599999987, 0.289999992, 0.150000006, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mul r10.z, c11.x, c253.x
               + movs r10.x, r6.x
/*    9   */     mul r3.zw, r9_abs.xxxy, c8.xxxy
               + rcp r8.w, r4.z
/*   10   */     mul r4.xy, r8.w, r4.xy
               + movs r10.y, r6.y
/*   11   */     tfetch3D r11.__x_, r10.xyz, tf5, FetchValidOnly=false
/*   12   */     tfetch2D r15.__xw, r4.xy, tf2, FetchValidOnly=false
/*   13   */     tfetch2D r16.x___, r6.zw, tf0, FetchValidOnly=false
/*    1.0 */     exec
/*   14   */     tfetch2D r9._xyz, r6.xy, tf1, FetchValidOnly=false
/*   15   */     tfetch2D r13._yw_, r6.xy, tf6, FetchValidOnly=false
/*   16   */     tfetch2D r3.__xy, r3.zw, tf3, FetchValidOnly=false
/*   17   */     serialize
                 mul r14.w, c10.x, c255.w
               + muls r13.w, -r2.ww
/*   18   */     add r4.x, r1.w, c7.y
               + muls r4.y, -r1.ww
/*   19   */     add r8.w, r0.w, c7.x
               + movs r7._, r2.w
/*    1.1 */     exec
/*   20   */     mad r13.x, -r0.w, -r0.w, r4.y
/*   21   */     add r12.xy, -r8.w, c4.xy
               + adds_prev r8.w, c7.z
/*   22   */     add r10.zw, -r4.x, c5.xxxy
               + rcp r4.x, r5.w
/*   23   */     mul r4.xy, r4.x, r5.xy
               + subsc r12.z, c6.x, r8.w
/*   24   */     mul r5.xy, r10.zw, r10.zw
               + subsc r12.w, c6.y, r8.w
/*   25   */     dp2add r4.w, r12.yw, r12.yw, r5.y
/*    2.0 */     exec
/*   26   */     dp2add r5.y, r12.xz, r12.xz, r5.x
/*   27   */     add r5.xzw, r13.xyyz, r13.wyyz
/*   28   */     add r10.xy, r5.zw, c254.y
               + rsq r8.w, r5_abs.x
/*   29   */     mul r5.x, r8.w, -r0.w
               + rsq r5.z, r5_abs.y
/*   30   */     mul r5.y, r8.w, -r2.w
               + rsq r5.w, r4_abs.w
/*   31   */     sgt r9.x, r4.z, c254.w
/*    2.1 */     exec
/*   32   */     dp3 r11.y, r9.wzy, c255.xyz
/*   33   */     mul r12, r12, r5.zwzw
               + muls r16.y, r10.xx
/*   34   */     mul r5.zw, r10.zzzw, r5.zzzw
               + muls r16.z, r10.yy
/*   35   */     mad r15.xy, r8.w, -r1.w, r5.zw
/*   36   */     add r4.zw, -r16.yyyx, c254.z
/*   37   */     add r13, r12, r5.xxy
               + movs r7._, r4.z
/*    3.0 */     exec
/*   38   */     mul r14.xyz, r15.yxz, r15.yxw
               + adds_prev r5.y, -r16.z
/*   39   */     dp2add r8.w, r13.xz, r13.xz, r14.y
/*   40   */     dp2add r5.x, r13.yw, r13.yw, r14.x
/*   41   */     mul r10.w, r14.z, r9.x
               + sqrt r10.z, r5_abs.y
/*   42   */     dp3 r14.x, r10.zxy, r2.zxy
/*   43   */     dp3 r14.y, r10.zxy, r0.zxy
               + rsq r0.z, r5_abs.x
/*    3.1 */     exec
/*   44   */     dp3 r14.z, r10.zxy, r1.zxy
               + rsq r0.w, r8_abs.w
/*   45   */     mul r5.xy, r15.yx, r0.zw
/*   46   */     dp3 r0.y, r14.xyz, r14.xyz
               + mulsc r0.x, c9.x, r3.z
/*   47   */     mul r13, r13.wyzx, r0.zzw
               + rsq r11.x, r0_abs.y
/*   48   */     mul r1, r14.xywz, r11.xxyx
               + mulsc r0.y, c9.y, r3.w
/*   49   */     mul r2, r5.xywz, r1.w
               + subsc r5.w, c254.z, r0.x
/*    4.0 */     exec
/*   50   */     dp2add_sat r11.x, r13.yx, r1.yx, r2.x
/*   51   */     dp2add_sat r11.y, r13.wz, r1.yx, r2.y
/*   52   */     dp2add_sat r5.y, r12.yw, r1.yx, r2.z
/*   53   */     dp2add_sat r5.z, r12.xz, r1.yx, r2.w
/*   54   */     add r1.xyw, r11.xyz, c254.xxy
               + snes r0.z, r5.y
/*   55   */     add r0.x, r1.w, r11.z
               + snes r0.w, r5.z
/*    4.1 */     exec
/*   56   */     mul r2.xz, r1.xy, r0.zw
               + mulsc r2.w, c255.w, r0.x
/*   57   */     mul r1.xyw, r2.wzw, r10.xwy
               + subsc r4.z, c254.z, r4.y
/*   58   */     mad r0.xz, r1.xw, c253.z, r4.xz
/*   59   */     tfetch2D r0.x_yz, r0.xz, tf4
/*   60   */     tfetch2D r11, r6.xy, tf7
/*   61   */     serialize
                 add r12.xyz, r7.xyz, r7.xyz
/*    5.0 */     exec
/*   62   */     add r6.xyz, c13.xyz, c0.x
               + movs r7._, r11.w
/*   63   */     mul r4.xyz, r12.xyz, r11.xyz
               + muls_prev r1.w, r7.w
/*   64   */     add r2.y, -r0.y, c254.z
               + log r1.x, r2_abs.x
/*   65   */     add r0.y, r1.z, c254.z
               + log r1.y, r1_abs.y
/*   66   */     mul r2.xw, r0.y, r1.xy
               + mulsc r1.x, c12.y, r0.x
/*   67   */     mul r1.y, r5.w, r3.x
               + exp r2.z, r2.x
/*    5.1 */     exec
/*   68   */     mul r2.x, r10.w, r5.z
               + exp r0.y, r2.w
/*   69   */     dp2add r5.x, r1.y, r0.y, c253.y
/*   70   */     mul r3.xyz, r2.zxy, r3.yxy
               + mulsc r1.y, c12.y, r0.z
/*   71   */     add r6.xyz, r6.xyz, r8.xyz
               + movs r7._, r3.x
/*   72   */     mul r5.yz, r3.yyz, r5.wwy
               + muls_prev r0.y, r2.y
/*   73   */     add r5.w, r0.y, r0.y
               + mulsc r8.y, c253.x, r9.y
/*    6.0 */     exec
/*   74   */     mul r10, r5, c3.xxy
               + mulsc r8.z, c253.x, r9.z
/*   75   */     mul r2, r5, c1.xxy
               + mulsc r8.w, c253.x, r9.w
/*   76   */     mul r5, r5, c2.xxy
               + adds r8.x, r2.yz
/*   77   */     mul r3.xyz, r8.ywz, r7.xzy
               + adds r7.x, r2.xw
/*   78   */     add r7.z, r5.x, r5.w
               + adds r7.y, r10.xw
/*   79   */     add r2.xyz, r7.xyz, r7.xyz
               + adds r6.w, r10.yz
/*    6.1 */     exec
/*   80   */     mul r7, r4.xzzy, r6.xwzy
               + adds r8.y, r5.yz
/*   81   */     mad r2.xyz, r3.xyz, r2.xyz, r7.xzw
/*   82   */     mad r7.xz, r4.xy, r8.xy, r2.xz
/*   83   */     add r7.y, r2.y, r7.y
               + mulsc r1.z, c12.y, r0.w
/*   84   */     add r7.xyz, r7.xyz, -r1.xzy
               + movs r7._, r1.w
/*   85   */     mad r7.xyz, r7.xzy, c11.x, r1.xyz
/*    7.0 */     exece
/*   86   */     mul oC0.xyz, r7.xyz, c12.x
               + muls_prev oC0.w, r4.w
/*    7.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x01ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] color0 r7.xyzw
// [8] color1 r8.xyz

