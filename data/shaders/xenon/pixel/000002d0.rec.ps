      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      02506004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: c8030600 00b0b000 e2040400	      ALU:	MAXv	R0.xy__ = R4.xyyy, R4.xyyy
05: c8040600 006c6c00 2108fe00	      ALU:	MULv	R0.__z_ = C264.xxxx, C510.xxxx
06: 90308001 1f1ffe3f 00008000	      FETCH:	SAMPLE	R8.__x_ = R0.xyz CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: 10400081 1f1fffd9 00004000	      FETCH:	SAMPLE	R0.yw__ = R4.xyx CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 4c230008 00b0b01b e0000003	   (S)ALU:	ADDv	R8.xy__ = R0.xyyy, R0.xyyy
                          						    	RECIP_IEEE	R0._y__ = R3.wwww
09: c8070607 00c06c00 a008ff00	      ALU:	ADDv	R7.xyz_ = R8.xyzz, C511.xxxx
      0500600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: c8010600 00c6c600 e0070800	      ALU:	ADDv	R0.x___ = R7.zzzz, R8.zzzz
0b: a8160000 00b1bcc0 c10003fe	      ALU:	MULv	R0._yz_ = R0.yyyy, R3.xxyy
                          						    	MUL_CONST_0	R0.x___ = C510.z, R0.x
0c: b8130003 006cb002 c10007fe	      ALU:	MULv	R3.xy__ = R0.xxxx, R7.xyyy
                          						    	SUB_CONST_0	R0.x___ = C510.w, R0.z
0d: c8030600 00b0b16d ab03fe00	      ALU:	MULADDv	R0.xy__ = R0.yxxx, R3.xyyy, C510.yyyy
0e: 101870a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R5.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: 10288001 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R0.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: b8080081 1f1ffff8 00004000	      FETCH:	SAMPLE	R0.x___ = R4.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: 10583081 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R4.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: c8030604 04b1b000 a0020500	   (S)ALU:	ADDv	R4.xy__ = -R2.yyyy, C261.xyyy
13: c80c0604 046cac00 a0020400	      ALU:	ADDv	R4.__zw = -R2.xxxx, C260.xxxy
14: c8060600 04c6bc00 a0020600	      ALU:	ADDv	R0._yz_ = -R2.zzzz, C262.xxyy
15: c8060600 00c1c100 e1000000	      ALU:	MULv	R0._yz_ = R0.yyzz, R0.yyzz
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: c8040600 00b3b3c6 f1040400	      ALU:	DOT2ADDv	R0.__z_ = R0.zzzz, R4.wyyy, R4.wyyy
17: c8020600 006e6eb1 f1040400	      ALU:	DOT2ADDv	R0._y__ = R0.yyyy, R4.zxxx, R4.zxxx
18: 40200006 000000b1 e2060680	      ALU:	LOG_IEEE	R0._y__ = abs(R0).yyyy
19: 40400006 000000c6 e2060680	      ALU:	LOG_IEEE	R0.__z_ = abs(R0).zzzz
1a: c8060600 00c1cc00 a1000700	      ALU:	MULv	R0._yz_ = R0.yyzz, C263.xxzz
1b: 38200006 000000b1 e2060600	      ALU:	EXP_IEEE	R0._y__ = R0.yyyy
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: 38480002 001b1bc6 e1030600	      ALU:	MULv	R2.___w = R3.wwww, R6.wwww
                          						    	EXP_IEEE	R0.__z_ = R0.zzzz
1d: c9060600 00c11100 a1000700	      ALU:	MULv	R0._yz_ = R0.yyzz, C263.yyww CLAMP
1e: c8070600 04c01b00 a000fe00	      ALU:	ADDv	R0.xyz_ = -R0.xyzz, C510.wwww
1f: a8100506 00000041 c2060601	      ALU:	MUL_CONST_0	R5.x___ = C257.x, R0.y
20: a8470502 00c0c041 c0060603	      ALU:	ADDv	R2.xyz_ = R6.xyzz, R6.xyzz
                          						    	MUL_CONST_0	R5.__z_ = C259.x, R0.y
21: a8270506 00c0b141 81080902	      ALU:	MULv	R6.xyz_ = R8.xyzz, C265.yyyy
                          						    	MUL_CONST_0	R5._y__ = C258.x, R0.y
      00006022 00001200     	EXEC ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: a8170708 00c06c82 81070001	      ALU:	MULv	R8.xyz_ = R7.xyzz, C256.xxxx
                          						    	MUL_CONST_0	R7.x___ = C257.y, R0.z
23: a8470704 00c0c082 c1020303	      ALU:	MULv	R4.xyz_ = R2.xyzz, R3.xyzz
                          						    	MUL_CONST_0	R7.__z_ = C259.y, R0.z
24: a8270703 00c0c082 c1080302	      ALU:	MULv	R3.xyz_ = R8.xyzz, R3.xyzz
                          						    	MUL_CONST_0	R7._y__ = C258.y, R0.z
25: 14070601 00c01b1b e1070102	      ALU:	MULv	R1.xyz_ = R7.xyzz, R1.wwww
26: c8070601 00b41bb4 eb050001	      ALU:	MULADDv	R1.xyz_ = R1.xzyy, R5.xzyy, R0.wwww
27: c8070601 01b4c0b4 eb040106	      ALU:	MULADDv	R1.xyz_ = -R6.xzyy, R4.xzyy, R1.xyzz
      00003028 00002200     	EXEC_END ADDR(0x28) CNT(0x3) BOOL_ADDR(0x80)
28: c8070601 00c0c0b4 eb030201	      ALU:	MULADDv	R1.xyz_ = R1.xzyy, R3.xyzz, R2.xyzz
29: c8070606 00b46cb4 ab010806	      ALU:	MULADDv	R6.xyz_ = R6.xzyy, R1.xzyy, C264.xxxx
2a: 0c878000 00b46c6c a1060900	      ALU:	MULv	export0.xyz_ = R6.xzyy, C265.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
