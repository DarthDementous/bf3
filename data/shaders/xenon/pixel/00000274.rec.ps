      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      09556005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 102880c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R6.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 1038c0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R5.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: 104860a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R6.xyz_ = R5.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 1008d0a1 1f1ff688 00004000	      FETCH:	SAMPLE	R13.xyzw = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: b81800a1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R5.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: c8010701 00bebe00 f0030300	   (S)ALU:	DOT3v	R1.x___ = R3.zxyy, R3.zxyy
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 58120101 00bebe6c f0020281	      ALU:	DOT3v	R1._y__ = R2.zxyy, R2.zxyy
                          						    	RECIPSQ_IEEE	R1.x___ = abs(R1).xxxx
0c: 58480101 001b1bb1 e10d0781	      ALU:	MULv	R1.___w = R13.wwww, R7.wwww
                          						    	RECIPSQ_IEEE	R1.__z_ = abs(R1).yyyy
0d: 28170b05 00c0c01b e0070702	      ALU:	ADDv	R5.xyz_ = R7.xyzz, R7.xyzz
                          						    	SETNEs	R11.x___ = R2.wwww
0e: 28230b0f 046cb01b a0040903	      ALU:	ADDv	R15.xy__ = -R4.xxxx, C265.xyyy
                          						    	SETNEs	R11._y__ = R3.wwww
0f: 140c070f 04b1ac6c 80040a01	      ALU:	ADDv	R15.__zw = -R4.yyyy, C266.xxxy
10: 0c120e01 00bebec6 d00000fe	      ALU:	DOT3v	R1._y__ = R0.zxyy, R0.zxyy
                          						    	MUL_PREVs	R14.x___ = C510.zzzz
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 14030704 04c6b06c 80040b03	      ALU:	ADDv	R4.xy__ = -R4.zzzz, C267.xyyy
12: 0c47040a 00c01bc6 8106fffe	      ALU:	MULv	R10.xyz_ = R6.xyzz, C511.wwww
                          						    	MUL_PREVs	R4.__z_ = C510.zzzz
13: 14080704 00bec0c6 b006ff01	      ALU:	DOT3v	R4.___w = R6.zxyy, C511.xyzz
14: 0f140101 006cc6c6 e1010302	      ALU:	MULv	R1.__z_ = R1.xxxx, R3.zzzz CLAMP
                          						    	MUL_PREVs	R1.x___ = R2.zzzz CLAMP
15: 582e010e 00fc3cb1 e1040481	      ALU:	MULv	R14._yzw = R4.xxyz, R4.xxyw
                          						    	RECIPSQ_IEEE	R1._y__ = abs(R1).yyyy
16: c9030709 00c46cb1 8b010d0d	      ALU:	MULADDv	R9.xy__ = C269.yyyy, R1.xzzz, C269.xxxx CLAMP
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: c8040701 001919c6 f10f0f0e	      ALU:	DOT2ADDv	R1.__z_ = R14.zzzz, R15.ywww, R15.ywww
18: c8010701 00c4c4b1 f10f0f0e	      ALU:	DOT2ADDv	R1.x___ = R14.yyyy, R15.xzzz, R15.xzzz
19: 41240000 00b1c66c e1010081	      ALU:	MULv	R0.__z_ = R1.yyyy, R0.zzzz CLAMP
                          						    	LOG_IEEE	R0._y__ = abs(R1).xxxx
1a: 40130001 006f6cc6 a00efe81	      ALU:	ADDv	R1.xy__ = R14.wxxx, C510.xxxx
                          						    	LOG_IEEE	R0.x___ = abs(R1).zzzz
1b: ac470105 00c0c041 c1050d02	      ALU:	MULv	R5.xyz_ = R5.xyzz, R13.xyzz
                          						    	MUL_CONST_1	R1.__z_ = C258.x, R1.y
1c: a8170706 00c0c041 c106070c	      ALU:	MULv	R6.xyz_ = R6.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R7.x___ = C268.x, R0.y
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: a8270704 00c6c0c0 c1010c0c	      ALU:	MULv	R4.xyz_ = R1.zzzz, R12.xyzz
                          						    	MUL_CONST_0	R7._y__ = C268.z, R0.x
1e: c8070704 00b46cb4 ab080004	      ALU:	MULADDv	R4.xyz_ = R4.xzyy, R8.xzyy, C256.xxxx
1f: 38170708 00c0c06c e10a0807	      ALU:	MULv	R8.xyz_ = R10.xyzz, R8.xyzz
                          						    	EXP_IEEE	R7.x___ = R7.xxxx
20: 38230709 00b0b0b1 e1090907	      ALU:	MULv	R9.xy__ = R9.xyyy, R9.xyyy
                          						    	EXP_IEEE	R7._y__ = R7.yyyy
21: b9130007 00b01943 81070cfe	      ALU:	MULv	R7.xy__ = R7.xyyy, C268.ywww CLAMP
                          						    	SUB_CONST_0	R0.x___ = C510.x, R0.w
22: 40830907 046d6cc6 a007fe00	      ALU:	ADDv	R7.xy__ = -R7.yxxx, C510.xxxx
                          						    	LOG_IEEE	R9.___w = R0.zzzz
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: ac47080c 00c01b45 a108fe07	      ALU:	MULv	R12.xyz_ = R8.xyzz, C510.wwww
                          						    	MUL_CONST_1	R8.__z_ = C263.x, R7.y
24: ac240809 006cb145 a201fe08	      ALU:	MAXv	R9.__z_ = R1.xxxx, C510.yyyy
                          						    	MUL_CONST_1	R8._y__ = C264.x, R7.y
25: ac2e0a00 00fc3c84 e1090908	      ALU:	MULv	R0._yzw = R9.xxyz, R9.xxyw
                          						    	MUL_CONST_1	R10._y__ = C264.y, R7.x
26: ac4c0a07 00f17184 e1000707	      ALU:	MULv	R7.__zw = R0.yyyz, R7.yyyx
                          						    	MUL_CONST_1	R10.__z_ = C263.y, R7.x
27: 382c0009 0006ac1b a1070700	      ALU:	MULv	R9.__zw = R7.zzzw, C263.xxxy
                          						    	EXP_IEEE	R0._y__ = R0.wwww
28: ac1e0900 00fcb146 e10c0008	      ALU:	MULv	R0._yzw = R12.xxyz, R0.yyyy
                          						    	MUL_CONST_1	R9.x___ = C264.x, R7.z
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: ac29090a 0018b187 a1070608	      ALU:	MULv	R10.x__w = R7.xwww, C262.yyyy
                          						    	MUL_CONST_1	R9._y__ = C264.y, R7.w
2a: 140e0700 00d18c1b a100040a	      ALU:	MULv	R0._yzw = R0.yywz, C260.xxzy
2b: 0c1f0109 000dadb1 e1090b0b	      ALU:	MULv	R9 = R9.yxzw, R11.yxxy
                          						    	MUL_PREVs	R1.x___ = R11.yyyy
2c: 00290708 00c56ccb a1070609	      ALU:	MULv	R8.x__w = R7.yzzz, C262.xxxx
                          						    	ADDs	R7._y__ = R9.wwzz
2d: c8010707 001b6c6c eb080b01	      ALU:	MULADDv	R7.x___ = R1.xxxx, R8.wwww, R11.xxxx
2e: 00470701 00c01bbc e10a0309	      ALU:	MULv	R1.xyz_ = R10.xyzz, R3.wwww
                          						    	ADDs	R7.__z_ = R9.xxyy
      0000602f 00002200     	EXEC_END ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: c8070701 00b41bb4 eb080201	      ALU:	MULADDv	R1.xyz_ = R1.xzyy, R8.xzyy, R2.wwww
30: 14070707 00c0c01b e1060701	      ALU:	MULv	R7.xyz_ = R6.xyzz, R7.xyzz
31: c8070707 00c0c0c0 eb050107	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R5.xyzz, R1.xyzz
32: c8070707 00c96cc0 ab000507	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R0.ywzz, C261.xxxx
33: c8070707 00c0b4c0 eb050407	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R5.xyzz, R4.xzyy
34: 0c878000 00c06c6c a1070e00	      ALU:	MULv	export0.xyz_ = R7.xyzz, C270.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
      00000000 00000000     	NOP
