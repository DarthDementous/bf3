      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: 100080a1 1f1fffc7 00004000	      FETCH:	SAMPLE	R8._x__ = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 14080704 00bebe1b f0000003	   (S)ALU:	DOT3v	R4.___w = R0.zxyy, R0.zxyy
09: 04810608 00b1c6c6 0103fe0b	      ALU:	MULv	R8.x___ = C259.yyyy, C510.zzzz
                          						    	ADD_PREVs	R6.___w = C267.zzzz
0a: c804070b 01b1b16c ab080308	      ALU:	MULADDv	R11.__z_ = -R8.xxxx, R8.yyyy, C259.yyyy
0b: 4c8c060c 041bacc6 a0060a04	      ALU:	ADDv	R12.__zw = -R6.wwww, C266.xxxy
                          						    	RECIP_IEEE	R6.___w = R4.zzzz
0c: b4480600 001bb143 80020b0b	      ALU:	ADDv	R0.___w = R2.wwww, C267.yyyy
                          						    	ADD_CONST_1	R6.__z_ = C267.x, R1.w
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: b81c0c09 001bac43 c1060409	      ALU:	MULv	R9.__zw = R6.wwww, R4.xxxy
                          						    	SUB_CONST_0	R12.x___ = C265.x, R0.w
0e: b8230c08 04c6b083 80060809	      ALU:	ADDv	R8.xy__ = -R6.zzzz, C264.xyyy
                          						    	SUB_CONST_0	R12._y__ = C265.y, R0.w
0f: 588c0806 00acac1b e1080884	      ALU:	MULv	R6.__zw = R8.xxxy, R8.xxxy
                          						    	RECIPSQ_IEEE	R8.___w = abs(R4).wwww
10: c8080704 0019191b f10c0c06	      ALU:	DOT2ADDv	R4.___w = R6.wwww, R12.ywww, R12.ywww
11: c8040706 00c4c4c6 f10c0c06	      ALU:	DOT2ADDv	R6.__z_ = R6.zzzz, R12.xzzz, R12.xzzz
12: 58140b08 001b1bc6 a1080386	      ALU:	MULv	R8.__z_ = R8.wwww, C259.wwww
                          						    	RECIPSQ_IEEE	R11.x___ = abs(R6).zzzz
      05406013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: 582c0b08 0006ac1b e1080084	      ALU:	MULv	R8.__zw = R8.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R11._y__ = abs(R4).wwww
14: c80f0708 0000c000 e1080b00	      ALU:	MULv	R8 = R8, R11.xyzz
15: c8030709 001ab000 e0080500	      ALU:	ADDv	R9.xy__ = R8.zwww, R5.xyyy
16: b820d0a1 1f1ffff8 00004000	      FETCH:	SAMPLE	R13.x___ = R5.zwz CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 10500121 1f1ffef9 00004000	      FETCH:	SAMPLE	R0.y_w_ = R9.xyx CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: b8800121 1f1ff7c7 00004000	      FETCH:	SAMPLE	R0._x_w = R9.zwz CONST(8) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: c803070a 00c46cc6 8b00feff	   (S)ALU:	MULADDv	R10.xy__ = C511.zzzz, R0.xzzz, C510.xxxx
1a: 4016000d 00bcbcc6 e10a0a86	      ALU:	MULv	R13._yz_ = R10.xxyy, R10.xxyy
                          						    	LOG_IEEE	R0.x___ = abs(R6).zzzz
1b: 404c0006 04acb11b a00dff84	      ALU:	ADDv	R6.__zw = -R13.xxxy, C511.yyyy
                          						    	LOG_IEEE	R0.__z_ = abs(R4).wwww
1c: 14020704 00c6b11b a504fe06	      ALU:	SETGTv	R4._y__ = R4.zzzz, C510.yyyy
1d: 04150004 01c4c4c6 a100040d	      ALU:	MULv	R4.x_z_ = R0.xzzz, C260.xzzz
                          						    	ADD_PREVs	R0.x___ = -R13.zzzz
1e: a04f0a0b 000dad6c e10c0b80	      ALU:	MULv	R11 = R12.yxzw, R11.yxxy
                          						    	SQRT_IEEE	R10.__z_ = abs(R0).xxxx
      0000601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 38110400 00bebe6c f00a0104	      ALU:	DOT3v	R0.x___ = R10.zxyy, R1.zxyy
                          						    	EXP_IEEE	R4.x___ = R4.xxxx
20: 38440400 00bebec6 f00a0304	      ALU:	DOT3v	R0.__z_ = R10.zxyy, R3.zxyy
                          						    	EXP_IEEE	R4.__z_ = R4.zzzz
21: 098c0004 00ec31bb a1040400	      ALU:	MULv	R4.__zw = R4.xxxz, C260.yyyw CLAMP
                          						    	MULs	R0.___w = R0.wwyy
22: 14020700 00bebec6 f00a0200	      ALU:	DOT3v	R0._y__ = R10.zxyy, R2.zxyy
23: 0c410904 00bebe1b f0000003	      ALU:	DOT3v	R4.x___ = R0.zxyy, R0.zxyy
                          						    	MUL_PREVs	R9.__z_ = R3.wwww
24: c8040709 00b11bc6 eb000209	      ALU:	MULADDv	R9.__z_ = R9.zzzz, R0.yyyy, R2.wwww
      00006025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: c8040708 006c1bc6 eb000109	      ALU:	MULADDv	R8.__z_ = R9.zzzz, R0.xxxx, R1.wwww
26: 581c0404 04dbb16c a004ff84	      ALU:	ADDv	R4.__zw = -R4.wwwz, C511.yyyy
                          						    	RECIPSQ_IEEE	R4.x___ = abs(R4).xxxx
27: c80f070a 0034ac00 e1000400	      ALU:	MULv	R10 = R0.xzyw, R4.xxxy
28: c8030704 00b06c00 e1080a00	      ALU:	MULv	R4.xy__ = R8.xyyy, R10.xxxx
29: c9080709 0018b2b1 f10b0a04	      ALU:	DOT2ADDv	R9.___w = R4.yyyy, R11.xwww, R10.zyyy CLAMP
2a: c9010704 00c5b26c f10b0a04	      ALU:	DOT2ADDv	R4.x___ = R4.xxxx, R11.yzzz, R10.zyyy CLAMP
      0000602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: c8040709 001b6c00 e10a0400	      ALU:	MULv	R9.__z_ = R10.wwww, R4.xxxx
2c: c8030704 00c71a00 e1090400	      ALU:	MULv	R4.xy__ = R9.wzzz, R4.zwww
2d: c8030708 00c5b000 a1040700	      ALU:	MULv	R8.xy__ = R4.yzzz, C263.xyyy
2e: c8080708 00b11b00 e1080900	      ALU:	MULv	R8.___w = R8.yyyy, R9.wwww
2f: c80c0709 00ecdb00 e0080800	      ALU:	ADDv	R9.__zw = R8.xxxz, R8.wwwz
30: c8070700 001bb400 e1090000	      ALU:	MULv	R0.xyz_ = R9.wwww, R0.xzyy
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: 14040700 05c61b6c e0000200	      ALU:	ADDv	R0.__z_ = -R0.zzzz, R2.wwww
32: 04280000 04b11b1b e0000301	      ALU:	ADDv	R0.___w = -R0.yyyy, R3.wwww
                          						    	ADD_PREVs	R0._y__ = R1.wwww
33: c8010700 00c3c300 f0000000	      ALU:	DOT3v	R0.x___ = R0.wyzz, R0.wyzz
34: 58140001 006c1b6c 2101ff80	      ALU:	MULv	R1.__z_ = C257.xxxx, C511.wwww
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
35: c8070700 00156c00 e1000000	      ALU:	MULv	R0.xyz_ = R0.yzww, R0.xxxx
36: c80f0700 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
      05406037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: 4c140108 001b1bc6 e2000080	      ALU:	MAXv	R8.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
38: c8030701 006d6c00 e1000100	      ALU:	MULv	R1.xy__ = R0.yxxx, R1.xxxx
39: c80b0708 00c0bc00 a001ff00	      ALU:	ADDv	R8.xy_w = R1.xyzz, C511.xxyy
3a: 103820c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R2.xyz_ = R6.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
3b: 104830a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R3.xyz_ = R5.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
3c: 90785101 1f1ffe88 0000c000	      FETCH:	SAMPLE	R5.xyz_ = R8.xyz CONST(7) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0025603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: 10180121 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R9.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
3e: 1068a121 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R9.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
3f: c8070701 00c0c000 e0070700	   (S)ALU:	ADDv	R1.xyz_ = R7.xyzz, R7.xyzz
40: c807070a 00c0c600 a10afe00	      ALU:	MULv	R10.xyz_ = R10.xyzz, C510.zzzz
41: c8070701 00c0c000 e1010000	      ALU:	MULv	R1.xyz_ = R1.xyzz, R0.xyzz
42: a8170a05 00b4b445 c10a0505	      ALU:	MULv	R5.xyz_ = R10.xzyy, R5.xzyy
                          						    	MUL_CONST_0	R10.x___ = C261.x, R4.y
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: a82c0a0a 0071ac84 81040605	      ALU:	MULv	R10.__zw = R4.yyyx, C262.xxxy
                          						    	MUL_CONST_0	R10._y__ = C261.y, R4.x
44: c8030709 00c41900 e00a0a00	      ALU:	ADDv	R9.xy__ = R10.xzzz, R10.ywww
45: 14070700 00c0c01b e1010900	      ALU:	MULv	R0.xyz_ = R1.xyzz, R9.xyzz
46: c8070700 00b4c6c0 ab050300	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R5.xzyy, C259.zzzz
47: 0c880700 001b6c1b a1080207	      ALU:	MULv	R0.___w = R8.wwww, C258.xxxx
                          						    	MUL_PREVs	R7.___w = R7.wwww
48: 14070707 001bc01b e1000307	      ALU:	MULv	R7.xyz_ = R0.wwww, R3.xyzz
      00003049 00002200     	EXEC_END ADDR(0x49) CNT(0x3) BOOL_ADDR(0x80)
49: c8070707 00b46cb4 ab020007	      ALU:	MULADDv	R7.xyz_ = R7.xzyy, R2.xzyy, C256.xxxx
4a: c8070707 00c0b4c0 eb010700	      ALU:	MULADDv	R7.xyz_ = R0.xyzz, R1.xyzz, R7.xzyy
4b: 0c878000 00c06cc6 a1070c06	      ALU:	MULv	export0.xyz_ = R7.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.zzzz	; COLOR
      00000000 00000000     	NOP
