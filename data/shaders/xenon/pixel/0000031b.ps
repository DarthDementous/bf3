//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $latten0       c2       1
//   $lcol          c3       3
//   $wlightpos     c6       3
//   $worldviewpos  c9       1
//   $matvalue      c10      1
//   $fresnelterm   c11      1
//   $compressedhdr c12      1
//   $diff          s0       1
//   $lmap          s1       1
//   $bump          s2       1
//   $screenshadmap s3       1
//   $envmap        s4       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s2
defconst $compressedhdr, float, vector, [1, 2], c12
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s4
defconst $fresnelterm, float, scalar, [1, 1], c11
defconst $invscreensize, float, vector, [1, 2], c1
defconst $latten0, float, vector, [1, 4], c2
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c10
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c9
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=12
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=5

// interpolators: 5 interpolants: 5, components: 20
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_color_centroid r4

def c252, 0.5, -127.5, 0.150000006, 2
def c253, 0, 1, 3.29999995, 1.5
def c254, 0.143999994, 0.298999995, 0.587000012, 255
def c255, -1, 0, 0, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     mul r5.xy, r5_abs.xy, c1.xy
/*    8   */     tfetch2D r6._yw_, r3.xy, tf2, FetchValidOnly=false
/*    9   */     tfetch2D r5._w__, r5.xy, tf3, FetchValidOnly=false
/*   10   */     serialize
                 mul r5.x, r1.w, r1.w
               + muls r6.w, r2.ww
/*   11   */     mad r6.x, r0.w, r0.w, r5.x
/*   12   */     add r5.xzw, r6.yxxz, r6.ywwz
/*    1.0 */     exec
/*   13   */     add r6.yz, r5.xxw, c255.x
/*   14   */     mul r7.yz, r6.yyz, r6.yyz
               + mulsc r7.x, c252.x, r5.y
/*   15   */     add r5.xw, -r7.yx, c253.y
/*   16   */     add r5.y, r5.x, -r7.z
/*   17   */     add r6.x, r0.w, c9.x
               + sqrt r6.w, r5_abs.y
/*   18   */     dp3 r10.x, r6.wyz, r0.zxy
/*    1.1 */     exec
/*   19   */     dp3 r10.y, r6.wyz, r1.zxy
/*   20   */     dp3 r10.z, r6.wyz, r2.zxy
               + rsq r10.w, r5_abs.z
/*   21   */     mul r11.xy, r10.zw, r2.w
/*   22   */     mul r7.xw, r10.xw, r0.w
/*   23   */     mul r11.zw, r10.yyyw, r1.w
/*   24   */     add r5.y, r7.x, r11.z
/*    2.0 */     exec
/*   25   */     add r5.y, r5.y, r11.x
/*   26   */     add r6.w, -c11.x, c252.w
               + adds r5.y, r5.yy
/*   27   */     mul r5.xyz, r5.y, r10.xzy
/*   28   */     add r8.y, -r5.z, r1.w
               + movs r4._, -r5.x
/*   29   */     add r8.z, -r5.y, r2.w
               + adds_prev r8.x, r0.w
/*   30   */     dp3 r0.x, r8.zxy, r8.zxy
/*    2.1 */     exec
/*   31   */     rsq r0.x, r0_abs.x
/*   32   */     mul r0.xyz, r8.xyz, r0.x
/*   33   */     cube r0, r0.zzxy, r0.yxz
/*   34   */     mov r8.z, r0.w
               + rcp r5.y, r0_abs.z
/*   35   */     mad r8.xy, r0.yx, r5.y, c253.w
/*   36   */     tfetch2D r5.xyz_, r3.zw, tf1
/*    3.0 */     exec
/*   37   */     tfetchCube r12, r8.xyz, tf4
/*   38   */     tfetch2D r3, r3.xy, tf0
/*   39   */     serialize
                 add r0.x, r2.w, c9.z
               + movs r4._, r1.w
/*   40   */     add r8.zw, -r0.x, c8.xxxy
               + adds_prev r0.z, c9.y
/*   41   */     add r2.xyz, r4.xyz, r4.xyz
               + subsc r8.x, c7.x, r0.z
/*   42   */     add r6.xy, -r6.x, c6.xy
               + subsc r8.y, c7.y, r0.z
/*    3.1 */     exec
/*   43   */     mul r7.xyz, r5.xyz, c0.x
               + movs r4.x, r12.w
/*   44   */     sgt r0.w, c253.y, r12.w
               + mulsc r4.y, c254.w, r4.x
/*   45   */     mul r0.xyz, r2.xyz, r3.xyz
               + movs r4._, r7.x
/*   46   */     dp3 r1.w, r0.zxy, c254.xyz
               + muls_prev r7.x, r3.x
/*   47   */     mul r1.xy, r6.xy, r6.xy
               + addsc r4.x, c252.x, r4.y
/*   48   */     dp2add r4.z, r8.yw, r8.yw, r1.y
/*    4.0 */     exec
/*   49   */     dp2add r1.z, r8.xz, r8.xz, r1.x
/*   50   */     frc r4.x, r4.x
               + rsq r1.x, r1_abs.z
/*   51   */     add r4.x, r4.y, -r4.x
               + rsq r1.y, r4_abs.z
/*   52   */     max r1.w, r1.w, c252.z
               + addsc r4.y, c252.y, r4.x
/*   53   */     mul r9.xy, r6.xy, r1.xy
               + log r4.x, r1_abs.z
/*   54   */     mul r8, r8.yxzw, r1.yxxy
               + log r4.z, r4_abs.z
/*    4.1 */     exec
/*   55   */     mul r4.xz, r4.xz, c2.xz
               + exp r4.y, r4.y
/*   56   */     mul r1.xyz, r4.y, r12.xyz
               + exp r4.y, r4.x
/*   57   */     cndgt r1.xyz, r0.w, r1.xyz, r12.xyz
/*   58   */     dp3 r4.x, r10.zxy, r10.zxy
               + exp r4.z, r4.z
/*   59   */     mul_sat r4.yz, r4.yyz, c2.yyw
               + rsq r4.x, r4_abs.x
/*   60   */     mul r6.xyz, r10.zxy, r4.x
               + movs r4._, r7.y
/*    5.0 */     exec
/*   61   */     cndeq r11.xyz, c253.xy, -r7.w, -r11.yyw
/*   62   */     dp3 r4.x, r11.yzx, r10.zyx
               + muls_prev r7.y, r3.y
/*   63   */     mul r3.xy, r9.xy, r6.y
               + movs r4._, r7.z
/*   64   */     dp2add_sat r6.y, r8.xw, r6.zx, r3.y
/*   65   */     dp2add_sat r6.x, r8.yz, r6.zx, r3.x
/*   66   */     add r4.xyz, -r4.xyz, c253.y
               + muls_prev r7.z, r3.z
/*    5.1 */     exec
/*   67   */     mul r2.xyz, r7.xzy, r2.xzy
               + muls r0.w, r4.xx
/*   68   */     min r1.w, r1.w, c253.y
               + mulsc r7.x, c5.x, r4.y
/*   69   */     mul r4.xy, r6.yx, r4.zy
               + mulsc r7.y, c5.y, r4.z
/*   70   */     dp2add r6.z, r7.xy, r6.xy, c253.x
/*   71   */     mul r1.xyz, r1.w, r1.xyz
               + mulsc r7.x, c3.x, r4.y
/*   72   */     mul r7.zw, r4.yyyx, c4.xxxy
               + mulsc r7.y, c3.y, r4.x
/*    6.0 */     exec
/*   73   */     add r6.xy, r7.xz, r7.yw
               + muls r0.w, r0.ww
/*   74   */     mul r0, r0, r6
/*   75   */     mad r0.xyz, r2.xzy, r5.w, r0.xyz
/*   76   */     addsc_sat r0.w, c11.x, r0.w
/*   77   */     mul r1.xyz, r1.xyz, r0.w
/*   78   */     mul r1.xyz, r1.xyz, c253.z
/*    6.1 */     exece
/*   79   */     mul r1.xyz, r1.xyz, c10.z
               + movs r4._, r3.w
/*   80   */     mad r0.xyz, r1.xyz, r5.xyz, r0.xyz
/*   81   */     mul oC0.xyz, r0.xyz, c12.x
               + muls_prev oC0.w, r4.w

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x001f SamplingPattern 0x000f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] color0 r4.xyzw

