//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   samplerCUBE $atmoscubemap;
//   float4 $depthdata;
//   float4 $depthdata2;
//   float4x4 $invmvp;
//   sampler2D $texture0;
//   float3 $viewpos;
//
//
// Registers:
//
//   Name          Reg   Size
//   ------------- ----- ----
//   $depthdata    c0       1
//   $depthdata2   c1       1
//   $invmvp       c2       4
//   $viewpos      c6       1
//   $texture0     s0       1
//   $atmoscubemap s1       1
//

// Shader type: pixel 

xps_3_0
defconst $atmoscubemap, samplercube, object, [1, 1], s1
defconst $depthdata, float, vector, [1, 4], c0
defconst $depthdata2, float, vector, [1, 4], c1
defconst $invmvp, float, matrix_columns, [4, 4], c2-5
defconst $texture0, sampler2d, object, [1, 1], s0
defconst $viewpos, float, vector, [1, 3], c6
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=6
// PsExportColorCount=1
// PsSampleControl=centers

// interpolators: 2 interpolants: 2, components: 4
// UsesMemexport: false
dcl_texcoord r0.xy
dcl_texcoord1 r1.xy

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 0, 0, 0, 0
def c251, 3, 0.5, 181.020004, 4
def c252, 0.800000012, 1.024e+009, 0.00999999978, 255
def c253, 1.06119578e+009, 1.5, 2, 1
def c254, 0, 1, -1000, 0.0399999991
def c255, -127.5, 0, 0, 0


/*    0.0 */     exec
/*    7   */     tfetch2D r1.__x_, r0.xy, tf0, FetchValidOnly=false
/*    8   */     serialize
                 cndeq r2, c254.xxxy, r1.zxy, c254.y
/*    9   */     dp4 r0.y, c3.zxyw, r2
/*   10   */     dp4 r0.z, c4.zxyw, r2
/*   11   */     dp4 r0.x, c5.zxyw, r2
/*   12   */     dp4 r0.w, c2.zxyw, r2
               + rcp r0.x, r0.x
/*    0.1 */     exec    // PredicateClean=false
/*   13   */     mad r2.yz, r0.wwz, r0.x, -c6.xxz
/*   14   */     mul r2.w, r0.y, r0.x
/*   15   */     sgt r0.x, c6.y, r2.w
               + subsc r2.x, -c6.y, -r2.w
/*   16   */     setp_ne r0._, r0.x
/*   17   */     (p0) seq r0.x, r1.z, c254.y
/*   18   */     (p0) setp_ne r0._, r0.x
/*    1.0 */     exec    // PredicateClean=false
/*   19   */     (p0) rcp r0.x, r2.x
/*   20   */     (p0) mul r0.x, r0.x, -c6.y
/*   21   */     (p0) mul r2.xyz, r0.x, r2.xyz
/*   22   */     (p0) addsc r2.w, c6.y, r2.x
/*   23   */     dp3 r1.y, r2.zyx, c6.zxy
/*   24   */     dp3 r0.x, c6.zxy, c6.zxy
               + setp_ne r0._, c1.w
/*    1.1 */     exec
/*   25   */     dp3 r1.x, r2.zyx, r2.zyx
               + subsc r4.w, -c252.y, -r0.x
/*   26   */     add r4.yz, r1.xxy, r1.xxy
               + mulsc r4.x, c251.w, r1.x
/*   27   */     mul r0.xy, r4.xz, r4.wz
/*   28   */     subs r0.x, r0.yx
/*   29   */     mul r3.x, c6.y, c6.y
               + sqrt r0.x, r0_abs.x
/*   30   */     add r0.x, -r4.z, r0.x
               + rcp r0.y, r4.y
/*    2.0 */     exec
/*   31   */     mul r0.z, r0.x, r0.y
/*   32   */     mul r0.yzw, r0.zzzy, r2.yyxz
/*   33   */     mul r0.x, r0.w, r0.x
/*   34   */     add r0.xyz, r0.xzy, c6.zyx
/*   35   */     cube r0, r0.xxzy, r0.yzx
/*   36   */     mov r4.z, r0.w
               + rcp r1.w, r0_abs.z
/*    2.1 */     exec
/*   37   */     mul r3.yz, r0.xxy, r1.w
/*   38   */     add r4.xyw, r3.zyx, c253.yyx
/*   39   */     tfetchCube r3.wxyz, r4.xyz, tf1
/*   40   */     serialize
                 mul r2.yz, r2.yyz, r2.yyz
               + rsq r0.x, r1_abs.x
/*   41   */     mul r1.y, r0.x, r2.x
               + rsq r0.x, r4_abs.w
/*   42   */     mul r1.w, r0.x, -c6.y
               + sqrt r0.w, r1_abs.x
/*    3.0 */ (p0) exec
/*   43   */     (p0) mulsc r0.x, c252.w, r3.x
/*   44   */     (p0) addsc r0.y, c251.y, r0.x
/*   45   */     (p0) frcs r0.y, r0.y
/*   46   */     (p0) add r0.y, r0.x, -r0.y
/*   47   */     (p0) addsc r0.x, c255.x, r0.y
/*   48   */     (p0) exp r0.x, r0.x
/*    3.1 */ (p0) exec
/*   49   */     (p0) mul r3.yzw, r0.x, r3.yyzw
/*    4.0 */     alloc colors
/*    4.1 */     exec
/*   50   */     sgt r2.x, c254.y, r1.z
               + mulsc_sat r0.x, c252.z, r0.w
/*   51   */     sgt r5.x, r1.y, r1.w
               + movs r0._, c0.y
/*   52   */     add r6.xz, r2.wy, r2.wz
               + muls_prev_sat r1.x, c251.z
/*   53   */     mul r0.z, r1.x, r0.x
               + rcp r0.y, c0.z
/*   54   */     sge r5.z, r1.z, c254.y
               + mulsc r4.w, c252.x, r0.y
/*   55   */     mul r0.x, r4.w, c6.y
               + adds r6.y, c6.yy
/*    5.0 */     exec
/*   56   */     mul r0.yw, r6.yyx, r0.y
               + mulsc r4.x, c252.x, r0.z
/*   57   */     add_sat r2.zw, -r0.yyyx, c253.zzzw
               + sqrt r2.y, r6_abs.z
/*   58   */     add r4.yz, r2.yyw, c254.zzw
               + subsc r0.z, c254.y, r1.w
/*   59   */     mad r1.z, r0.z, r4.z, r1.w
/*   60   */     max r0.z, r4.y, c254.x
/*   61   */     add r1.yz, -r1.z, r1.wwy
               + sqrt r0.z, r0_abs.z
/*    5.1 */     exec
/*   62   */     mul r0.z, r0.z, c0.y
               + rcp r1.y, r1.y
/*   63   */     mul_sat r5.y, r1.z, r1.y
/*   64   */     mad r1.w, -r5.y, c253.z, c251.x
/*   65   */     mul r1.yz, r5.xxy, r5.zzy
/*   66   */     mul r1.w, r1.z, r1.w
/*   67   */     mul r4.y, r1.w, r1.w
               + subsc_sat r4.z, -c254.y, -r0.w
/*    6.0 */     exec
/*   68   */     mul r0.xy, r4.yx, r4.yz
/*   69   */     subsc r0.w, c254.y, r0.x
/*   70   */     mad_sat r0.x, r0.w, r2.z, r0.x
/*   71   */     mul r0.x, r1.x, r0.x
/*   72   */     cndeq r0.z, r1.y, r0.z, r0.x
/*   73   */     add r0.x, r0.y, -r0.z
/*    6.1 */     exece
/*   74   */     mad r0.x, r0.x, r2.z, r0.z
/*   75   */     cndeq r3.x, r2.x, r0.z, r0.x
/*   76   */     mov oC0, r3.yzwx

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x0003 SamplingPattern 0x0003
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xy
// [1] texcoord1 r1.xy

