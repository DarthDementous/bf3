      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: c8070607 00ca1a00 e1020200	      ALU:	MULv	R7.xyz_ = R2.zwzz, R2.zwww
07: c8070607 00ca1ac0 eb010107	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R1.zwzz, R1.zwww
08: c80b0607 00cacb62 eb000007	      ALU:	MULADDv	R7.xy_w = R7.zyxx, R0.zwzz, R0.wwzz
09: 58810707 006c6c1b e0070787	      ALU:	ADDv	R7.x___ = R7.xxxx, R7.xxxx
                          						    	RECIPSQ_IEEE	R7.___w = abs(R7).wwww
0a: 58480703 001b6cb1 a0000887	      ALU:	ADDv	R3.___w = R0.wwww, C264.xxxx
                          						    	RECIPSQ_IEEE	R7.__z_ = abs(R7).yyyy
0b: c807060b 00cf1600 e1070000	      ALU:	MULv	R11.xyz_ = R7.wxzz, R0.zzww
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c807060a 00c81600 e1070100	      ALU:	MULv	R10.xyz_ = R7.xwzz, R1.zzww
0d: c8020607 046c1b00 e00a0100	      ALU:	ADDv	R7._y__ = -R10.xxxx, R1.wwww
0e: 140d0608 015ac7b1 e107020b	      ALU:	MULv	R8.x_zw = R7.zwwx, R2.wzzz
0f: 04140707 041b1b1b e0080200	      ALU:	ADDv	R7.__z_ = -R8.wwww, R2.wwww
                          						    	ADD_PREVs	R7.x___ = R0.wwww
10: 4c810000 00bebec6 f0070703	      ALU:	DOT3v	R0.x___ = R7.zxyy, R7.zxyy
                          						    	RECIP_IEEE	R0.___w = R3.zzzz
11: 58130009 001bb06c e1000380	      ALU:	MULv	R9.xy__ = R0.wwww, R3.xyyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
      05006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8070607 00c06c00 e1070000	      ALU:	MULv	R7.xyz_ = R7.xyzz, R0.xxxx
13: c80f0607 00a6cd00 f2070700	      ALU:	CUBEv	R7 = R7.zzxy, R7.yxzz
14: 4c14000c 001b1bc6 e2070787	      ALU:	MAXv	R12.__z_ = R7.wwww, R7.wwww
                          						    	RECIP_IEEE	R0.x___ = abs(R7).zzzz
15: c803060c 006d6cc6 cb0700fe	      ALU:	MULADDv	R12.xy__ = C510.zzzz, R7.yxxx, R0.xxxx
16: 102850a1 1f1ff447 00004000	      FETCH:	SAMPLE	R5._xyz = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 9048e181 1f1ff443 0000c000	      FETCH:	SAMPLE	R14.wxyz = R12.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 10087081 1f1ff688 00004000	      FETCH:	SAMPLE	R7.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: b8180081 1f1ffff8 00004000	      FETCH:	SAMPLE	R0.x___ = R4.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 10389121 1f1fffd8 00004000	      FETCH:	SAMPLE	R9.xw__ = R9.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: b4880008 046c6c83 000afe08	   (S)ALU:	ADDv	R8.___w = -C266.xxxx, C510.xxxx
                          						    	ADD_CONST_1	R0.___w = C264.y, R1.w
1c: 14070604 00c0c01b e0060602	      ALU:	ADDv	R4.xyz_ = R6.xyzz, R6.xyzz
1d: 04140609 00c61bc6 8503fd08	      ALU:	SETGTv	R9.__z_ = R3.zzzz, C509.wwww
                          						    	ADD_PREVs	R6.x___ = C264.zzzz
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: 08430d0c 046cb061 a0060709	      ALU:	ADDv	R12.xy__ = -R6.xxxx, C263.xyyy
                          						    	MULs	R13.__z_ = R9.yyxx
1f: bc410c06 006c1b43 a10eff05	      ALU:	MULv	R6.x___ = R14.xxxx, C511.wwww
                          						    	SUB_CONST_1	R12.__z_ = C261.x, R3.w
20: b0120306 00b16c04 65fd0efe	      ALU:	SETGTv	R6._y__ = C509.yyyy, R14.xxxx
                          						    	ADD_CONST_0	R3.x___ = C510.w, R6.x
21: bc810c03 006c0083 e8030005	      ALU:	FRACv	R3.x___ = R3.xxxx
                          						    	SUB_CONST_1	R12.___w = C261.y, R3.w
22: b8110d06 026c6c43 c0060306	      ALU:	ADDv	R6.x___ = R6.xxxx, -R3.xxxx
                          						    	SUB_CONST_0	R13.x___ = C262.x, R0.w
23: b8210d03 006cc683 8006fd06	      ALU:	ADDv	R3.x___ = R6.xxxx, C509.zzzz
                          						    	SUB_CONST_0	R13._y__ = C262.y, R0.w
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 38110206 046cc66c e1080203	      ALU:	MULv	R6.x___ = -R8.xxxx, R2.zzzz
                          						    	EXP_IEEE	R2.x___ = R3.xxxx
25: c8010606 04c6c66c eb0a0106	      ALU:	MULADDv	R6.x___ = R6.xxxx, -R10.zzzz, R1.zzzz
26: ac170e01 006c1545 c1020e00	      ALU:	MULv	R1.xyz_ = R2.xxxx, R14.yzww
                          						    	MUL_CONST_1	R14.x___ = C256.x, R5.y
27: c8070602 00b1c015 ee06010e	      ALU:	CNDGTv	R2.xyz_ = R14.yzww, R6.yyyy, R1.xyzz
28: c8010606 04c6c66c eb0b0006	      ALU:	MULADDv	R6.x___ = R6.xxxx, -R11.zzzz, R0.zzzz
29: ac280e0d 046cb146 8006fd00	      ALU:	ADDv	R13.___w = -R6.xxxx, C509.yyyy
                          						    	MUL_CONST_1	R14._y__ = C256.x, R5.z
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: ac470e01 00b8b847 c10d0d00	      ALU:	MULv	R1.xyz_ = R13.xwyy, R13.xwyy
                          						    	MUL_CONST_1	R14.__z_ = C256.x, R5.w
2b: c8010606 00b3b3c6 f10c0c01	      ALU:	DOT2ADDv	R6.x___ = R1.zzzz, R12.wyyy, R12.wyyy
2c: c8020606 006e6e6c f10c0c01	      ALU:	DOT2ADDv	R6._y__ = R1.xxxx, R12.zxxx, R12.zxxx
2d: 58170903 00c0c0b1 e1040786	      ALU:	MULv	R3.xyz_ = R4.xyzz, R7.xyzz
                          						    	RECIPSQ_IEEE	R9.x___ = abs(R6).yyyy
2e: 582e0900 00fcfc6c e10e0786	      ALU:	MULv	R0._yzw = R14.xxyz, R7.xxyz
                          						    	RECIPSQ_IEEE	R9._y__ = abs(R6).xxxx
2f: 40210601 00bec0b1 b003ff86	      ALU:	DOT3v	R1.x___ = R3.zxyy, C511.xyzz
                          						    	LOG_IEEE	R6._y__ = abs(R6).yyyy
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: 40180603 00b1b16c e1010186	      ALU:	MULv	R3.___w = R1.yyyy, R1.yyyy
                          						    	LOG_IEEE	R6.x___ = abs(R6).xxxx
31: a8880401 006c6c45 a201fd01	      ALU:	MAXv	R1.___w = R1.xxxx, C509.xxxx
                          						    	MUL_CONST_0	R4.___w = C257.x, R6.y
32: a8870201 00c0c0c4 e10d0901	      ALU:	MULv	R1.xyz_ = R13.xyzz, R9.xyzz
                          						    	MUL_CONST_0	R2.___w = C257.z, R6.x
33: 381f0a09 000dad1b e10c0904	      ALU:	MULv	R9 = R12.yxzw, R9.yxxy
                          						    	EXP_IEEE	R10.x___ = R4.wwww
34: 382c0a0a 00acb11b e1010a02	      ALU:	MULv	R10.__zw = R1.xxxy, R10.yyyy
                          						    	EXP_IEEE	R10._y__ = R2.wwww
35: c8030608 001a6c1a eb090b0a	      ALU:	MULADDv	R8.xy__ = R10.zwww, R9.zwww, R11.xxxx
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: c9030601 00b01900 a10a0100	      ALU:	MULv	R1.xy__ = R10.xyyy, C257.ywww CLAMP
37: c9060608 00bcc661 eb090808	      ALU:	MULADDv	R8._yz_ = R8.yyxx, R9.xxyy, R8.zzzz CLAMP
38: 14080602 001bb1c6 a301fd01	      ALU:	MINv	R2.___w = R1.wwww, C509.yyyy
39: 0c1c0801 04acb1c6 a001fd08	      ALU:	ADDv	R1.__zw = -R1.xxxy, C509.yyyy
                          						    	MUL_PREVs	R8.x___ = R8.zzzz
3a: c8030601 006dc700 e1080100	      ALU:	MULv	R1.xy__ = R8.yxxx, R1.wzzz
3b: c80c0609 0071ac00 a1010300	      ALU:	MULv	R9.__zw = R1.yyyx, C259.xxxy
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: ac170902 001bc041 c1020202	      ALU:	MULv	R2.xyz_ = R2.wwww, R2.xyzz
                          						    	MUL_CONST_1	R9.x___ = C258.x, R1.y
3d: ac230907 0019b080 81010402	      ALU:	MULv	R7.xy__ = R1.ywww, C260.xyyy
                          						    	MUL_CONST_1	R9._y__ = C258.y, R1.x
3e: c8040608 00b1b16c eb070807	      ALU:	MULADDv	R8.__z_ = R7.xxxx, R7.yyyy, R8.yyyy
3f: c8030608 00c41900 e0090900	      ALU:	ADDv	R8.xy__ = R9.xzzz, R9.ywww
40: c80f0601 00000000 e1030800	      ALU:	MULv	R1 = R3, R8
41: c80e0600 0001fcfc eb000401	      ALU:	MULADDv	R0._yzw = R1.xxyz, R0.yyzw, R4.xxyz
      00006042 00002200     	EXEC_END ADDR(0x42) CNT(0x6) BOOL_ADDR(0x80)
42: b9110001 001b6c80 80010afd	      ALU:	ADDv	R1.x___ = R1.wwww, C266.xxxx CLAMP
                          						    	SUB_CONST_0	R0.x___ = C509.y, R0.x
43: 14070601 00c06c1b e1020107	      ALU:	MULv	R1.xyz_ = R2.xyzz, R1.xxxx
44: 0c870601 00c0b11b a101fe06	      ALU:	MULv	R1.xyz_ = R1.xyzz, C510.yyyy
                          						    	MUL_PREVs	R6.___w = R6.wwww
45: 14070606 00c0c61b a1010906	      ALU:	MULv	R6.xyz_ = R1.xyzz, C265.zzzz
46: c8070606 00c01515 eb060500	      ALU:	MULADDv	R6.xyz_ = R0.yzww, R6.xyzz, R5.yzww
47: 0c878000 00c06c6c a1060b00	      ALU:	MULv	export0.xyz_ = R6.xyzz, C267.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
