//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   sampler2D $spotlightmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $latten0       c2       1
//   $lcol          c3       3
//   $wlightpos     c6       3
//   $worldviewpos  c9       1
//   $matvalue      c10      1
//   $fresnelterm   c11      1
//   $compressedhdr c12      1
//   $diff          s0       1
//   $lmap          s1       1
//   $bump          s2       1
//   $spec          s3       1
//   $screenshadmap s4       1
//   $spotlightmap  s5       1
//   $envmap        s6       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s2
defconst $compressedhdr, float, vector, [1, 2], c12
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s6
defconst $fresnelterm, float, scalar, [1, 1], c11
defconst $invscreensize, float, vector, [1, 2], c1
defconst $latten0, float, vector, [1, 4], c2
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c10
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $spec, sampler2d, object, [1, 1], s3
defconst $spotlightmap, sampler2d, object, [1, 1], s5
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c9
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=6

// interpolators: 6 interpolants: 6, components: 23
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4
dcl_color_centroid r5

def c252, -1, 2, 0, 0
def c253, 0.5, -127.5, 0.200000003, 0.150000006
def c254, 0, 1, 3.29999995, 1.5
def c255, 0.143999994, 0.298999995, 0.587000012, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     tfetch2D r7._yw_, r4.xy, tf2, FetchValidOnly=false
/*    9   */     serialize
                 mul r3.w, r1.w, r1.w
               + muls r7.w, r2.ww
/*   10   */     mad r7.x, r0.w, r0.w, r3.w
/*   11   */     add r7.xyz, r7.xyz, r7.wyz
/*   12   */     add r8.xy, r7.yz, c252.x
/*   13   */     dp2add r3.w, -r8.yx, r8.yx, c254.y
/*    1.0 */     exec
/*   14   */     add r7.y, r0.w, c9.x
               + sqrt r8.z, r3_abs.w
/*   15   */     dp3 r12.x, r8.zxy, r0.zxy
/*   16   */     dp3 r12.y, r8.zxy, r1.zxy
/*   17   */     dp3 r12.z, r8.zxy, r2.zxy
               + rsq r12.w, r7_abs.x
/*   18   */     mul r13.xy, r12.zw, r2.w
/*   19   */     mul r7.xw, r12.xw, r0.w
/*    1.1 */     exec
/*   20   */     mul r13.zw, r12.yyyw, r1.w
/*   21   */     add r3.w, r7.x, r13.z
/*   22   */     add r7.z, r3.w, r13.x
/*   23   */     add r3.w, r1.w, c9.y
               + adds r7.z, r7.zz
/*   24   */     mul r8.xyz, r7.z, r12.xzy
/*   25   */     add r1.y, -r8.z, r1.w
/*    2.0 */     exec
/*   26   */     mul r6.zw, r6_abs.xxxy, c1.xxxy
               + movs r5._, -r8.x
/*   27   */     add r1.z, -r8.y, r2.w
               + adds_prev r1.x, r0.w
/*   28   */     dp3 r0.x, r1.zxy, r1.zxy
               + rcp r0.y, r3.z
/*   29   */     mul r6.xy, r0.y, r3.xy
               + rsq r0.x, r0_abs.x
/*   30   */     mul r0.xyz, r1.xyz, r0.x
/*   31   */     cube r0, r0.zzxy, r0.yxz
/*    2.1 */     exec
/*   32   */     mov r8.z, r0.w
               + rcp r1.x, r0_abs.z
/*   33   */     mad r8.xy, r0.yx, r1.x, c254.w
/*   34   */     tfetch2D r1.x_yz, r4.xy, tf3
/*   35   */     tfetch2D r0._xyz, r4.zw, tf1
/*   36   */     tfetchCube r11, r8.xyz, tf6
/*   37   */     tfetch2D r4, r4.xy, tf0
/*    3.0 */     exec
/*   38   */     tfetch2D r1._w__, r6.zw, tf4
/*   39   */     tfetch2D r8.x_w_, r6.xy, tf5
/*   40   */     serialize
                 add r6.xyw, r5.xyz, r5.xyz
               + movs r5._, r2.w
/*   41   */     add r10.zw, -r7.y, c6.xxxy
               + adds_prev r5.z, c9.z
/*   42   */     sgt r6.z, r3.z, c253.z
               + subsc r10.x, c8.x, r5.z
/*   43   */     add r3.xy, -r3.w, c7.xy
               + subsc r10.y, c8.y, r5.z
/*    3.1 */     exec
/*   44   */     mul r2.xyz, r1.xzw, c253.x
               + mulsc r14.x, c0.x, r0.y
/*   45   */     sgt r1.w, c254.y, r11.w
               + mulsc r14.y, c0.x, r0.z
/*   46   */     mul r9.xyz, r6.xyw, r4.xyz
               + mulsc r14.z, c0.x, r0.w
/*   47   */     mul r14.xyz, r14.xyz, r4.xyz
               + movs r5.x, r11.w
/*   48   */     dp3 r0.x, r9.zxy, c255.xyz
               + mulsc r5.y, c255.w, r5.x
/*   49   */     mul r1.xz, r3.xy, r3.xy
               + addsc r5.x, c253.x, r5.y
/*    4.0 */     exec
/*   50   */     dp2add r2.w, r10.wy, r10.wy, r1.z
/*   51   */     dp2add r3.z, r10.zx, r10.zx, r1.x
/*   52   */     frc r5.x, r5.x
               + rsq r1.x, r3_abs.z
/*   53   */     max r0.x, r0.x, c253.w
               + rsq r1.z, r2_abs.w
/*   54   */     mul r7.xyz, r14.xzy, r6.xwy
               + log r3.z, r3_abs.z
/*   55   */     add r5.x, r5.y, -r5.x
               + log r3.w, r2_abs.w
/*    4.1 */     exec
/*   56   */     min r0.x, r0.x, c254.y
               + addsc r2.w, c253.y, r5.x
/*   57   */     mul r5.xy, r3.zw, c2.xz
               + exp r2.w, r2.w
/*   58   */     mul r3.yz, r3.xxy, r1.xxz
               + exp r5.x, r5.x
/*   59   */     mul r6.xyw, r2.w, r11.xyz
               + exp r5.y, r5.y
/*   60   */     cndgt r11.xyz, r1.w, r6.xyw, r11.xyz
/*   61   */     mul r10, r10.yxzw, r1.zxxz
               + mulsc_sat r1.z, c2.y, r5.x
/*    5.0 */     exec
/*   62   */     dp3 r1.x, r12.zxy, r12.zxy
               + mulsc_sat r1.w, c2.w, r5.y
/*   63   */     add r1.zw, -r1.wwwz, c254.y
               + rsq r1.x, r1_abs.x
/*   64   */     mul r4.xyz, r12.yzx, r1.x
/*   65   */     cndeq r6.xyw, c254.xy, -r7.w, -r13.yyw
/*   66   */     dp3 r3.x, r6.ywx, r12.zyx
/*   67   */     mul r3.zw, r3.yyyz, r4.x
               + mulsc r3.y, c253.x, r1.y
/*    5.1 */     exec
/*   68   */     dp2add_sat r8.y, r10.wx, r4.zy, r3.w
/*   69   */     dp2add_sat r1.x, r10.zy, r4.zy, r3.z
/*   70   */     add r6.xw, -r3.xy, c254.y
               + muls r6.y, r8.xz
/*   71   */     mul r3.xw, r6.yx, r6.zx
/*   72   */     mul r8.x, r3.x, r1.x
/*   73   */     mul r1.xy, r8.yx, r1.zw
               + movs r5._, -c11.x
/*    6.0 */     exec
/*   74   */     mul r10.zw, r1.yyyx, c4.xxxy
               + adds_prev r8.w, c252.y
/*   75   */     mul r3.xyz, r0.x, r11.xyz
               + mulsc r10.x, c3.x, r1.y
/*   76   */     mul r4.xy, r1.yz, c5.xy
               + mulsc r10.y, c3.y, r1.x
/*   77   */     mad r8.z, r4.y, r8.y, r4.x
/*   78   */     add r8.xy, r10.xz, r10.yw
               + muls r9.w, r3.ww
/*   79   */     mul r1, r9, r8
/*    6.1 */     exec
/*   80   */     mad r1.xyz, r7.xzy, r6.w, r1.xyz
/*   81   */     addsc_sat r0.x, c11.x, r1.w
/*   82   */     mul r3.xyz, r3.xyz, r0.x
/*   83   */     mul r2.xyz, r3.xyz, r2.xyz
/*   84   */     mul r2.xyz, r2.xyz, c254.z
/*   85   */     mul r2.xyz, r2.xyz, c10.z
               + movs r5._, r4.w
/*    7.0 */     exece
/*   86   */     mad r0.xyz, r2.xyz, r0.yzw, r1.xyz
/*   87   */     mul oC0.xyz, r0.xyz, c12.x
               + muls_prev oC0.w, r5.w
/*    7.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x003f SamplingPattern 0x001f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyzw
// [5] color0 r5.xyzw

