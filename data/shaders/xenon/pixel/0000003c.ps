//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   float $usendotl;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $matvalue      c3       1
//   $suncolour     c4       1
//   $sunintensity  c5       1
//   $usendotl      c6       1
//   $compressedhdr c7       1
//   $diff          s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $bump          s3       1
//   $spec          s4       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c7
defconst $diff, sampler2d, object, [1, 1], s0
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c3
defconst $spec, sampler2d, object, [1, 1], s4
defconst $suncolour, float, vector, [1, 3], c4
defconst $sunintensity, float, scalar, [1, 1], c5
defconst $usendotl, float, scalar, [1, 1], c6
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=8
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 4 interpolants: 4, components: 14
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1.xyz
dcl_texcoord2 r2
dcl_color_centroid r3

def c252, 0, 0, 0, 0
def c253, 0.5, 4, 10, 0.25
def c254, 0, 1, -1, 2
def c255, 0.0599999987, 0.289999992, 0.150000006, 0.300000012


/*    0.0 */     exec
/*    5   */     tfetch2D r7.xyz_, r2.xy, tf2
/*    6   */     tfetch2D r4.xyz_, r2.zw, tf1
/*    7   */     tfetch2D r8.yw__, r2.xy, tf3
/*    8   */     tfetch2D r6.xyz_, r2.xy, tf4
/*    9   */     tfetch2D r2, r2.xy, tf0
/*   10   */     serialize
                 mul r1.w, c3.x, c253.z
/*    0.1 */     exec
/*   11   */     dp3 r0.w, r0.zxy, r0.zxy
/*   12   */     add r5.xyz, r3.zyx, r3.zyx
/*   13   */     mul r5.xyz, r5.zyx, r2.xyz
/*   14   */     dp3 r3.x, r6.zyx, c255.xyz
/*   15   */     mad r2.xy, r8.xy, c254.w, c254.z
/*   16   */     mul r6.xyz, r6.zyx, c253.x
/*    1.0 */     exec
/*   17   */     mul r6.xyz, r6.xyz, r4.zyx
               + rsq r3.y, r0_abs.w
/*   18   */     mul r0.xyz, r3.y, r0.xyz
               + movs r3._, c1.x
/*   19   */     dp2add r0.w, -r2.yx, r2.yx, c254.y
/*   20   */     mul r3.x, r1.w, r3.x
               + muls_prev r3.y, c253.z
/*   21   */     add r3.xy, r3.xy, c254.y
               + sqrt r2.z, r0_abs.w
/*   22   */     dp3_sat r0.z, r0.zxy, r2.zxy
               + mulsc r0.x, c2.x, r3.y
/*    1.1 */     exec
/*   23   */     max r0.y, r3.x, c254.x
               + log r7.w, r0.z
/*   24   */     mul r0, r0.yx, r7.wxyz
               + movs_sat r3.x, r1.z
/*   25   */     mad r4.xyz, r4.xyz, c0.x, r0.yzw
/*   26   */     mul r0.yzw, r6.xxyz, c253.y
               + exp r0.x, r0.x
/*   27   */     mul r0.xyz, r0.yzw, r0.x
               + movs r3._, r2.w
/*   28   */     mul r0.xyz, r0.xyz, c4.zyx
               + muls_prev r3.y, r3.w
/*    2.0 */     exec    // PredicateClean=false
/*   29   */     mul r0.xyz, r0.xyz, c5.x
               + setp_ne r3._, c6.x
/*   30   */     mad r0.xyz, r5.xyz, r4.xyz, r0.zyx
/*    2.1 */ (p0) exec
/*   31   */     (p0) mul r3.z, c5.x, c4.x
/*   32   */     (p0) cndeq r4.xyz, c254.xxy, -r1.zx, r1.y
/*   33   */     (p0) dp3_sat r1.w, r2.zxy, r1.zxy
               + (p0) movs_sat r3.w, -r1.z
/*   34   */     (p0) dp3_sat r0.w, r2.zxy, r4.xyz
               + (p0) movs r3._, r1.w
/*   35   */     (p0) add r3.w, r0.w, -r3.w
               + (p0) adds_prev r3.x, -r3.x
/*   36   */     (p0) mad r3.x, r3.w, c253.w, r3.x
/*    3.0 */ (p0) exec
/*   37   */     (p0) mul r3.z, r3.z, r3.x
/*   38   */     (p0) mul r1.xw, r3.zx, c255.w
/*   39   */     (p0) mul r3.xz, r1.w, c4.yz
/*   40   */     (p0) mul r1.yz, r3.zzx, c5.x
/*   41   */     (p0) add r0.xyz, r0.xyz, r1.xzy
/*    3.1 */     alloc colors
/*    4.0 */     exece
/*   42   */     mul r3.xzw, r0.xyyz, c7.x
/*   43   */     mov oC0, r3.xzwy
/*    4.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x000f SamplingPattern 0x0007
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyz
// [2] texcoord2 r2.xyzw
// [3] color0 r3.xyzw

