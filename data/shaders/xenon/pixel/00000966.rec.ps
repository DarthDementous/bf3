      00096009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: 100000c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: c8040800 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
0b: 584c0007 007106c6 2107fd80	      ALU:	MULv	R7.__zw = C263.yyyx, C509.zzzw
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0c: c8080804 011bb1c6 ab000707	      ALU:	MULADDv	R4.___w = -R7.zzzz, R0.wwww, C263.yyyy
0d: a887000c 00626202 c0080807	      ALU:	ADDv	R12.xyz_ = R8.zyxx, R8.zyxx
                          						    	MUL_CONST_0	R0.___w = C263.w, R0.z
0e: c8030808 001a6d00 e1000000	      ALU:	MULv	R8.xy__ = R0.zwww, R0.yxxx
      0554600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: c803080f 006d1bb0 eb080406	      ALU:	MULADDv	R15.xy__ = R6.xyyy, R8.yxxx, R4.wwww
10: 1040a0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R6.xyx CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: b82080c1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R8.__x_ = R6.zwz CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: 1060e1e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R14.xyz_ = R15.xyx CONST(6) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
13: 105081e1 1f1fffd9 00004000	      FETCH:	SAMPLE	R8.yw__ = R15.xyx CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: 103060e1 1f1ff447 00004000	      FETCH:	SAMPLE	R6._xyz = R7.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: 14040800 00bebe6c d0040401	   (S)ALU:	DOT3v	R0.__z_ = R4.zxyy, R4.zxyy
16: c8030807 00b06cb1 8b08fcfc	      ALU:	MULADDv	R7.xy__ = C508.yyyy, R8.xyyy, C508.xxxx
17: 0c110008 0062c01b 900efefd	      ALU:	DOT3v	R8.x___ = R14.zyxx, C510.xyzz
                          						    	MUL_PREVs	R0.x___ = C509.wwww
18: a8220b00 001b6c47 e1070800	      ALU:	MULv	R0._y__ = R7.wwww, R8.xxxx
                          						    	MUL_CONST_0	R11._y__ = C256.x, R6.w
19: 58430008 00b0b0c6 e1070780	      ALU:	MULv	R8.xy__ = R7.xyyy, R7.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
1a: b847000d 00c6c088 c10004fd	      ALU:	MULv	R13.xyz_ = R0.zzzz, R4.xyzz
                          						    	SUB_CONST_0	R0.__z_ = C509.y, R8.x
      0000601b 00001200     	EXEC ADDR(0x1b) CNT(0x6) BOOL_ADDR(0x80)
1b: b8830400 006db18a 8000fdfd	      ALU:	ADDv	R0.xy__ = R0.yxxx, C509.yyyy
                          						    	SUB_CONST_0	R4.___w = C509.y, R8.z
1c: a8840000 02c6b141 c0000802	      ALU:	ADDv	R0.__z_ = R0.zzzz, -R8.yyyy
                          						    	MUL_CONST_0	R0.___w = C258.x, R0.y
1d: a04e070a 001bfcc6 e1000a80	      ALU:	MULv	R10._yzw = R0.wwww, R10.xxyz
                          						    	SQRT_IEEE	R7.__z_ = abs(R0).zzzz
1e: a8410b04 00bebe46 f0070100	      ALU:	DOT3v	R4.x___ = R7.zxyy, R1.zxyy
                          						    	MUL_CONST_0	R11.__z_ = C256.x, R6.z
1f: a8840b04 00bebe45 f0070300	      ALU:	DOT3v	R4.__z_ = R7.zxyy, R3.zxyy
                          						    	MUL_CONST_0	R11.___w = C256.x, R6.y
20: 14020804 00bebec6 f0070204	      ALU:	DOT3v	R4._y__ = R7.zxyy, R2.zxyy
      00006021 00001200     	EXEC ADDR(0x21) CNT(0x6) BOOL_ADDR(0x80)
21: 0c140a00 00b11b1b e1040203	      ALU:	MULv	R0.__z_ = R4.yyyy, R2.wwww
                          						    	MUL_PREVs	R10.x___ = R3.wwww
22: c801080b 006c1bc6 eb040100	      ALU:	MULADDv	R11.x___ = R0.zzzz, R4.xxxx, R1.wwww
23: c80f080a 00f8d000 e00b0a00	      ALU:	ADDv	R10 = R11.xwyz, R10.xywz
24: 0018000b 006c6c6c a200fd0a	      ALU:	MAXv	R11.___w = R0.xxxx, C509.xxxx
                          						    	ADDs	R0.x___ = R10.xxxx
25: c8070800 006cc000 e1000400	      ALU:	MULv	R0.xyz_ = R0.xxxx, R4.xyzz
26: c802080b 04b11b00 e0000200	      ALU:	ADDv	R11._y__ = -R0.yyyy, R2.wwww
      00006027 00001200     	EXEC ADDR(0x27) CNT(0x6) BOOL_ADDR(0x80)
27: 15020800 01bebe6c f00d0700	      ALU:	DOT3v	R0._y__ = R13.zxyy, R7.zxyy CLAMP
28: 04140b0b 04c61b1b e0000301	      ALU:	ADDv	R11.__z_ = -R0.zzzz, R3.wwww
                          						    	ADD_PREVs	R11.x___ = R1.wwww
29: 40210000 00bebeb1 f00b0b00	      ALU:	DOT3v	R0.x___ = R11.zxyy, R11.zxyy
                          						    	LOG_IEEE	R0._y__ = R0.yyyy
2a: 58100008 0000006c e2080880	      ALU:	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
2b: c80f080b 0000ac00 e10b0000	      ALU:	MULv	R11 = R11, R0.xxxy
2c: c80f0800 00a6cd00 f20b0b00	      ALU:	CUBEv	R0 = R11.zzxy, R11.yxzz
      0250602d 00001200     	EXEC ADDR(0x2d) CNT(0x6) BOOL_ADDR(0x80)
2d: 4c140101 001b1bc6 e2000080	      ALU:	MAXv	R1.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
2e: c8030801 006d6cc6 cb0001fc	      ALU:	MULADDv	R1.xy__ = C508.zzzz, R0.yxxx, R1.xxxx
2f: 9078d021 1f1ffe88 0000c000	      FETCH:	SAMPLE	R13.xyz_ = R1.xyz CONST(7) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
30: 101801e1 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R15.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
31: 16120808 001b1bc6 e1000805	   (S)ALU:	MULv	R8._y__ = R0.wwww, R8.wwww
                          						    	MAXs	R8.x___ = R5.zzzz CLAMP
32: 14070801 0062c6c6 a10efd0c	      ALU:	MULv	R1.xyz_ = R14.zyxx, C509.zzzz
      00006033 00001200     	EXEC ADDR(0x33) CNT(0x6) BOOL_ADDR(0x80)
33: 0c17000b 00c0626c e1010d00	      ALU:	MULv	R11.xyz_ = R1.xyzz, R13.zyxx
                          						    	MUL_PREVs	R0.x___ = R0.xxxx
34: 14070801 00c0b7b1 e101060c	      ALU:	MULv	R1.xyz_ = R1.xyzz, R6.wzyy
35: 0c270001 00c06cb1 a101ff00	      ALU:	MULv	R1.xyz_ = R1.xyzz, C511.xxxx
                          						    	MUL_PREVs	R0._y__ = R0.yyyy
36: 38280808 00b11b1b e108040b	      ALU:	MULv	R8.___w = R8.yyyy, R4.wwww
                          						    	EXP_IEEE	R8._y__ = R11.wwww
37: 14070801 00c0b16c e101080c	      ALU:	MULv	R1.xyz_ = R1.xyzz, R8.yyyy
38: 0c470001 00c062c6 a1010300	      ALU:	MULv	R1.xyz_ = R1.xyzz, C259.zyxx
                          						    	MUL_PREVs	R0.__z_ = R0.zzzz
      00003039 00001000     	EXEC ADDR(0x39) CNT(0x3)
39: 70070801 00c06c6c 81010405	      ALU:	MULv	R1.xyz_ = R1.xyzz, C260.xxxx
3a: c8070801 00b4c6b4 ab0b0701	      ALU:	MULADDv	R1.xyz_ = R1.xzyy, R11.xzyy, C263.zzzz
3b: c8070801 00c0c965 eb000a01	      ALU:	MULADDv	R1.xyz_ = R1.yzxx, R0.xyzz, R10.ywzz
      0000603c 00005600     	COND_PRED_EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80) COND(1)
3c: c8020808 186c6c00 21040300	      ALU:	MULv	R8._y__ = C260.xxxx, C259.xxxx COND(1)
3d: c8070806 1abc6eb1 6cfd0505	      ALU:	CNDEv	R6.xyz_ = R5.yyyy, C509.xxyy, -R5.zxxx COND(1)
3e: 17480804 19bebec6 f0070505	      ALU:	DOT3v	R4.___w = R7.zxyy, R5.zxyy CLAMP COND(1)
                          						    	MAXs	R8.__z_ = -R5.zzzz CLAMP
3f: 15080800 18bec01b f0070604	      ALU:	DOT3v	R0.___w = R7.zxyy, R6.xyzz CLAMP COND(1)
40: 04140808 1b1bc66c e0000808	      ALU:	ADDv	R8.__z_ = R0.wwww, -R8.zzzz COND(1)
                          						    	ADD_PREVs	R8.x___ = -R8.xxxx
41: c8010808 18c61b6c ab08fc08	      ALU:	MULADDv	R8.x___ = R8.xxxx, R8.zzzz, C508.wwww COND(1)
      00005042 00005600     	COND_PRED_EXEC ADDR(0x42) CNT(0x5) BOOL_ADDR(0x80) COND(1)
42: c8020808 18b16c00 e1080800	      ALU:	MULv	R8._y__ = R8.yyyy, R8.xxxx COND(1)
43: c8090805 186d1b00 a108fe00	      ALU:	MULv	R5.x__w = R8.yxxx, C510.wwww COND(1)
44: c8030808 181bc500 a1050300	      ALU:	MULv	R8.xy__ = R5.wwww, C259.yzzz COND(1)
45: c8060805 18616c00 a1080400	      ALU:	MULv	R5._yz_ = R8.yyxx, C260.xxxx COND(1)
46: c8070801 18c0b400 e0010500	      ALU:	ADDv	R1.xyz_ = R1.xyzz, R5.xzyy COND(1)
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00246047 00001200     	EXEC ADDR(0x47) CNT(0x6) BOOL_ADDR(0x80)
47: c8030808 00b0b000 a1890600	      ALU:	MULv	R8.xy__ = abs(R9).xyyy, C262.xyyy
48: 10880101 1f1ff7ff 00004000	      FETCH:	SAMPLE	R0.___w = R8.xyx CONST(8) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
49: b4120808 001bb143 80020f0f	   (S)ALU:	ADDv	R8._y__ = R2.wwww, C271.yyyy
                          						    	ADD_CONST_1	R8.x___ = C271.x, R1.w
4a: b4430806 04b1b0c3 a0080d0f	      ALU:	ADDv	R6.xy__ = -R8.yyyy, C269.xyyy
                          						    	ADD_CONST_1	R8.__z_ = C271.z, R3.w
4b: b8430603 046cb04a 80080c0e	      ALU:	ADDv	R3.xy__ = -R8.xxxx, C268.xyyy
                          						    	SUB_CONST_0	R6.__z_ = C270.x, R8.z
4c: b8880601 00bebe8a d004040e	      ALU:	DOT3v	R1.___w = R4.zxyy, R4.zxyy
                          						    	SUB_CONST_0	R6.___w = C270.y, R8.z
      0000604d 00001200     	EXEC ADDR(0x4d) CNT(0x6) BOOL_ADDR(0x80)
4d: 58430808 006d6d1b e1030381	      ALU:	MULv	R8.xy__ = R3.yxxx, R3.yxxx
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R1).wwww
4e: c8010808 0019196c f1060608	      ALU:	DOT2ADDv	R8.x___ = R8.xxxx, R6.ywww, R6.ywww
4f: c8020808 00c4c4b1 f1060608	      ALU:	DOT2ADDv	R8._y__ = R8.yyyy, R6.xzzz, R6.xzzz
50: 58100508 000000b1 e2080888	      ALU:	RECIPSQ_IEEE	R5.x___ = abs(R8).yyyy
51: 58200508 0000006c e2080888	      ALU:	RECIPSQ_IEEE	R5._y__ = abs(R8).xxxx
52: 40200808 000000b1 e2080888	      ALU:	LOG_IEEE	R8._y__ = abs(R8).yyyy
      00006053 00001200     	EXEC ADDR(0x53) CNT(0x6) BOOL_ADDR(0x80)
53: 40140803 001bc66c a100fd88	      ALU:	MULv	R3.__z_ = R0.wwww, C509.zzzz
                          						    	LOG_IEEE	R8.x___ = abs(R8).xxxx
54: a84d0802 0084c649 c1040808	      ALU:	MULv	R2.x_zw = R4.xzzy, R8.zzzz
                          						    	MUL_CONST_0	R8.__z_ = C264.x, R8.y
55: a8230803 00b0b0c8 c1030508	      ALU:	MULv	R3.xy__ = R3.xyyy, R5.xyyy
                          						    	MUL_CONST_0	R8._y__ = C264.z, R8.x
56: 381f0804 000dadc6 e1060508	      ALU:	MULv	R4 = R6.yxzw, R5.yxxy
                          						    	EXP_IEEE	R8.x___ = R8.zzzz
57: 38230802 00b06cb1 e1030208	      ALU:	MULv	R2.xy__ = R3.xyyy, R2.xxxx
                          						    	EXP_IEEE	R8._y__ = R8.yyyy
58: c9020802 0018c7b1 f1040202	      ALU:	DOT2ADDv	R2._y__ = R2.yyyy, R4.xwww, R2.wzzz CLAMP
      00006059 00001200     	EXEC ADDR(0x59) CNT(0x6) BOOL_ADDR(0x80)
59: c9010802 00c5c76c f1040202	      ALU:	DOT2ADDv	R2.x___ = R2.xxxx, R4.yzzz, R2.wzzz CLAMP
5a: c9030803 00b01900 a1080800	      ALU:	MULv	R3.xy__ = R8.xyyy, C264.ywww CLAMP
5b: c8070808 04cdb100 a003fd00	      ALU:	ADDv	R8.xyz_ = -R3.yxzz, C509.yyyy
5c: a8430303 00b06d49 c102080b	      ALU:	MULv	R3.xy__ = R2.xyyy, R8.yxxx
                          						    	MUL_CONST_0	R3.__z_ = C267.x, R8.y
5d: c8040802 00b0b06c 91030afd	      ALU:	DOT2ADDv	R2.__z_ = C509.xxxx, R3.xyyy, C266.xyyy
5e: a8830303 00b0b088 8103090b	      ALU:	MULv	R3.xy__ = R3.xyyy, C265.xyyy
                          						    	MUL_CONST_0	R3.___w = C267.y, R8.x
      0000605f 00002200     	EXEC_END ADDR(0x5f) CNT(0x6) BOOL_ADDR(0x80)
5f: c80c0803 0006ac00 e1030200	      ALU:	MULv	R3.__zw = R3.zzzw, R2.xxxy
60: c8030802 00c41900 e0030300	      ALU:	ADDv	R2.xy__ = R3.xzzz, R3.ywww
61: c8070800 00b4c000 e1000200	      ALU:	MULv	R0.xyz_ = R0.xzyy, R2.xyzz
62: c8070808 00c6b4c0 eb080100	      ALU:	MULADDv	R8.xyz_ = R0.xyzz, R8.zzzz, R1.xzyy
63: c8070808 00b46c00 a1081000	      ALU:	MULv	R8.xyz_ = R8.xzyy, C272.xxxx
64: c80f8000 00000000 e2080800	      ALU:	MAXv	export0 = R8, R8	; COLOR
      00000000 00000000     	NOP
