//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $height;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $suncolour     c3       1
//   $sunintensity  c4       1
//   $invscreensize c5       1
//   $matvalue      c6       1
//   $latten0       c7       1
//   $lcol          c8       3
//   $wlightpos     c11      3
//   $worldviewpos  c14      1
//   $compressedhdr c15      1
//   $height        s0       1
//   $diff          s1       1
//   $lmap          s2       1
//   $incan         s3       1
//   $spec          s4       1
//   $envmap        s5       1
//   $screenshadmap s6       1
//

// Shader type: pixel 

xps_3_0
defconst $compressedhdr, float, vector, [1, 2], c15
defconst $diff, sampler2d, object, [1, 1], s1
defconst $envmap, samplercube, object, [1, 1], s5
defconst $height, sampler2d, object, [1, 1], s0
defconst $incan, sampler2d, object, [1, 1], s3
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c5
defconst $latten0, float, vector, [1, 4], c7
defconst $lcol, float, matrix_columns, [4, 4], c8-10
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c6
defconst $screenshadmap, sampler2d, object, [1, 1], s6
defconst $spec, sampler2d, object, [1, 1], s4
defconst $suncolour, float, vector, [1, 3], c3
defconst $sunintensity, float, scalar, [1, 1], c4
defconst $wlightpos, float, matrix_columns, [4, 4], c11-13
defconst $worldviewpos, float, vector, [1, 3], c14
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=13
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 29
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5.xyz
dcl_texcoord6 r6
dcl_color_centroid r7

def c252, 0, 0, 0, 0
def c253, 4, 0.5, 10, 0
def c254, 0.0599999987, 0.150000006, 0.289999992, 1
def c255, 1.5, 0, 0, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    6   */     tfetch2D r9.x___, r6.xy, tf0, FetchValidOnly=false
/*    7   */     serialize
                 addsc r4.w, c14.x, r1.w
/*    8   */     add r0.w, r2.w, c14.y
               + muls r5.y, r3.zw
/*    9   */     mul r10.zw, r8_abs.xxxy, c5.xxxy
               + movs r7._, r3.w
/*   10   */     mul r5.xz, c6.yx, c253.yz
               + adds_prev r5.w, c14.z
/*   11   */     mad r9.z, r9.x, c6.y, -r5.x
/*    1.0 */     exec
/*   12   */     add r12.zw, -r5.w, c13.xxxy
               + muls r5.w, r3.zz
/*   13   */     dp3 r0.z, r0.zxy, r0.zxy
               + subsc r12.x, c12.x, r0.w
/*   14   */     mad r5.yw, r2.z, r2.wwz, r5.yyw
/*   15   */     add r11.xy, -r4.w, c11.xy
               + rsq r0.z, r0_abs.z
/*   16   */     mad r5.xy, r1.z, r1.wz, r5.yw
/*   17   */     mul r8.xy, r11.xy, r11.xy
               + subsc r12.y, c12.y, r0.w
/*    1.1 */     exec
/*   18   */     dp2add r4.w, r12.yw, r12.yw, r8.y
/*   19   */     dp2add r5.w, r12.xz, r12.xz, r8.x
/*   20   */     add r8.x, r5.x, r5.x
               + rsq r8.y, r5_abs.y
/*   21   */     mul r8.zw, r8.xxxy, r2.z
/*   22   */     mul r10.xy, r8.xy, r1.z
/*   23   */     mul r8.xy, r8.xy, r3.z
               + mulsc r0.w, c6.w, r0.z
/*    2.0 */     exec
/*   24   */     add r3.z, -r8.x, r3.w
               + rsq r9.x, r5_abs.w
/*   25   */     add r3.x, -r10.x, r1.w
               + rsq r9.y, r4_abs.w
/*   26   */     mul r11.zw, r0.wwwz, r0.xxxy
               + movs r7._, -r8.z
/*   27   */     mul r11, r11, r9.xyz
               + adds_prev r3.y, r2.w
/*   28   */     dp3 r0.x, r3.xyz, r3.xyz
/*   29   */     add r2.xy, r11.zw, r6.xy
               + rsq r0.x, r0_abs.x
/*    2.1 */     exec
/*   30   */     mul r0.xyz, r3.xyz, r0.x
/*   31   */     cube r0, r0.zzxy, r0.yxz
/*   32   */     mov r1.z, r0.w
               + rcp r1.x, r0_abs.z
/*   33   */     mad r1.xy, r0.yx, r1.x, c255.x
/*   34   */     tfetchCube r3.xyz_, r1.xyz, tf5
/*   35   */     tfetch2D r1.xyz_, r6.xy, tf3
/*    3.0 */     exec
/*   36   */     tfetch2D r13.___w, r10.zw, tf6
/*   37   */     tfetch2D r6.xy_z, r6.zw, tf2
/*   38   */     tfetch2D r0.x_yz, r2.xy, tf4
/*   39   */     tfetch2D r2, r2.xy, tf1
/*   40   */     serialize
                 mul r10.w, c1.x, c253.z
/*   41   */     mul oC0.w, r2.w, r7.w
/*    3.1 */     exec
/*   42   */     dp3 r0.y, r4.zxy, r4.zxy
/*   43   */     add r7.xyz, r7.xyz, r7.xyz
               + mulsc r5.x, c253.y, r0.x
/*   44   */     mul r2.xyz, r7.xyz, r2.xyz
               + mulsc r5.y, c253.y, r0.z
/*   45   */     dp3 r7.x, r0.wxz, c254.xyz
               + rsq r1.w, r0_abs.y
/*   46   */     mul r10.z, r5.z, r7.x
               + mulsc r5.z, c253.y, r0.w
/*   47   */     mul r13.xyz, r5.xyz, r6.xyw
               + log r7.y, r5_abs.w
/*    4.0 */     exec
/*   48   */     add r7.zw, r10.zzzw, c254.w
               + log r7.x, r4_abs.w
/*   49   */     mul r0, r13.wxyz, c253.yx
               + mulsc r2.w, c2.x, r7.w
/*   50   */     max r6.z, r7.z, c253.w
               + mulsc r7.z, c7.x, r7.y
/*   51   */     mul r1.xyz, r2.w, r1.xyz
               + mulsc r7.y, c7.z, r7.x
/*   52   */     mad r1.xyz, r6.xwy, c0.x, r1.xzy
/*   53   */     mul r9, r12.yxzw, r9.yxxy
               + exp r7.x, r7.z
/*    4.1 */     exec
/*   54   */     mul r7.zw, r11.xxxy, r10.y
               + exp r7.y, r7.y
/*   55   */     dp2add_sat r6.x, r9.yz, r8.wy, r7.z
/*   56   */     dp2add_sat r6.y, r9.xw, r8.wy, r7.w
/*   57   */     mul_sat r7.xy, r7.xy, c7.yw
               + movs r7._, r1.w
/*   58   */     add r7.xy, -r7.xy, c254.w
               + muls_prev_sat r7.z, r4.z
/*   59   */     mul r4.xy, r7.xy, c10.xy
               + log r7.z, r7.z
/*    5.0 */     exec
/*   60   */     dp2add r4.z, r4.xy, r6.xy, c253.w
/*   61   */     mul r7.yzw, r6.xxyz, r7.xxyz
               + movs r7.x, r0.x
/*   62   */     mul r3.xyz, r5.xzy, r3.xzy
               + mulsc r5.x, c8.x, r7.y
/*   63   */     mul r5.zw, r7.yyyz, c9.xxxy
               + exp r0.x, r7.w
/*   64   */     mul r0.xyz, r0.yzw, r0.x
               + mulsc r5.y, c8.y, r7.z
/*   65   */     mul r7.yzw, r0.xxzy, c3.xxzy
               + adds r4.x, r5.xy
/*    5.1 */     exece
/*   66   */     mul r0.xyz, r7.yzw, c4.x
               + adds r4.y, r5.zw
/*   67   */     mul r7.yzw, r2.xxyz, r4.xxyz
               + subsc r7.x, c254.w, r7.x
/*   68   */     mad r0.xyz, r3.xyz, c6.z, r0.xyz
/*   69   */     mad r0.xyz, r2.xyz, r1.xzy, r0.xzy
/*   70   */     mad r7.xyz, r7.x, r0.xyz, r7.yzw
/*   71   */     mul oC0.xyz, r7.xyz, c15.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyz
// [6] texcoord6 r6.xyzw
// [7] color0 r7.xyzw

