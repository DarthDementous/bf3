      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 100000c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: 08840400 00bebecb f0000003	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
                          						    	MULs	R4.___w = R3.wwzz
06: 58490005 006db0c6 2101fe80	      ALU:	MULv	R5.x__w = C257.yxxx, C510.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
07: c8040807 011bb16c ab000105	      ALU:	MULADDv	R7.__z_ = -R5.xxxx, R0.wwww, C257.yyyy
08: a8870005 00c0c002 c0080801	      ALU:	ADDv	R5.xyz_ = R8.xyzz, R8.xyzz
                          						    	MUL_CONST_0	R0.___w = C257.w, R0.z
09: c8030800 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
      0024600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: c80c0807 00acc6ac eb000706	      ALU:	MULADDv	R7.__zw = R6.xxxy, R0.xxxy, R7.zzzz
0b: b840a0e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R7.zwz CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: c8010800 00bebe00 f0040400	   (S)ALU:	DOT3v	R0.x___ = R4.zxyy, R4.zxyy
0d: c8010808 00c61b1b eb020204	      ALU:	MULADDv	R8.x___ = R4.wwww, R2.zzzz, R2.wwww
0e: 58120000 00bec06c b00aff80	      ALU:	DOT3v	R0._y__ = R10.zxyy, C511.xyzz
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
0f: c9010800 006cc600 e1000400	      ALU:	MULv	R0.x___ = R0.xxxx, R4.zzzz CLAMP
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: c8020800 001bb1b1 cb0500fd	      ALU:	MULADDv	R0._y__ = C509.yyyy, R5.wwww, R0.yyyy
11: c8010808 00c61b6c eb010108	      ALU:	MULADDv	R8.x___ = R8.xxxx, R1.zzzz, R1.wwww
12: 00180804 00b1c66c a200fe08	      ALU:	MAXv	R4.___w = R0.yyyy, C510.zzzz
                          						    	ADDs	R8.x___ = R8.xxxx
13: c8010804 046cc61b eb080101	      ALU:	MULADDv	R4.x___ = R1.wwww, -R8.xxxx, R1.zzzz
14: c8020804 046cc61b eb080202	      ALU:	MULADDv	R4._y__ = R2.wwww, -R8.xxxx, R2.zzzz
15: c8040804 046cc61b eb080303	      ALU:	MULADDv	R4.__z_ = R3.wwww, -R8.xxxx, R3.zzzz
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: 40210008 00bebe6c f0040400	      ALU:	DOT3v	R8.x___ = R4.zxyy, R4.zxyy
                          						    	LOG_IEEE	R0._y__ = R0.xxxx
17: 58130002 00b0b06c a1890488	      ALU:	MULv	R2.xy__ = abs(R9).xyyy, C260.xyyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R8).xxxx
18: c80f0801 0000ac00 e1040000	      ALU:	MULv	R1 = R4, R0.xxxy
19: c80f0800 00a6cd00 f2010100	      ALU:	CUBEv	R0 = R1.zzxy, R1.yxzz
1a: 4c140803 001b1bc6 e2000080	      ALU:	MAXv	R3.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R8.x___ = abs(R0).zzzz
1b: c8030803 006d6c1b cb0008fe	      ALU:	MULADDv	R3.xy__ = C510.wwww, R0.yxxx, R8.xxxx
      0955601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: 90584061 1f1ffe88 0000c000	      FETCH:	SAMPLE	R4.xyz_ = R3.xyz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1d: 1068a041 1f1ff7ff 00004000	      FETCH:	SAMPLE	R10.___w = R2.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1e: 103800e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R0.xyz_ = R7.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1f: b81820e1 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R7.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
20: b82880c1 1f1ffff8 00004000	      FETCH:	SAMPLE	R8.x___ = R6.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
21: c8070803 00c06c00 a1000000	   (S)ALU:	MULv	R3.xyz_ = R0.xyzz, C256.xxxx
      00006022 00001200     	EXEC ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: c8070801 00c0c000 e1030200	      ALU:	MULv	R1.xyz_ = R3.xyzz, R2.xyzz
23: b88f0003 00001b88 810afffd	      ALU:	MULv	R3 = R10, C511.wwww
                          						    	SUB_CONST_0	R0.___w = C509.y, R8.x
24: 14070802 00b4b41b e1030402	      ALU:	MULv	R2.xyz_ = R3.xzyy, R4.xzyy
25: 0c870800 00c0c01b e1030008	      ALU:	MULv	R0.xyz_ = R3.xyzz, R0.xyzz
                          						    	MUL_PREVs	R8.___w = R8.wwww
26: 38170800 00c06c1b a100fd01	      ALU:	MULv	R0.xyz_ = R0.xyzz, C509.xxxx
                          						    	EXP_IEEE	R8.x___ = R1.wwww
27: 14170800 00c06c1b e1000803	      ALU:	MULv	R0.xyz_ = R0.xyzz, R8.xxxx
                          						    	MAXs	R8.x___ = R3.wwww
      00005028 00002200     	EXEC_END ADDR(0x28) CNT(0x5) BOOL_ADDR(0x80)
28: b8270800 00b4b488 810002fd	      ALU:	MULv	R0.xyz_ = R0.xzyy, C258.xzyy
                          						    	SUB_CONST_0	R8._y__ = C509.y, R8.x
29: a8470800 00c06c49 81000305	      ALU:	MULv	R0.xyz_ = R0.xyzz, C259.xxxx
                          						    	MUL_CONST_0	R8.__z_ = C261.x, R8.y
2a: c8070800 00c0c6c0 ab020100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R2.xyzz, C257.zzzz
2b: c8070800 00c0c0b4 eb010500	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R1.xyzz, R5.xyzz
2c: c80f8000 00060000 e1080000	      ALU:	MULv	export0 = R8.zzzw, R0	; COLOR
