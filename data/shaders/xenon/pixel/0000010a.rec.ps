      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00946005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: c80a0405 00bcbc00 a1850100	      ALU:	MULv	R5._y_w = abs(R5).xxyy, C257.xxyy
06: 10205061 1f1ffef9 00004000	      FETCH:	SAMPLE	R5.y_w_ = R3.xyx CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: 743050a1 1f1fffdf 00004000	      FETCH:	SAMPLE	R5._w__ = R5.ywy CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: c8050407 00c46cc6 8b05fdfe	   (S)ALU:	MULADDv	R7.x_z_ = C510.zzzz, R5.xzzz, C509.xxxx
09: ac160606 00cccc45 c10707fe	      ALU:	MULv	R6._yz_ = R7.xxzz, R7.xxzz
                          						    	MUL_CONST_1	R6.x___ = C510.x, R5.y
0a: c8030405 04b0b100 a006fd00	      ALU:	ADDv	R5.xy__ = -R6.xyyy, C509.yyyy
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: c8040405 02b1c600 e0050600	      ALU:	ADDv	R5.__z_ = R5.yyyy, -R6.zzzz
0c: a0880705 001b1bc6 e1010185	      ALU:	MULv	R5.___w = R1.wwww, R1.wwww
                          						    	SQRT_IEEE	R7.___w = abs(R5).zzzz
0d: c8020406 00cfbe00 f0070200	      ALU:	DOT3v	R6._y__ = R7.wxzz, R2.zxyy
0e: 08210706 00cfbe1b f0070000	      ALU:	DOT3v	R6.x___ = R7.wxzz, R0.zxyy
                          						    	MULs	R7._y__ = R0.wwww
0f: 14040406 00cfbe6c f0070106	      ALU:	DOT3v	R6.__z_ = R7.wxzz, R1.zxyy
10: 0c140705 00c61b1b e1060100	      ALU:	MULv	R5.__z_ = R6.zzzz, R1.wwww
                          						    	MUL_PREVs	R7.x___ = R0.wwww
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 08490707 006dc71b e0070502	      ALU:	ADDv	R7.x__w = R7.yxxx, R5.wzzz
                          						    	MULs	R7.__z_ = R2.wwww
12: c8020407 00b11b1b eb060207	      ALU:	MULADDv	R7._y__ = R7.wwww, R6.yyyy, R2.wwww
13: c8030407 00b0b200 e0070700	      ALU:	ADDv	R7.xy__ = R7.xyyy, R7.zyyy
14: 58480506 046c6c6c 2003fd87	      ALU:	ADDv	R6.___w = -C259.xxxx, C509.xxxx
                          						    	RECIPSQ_IEEE	R5.__z_ = abs(R7).xxxx
15: 14020408 00c61bc6 e1050105	      ALU:	MULv	R8._y__ = R5.zzzz, R1.wwww
16: 0c140808 00c61b1b e1050200	      ALU:	MULv	R8.__z_ = R5.zzzz, R2.wwww
                          						    	MUL_PREVs	R8.x___ = R0.wwww
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: c8010400 04becd00 f0080600	      ALU:	DOT3v	R0.x___ = -R8.zxyy, R6.yxzz
18: b84e0705 00fcfc80 c00404fd	      ALU:	ADDv	R5._yzw = R4.xxyz, R4.xxyz
                          						    	SUB_CONST_0	R7.__z_ = C509.y, R0.x
19: 08400704 000000c6 e2040407	      ALU:	MULs	R7.__z_ = R7.zzzz
1a: 08400704 000000c6 e2040407	      ALU:	MULs	R7.__z_ = R7.zzzz
1b: c80f0406 00f10000 e1070600	      ALU:	MULv	R6 = R7.yyyz, R6
1c: 14020401 05c61b6c e0060106	      ALU:	ADDv	R1._y__ = -R6.zzzz, R1.wwww
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 04140101 04b11b1b e0060200	      ALU:	ADDv	R1.__z_ = -R6.yyyy, R2.wwww
                          						    	ADD_PREVs	R1.x___ = R0.wwww
1e: c8010400 00bebe00 f0010100	      ALU:	DOT3v	R0.x___ = R1.zxyy, R1.zxyy
1f: 58100004 0000006c e2040480	      ALU:	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
20: c8070400 00c06c00 e1010000	      ALU:	MULv	R0.xyz_ = R1.xyzz, R0.xxxx
21: c80f0400 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
22: 4c140101 001b1bc6 e2000080	      ALU:	MAXv	R1.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
      02546023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c8030401 006d6c1b cb0001fe	      ALU:	MULADDv	R1.xy__ = C510.wwww, R0.yxxx, R1.xxxx
24: b8180061 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
25: 90481021 1f1ff688 0000c000	      FETCH:	SAMPLE	R1.xyzw = R1.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
26: 10083061 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
27: c8088000 001b1b00 e1030400	   (S)ALU:	MULv	export0.___w = R3.wwww, R4.wwww	; COLOR
28: c8010402 001b1b00 a101ff00	      ALU:	MULv	R2.x___ = R1.wwww, C511.wwww
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: a81e0402 0001fc41 c1050300	      ALU:	MULv	R2._yzw = R5.yyzw, R3.xxyz
                          						    	MUL_CONST_0	R4.x___ = C256.x, R0.y
2a: a8210400 00b11b42 45fd0100	      ALU:	SETGTv	R0.x___ = C509.yyyy, R1.wwww
                          						    	MUL_CONST_0	R4._y__ = C256.x, R0.z
2b: a8840404 006c6c43 8002fe00	      ALU:	ADDv	R4.__z_ = R2.xxxx, C510.xxxx
                          						    	MUL_CONST_0	R4.___w = C256.x, R0.w
2c: 2c420402 00c3c0c6 b002ff04	      ALU:	DOT3v	R2._y__ = R2.wyzz, C511.xyzz
                          						    	FRACs	R4.__z_ = R4.zzzz
2d: 142b0204 0010c0b1 e1040302	      ALU:	MULv	R4.xy_w = R4.xyww, R3.xyzz
                          						    	MAXs	R2._y__ = R2.yyyy
2e: 14440204 026cc61b c00204fd	      ALU:	ADDv	R4.__z_ = R2.xxxx, -R4.zzzz
                          						    	MAXs	R2.__z_ = C509.wwww
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: 14410402 00c6c6b6 a004fd02	      ALU:	ADDv	R2.x___ = R4.zzzz, C509.zzzz
                          						    	MAXs	R4.__z_ = R2.zzyy
30: 38140204 00c6b16c a304fd02	      ALU:	MINv	R4.__z_ = R4.zzzz, C509.yyyy
                          						    	EXP_IEEE	R2.x___ = R2.xxxx
31: c8070402 006cc000 e1020100	      ALU:	MULv	R2.xyz_ = R2.xxxx, R1.xyzz
32: c8070401 006cc0c0 ee000201	      ALU:	CNDGTv	R1.xyz_ = R1.xyzz, R0.xxxx, R2.xyzz
33: 140e0401 00c6fc6c e1040104	      ALU:	MULv	R1._yzw = R4.zzzz, R1.xxyz
34: 0d140104 001b6cb1 a0060305	      ALU:	ADDv	R4.__z_ = R6.wwww, C259.xxxx CLAMP
                          						    	MUL_PREVs	R1.x___ = R5.yyyy
      00006035 00002200     	EXEC_END ADDR(0x35) CNT(0x6) BOOL_ADDR(0x80)
35: 140e0401 0001c6b1 e1010404	      ALU:	MULv	R1._yzw = R1.yyzw, R4.zzzz
36: 0c270102 0015b1c6 a101fe05	      ALU:	MULv	R2.xyz_ = R1.yzww, C510.yyyy
                          						    	MUL_PREVs	R1._y__ = R5.zzzz
37: 14070404 00c0c61b a1020204	      ALU:	MULv	R4.xyz_ = R2.xyzz, C258.zzzz
38: 0c470104 00c0151b e1040005	      ALU:	MULv	R4.xyz_ = R4.xyzz, R0.yzww
                          						    	MUL_PREVs	R1.__z_ = R5.wwww
39: c8070404 00c06cc0 eb010504	      ALU:	MULADDv	R4.xyz_ = R4.xyzz, R1.xyzz, R5.xxxx
3a: c8078000 00c06c00 a1040400	      ALU:	MULv	export0.xyz_ = R4.xyzz, C260.xxxx	; COLOR
