//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $suncolour     c3       1
//   $sunintensity  c4       1
//   $invscreensize c5       1
//   $matvalue      c6       1
//   $fresnelterm   c7       1
//   $apptime       c8       1
//   $compressedhdr c9       1
//   $lmap          s0       1
//   $incan         s1       1
//   $spec          s2       1
//   $screenshadmap s3       1
//   $envmap        s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c8
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c9
defconst $diff, sampler2d, object, [1, 1], s8
defconst $envmap, samplercube, object, [1, 1], s4
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c7
defconst $incan, sampler2d, object, [1, 1], s1
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c5
defconst $lmap, sampler2d, object, [1, 1], s0
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c6
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spec, sampler2d, object, [1, 1], s2
defconst $suncolour, float, vector, [1, 3], c3
defconst $sunintensity, float, scalar, [1, 1], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 30
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_color_centroid r7

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 0, 0, 0, 0
def c251, 2, 1.5, 10, 4
def c252, 0.5, 1, 3.29999995, 0.0529999994
def c253, -127.5, -1, 0.5, 5
def c254, 0.298999995, 0.587000012, 0.143999994, 255
def c255, 0.0599999987, 0.289999992, 0.150000006, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     mul r4.z, c8.x, c253.z
               + movs r4.x, r6.x
/*    8   */     mul r8.xy, r8_abs.xy, c5.xy
               + movs r4.y, r6.y
/*    9   */     tfetch2D r12.___w, r8.xy, tf3, FetchValidOnly=false
/*   10   */     tfetch3D r4.x___, r4.xyz, tf6, FetchValidOnly=false
/*   11   */     serialize
                 mul r4.zw, r2.zzzw, r2.w
               + subsc r4.y, -c252.y, -r4.x
/*   12   */     mad r4.zw, r1.zzzw, r1.w, r4.zzzw
/*    1.0 */     exec
/*   13   */     mad r4.zw, r0.zzzw, r0.w, r4.zzzw
/*   14   */     add r12.xz, r4.zy, r4.zx
               + rsq r12.y, r4_abs.w
/*   15   */     mul r8.zw, r12.xxxy, r0.zzzw
/*   16   */     mul r8.xy, r12.xy, r1.zw
/*   17   */     add r4.y, -r8.x, r1.w
/*   18   */     mul r9.xw, r12.xy, r2.zw
               + movs r7._, -r8.z
/*    1.1 */     exec
/*   19   */     add r4.z, -r9.x, r2.w
               + adds_prev r4.x, r0.w
/*   20   */     dp3 r0.x, r4.zxy, r4.zxy
/*   21   */     add r7.xyz, r7.xyz, r7.xyz
               + rsq r0.x, r0_abs.x
/*   22   */     mul r0.xyw, r4.xyz, r0.x
/*   23   */     cube r4, r0.wwxy, r0.yxw
/*   24   */     mov r0.w, r4.w
               + rcp r0.x, r4_abs.z
/*    2.0 */     exec
/*   25   */     mad r0.xy, r4.yx, r0.x, c251.y
/*   26   */     tfetch2D r14.xyz_, r6.xy, tf2, FetchValidOnly=false
/*   27   */     tfetchCube r10, r0.xyw, tf4, FetchValidOnly=false
/*   28   */     tfetch2D r0.y__w, r6.xy, tf7, FetchValidOnly=false
/*   29   */     serialize
                 mul r0.y, c6.x, c251.z
               + movs r7._, c1.x
/*   30   */     add r11.yz, r0.xxw, r0.xxw
               + muls_prev r13.x, c251.z
/*    2.1 */     exec
/*   31   */     mul r13.z, r10.w, c254.w
               + rcp r3.w, r5.w
/*   32   */     dp3 r0.x, r14.zyx, c255.xyz
               + movs r7._, r3.w
/*   33   */     mul r13.y, r0.y, r0.x
               + muls_prev r4.y, r5.x
/*   34   */     add r0.xyw, r13.zxy, c252.xy
               + movs r7._, r3.w
/*   35   */     frc r3.w, r0.x
               + muls_prev r4.x, r5.y
/*   36   */     add r11.x, r13.z, -r3.w
               + subsc r4.z, c252.y, r4.x
/*    3.0 */     exec
/*   37   */     mul r12.yz, r12.wwz, c253.zzw
               + movs r7._, -r8.w
/*   38   */     add r11.xyw, r11.xyz, c253.xy
               + muls_prev r4.w, r0.z
/*   39   */     mul r5.xy, r12.z, r11.yw
               + movs r7._, -r8.y
/*   40   */     mul r5.yz, r5.xxy, c252.w
               + muls_prev r5.x, r1.z
/*   41   */     add r8.xyw, r4.yzw, r5.yzx
/*   42   */     tfetch2D r13.xyz_, r6.xy, tf1
/*    3.1 */     exec
/*   43   */     tfetch2D r5.xyz_, r6.zw, tf0
/*   44   */     tfetch2D r1.xyz_, r8.xy, tf5
/*   45   */     tfetch2D r4, r6.xy, tf8
/*   46   */     serialize
                 dp3 r0.z, r3.zxy, r3.zxy
/*   47   */     add r6.w, -c7.x, c251.x
               + rsq r0.z, r0_abs.z
/*   48   */     mul_sat r3.w, r0.z, r3.z
/*    4.0 */     exec
/*   49   */     mul r3.xyz, r14.xyz, c253.z
/*   50   */     mul r6.xyz, r4.xyz, c254.xyz
/*   51   */     mul r9.xyz, r7.xyz, r4.xyz
/*   52   */     sgt r5.w, c252.y, r10.w
/*   53   */     dp3 r0.z, r6.zxy, r7.zxy
/*   54   */     mul r7.xyz, r3.xyz, r5.xyz
/*    4.1 */     exec
/*   55   */     max r11.yw, r0.wwz, c255.wwz
               + mulsc r0.x, c2.x, r0.y
/*   56   */     mul r0.xyz, r0.x, r13.xyz
/*   57   */     mad r8.xyz, r5.xyz, c0.x, r0.xyz
/*   58   */     min r1.w, r11.w, c252.y
               + exp r0.x, r11.x
/*   59   */     mul r0.xyz, r0.x, r10.xyz
               + mulsc r6.x, c251.w, r7.x
/*   60   */     cndgt r10.xyz, r5.w, r0.xyz, r10.xyz
/*    5.0 */     exec
/*   61   */     mad r12.x, -r9.w, r2.z, r8.w
/*   62   */     add r0.xy, -r12.xy, c252.y
               + mulsc r6.y, c251.w, r7.y
/*   63   */     mul r11.x, r0.x, r0.x
               + log r11.z, r3.w
/*   64   */     mul r0.zw, r11.xxxy, r11.xxxz
               + mulsc r6.z, c251.w, r7.z
/*   65   */     mul r2.xyz, r1.w, r10.xyz
               + exp r1.w, r0.w
/*   66   */     mul r6.xyz, r6.xyz, r1.w
/*    5.1 */     exec
/*   67   */     mul r6.xyz, r6.xyz, c3.xyz
/*   68   */     mul r6.xyz, r6.xyz, c4.x
/*   69   */     mad r6.xyz, r9.xzy, r8.xzy, r6.xzy
/*   70   */     mul r0, r0.yyyz, r6.xzyw
/*   71   */     mul r1.xyz, r1.xyz, c9.y
               + addsc_sat r1.w, c7.x, r0.w
/*   72   */     mul r2.xyz, r2.xyz, r1.w
/*    6.0 */     exec
/*   73   */     mul r2.xyz, r2.xyz, r3.xyz
/*   74   */     mul r2.xyz, r2.xyz, c252.z
/*   75   */     mul r2.xyz, r2.xyz, c6.z
/*   76   */     mad r0.xyz, r2.xzy, r5.xzy, r0.xzy
/*   77   */     add r0.xyz, r0.xzy, -r1.xyz
               + movs r7._, r4.w
/*   78   */     mad r0.xyz, r0.xyz, c8.x, r1.xyz
/*    6.1 */     exece
/*   79   */     mul oC0.xyz, r0.xyz, c9.x
               + muls_prev oC0.w, r7.w

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] color0 r7.xyzw

