      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      02506005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 4c83080a 00b0b0c6 e2060604	      ALU:	MAXv	R10.xy__ = R6.xyyy, R6.xyyy
                          						    	RECIP_IEEE	R8.___w = R4.zzzz
06: b084020a 006c6cc3 2108ff07	      ALU:	MULv	R10.__z_ = C264.xxxx, C511.xxxx
                          						    	ADD_CONST_0	R2.___w = C263.z, R2.w
07: 104090c1 1f1ff67f 00004000	      FETCH:	SAMPLE	R9.__yw = R6.xyx CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 90309141 1f1ffff8 00008000	      FETCH:	SAMPLE	R9.x___ = R10.xyz CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 4c86080a 001bbc1b e1080405	   (S)ALU:	MULv	R10._yz_ = R8.wwww, R4.xxyy
                          						    	RECIP_IEEE	R8.___w = R5.wwww
0a: bc230905 011b6d08 c10805ff	      ALU:	MULv	R5.xy__ = R8.wwww, R5.yxxx
                          						    	SUB_CONST_1	R9._y__ = -C511.w, -R9.x
      0500600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: c80b0704 00151400 e0090900	      ALU:	ADDv	R4.xy_w = R9.yzww, R9.xzww
0c: a883080d 00196cc4 8004feff	      ALU:	ADDv	R13.xy__ = R4.ywww, C510.xxxx
                          						    	MUL_CONST_0	R8.___w = C511.z, R4.x
0d: bc430509 001bb004 c1080dff	      ALU:	MULv	R9.xy__ = R8.wwww, R13.xyyy
                          						    	SUB_CONST_1	R5.__z_ = C511.w, R5.x
0e: c8030705 00b0b1c5 ab09ff05	      ALU:	MULADDv	R5.xy__ = R5.yzzz, R9.xyyy, C511.yyyy
0f: b808a0c1 1f1ffff8 00004000	      FETCH:	SAMPLE	R10.x___ = R6.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 6418b141 1f1ff63f 00004000	      FETCH:	SAMPLE	R11.__xw = R10.yzy CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 102850a1 1f1ff478 00004000	      FETCH:	SAMPLE	R5.x_yz = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: 105860c1 1f1ff688 00004000	      FETCH:	SAMPLE	R6.xyzw = R6.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
13: b0800807 00000043 c2070707	   (S)ALU:	ADD_CONST_0	R8.___w = C263.x, R0.w
14: 14070709 00c0c01b e0070701	      ALU:	ADDv	R9.xyz_ = R7.xyzz, R7.xyzz
15: 044c070c 041bacb1 80080407	      ALU:	ADDv	R12.__zw = -R8.wwww, C260.xxxy
                          						    	ADD_PREVs	R7.__z_ = C263.yyyy
16: bc1e0c0a 00fc6c46 200a0005	      ALU:	ADDv	R10._yzw = C266.xxyz, C256.xxxx
                          						    	SUB_CONST_1	R12.x___ = C261.x, R7.z
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: b8180b08 00c6b143 a504fe06	      ALU:	SETGTv	R8.___w = R4.zzzz, C510.yyyy
                          						    	SUB_CONST_0	R11.x___ = C262.x, R2.w
18: b8270b04 0015c083 e00a0806	      ALU:	ADDv	R4.xyz_ = R10.yzww, R8.xyzz
                          						    	SUB_CONST_0	R11._y__ = C262.y, R2.w
19: bc270c08 00c01086 e10b0b05	      ALU:	MULv	R8.xyz_ = R11.xyzz, R11.xyww
                          						    	SUB_CONST_1	R12._y__ = C261.y, R7.z
1a: c8020705 00b3b3b1 f10c0c08	      ALU:	DOT2ADDv	R5._y__ = R8.yyyy, R12.wyyy, R12.wyyy
1b: c8080704 006e6e6c f10c0c08	      ALU:	DOT2ADDv	R4.___w = R8.xxxx, R12.zxxx, R12.zxxx
1c: c80a070a 00bcbc00 e10d0d00	      ALU:	MULv	R10._y_w = R13.xxyy, R13.xxyy
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 58430a08 04b01b1b a00aff84	      ALU:	ADDv	R8.xy__ = -R10.xyyy, C511.wwww
                          						    	RECIPSQ_IEEE	R10.__z_ = abs(R4).wwww
1e: 58880a04 02b11bb1 e0080a85	      ALU:	ADDv	R4.___w = R8.yyyy, -R10.wwww
                          						    	RECIPSQ_IEEE	R10.___w = abs(R5).yyyy
1f: a0430d0a 00b01a1b e10b0a84	      ALU:	MULv	R10.xy__ = R11.xyyy, R10.zwww
                          						    	SQRT_IEEE	R13.__z_ = abs(R4).wwww
20: 1401070b 00bebe1b f00d0006	      ALU:	DOT3v	R11.x___ = R13.zxyy, R0.zxyy
21: 0c82070b 00bebe1b f00d0107	      ALU:	DOT3v	R11._y__ = R13.zxyy, R1.zxyy
                          						    	MUL_PREVs	R7.___w = R7.wwww
22: ac14000b 00bebe84 d00d0209	      ALU:	DOT3v	R11.__z_ = R13.zxyy, R2.zxyy
                          						    	MUL_CONST_1	R0.x___ = C265.y, R5.x
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: ac210007 00bebe86 d00b0b09	      ALU:	DOT3v	R7.x___ = R11.zxyy, R11.zxyy
                          						    	MUL_CONST_1	R0._y__ = C265.y, R5.z
24: 581f0702 000d076c e10c0a87	      ALU:	MULv	R2 = R12.yxzw, R10.wzzw
                          						    	RECIPSQ_IEEE	R7.x___ = abs(R7).xxxx
25: 14070701 00be6cc6 e10b0708	      ALU:	MULv	R1.xyz_ = R11.zxyy, R7.xxxx
26: 0c430707 00b06c1b e10a0108	      ALU:	MULv	R7.xy__ = R10.xyyy, R1.xxxx
                          						    	MUL_PREVs	R7.__z_ = R8.wwww
27: c9080700 00b2c56c f1020107	      ALU:	DOT2ADDv	R0.___w = R7.xxxx, R2.zyyy, R1.yzzz CLAMP
28: c9010707 006fc5b1 f1020107	      ALU:	DOT2ADDv	R7.x___ = R7.yyyy, R2.wxxx, R1.yzzz CLAMP
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: ac420007 00c61b87 c1070009	      ALU:	MULv	R7._y__ = R7.zzzz, R0.wwww
                          						    	MUL_CONST_1	R0.__z_ = C265.y, R5.w
2a: ac270201 00c0c045 e1090602	      ALU:	MULv	R1.xyz_ = R9.xyzz, R6.xyzz
                          						    	MUL_CONST_1	R2._y__ = C258.x, R7.y
2b: ac160205 00cc6145 a1070301	      ALU:	MULv	R5._yz_ = R7.xxzz, C259.yyxx
                          						    	MUL_CONST_1	R2.x___ = C257.x, R7.y
2c: ac840202 00c61b84 e1050001	      ALU:	MULv	R2.__z_ = R5.zzzz, R0.wwww
                          						    	MUL_CONST_1	R2.___w = C257.y, R7.x
2d: ac1f0502 0000ac84 e1020302	      ALU:	MULv	R2 = R2, R3.xxxy
                          						    	MUL_CONST_1	R5.x___ = C258.y, R7.x
2e: c8060707 00bcb1c1 eb050302	      ALU:	MULADDv	R7._yz_ = R2.yyzz, R5.xxyy, R3.yyyy
      0000502f 00002200     	EXEC_END ADDR(0x2f) CNT(0x5) BOOL_ADDR(0x80)
2f: 14010707 006c1b1b e0020207	      ALU:	ADDv	R7.x___ = R2.xxxx, R2.wwww
30: c8070707 01b4b4b4 eb010700	      ALU:	MULADDv	R7.xyz_ = -R0.xzyy, R1.xzyy, R7.xzyy
31: c8070707 00b4b4c0 eb010407	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R1.xzyy, R4.xzyy
32: c8070707 00b46cc0 ab070800	      ALU:	MULADDv	R7.xyz_ = R0.xyzz, R7.xzyy, C264.xxxx
33: 0c878000 00c06c6c a1070908	      ALU:	MULv	export0.xyz_ = R7.xyzz, C265.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R8.xxxx	; COLOR
      00000000 00000000     	NOP
