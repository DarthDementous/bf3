//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $matvalue      c4       1
//   $fresnelterm   c5       1
//   $compressedhdr c6       1
//   $diff          s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $spec          s3       1
//   $screenshadmap s4       1
//   $envmap        s5       1
//

// Shader type: pixel 

xps_3_0
defconst $compressedhdr, float, vector, [1, 2], c6
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c5
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c4
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $spec, sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=10
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=5

// interpolators: 5 interpolants: 5, components: 20
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_color_centroid r4

def c252, 0, 0, 0, 0
def c253, 2, 10, -127.5, 0.150000006
def c254, 0.5, 1, 3.29999995, 1.5
def c255, 0.298999995, 0.587000012, 0.143999994, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    5   */     mul r5.xy, r5_abs.xy, c3.xy
/*    6   */     tfetch2D r0._w__, r5.xy, tf4, FetchValidOnly=false
/*    7   */     serialize
                 mul r5.xy, r2.zw, r2.w
/*    8   */     mad r5.xy, r1.zw, r1.w, r5.xy
/*    9   */     mad r5.xy, r0.wz, r0.w, r5.yx
/*   10   */     add r5.y, r5.y, r5.y
               + rsq r5.w, r5_abs.x
/*    1.0 */     exec
/*   11   */     mul r5.xz, r5.wy, r2.wz
/*   12   */     mul r6.zw, r5.yyyw, r1.zzzw
/*   13   */     mul r6.xy, r5.yw, r0.zw
/*   14   */     add r6.x, -r6.x, r0.w
               + mulsc r5.y, c254.x, r0.y
/*   15   */     mul r5.w, -r5.x, r2.z
               + movs r4._, -r6.z
/*   16   */     mad r5.w, -r6.w, r1.z, r5.w
/*    1.1 */     exec
/*   17   */     mad r5.w, -r6.y, r0.z, r5.w
/*   18   */     add r5.xy, -r5.yw, c254.y
               + adds_prev r6.y, r1.w
/*   19   */     mul r0.x, r5.y, r5.y
               + movs r4._, -r5.z
/*   20   */     mul r6.w, r0.x, r0.x
               + adds_prev r6.z, r2.w
/*   21   */     dp3 r0.x, r6.zxy, r6.zxy
/*   22   */     add r0.y, -c5.x, c253.x
               + rsq r0.x, r0_abs.x
/*    2.0 */     exec
/*   23   */     mul r1, r6, r0.xxxy
/*   24   */     cube r0, r1.zzxy, r1.yxz
/*   25   */     mov r6.z, r0.w
               + rcp r2.x, r0_abs.z
/*   26   */     mad r6.xy, r0.yx, r2.x, c254.w
/*   27   */     tfetch2D r1.xyz_, r3.zw, tf1
/*   28   */     tfetch2D r2.xyz_, r3.xy, tf2
/*    2.1 */     exec
/*   29   */     tfetch2D r7.xyz_, r3.xy, tf3
/*   30   */     tfetchCube r6, r6.xyz, tf5
/*   31   */     tfetch2D r0.yzxw, r3.xy, tf0
/*   32   */     serialize
                 add r9.xyz, r4.xyz, r4.xyz
               + movs r4._, c1.x
/*   33   */     mul r8.x, r6.w, c255.w
               + muls_prev r8.y, c253.y
/*   34   */     mul r3.xyz, r7.xyz, c254.x
               + movs r4.y, r0.z
/*    3.0 */     exec
/*   35   */     mul r7.xyz, r9.xyz, r0.zxy
               + mulsc r10.x, c255.x, r4.y
/*   36   */     sgt r3.w, c254.y, r6.w
               + mulsc r10.y, c255.y, r0.x
/*   37   */     add r4.xy, r8.xy, c254.xy
               + mulsc r10.z, c255.z, r0.y
/*   38   */     dp3 r2.w, r10.zxy, r9.zxy
               + frcs r5.z, r4.x
/*   39   */     max r2.w, r2.w, c253.w
               + mulsc r4.x, c2.x, r4.y
/*   40   */     min r2.w, r2.w, c254.y
               + movs r4._, r8.x
/*    3.1 */     exec
/*   41   */     mul r2.xyz, r4.x, r2.xyz
               + adds_prev r4.x, -r5.z
/*   42   */     mad r2.xyz, r1.xyz, c0.x, r2.xyz
/*   43   */     add_sat r1.w, r1.w, c5.x
               + addsc r5.z, c253.z, r4.x
/*   44   */     mul r2.xyz, r7.xyz, r2.xyz
               + exp r5.z, r5.z
/*   45   */     mul r7.xyz, r5.z, r6.xyz
/*   46   */     cndgt r6.xyz, r3.w, r7.xyz, r6.xyz
/*    4.0 */     exec
/*   47   */     mul r6.xyz, r2.w, r6.xyz
/*   48   */     mul r6.xyz, r6.xyz, r1.w
/*   49   */     mul r3.xyz, r6.xyz, r3.xyz
/*   50   */     mul r3.xyz, r3.xyz, c254.z
/*   51   */     mul r3.xyz, r3.xyz, c4.z
/*   52   */     mul r1.xyz, r3.xyz, r1.xyz
               + movs r4._, r0.w
/*    4.1 */     exece
/*   53   */     mad r0.xyz, r2.xyz, r5.x, r1.xyz
/*   54   */     mul oC0.xyz, r0.xyz, c6.x
               + muls_prev oC0.w, r4.w

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x001f SamplingPattern 0x000f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] color0 r4.xyzw

