      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 100040a1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R4.___x = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: c8040600 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
06: 4c880003 00b1b1c6 2100ff04	      ALU:	MULv	R3.___w = C256.yyyy, C511.yyyy
                          						    	RECIP_IEEE	R0.___w = R4.zzzz
07: c8080603 011bb11b ab040003	      ALU:	MULADDv	R3.___w = -R3.wwww, R4.wwww, C256.yyyy
08: 58430008 001bb0c6 e1000480	      ALU:	MULv	R8.xy__ = R0.wwww, R4.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
09: a88c0007 00acac02 81870200	      ALU:	MULv	R7.__zw = abs(R7).xxxy, C258.xxxy
                          						    	MUL_CONST_0	R0.___w = C256.w, R0.z
      0550600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: c8030600 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
0b: c8030607 00b01bb0 eb000305	      ALU:	MULADDv	R7.xy__ = R5.xyyy, R0.xyyy, R3.wwww
0c: b82800a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R0.xyz_ = R5.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: b83830e1 1f1ff7ff 00004000	      FETCH:	SAMPLE	R3.___w = R7.zwz CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: 101850e1 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R7.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: 10489101 1f1fffd8 00004000	      FETCH:	SAMPLE	R9.xw__ = R8.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: c8088000 001b1b00 e1050600	   (S)ALU:	MULv	export0.___w = R5.wwww, R6.wwww	; COLOR
11: c8070607 00c0c000 e0060600	      ALU:	ADDv	R7.xyz_ = R6.xyzz, R6.xyzz
12: c8030608 04c6b000 a0030800	      ALU:	ADDv	R8.xy__ = -R3.zzzz, C264.xyyy
13: c80c0608 04b1ac00 a0030700	      ALU:	ADDv	R8.__zw = -R3.yyyy, C263.xxxy
14: c8030606 046cb000 a0030600	      ALU:	ADDv	R6.xy__ = -R3.xxxx, C262.xyyy
15: 08480606 00c66c61 a504ff09	      ALU:	SETGTv	R6.___w = R4.zzzz, C511.xxxx
                          						    	MULs	R6.__z_ = R9.yyxx
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: c80b0606 00c01000 e1060600	      ALU:	MULv	R6.xy_w = R6.xyzz, R6.xyww
17: c8040606 00b3b3b1 f1080806	      ALU:	DOT2ADDv	R6.__z_ = R6.yyyy, R8.wyyy, R8.wyyy
18: c8080600 006e6e6c f1080806	      ALU:	DOT2ADDv	R0.___w = R6.xxxx, R8.zxxx, R8.zxxx
19: 40110306 001bb11b a103ff80	      ALU:	MULv	R6.x___ = R3.wwww, C511.yyyy
                          						    	LOG_IEEE	R3.x___ = abs(R0).wwww
1a: 40270300 00c06cc6 a1000186	      ALU:	MULv	R0.xyz_ = R0.xyzz, C257.xxxx
                          						    	LOG_IEEE	R3._y__ = abs(R6).zzzz
1b: c8060606 00bccc00 a1030900	      ALU:	MULv	R6._yz_ = R3.xxyy, C265.xxzz
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: 38270600 00c0c0b1 e1000506	      ALU:	MULv	R0.xyz_ = R0.xyzz, R5.xyzz
                          						    	EXP_IEEE	R6._y__ = R6.yyyy
1d: 38480600 001b1bc6 e1060106	      ALU:	MULv	R0.___w = R6.wwww, R1.wwww
                          						    	EXP_IEEE	R6.__z_ = R6.zzzz
1e: c9060606 00c11100 a1060900	      ALU:	MULv	R6._yz_ = R6.yyzz, C265.yyww CLAMP
1f: c8070606 04bec600 a006ff00	      ALU:	ADDv	R6.xyz_ = -R6.zxyy, C511.zzzz
20: a8170400 00c0c084 e1000703	      ALU:	MULv	R0.xyz_ = R0.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R4.x___ = C259.y, R6.x
21: a82f0400 0000f184 e1000604	      ALU:	MULv	R0 = R0, R6.yyyz
                          						    	MUL_CONST_0	R4._y__ = C260.y, R6.x
      00006022 00002200     	EXEC_END ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: a8420403 001b6c84 a1000405	      ALU:	MULv	R3._y__ = R0.wwww, C260.xxxx
                          						    	MUL_CONST_0	R4.__z_ = C261.y, R6.x
23: 14270601 00c0c01b e1070500	      ALU:	MULv	R1.xyz_ = R7.xyzz, R5.xyzz
                          						    	MAXs	R6._y__ = R0.wwww
24: a8140303 001b6c45 a1000503	      ALU:	MULv	R3.__z_ = R0.wwww, C261.xxxx
                          						    	MUL_CONST_0	R3.x___ = C259.x, R6.y
25: c8070606 00c01bc0 eb040203	      ALU:	MULADDv	R6.xyz_ = R3.xyzz, R4.xyzz, R2.wwww
26: c8070606 00c0c0c0 eb010600	      ALU:	MULADDv	R6.xyz_ = R0.xyzz, R1.xyzz, R6.xyzz
27: c8078000 00c06c00 a1060a00	      ALU:	MULv	export0.xyz_ = R6.xyzz, C266.xxxx	; COLOR
      00000000 00000000     	NOP
