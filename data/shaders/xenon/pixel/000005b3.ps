//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spotlightmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $apptime       c14      1
//   $compressedhdr c15      1
//   $lmap          s0       1
//   $incan         s1       1
//   $screenshadmap s2       1
//   $spotlightmap  s3       1
//   $envmap        s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c14
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c15
defconst $diff, sampler2d, object, [1, 1], s8
defconst $envmap, samplercube, object, [1, 1], s4
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s1
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s0
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $screenshadmap, sampler2d, object, [1, 1], s2
defconst $spotlightmap, sampler2d, object, [1, 1], s3
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=15
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=7

// interpolators: 7 interpolants: 7, components: 27
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4
dcl_texcoord5 r5
dcl_color_centroid r6

def c252, 2, 10, 0.200000003, 0.150000006
def c253, 0.5, 0.0529999994, 1.5, -1
def c254, -127.5, 1, 255, 3.29999995
def c255, 0.298999995, 0.587000012, 0.143999994, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mov r9.xy, r5.xy
/*    9   */     mul r9.z, c14.x, c253.x
               + rcp r3.w, r3.z
/*   10   */     mul r3.xy, r3.w, r3.xy
/*   11   */     tfetch2D r8.__yw, r5.xy, tf7, FetchValidOnly=false
/*   12   */     tfetch3D r8.x___, r9.xyz, tf6, FetchValidOnly=false
/*   13   */     tfetch2D r10.xw__, r3.xy, tf3, FetchValidOnly=false
/*    1.0 */     exec
/*   14   */     serialize
                 add r3.y, r2.w, c11.z
               + movs r6._, r1.w
/*   15   */     mul r9.xyz, r2.zwz, r2.zw
               + adds_prev r3.w, c11.y
/*   16   */     add r14.xy, -r3.y, c10.xy
               + subsc r8.y, -c254.y, -r8.x
/*   17   */     add r7.w, -c13.x, c252.x
               + addsc r3.x, c11.x, r0.w
/*   18   */     add r12.xy, -r3.x, c8.xy
               + rcp r3.x, r4.w
/*   19   */     mad r9.xyz, r1.zwz, r1.zw, r9.xyz
/*    1.1 */     exec
/*   20   */     mul r3.xy, r3.x, r4.yx
               + subsc r14.z, c9.x, r3.w
/*   21   */     mad r4.xyw, r0.wz, r0.wwz, r9.yzx
/*   22   */     mul r9.xy, r12.xy, r12.xy
               + subsc r14.w, c9.y, r3.w
/*   23   */     dp2add r11.w, r14.wy, r14.wy, r9.y
/*   24   */     dp2add r13.w, r14.zx, r14.zx, r9.x
/*   25   */     add r9.y, r4.y, r4.y
               + rsq r9.z, r4_abs.x
/*    2.0 */     exec
/*   26   */     add r4.xyz, r8.yzw, r8.xzw
               + rsq r9.w, r4_abs.w
/*   27   */     mul r11.xyz, r9.wyz, r0.zzw
               + muls r10.w, r10.xy
/*   28   */     mul r8.xyw, r9.yzw, r2.zwz
               + subsc r3.w, c254.y, r3.x
/*   29   */     add r10.x, -r11.y, r0.w
               + mulsc r12.z, c255.w, r4.x
/*   30   */     add r10.z, -r8.x, r2.w
               + rsq r9.x, r13_abs.w
/*   31   */     mul r13.xyz, r9.wyz, r1.zzw
               + addsc r9.z, c253.w, r4.y
/*    2.1 */     exec
/*   32   */     add r10.y, -r13.y, r1.w
               + rsq r9.y, r11_abs.w
/*   33   */     mul r15.xy, r7_abs.xy, c3.xy
               + addsc r9.w, c253.w, r4.z
/*   34   */     sgt r4.y, r3.z, c252.z
               + movs r6._, -r13.z
/*   35   */     mul r12, r12.xyz, r9
               + muls_prev r1.x, r1.z
/*   36   */     mad r3.z, -r11.z, r0.z, r1.x
/*   37   */     mul r0.zw, r12.zzzw, c253.y
               + movs r6._, -r8.y
/*    3.0 */     exec
/*   38   */     dp3 r0.x, r10.zxy, r10.zxy
               + muls_prev r0.y, r2.z
/*   39   */     add r2.yzw, r3.zzyw, r0.yyzw
               + rsq r4.x, r0_abs.x
/*   40   */     mul r1, r10.wzxy, r4.yx
/*   41   */     cube r0, r1.yyzw, r1.wzy
/*   42   */     mov r3.z, r0.w
               + rcp r2.x, r0_abs.z
/*   43   */     mad r3.xy, r0.yx, r2.x, c253.z
/*    3.1 */     exec
/*   44   */     tfetch2D r4.xyz_, r5.zw, tf0
/*   45   */     tfetch2D r7.xyz_, r5.xy, tf1
/*   46   */     tfetch2D r0.x_yz, r2.zw, tf5
/*   47   */     tfetchCube r10, r3.xyz, tf4
/*   48   */     tfetch2D r3, r5.xy, tf8
/*   49   */     tfetch2D r0._w__, r15.xy, tf2
/*    4.0 */     exec
/*   50   */     serialize
                 add r5.xyw, r6.xyz, r6.xyz
               + movs r6._, c1.x
/*   51   */     mul r15.xyz, r3.xyz, c255.xyz
               + muls_prev r5.z, c252.y
/*   52   */     mul r8.xyz, r5.xyw, r3.xyz
               + mulsc r2.x, c253.x, r0.y
/*   53   */     sgt r4.w, c254.y, r10.w
               + movs r6.x, r10.w
/*   54   */     dp3 r0.y, r15.zxy, r5.wxy
               + mulsc r6.y, c254.z, r6.x
/*   55   */     max r0.y, r0.y, c252.w
               + addsc r6.x, c253.x, r6.y
/*    4.1 */     exec
/*   56   */     min r0.y, r0.y, c254.y
               + frcs r6.x, r6.x
/*   57   */     add r5.y, r6.y, -r6.x
               + log r5.x, r13_abs.w
/*   58   */     add r6.xy, r5.yz, c254.xy
               + log r5.y, r11_abs.w
/*   59   */     mul r1.yz, r5.xxy, c4.xxz
               + exp r5.x, r6.x
/*   60   */     mul r9, r14.yxzw, r9.yxxy
               + mulsc r6.y, c2.x, r6.y
/*   61   */     mul r5.yz, r9.zzw, r13.x
               + exp r6.x, r1.y
/*    5.0 */     exec
/*   62   */     mad r5.yz, r12.xxy, r11.x, r5.yyz
/*   63   */     mul r7.xyz, r6.y, r7.xyz
               + exp r6.y, r1.z
/*   64   */     mad r7.xyz, r4.xyz, c0.x, r7.xyz
/*   65   */     mad_sat r9.yz, r9.xxy, r8.w, r5.zzy
/*   66   */     mul r5.xyz, r5.x, r10.xyz
               + mulsc_sat r9.x, c4.y, r6.x
/*   67   */     cndgt r5.xyz, r4.w, r5.xyz, r10.xyz
/*    5.1 */     exec
/*   68   */     mul r5.xyz, r0.y, r5.xyz
               + mulsc_sat r9.w, c4.w, r6.y
/*   69   */     add r1.zw, -r9.xxxw, c254.y
               + movs r6.x, r2.y
/*   70   */     mul r9.x, r1.x, r9.z
               + subsc r4.w, c254.y, r6.x
/*   71   */     mul r1.xy, r9.yx, r1.wz
               + subsc r0.y, c254.y, r2.x
/*   72   */     mul r10.zw, r1.yyyx, c6.xxxy
               + muls r2.w, r4.ww
/*   73   */     mul r2.xyz, r8.xzy, r7.xzy
               + mulsc r10.x, c5.x, r1.y
/*    6.0 */     exec
/*   74   */     mul r3.xy, r1.yw, c7.xy
               + mulsc r10.y, c5.y, r1.x
/*   75   */     add r7.xz, r10.xz, r10.yw
               + muls r8.w, r2.ww
/*   76   */     mad r7.y, r3.y, r9.y, r3.x
/*   77   */     mul r1, r8.xzyw, r7
/*   78   */     mad r2.xyz, r2.xyz, r0.y, r1.xyz
/*   79   */     addsc_sat r0.y, c13.x, r1.w
/*    6.1 */     exec
/*   80   */     mul r1.yzw, r5.xxyz, r0.y
               + mulsc r1.x, c15.y, r0.x
/*   81   */     mul r5.xyz, r1.yzw, c254.w
               + mulsc r1.y, c15.y, r0.z
/*   82   */     mul r5.xyz, r5.xyz, c12.z
               + mulsc r1.z, c15.y, r0.w
/*   83   */     mad r0.xyz, r5.xzy, r4.xzy, r2.xyz
/*   84   */     add r0.xyz, r0.xyz, -r1.xzy
               + movs r6._, r3.w
/*   85   */     mad r0.xyz, r0.xzy, c14.x, r1.xyz
/*    7.0 */     exece
/*   86   */     mul oC0.xyz, r0.xyz, c15.x
               + muls_prev oC0.w, r6.w
/*    7.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x007f SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xyzw
// [6] color0 r6.xyzw

