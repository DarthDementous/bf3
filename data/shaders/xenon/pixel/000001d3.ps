//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   sampler2D $tranpcy;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $matvalue      c2       1
//   $fresnelterm   c3       1
//   $compressedhdr c4       1
//   $diff          s0       1
//   $tranpcy       s1       1
//   $lmap          s2       1
//   $spec          s3       1
//   $screenshadmap s4       1
//   $envmap        s5       1
//

// Shader type: pixel 

xps_3_0
defconst $compressedhdr, float, vector, [1, 2], c4
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c3
defconst $invscreensize, float, vector, [1, 2], c1
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c2
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $spec, sampler2d, object, [1, 1], s3
defconst $tranpcy, sampler2d, object, [1, 1], s1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=8
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=6

// interpolators: 6 interpolants: 6, components: 22
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xy
dcl_color_centroid r5

def c252, 0, 0, 0, 0
def c253, 2, -127.5, 0.150000006, 0
def c254, 0.5, 3.29999995, 1.5, 1
def c255, 0.143999994, 0.298999995, 0.587000012, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    5   */     mul r4.zw, r6_abs.xxxy, c1.xxxy
/*    6   */     tfetch2D r6.__x_, r3.zw, tf1, FetchValidOnly=false
/*    7   */     tfetch2D r0._w__, r4.zw, tf4, FetchValidOnly=false
/*    8   */     serialize
                 mul r4.zw, r2.zzzw, r2.w
/*    9   */     mad r4.zw, r1.zzzw, r1.w, r4.zzzw
/*   10   */     mad r4.zw, r0.zzzw, r0.w, r4.zzzw
/*    1.0 */     exec
/*   11   */     add r6.x, r4.z, r4.z
               + rsq r6.y, r4_abs.w
/*   12   */     mul r4.zw, r6.xxxy, r2.zzzw
/*   13   */     mul r7.yz, r6.xxy, r1.zzw
/*   14   */     mul r6.xw, r6.xy, r0.zw
/*   15   */     add r7.x, -r6.x, r0.w
               + mulsc r6.x, c254.x, r0.y
/*   16   */     mul r6.y, -r4.w, r2.z
               + movs r5._, -r7.y
/*    1.1 */     exec
/*   17   */     mad r6.y, -r7.z, r1.z, r6.y
/*   18   */     mad r6.y, -r6.w, r0.z, r6.y
/*   19   */     add r6.xyz, -r6.zxy, c254.w
               + adds_prev r7.y, r1.w
/*   20   */     mul r0.x, r6.z, r6.z
               + movs r5._, -r4.z
/*   21   */     mul r7.w, r0.x, r0.x
               + adds_prev r7.z, r2.w
/*   22   */     dp3 r0.y, r7.zxy, r7.zxy
/*    2.0 */     exec
/*   23   */     add r0.x, -c3.x, c253.x
               + rsq r0.y, r0_abs.y
/*   24   */     mul r1, r7, r0.yyyx
/*   25   */     cube r0, r1.zzxy, r1.yxz
/*   26   */     mov r7.z, r0.w
               + rcp r2.x, r0_abs.z
/*   27   */     mad r7.xy, r0.yx, r2.x, c254.z
/*   28   */     tfetch2D r0._xyz, r4.xy, tf2
/*    2.1 */     exec
/*   29   */     tfetch2D r2.xyz_, r3.xy, tf3
/*   30   */     tfetchCube r4, r7.xyz, tf5
/*   31   */     tfetch2D r7, r3.xy, tf0
/*   32   */     serialize
                 mul r0.x, r7.w, r5.w
/*   33   */     add r5.yzw, r5.xxyz, r5.xxyz
               + movs r5.x, r4.w
/*   34   */     mul r2.xyz, r2.xyz, c254.x
               + mulsc r3.x, c255.w, r5.x
/*    3.0 */     exec
/*   35   */     mul r3.yzw, r5.yyzw, r7.xxyz
               + mulsc r8.x, c0.x, r0.y
/*   36   */     sgt r2.w, c254.w, r4.w
               + mulsc r8.y, c0.x, r0.z
/*   37   */     add r5.x, r3.x, c254.x
               + mulsc r8.z, c0.x, r0.w
/*   38   */     dp3 r3.y, r3.wyz, c255.xyz
               + frcs r5.x, r5.x
/*   39   */     mul r1.xyz, r8.xyz, r7.xyz
               + movs r3.y, r3.y
/*   40   */     add r5.x, r3.x, -r5.x
               + movs r3.z, c253.z
/*    3.1 */     exec
/*   41   */     add r3.x, r5.x, c253.y
               + maxs r5.x, r3.yz
/*   42   */     min r5.x, r5.x, c254.w
               + exp r3.x, r3.x
/*   43   */     mul r3.xyz, r3.x, r4.xyz
/*   44   */     cndgt r3.xyz, r2.w, r3.xyz, r4.xyz
/*   45   */     mul r3.xyz, r5.x, r3.xyz
               + movs r5._, r1.x
/*   46   */     add_sat r5.x, r1.w, c3.x
               + muls_prev r1.x, r5.y
/*    4.0 */     exec
/*   47   */     mul r3.xyz, r3.xyz, r5.x
               + movs r5._, r1.y
/*   48   */     mul r2.xyz, r3.xyz, r2.xyz
               + muls_prev r1.y, r5.z
/*   49   */     mul r2.xyz, r2.xyz, c254.y
               + movs r5._, r1.z
/*   50   */     mul r5.xyz, r2.xyz, c2.z
               + muls_prev r1.z, r5.w
/*   51   */     mul r5.xyz, r5.xyz, r0.yzw
               + movs r5._, r0.x
/*   52   */     mad r5.xyz, r1.xyz, r6.y, r5.xyz
/*    4.1 */     exece
/*   53   */     mul oC0.xyz, r5.xyz, c4.x
               + muls_prev oC0.w, r6.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x003f SamplingPattern 0x001f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xy
// [5] color0 r5.xyzw

