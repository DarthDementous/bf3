//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   sampler2D $screenshadmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $latten0       c2       1
//   $lcol          c3       3
//   $wlightpos     c6       3
//   $worldviewpos  c9       1
//   $compressedhdr c10      1
//   $diff          s0       1
//   $tranpcy       s1       1
//   $lmap          s2       1
//   $bump          s3       1
//   $screenshadmap s4       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c10
defconst $diff, sampler2d, object, [1, 1], s0
defconst $invscreensize, float, vector, [1, 2], c1
defconst $latten0, float, vector, [1, 4], c2
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $tranpcy, sampler2d, object, [1, 1], s1
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c9
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=11
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=6

// interpolators: 6 interpolants: 6, components: 22
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xy
dcl_color_centroid r5

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.5, 0, -1, 1
def c255, 2, 0, 0, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    4   */     mul r4.zw, r6_abs.xxxy, c1.xxxy
/*    5   */     tfetch2D r9.__x_, r3.zw, tf1
/*    6   */     tfetch2D r7.yw__, r3.xy, tf3
/*    7   */     tfetch2D r8.xyz_, r4.xy, tf2
/*    8   */     tfetch2D r6, r3.xy, tf0
/*    9   */     tfetch2D r3._w__, r4.zw, tf4
/*    1.0 */     exec
/*   10   */     serialize
                 add r2.w, r2.w, c9.z
               + movs r5._, r0.w
/*   11   */     mul r3.x, r6.w, r5.w
               + adds_prev r3.z, c9.x
/*   12   */     add r4.xyz, r5.xyz, r5.xyz
               + movs r5._, r1.w
/*   13   */     mul r8.xyz, r8.xyz, c0.x
               + adds_prev r5.x, c9.y
/*   14   */     mad r9.xy, r7.xy, c255.x, c254.z
/*   15   */     add r10.xy, -r5.x, c7.xy
               + mulsc r11.z, c254.x, r3.y
/*    1.1 */     exec
/*   16   */     add r7.zw, -r3.z, c6.xxxy
               + subsc r10.z, c8.x, r2.w
/*   17   */     mul r5.xz, r7.zw, r7.zw
               + subsc r10.w, c8.y, r2.w
/*   18   */     dp2add r5.z, r10.yw, r10.yw, r5.z
/*   19   */     dp2add r5.y, r10.xz, r10.xz, r5.x
/*   20   */     mul r3.yzw, r4.xxyz, r6.xxyz
               + rsq r7.x, r5_abs.y
/*   21   */     mul r11.xy, r9.xy, r9.xy
               + rsq r7.y, r5_abs.z
/*    2.0 */     exec
/*   22   */     add r5.xw, -r11.xz, c254.w
               + log r5.y, r5_abs.y
/*   23   */     add r4.w, r5.x, -r11.y
               + log r5.x, r5_abs.z
/*   24   */     mul r6.xyz, r8.xyz, r6.xyz
               + mulsc r5.z, c2.x, r5.y
/*   25   */     mul r8.xy, r7.zw, r7.xy
               + mulsc r5.y, c2.z, r5.x
/*   26   */     mul r7, r10.yxzw, r7.yxxy
               + sqrt r9.w, r4_abs.w
/*   27   */     dp3 r0.y, r9.wxy, r0.zxy
               + exp r5.x, r5.z
/*    2.1 */     exec
/*   28   */     dp3 r0.z, r9.wxy, r1.zxy
               + exp r5.y, r5.y
/*   29   */     dp3 r0.w, r9.wxy, r2.zxy
               + mulsc_sat r9.x, c2.y, r5.x
/*   30   */     dp3 r0.x, r0.wyz, r0.wyz
               + mulsc_sat r9.y, c2.w, r5.y
/*   31   */     add r5.xyz, -r9.yxz, c254.w
               + rsq r0.x, r0_abs.x
/*   32   */     mul r1.xyz, r0.ywz, r0.x
               + mulsc r0.z, c5.x, r5.y
/*   33   */     mul r0.xy, r8.xy, r1.x
               + mulsc r0.w, c5.y, r5.x
/*    3.0 */     exec
/*   34   */     dp2add_sat r0.y, r7.xw, r1.zy, r0.y
/*   35   */     dp2add_sat r0.x, r7.yz, r1.zy, r0.x
/*   36   */     dp2add r0.z, r0.zw, r0.xy, c254.y
/*   37   */     mul r5.xy, r0.yx, r5.xy
/*   38   */     mul r1.xyz, r6.xyz, r4.xyz
               + mulsc r2.x, c3.x, r5.y
/*   39   */     mul r2.zw, r5.yyyx, c4.xxxy
               + mulsc r2.y, c3.y, r5.x
/*    3.1 */     exece
/*   40   */     add r0.xy, r2.xz, r2.yw
/*   41   */     mul r0.xyz, r3.yzw, r0.xyz
               + movs r5._, r3.x
/*   42   */     mad r0.xyz, r1.xyz, r5.w, r0.xyz
/*   43   */     mul oC0.xyz, r0.xyz, c10.x
               + muls_prev oC0.w, r5.z

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x003f SamplingPattern 0x001f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xy
// [5] color0 r5.xyzw

