//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $compressedhdr c14      1
//   $diff          s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $screenshadmap s3       1
//   $envmap        s4       1
//

// Shader type: pixel 

xps_3_0
defconst $compressedhdr, float, vector, [1, 2], c14
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s4
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=5

// interpolators: 5 interpolants: 5, components: 20
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_color_centroid r4

def c252, 0.150000006, 2, 10, -127.5
def c253, 0.5, 1, 3.29999995, 1.5
def c254, 0.298999995, 0.587000012, 0.143999994, 255
def c255, 0, 0, 0, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     mul r6.xyz, r2.zwz, r2.zw
/*    8   */     mad r6.xyz, r1.zwz, r1.zw, r6.xyz
/*    9   */     mad r6.xyz, r0.zwz, r0.zw, r6.xyz
/*   10   */     add r8.x, r6.z, r6.z
               + rsq r8.w, r6_abs.x
/*   11   */     add r14.xyz, r4.xyz, r4.xyz
               + rsq r8.z, r6_abs.y
/*   12   */     mul r6.xyz, r8.xzw, r0.zwz
/*    1.0 */     exec
/*   13   */     mul r7.xyw, r8.xzw, r1.zwz
/*   14   */     add r8.y, -r7.x, r1.w
/*   15   */     mul r9.xyz, r8.wxz, r2.zzw
               + movs r4._, -r6.x
/*   16   */     add r8.z, -r9.y, r2.w
               + adds_prev r8.x, r0.w
/*   17   */     dp3 r4.z, r8.zxy, r8.zxy
/*   18   */     mul r4.xy, r5_abs.xy, c3.xy
               + rsq r4.z, r4_abs.z
/*    1.1 */     exec
/*   19   */     mul r5.xyz, r8.xyz, r4.z
/*   20   */     cube r5, r5.zzxy, r5.yxz
/*   21   */     mov r8.z, r5.w
               + rcp r4.z, r5_abs.z
/*   22   */     mad r8.xy, r5.yx, r4.z, c253.w
/*   23   */     tfetch2D r13.xyz_, r3.xy, tf2
/*   24   */     tfetch2D r5.xyz_, r3.zw, tf1
/*    2.0 */     exec
/*   25   */     tfetchCube r8, r8.xyz, tf4
/*   26   */     tfetch2D r3, r3.xy, tf0
/*   27   */     tfetch2D r4._w__, r4.xy, tf3
/*   28   */     serialize
                 add r4.x, r1.w, c11.y
               + movs r4._, c1.x
/*   29   */     add r4.z, r2.w, c11.z
               + muls_prev r11.w, c252.z
/*   30   */     mul r11.z, r8.w, c254.w
               + movs r4._, r0.w
/*    2.1 */     exec
/*   31   */     add r10.xy, -r4.z, c10.xy
               + adds_prev r4.z, c11.x
/*   32   */     add r11.xy, -r4.x, c9.xy
               + subsc r10.z, c8.x, r4.z
/*   33   */     mul r0.xy, r11.xy, r11.xy
               + subsc r10.w, c8.y, r4.z
/*   34   */     dp2add r4.x, r10.wy, r10.wy, r0.y
/*   35   */     dp2add r5.w, r10.zx, r10.zx, r0.x
/*   36   */     add r9.yw, r11.zzw, c253.xxy
               + log r0.y, r5_abs.w
/*    3.0 */     exec
/*   37   */     mul r9.w, r9.w, c2.x
               + log r0.x, r4_abs.x
/*   38   */     mul r12.x, -r6.y, r0.z
               + rsq r0.z, r5_abs.w
/*   39   */     mul r1.x, -r7.y, r1.z
               + rsq r0.w, r4_abs.x
/*   40   */     mul r12.yzw, r5.xxyz, c0.x
/*   41   */     mul r1.yzw, r3.xxyz, c254.xxyz
/*   42   */     sgt r6.w, c253.y, r8.w
/*    3.1 */     exec
/*   43   */     mul r7.xyz, r14.xyz, r3.xyz
/*   44   */     dp3 r4.x, r1.wyz, r14.zxy
/*   45   */     max r1.y, r4.x, c252.x
               + frcs r4.x, r9.y
/*   46   */     min r5.w, r1.y, c253.y
               + movs r4._, r11.z
/*   47   */     mul r1.yzw, r9.w, r13.xxyz
               + adds_prev r4.x, -r4.x
/*   48   */     mul r11.xy, r11.xy, r0.zw
               + addsc r4.x, c252.w, r4.x
/*    4.0 */     exec
/*   49   */     mul r10, r10.zwyx, r0.zwwz
               + mulsc r0.z, c4.x, r0.y
/*   50   */     mul r6.xy, r11.xy, r7.w
               + exp r4.x, r4.x
/*   51   */     mad r10.xy, r10.xy, r6.z, r6.xy
/*   52   */     mul r11.xyz, r4.x, r8.xyz
               + mulsc r4.x, c4.z, r0.x
/*   53   */     add r1, r12, r1
               + exp r0.z, r0.z
/*   54   */     mul r6.xyz, r7.xzy, r1.ywz
               + exp r0.w, r4.x
/*    4.1 */     exec
/*   55   */     cndgt r8.xyz, r6.w, r11.xyz, r8.xyz
/*   56   */     mad_sat r0.xy, r10.wz, r9.x, r10.xy
/*   57   */     mad r1.z, -r9.z, r2.z, r1.x
/*   58   */     mul_sat r1.xy, r0.zw, c4.yw
               + mulsc r1.w, c253.x, r4.y
/*   59   */     add r1, -r1, c253.y
               + movs r4._, -c13.x
/*   60   */     mul r2.yz, r1.xxy, c7.xxy
               + adds_prev r0.w, c252.y
/*    5.0 */     exec
/*   61   */     mul r4.xy, r0.yx, r1.yx
               + muls r2.x, r1.zz
/*   62   */     dp2add r0.z, r2.yz, r0.xy, c255.x
/*   63   */     mul r1.xyz, r5.w, r8.xyz
               + mulsc r8.x, c5.x, r4.y
/*   64   */     mul r8.zw, r4.yyyx, c6.xxxy
               + mulsc r8.y, c5.y, r4.x
/*   65   */     add r0.xy, r8.xz, r8.yw
               + muls r7.w, r2.xx
/*   66   */     mul r0, r7, r0
/*    5.1 */     exec
/*   67   */     mad r0.xyz, r6.xzy, r1.w, r0.xyz
/*   68   */     addsc_sat r0.w, c13.x, r0.w
/*   69   */     mul r1.xyz, r1.xyz, r0.w
/*   70   */     mul r1.xyz, r1.xyz, c253.z
/*   71   */     mul r1.xyz, r1.xyz, c12.z
               + movs r4._, r3.w
/*   72   */     mad r0.xyz, r1.xyz, r5.xyz, r0.xyz
/*    6.0 */     exece
/*   73   */     mul oC0.xyz, r0.xyz, c14.x
               + muls_prev oC0.w, r4.w
/*    6.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x001f SamplingPattern 0x000f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] color0 r4.xyzw

