      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: c8070406 00ca1a00 e1020200	      ALU:	MULv	R6.xyz_ = R2.zwzz, R2.zwww
08: c8070406 00ca1ac0 eb010106	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R1.zwzz, R1.zwww
09: c8070406 00ca1ac0 eb000006	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R0.zwzz, R0.zwww
0a: 58810808 00c6c66c e0060686	      ALU:	ADDv	R8.x___ = R6.zzzz, R6.zzzz
                          						    	RECIPSQ_IEEE	R8.___w = abs(R6).xxxx
0b: 5847080e 00c0c0b1 e0040486	      ALU:	ADDv	R14.xyz_ = R4.xyzz, R4.xyzz
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R6).yyyy
0c: c8070406 0014ca00 e1080000	      ALU:	MULv	R6.xyz_ = R8.xzww, R0.zwzz
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: c80b0407 0014ca00 e1080100	      ALU:	MULv	R7.xy_w = R8.xzww, R1.zwzz
0e: c8020408 046c1b00 e0070100	      ALU:	ADDv	R8._y__ = -R7.xxxx, R1.wwww
0f: 14070409 01cf166c e1080206	      ALU:	MULv	R9.xyz_ = R8.wxzz, R2.zzww
10: 04140808 04b11b1b e0090200	      ALU:	ADDv	R8.__z_ = -R9.yyyy, R2.wwww
                          						    	ADD_PREVs	R8.x___ = R0.wwww
11: c8040404 00bebe00 f0080800	      ALU:	DOT3v	R4.__z_ = R8.zxyy, R8.zxyy
12: 58430404 00b0b0c6 a1850384	      ALU:	MULv	R4.xy__ = abs(R5).xyyy, C259.xyyy
                          						    	RECIPSQ_IEEE	R4.__z_ = abs(R4).zzzz
      05006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c8070405 00c0c600 e1080400	      ALU:	MULv	R5.xyz_ = R8.xyzz, R4.zzzz
14: c80f0405 00a6cd00 f2050500	      ALU:	CUBEv	R5 = R5.zzxy, R5.yxzz
15: 4c440408 001b1bc6 e2050585	      ALU:	MAXv	R8.__z_ = R5.wwww, R5.wwww
                          						    	RECIP_IEEE	R4.__z_ = abs(R5).zzzz
16: c8030408 006dc61b cb0504fd	      ALU:	MULADDv	R8.xy__ = C509.wwww, R5.yxxx, R4.zzzz
17: 1028d061 1f1ffe88 00004000	      FETCH:	SAMPLE	R13.xyz_ = R3.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: b8185061 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 90488101 1f1ff688 0000c000	      FETCH:	SAMPLE	R8.xyzw = R8.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 10083061 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: 10384081 1f1fffdf 00004000	      FETCH:	SAMPLE	R4._w__ = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1c: 14010404 001bb16c 80010b01	   (S)ALU:	ADDv	R4.x___ = R1.wwww, C267.yyyy
1d: 0c840b04 001bc6c6 80020bfc	      ALU:	ADDv	R4.__z_ = R2.wwww, C267.zzzz
                          						    	MUL_PREVs	R11.___w = C508.zzzz
1e: 1404040b 001b1b1b a108fe00	      ALU:	MULv	R11.__z_ = R8.wwww, C510.wwww
      0000601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 0443040a 04c6b06c 80040a0b	      ALU:	ADDv	R10.xy__ = -R4.zzzz, C266.xyyy
                          						    	ADD_PREVs	R4.__z_ = C267.xxxx
20: b8430a0b 046cb046 80040908	      ALU:	ADDv	R11.xy__ = -R4.xxxx, C265.xyyy
                          						    	SUB_CONST_0	R10.__z_ = C264.x, R4.z
21: b8830a00 00b0b086 c10b0b08	      ALU:	MULv	R0.xy__ = R11.xyyy, R11.xyyy
                          						    	SUB_CONST_0	R10.___w = C264.y, R4.z
22: c8010404 00b3b3b1 f10a0a00	      ALU:	DOT2ADDv	R4.x___ = R0.yyyy, R10.wyyy, R10.wyyy
23: c8080405 006e6e6c f10a0a00	      ALU:	DOT2ADDv	R5.___w = R0.xxxx, R10.zxxx, R10.zxxx
24: 402a0009 0016bc1b a00bfd85	      ALU:	ADDv	R9._y_w = R11.zzww, C509.xxyy
                          						    	LOG_IEEE	R0._y__ = abs(R5).wwww
      00006025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: 40180009 001b6c6c a1090284	      ALU:	MULv	R9.___w = R9.wwww, C258.xxxx
                          						    	LOG_IEEE	R0.x___ = abs(R4).xxxx
26: 5841000c 04b1c61b e1060085	      ALU:	MULv	R12.x___ = -R6.yyyy, R0.zzzz
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R5).wwww
27: 58810001 04b1c66c e1070184	      ALU:	MULv	R1.x___ = -R7.yyyy, R1.zzzz
                          						    	RECIPSQ_IEEE	R0.___w = abs(R4).xxxx
28: c80e040c 00fc6c00 a1050000	      ALU:	MULv	R12._yzw = R5.xxyz, C256.xxxx
29: c80e0401 00fcfc00 a103fe00	      ALU:	MULv	R1._yzw = R3.xxyz, C510.xxyz
2a: c8080406 00b11b00 65fd0800	      ALU:	SETGTv	R6.___w = C509.yyyy, R8.wwww
      0000602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: c8070407 00c0c000 e10e0300	      ALU:	MULv	R7.xyz_ = R14.xyzz, R3.xyzz
2c: c8010404 00c3be00 f0010e00	      ALU:	DOT3v	R4.x___ = R1.wyzz, R14.zxyy
2d: 2c120401 006c6cb1 a204fc09	      ALU:	MAXv	R1._y__ = R4.xxxx, C508.xxxx
                          						    	FRACs	R4.x___ = R9.yyyy
2e: 14080405 00b1b1c6 a301fd0b	      ALU:	MINv	R5.___w = R1.yyyy, C509.yyyy
2f: 041e0401 011bfc6c e1090d04	      ALU:	MULv	R1._yzw = R9.wwww, R13.xxyz
                          						    	ADD_PREVs	R4.x___ = -R4.xxxx
30: b013040b 00b01a04 c10b00fc	      ALU:	MULv	R11.xy__ = R11.xyyy, R0.zwww
                          						    	ADD_CONST_0	R4.x___ = C508.w, R4.x
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: a84f000a 007ada41 c10a0004	      ALU:	MULv	R10 = R10.zwyx, R0.zwwz
                          						    	MUL_CONST_0	R0.__z_ = C260.x, R0.y
32: 38130406 00b01b6c e10b0704	      ALU:	MULv	R6.xy__ = R11.xyyy, R7.wwww
                          						    	EXP_IEEE	R4.x___ = R4.xxxx
33: c803040a 00b0c6b0 eb0a0606	      ALU:	MULADDv	R10.xy__ = R6.xyyy, R10.xyyy, R6.zzzz
34: a817040b 006cc0c0 c1040804	      ALU:	MULv	R11.xyz_ = R4.xxxx, R8.xyzz
                          						    	MUL_CONST_0	R4.x___ = C260.z, R0.x
35: 384f0001 000000c6 e00c0100	      ALU:	ADDv	R1 = R12, R1
                          						    	EXP_IEEE	R0.__z_ = R0.zzzz
36: 38870006 00b4c96c e1070104	      ALU:	MULv	R6.xyz_ = R7.xzyy, R1.ywzz
                          						    	EXP_IEEE	R0.___w = R4.xxxx
      00006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: c8070408 001bc0c0 ee060b08	      ALU:	CNDGTv	R8.xyz_ = R8.xyzz, R6.wwww, R11.xyzz
38: c9030400 00c76cb0 eb0a090a	      ALU:	MULADDv	R0.xy__ = R10.xyyy, R10.wzzz, R9.xxxx CLAMP
39: c8040401 04c6c66c eb090201	      ALU:	MULADDv	R1.__z_ = R1.xxxx, -R9.zzzz, R2.zzzz
3a: a9830101 001a1945 810004fd	      ALU:	MULv	R1.xy__ = R0.zwww, C260.ywww CLAMP
                          						    	MUL_CONST_0	R1.___w = C509.x, R4.y
3b: 140f0401 0500b16c 8001fd0d	      ALU:	ADDv	R1 = -R1, C509.yyyy
3c: 04860002 00bcbcb1 810107fc	      ALU:	MULv	R2._yz_ = R1.xxyy, C263.xxyy
                          						    	ADD_PREVs	R0.___w = C508.yyyy
      0000603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: 08130204 006d6dc6 e1000101	      ALU:	MULv	R4.xy__ = R0.yxxx, R1.yxxx
                          						    	MULs	R2.x___ = R1.zzzz
3e: c8040400 00c5b06c d10200ff	      ALU:	DOT2ADDv	R0.__z_ = C511.xxxx, R2.yzzz, R0.xyyy
3f: a8170801 001bc045 c1050805	      ALU:	MULv	R1.xyz_ = R5.wwww, R8.xyzz
                          						    	MUL_CONST_0	R8.x___ = C261.x, R4.y
40: a82c0808 0071ac84 81040605	      ALU:	MULv	R8.__zw = R4.yyyx, C262.xxxy
                          						    	MUL_CONST_0	R8._y__ = C261.y, R4.x
41: 08830700 00c4196c e0080802	      ALU:	ADDv	R0.xy__ = R8.xzzz, R8.ywww
                          						    	MULs	R7.___w = R2.xxxx
42: c80f0400 00000000 e1070000	      ALU:	MULv	R0 = R7, R0
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: c8070400 00b41bc0 eb060100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R6.xzyy, R1.wwww
44: b2800004 00000043 c204040d	      ALU:	ADD_CONST_0	R0.___w = C269.x, R0.w CLAMP
45: c8070401 00c01b00 e1010000	      ALU:	MULv	R1.xyz_ = R1.xyzz, R0.wwww
46: c8070401 00c0c600 a101fd00	      ALU:	MULv	R1.xyz_ = R1.xyzz, C509.zzzz
47: 14070401 00c0c61b a1010c03	      ALU:	MULv	R1.xyz_ = R1.xyzz, C268.zzzz
48: c8070400 00c0c0c0 eb010500	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R5.xyzz
      00001049 00002200     	EXEC_END ADDR(0x49) CNT(0x1) BOOL_ADDR(0x80)
49: 0c878000 00c06c1b a1000e04	      ALU:	MULv	export0.xyz_ = R0.xyzz, C270.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R4.wwww	; COLOR
      00000000 00000000     	NOP
