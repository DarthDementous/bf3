      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05556005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 105070a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R5.xyx CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 108050a1 1f1ffef9 00004000	      FETCH:	SAMPLE	R5.y_w_ = R5.xyx CONST(8) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: 1030a081 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R4.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: b8409081 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R4.zwz CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 10605081 1f1ff7cf 00004000	      FETCH:	SAMPLE	R5._y_w = R4.xyx CONST(6) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: b8704081 1f1fffd9 00004000	      FETCH:	SAMPLE	R4.yw__ = R4.zwz CONST(7) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0002600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 08880407 001b1b1b e1010100	   (S)ALU:	MULv	R7.___w = R1.wwww, R1.wwww
                          						    	MULs	R4.___w = R0.wwww
0c: 14030608 0019b01b e0050400	      ALU:	ADDv	R8.xy__ = R5.ywww, R4.xyyy
0d: 04270504 00c0c06c c00a0904	      ALU:	ADDv	R4.xyz_ = R10.xyzz, R9.xyzz
                          						    	ADD_PREVs	R5._y__ = C260.xxxx
0e: 14090605 00b0c41b e0080501	      ALU:	ADDv	R5.x__w = R8.xyyy, R5.xzzz
0f: 044f0504 003434b1 c0040704	      ALU:	ADDv	R4 = R4.xzyw, R7.xzyw
                          						    	ADD_PREVs	R5.__z_ = C260.yyyy
10: c8030609 00186cb1 8b05fefe	      ALU:	MULADDv	R9.xy__ = C510.yyyy, R5.xwww, C510.xxxx
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: c8010607 046d6dc6 d10909fe	      ALU:	DOT2ADDv	R7.x___ = C510.zzzz, -R9.yxxx, R9.yxxx
12: c8010605 001b1b1b eb020204	      ALU:	MULADDv	R5.x___ = R4.wwww, R2.wwww, R2.wwww
13: 58880705 001bc66c a0020485	      ALU:	ADDv	R5.___w = R2.wwww, C260.zzzz
                          						    	RECIPSQ_IEEE	R7.___w = abs(R5).xxxx
14: 4c120508 001b1b1b e1070103	      ALU:	MULv	R8._y__ = R7.wwww, R1.wwww
                          						    	RECIP_IEEE	R5.x___ = R3.wwww
15: a0410908 001b1b6c e1070087	      ALU:	MULv	R8.x___ = R7.wwww, R0.wwww
                          						    	SQRT_IEEE	R9.__z_ = abs(R7).xxxx
16: c8070607 0415c000 a0050300	      ALU:	ADDv	R7.xyz_ = -R5.yzww, C259.xyzz
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: c8020605 00bebe00 f0070700	      ALU:	DOT3v	R5._y__ = R7.zxyy, R7.zxyy
18: c80c0605 00ac6c00 e1090500	      ALU:	MULv	R5.__zw = R9.xxxy, R5.xxxx
19: c8020600 00bebe00 f0090000	      ALU:	DOT3v	R0._y__ = R9.zxyy, R0.zxyy
1a: c8040600 00bebe00 f0090100	      ALU:	DOT3v	R0.__z_ = R9.zxyy, R1.zxyy
1b: c8080600 00bebe00 f0090200	      ALU:	DOT3v	R0.___w = R9.zxyy, R2.zxyy
1c: c8010600 00c3c300 f0000000	      ALU:	DOT3v	R0.x___ = R0.wyzz, R0.wyzz
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 58140008 001b1b6c e1070280	      ALU:	MULv	R8.__z_ = R7.wwww, R2.wwww
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
1e: 14870801 00156cc6 c10000fe	      ALU:	MULv	R1.xyz_ = R0.yzww, R0.xxxx
                          						    	MAXs	R8.___w = C510.zzzz
1f: c8080601 00bebe00 f0080100	      ALU:	DOT3v	R1.___w = R8.zxyy, R1.zxyy
20: c8010600 003e3e00 ef010800	      ALU:	DOT4v	R0.x___ = R1.zxyw, R8.zxyw
21: c80e0600 04fc6cfc eb010008	      ALU:	MULADDv	R0._yzw = R8.xxyz, -R1.xxyz, R0.xxxx
22: 58110200 00c3c3b1 f0000085	      ALU:	DOT3v	R0.x___ = R0.wyzz, R0.wyzz
                          						    	RECIPSQ_IEEE	R2.x___ = abs(R5).yyyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: 58170002 00c06c6c e1070280	      ALU:	MULv	R2.xyz_ = R7.xyzz, R2.xxxx
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
24: c80d0600 00056c00 e1000000	      ALU:	MULv	R0.x_zw = R0.yzzw, R0.xxxx
25: c9020600 00cfbe00 f0000200	      ALU:	DOT3v	R0._y__ = R0.wxzz, R2.zxyy CLAMP
26: 40210500 00cfbeb1 f0000100	      ALU:	DOT3v	R0.x___ = R0.wxzz, R1.zxyy
                          						    	LOG_IEEE	R5._y__ = R0.yyyy
27: c80f0601 0094ac00 a105ff00	      ALU:	MULv	R1 = R5.xzwy, C511.xxxy
28: c8060600 006cbc6c cb0103ff	      ALU:	MULADDv	R0._yz_ = C511.xxxx, R1.xxxx, R3.xxyy
      09506029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c8060600 00c116bc 8b000101	      ALU:	MULADDv	R0._yz_ = C257.xxyy, R0.yyzz, C257.zzww
2a: 20830002 01c5c56c e0000186	      ALU:	ADDv	R2.xy__ = R0.yzzz, R1.yzzz
                          						    	SETGTs	R0.___w = -abs(R6).xxxx
2b: 30180001 1f1ffff8 00004000	      FETCH:	SAMPLE	R0.x___ = R0.xwx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2c: 10281041 1f1ffe88 00004000	      FETCH:	SAMPLE	R1.xyz_ = R2.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2d: 64080001 1f1fffc7 00004000	      FETCH:	SAMPLE	R0._x__ = R0.yzy CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2e: c8040600 006cc600 e1050300	   (S)ALU:	MULv	R0.__z_ = R5.xxxx, R3.zzzz
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: c8030602 02c56c00 a0000000	      ALU:	ADDv	R2.xy__ = R0.yzzz, -C256.xxxx
30: 4c200206 000000b1 e2060602	      ALU:	RECIP_IEEE	R2._y__ = R2.yyyy
31: 4c1e0200 00fc1b6c a106ff02	      ALU:	MULv	R0._yzw = R6.xxyz, C511.wwww
                          						    	RECIP_IEEE	R2.x___ = R2.xxxx
32: c8030602 00b0b100 a1020000	      ALU:	MULv	R2.xy__ = R2.xyyy, C256.yyyy
33: 64100606 00000061 e2060602	      ALU:	SUBs	R6.x___ = R2.yyxx
34: aa100206 00000084 e2060602	      ALU:	MUL_CONST_0	R2.x___ = C258.y, R6.x CLAMP
      00006035 00002200     	EXEC_END ADDR(0x35) CNT(0x6) BOOL_ADDR(0x80)
35: c8088000 006c1b00 e1020600	      ALU:	MULv	export0.___w = R2.xxxx, R6.wwww	; COLOR
36: 38870606 00b4c61b a104ff01	      ALU:	MULv	R6.xyz_ = R4.xzyy, C511.zzzz
                          						    	EXP_IEEE	R6.___w = R1.wwww
37: c80e0600 01d11b8c eb000606	      ALU:	MULADDv	R0._yzw = -R6.xxzy, R0.yywz, R6.wwww
38: c80e0600 00fcb1d1 ab010500	      ALU:	MULADDv	R0._yzw = R0.yywz, R1.xxyz, C261.yyyy
39: c8070606 00c96cb4 eb000006	      ALU:	MULADDv	R6.xyz_ = R6.xzyy, R0.ywzz, R0.xxxx
3a: c8078000 00b46c00 a1060500	      ALU:	MULv	export0.xyz_ = R6.xzyy, C261.xxxx	; COLOR
