      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 10007081 1f1ffe3f 00004000	      FETCH:	SAMPLE	R7.__x_ = R4.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 14030507 00b0b01b a1860303	   (S)ALU:	MULv	R7.xy__ = abs(R6).xyyy, C259.xyyy
07: 04120606 00b16cc6 0104ff0c	      ALU:	MULv	R6._y__ = C260.yyyy, C511.xxxx
                          						    	ADD_PREVs	R6.x___ = C268.zzzz
08: c8040508 01c6b1b1 ab070406	      ALU:	MULADDv	R8.__z_ = -R6.yyyy, R7.zzzz, C260.yyyy
09: b08c0009 046cac83 a0060b0c	      ALU:	ADDv	R9.__zw = -R6.xxxx, C267.xxxy
                          						    	ADD_CONST_0	R0.___w = C268.y, R2.w
0a: b8140906 00bebe43 d000000a	      ALU:	DOT3v	R6.__z_ = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R9.x___ = C266.x, R0.w
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 08110a06 001b6cc6 a0010c01	      ALU:	ADDv	R6.x___ = R1.wwww, C268.xxxx
                          						    	MULs	R10.x___ = R1.zzzz
0c: b8230906 046cb083 8006090a	      ALU:	ADDv	R6.xy__ = -R6.xxxx, C265.xyyy
                          						    	SUB_CONST_0	R9._y__ = C266.y, R0.w
0d: 588c0607 00acacc6 e1060686	      ALU:	MULv	R7.__zw = R6.xxxy, R6.xxxy
                          						    	RECIPSQ_IEEE	R6.___w = abs(R6).zzzz
0e: c8080507 0019191b f1090907	      ALU:	DOT2ADDv	R7.___w = R7.wwww, R9.ywww, R9.ywww
0f: c8080508 00c4c4c6 f1090907	      ALU:	DOT2ADDv	R8.___w = R7.zzzz, R9.xzzz, R9.xzzz
10: 58140806 001b1b1b a1060488	      ALU:	MULv	R6.__z_ = R6.wwww, C260.wwww
                          						    	RECIPSQ_IEEE	R8.x___ = abs(R8).wwww
      05406011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 582c0806 0006ac1b e1060087	      ALU:	MULv	R6.__zw = R6.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R8._y__ = abs(R7).wwww
12: c80f0500 00aaa600 e1060800	      ALU:	MULv	R0 = R6.zwxy, R8.zzxy
13: c803050b 00b0b000 e0000400	      ALU:	ADDv	R11.xy__ = R0.xyyy, R4.xyyy
14: 10386081 1f1ff447 00004000	      FETCH:	SAMPLE	R6._xyz = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: b828a081 1f1ff447 00004000	      FETCH:	SAMPLE	R10._xyz = R4.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 10184161 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R11.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 104800e1 1f1fffdf 00004000	      FETCH:	SAMPLE	R0._w__ = R7.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: 08170607 00c0c0c6 e0050502	   (S)ALU:	ADDv	R7.xyz_ = R5.xyzz, R5.xyzz
                          						    	MULs	R6.x___ = R2.zzzz
19: c8020505 006c1bc6 0b01ffff	      ALU:	MULADDv	R5._y__ = C511.zzzz, C257.xxxx, C511.wwww
1a: ac1e050a 00016c45 810a0002	      ALU:	MULv	R10._yzw = R10.yyzw, C256.xxxx
                          						    	MUL_CONST_1	R5.x___ = C258.x, R5.y
1b: 401e0506 006c011b e1050688	      ALU:	MULv	R6._yzw = R5.xxxx, R6.yyzw
                          						    	LOG_IEEE	R5.x___ = abs(R8).wwww
1c: 402f0506 0000001b e00a0687	      ALU:	ADDv	R6 = R10, R6
                          						    	LOG_IEEE	R5._y__ = abs(R7).wwww
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: c8080507 00c6c66c eb030306	      ALU:	MULADDv	R7.___w = R6.xxxx, R3.zzzz, R3.zzzz
1e: 58830705 00b0c41b a1050587	      ALU:	MULv	R5.xy__ = R5.xyyy, C261.xzzz
                          						    	RECIPSQ_IEEE	R7.___w = abs(R7).wwww
1f: 140f0508 000dad1b e1090807	      ALU:	MULv	R8 = R9.yxzw, R8.yxxy
20: 0c120202 001bc6c6 e1070203	      ALU:	MULv	R2._y__ = R7.wwww, R2.zzzz
                          						    	MUL_PREVs	R2.x___ = R3.zzzz
21: 38110500 001bc66c e1070105	      ALU:	MULv	R0.x___ = R7.wwww, R1.zzzz
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
22: 38250500 001a6cb1 e1000005	      ALU:	MULv	R0.x_z_ = R0.zwww, R0.xxxx
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c9020501 00186dc6 f1080200	      ALU:	DOT2ADDv	R1._y__ = R0.zzzz, R8.xwww, R2.yxxx CLAMP
24: c9010501 00c56d6c f1080200	      ALU:	DOT2ADDv	R1.x___ = R0.xxxx, R8.yzzz, R2.yxxx CLAMP
25: a91c0000 00ac3141 810505ff	      ALU:	MULv	R0.__zw = R5.xxxy, C261.yyyw CLAMP
                          						    	MUL_CONST_0	R0.x___ = C511.x, R0.y
26: c8070500 0414c600 a000ff00	      ALU:	ADDv	R0.xyz_ = -R0.xzww, C511.zzzz
27: a8470103 00c0c041 c1070408	      ALU:	MULv	R3.xyz_ = R7.xyzz, R4.xyzz
                          						    	MUL_CONST_0	R1.__z_ = C264.x, R0.y
28: a8830105 006db282 c1010008	      ALU:	MULv	R5.xy__ = R1.yxxx, R0.zyyy
                          						    	MUL_CONST_0	R1.___w = C264.y, R0.z
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c8040501 001ab0b1 d10101ff	      ALU:	DOT2ADDv	R1.__z_ = C511.yyyy, R1.zwww, R1.xyyy
2a: ac170602 00c01545 c1030606	      ALU:	MULv	R2.xyz_ = R3.xyzz, R6.yzww
                          						    	MUL_CONST_1	R6.x___ = C262.x, R5.y
2b: ac2c0606 0071ac84 81050706	      ALU:	MULv	R6.__zw = R5.yyyx, C263.xxxy
                          						    	MUL_CONST_1	R6._y__ = C262.y, R5.x
2c: c8030501 00c41900 e0060600	      ALU:	ADDv	R1.xy__ = R6.xzzz, R6.ywww
2d: 14070501 00c0c01b e1030104	      ALU:	MULv	R1.xyz_ = R3.xyzz, R1.xyzz
2e: c8070500 00c06cc0 eb020001	      ALU:	MULADDv	R0.xyz_ = R1.xyzz, R2.xyzz, R0.xxxx
      0000102f 00002200     	EXEC_END ADDR(0x2f) CNT(0x1) BOOL_ADDR(0x80)
2f: 0c878000 00c06c1b a1000d05	      ALU:	MULv	export0.xyz_ = R0.xyzz, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
      00000000 00000000     	NOP
