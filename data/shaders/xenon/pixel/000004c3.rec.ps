      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: c8070709 00ca1a00 e1020200	      ALU:	MULv	R9.xyz_ = R2.zwzz, R2.zwww
08: c8070709 00ca1ac0 eb010109	      ALU:	MULADDv	R9.xyz_ = R9.xyzz, R1.zwzz, R1.zwww
09: c8070709 001617be eb000009	      ALU:	MULADDv	R9.xyz_ = R9.zxyy, R0.zzww, R0.wzww
0a: 5843090a 00b0b0c6 e2060689	      ALU:	MAXv	R10.xy__ = R6.xyyy, R6.xyyy
                          						    	RECIPSQ_IEEE	R9.__z_ = abs(R9).zzzz
0b: 58810909 006c6cb1 e0090989	      ALU:	ADDv	R9.x___ = R9.xxxx, R9.xxxx
                          						    	RECIPSQ_IEEE	R9.___w = abs(R9).yyyy
0c: c807070c 00cf1600 e1090000	      ALU:	MULv	R12.xyz_ = R9.wxzz, R0.zzww
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: c807070f 00cf1600 e1090100	      ALU:	MULv	R15.xyz_ = R9.wxzz, R1.zzww
0e: c8020709 04b11b00 e00f0100	      ALU:	ADDv	R9._y__ = -R15.yyyy, R1.wwww
0f: 1407070b 01cf16b1 e109020c	      ALU:	MULv	R11.xyz_ = R9.wxzz, R2.zzww
10: 04140909 04b11b1b e00b0200	      ALU:	ADDv	R9.__z_ = -R11.yyyy, R2.wwww
                          						    	ADD_PREVs	R9.x___ = R0.wwww
11: c8010700 00bebe00 f0090900	      ALU:	DOT3v	R0.x___ = R9.zxyy, R9.zxyy
12: 5814000a 006c6c6c 210afd80	      ALU:	MULv	R10.__z_ = C266.xxxx, C509.xxxx
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
      05006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c8070709 00c06c00 e1090000	      ALU:	MULv	R9.xyz_ = R9.xyzz, R0.xxxx
14: c80f0709 00a6cd00 f2090900	      ALU:	CUBEv	R9 = R9.zzxy, R9.yxzz
15: 4c14000d 001b1bc6 e2090989	      ALU:	MAXv	R13.__z_ = R9.wwww, R9.wwww
                          						    	RECIP_IEEE	R0.x___ = abs(R9).zzzz
16: c803070d 006d6cc6 cb0900fd	      ALU:	MULADDv	R13.xy__ = C509.zzzz, R9.yxxx, R0.xxxx
17: 105090c1 1f1ffecf 00004000	      FETCH:	SAMPLE	R9._yw_ = R6.xyx CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: 9020e1a1 1f1ff688 0000c000	      FETCH:	SAMPLE	R14.xyzw = R13.xyz CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 90409141 1f1ff1ff 00008000	      FETCH:	SAMPLE	R9.___x = R10.xyz CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 4c110009 021b1b1b a009fd05	   (S)ALU:	ADDv	R9.x___ = R9.wwww, -C509.wwww
                          						    	RECIP_IEEE	R0.x___ = R5.wwww
1b: 1415000d 006cb01b e100050e	      ALU:	MULv	R13.x_z_ = R0.xxxx, R5.xyyy
                          						    	MAXs	R0.x___ = R14.wwww
1c: a822000d 04c61bc0 800dfdfe	      ALU:	ADDv	R13._y__ = -R13.zzzz, C509.wwww
                          						    	MUL_CONST_0	R0._y__ = C510.z, R0.x
1d: b08e0409 00fcfb41 c00909fd	      ALU:	ADDv	R9._yzw = R9.xxyz, R9.wwyz
                          						    	ADD_CONST_0	R4.___w = C509.x, R0.y
1e: 2c880408 00b11b1b a109ff04	      ALU:	MULv	R8.___w = R9.yyyy, C511.wwww
                          						    	FRACs	R4.___w = R4.wwww
      0000601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 4c810409 02b11bc6 e0000404	      ALU:	ADDv	R9.x___ = R0.yyyy, -R4.wwww
                          						    	RECIP_IEEE	R4.___w = R4.zzzz
20: 14030705 011bb0c6 e104040f	      ALU:	MULv	R5.xy__ = R4.wwww, R4.xyyy
21: 0c8b0409 00c8b0c6 a009fe01	      ALU:	ADDv	R9.xy_w = R9.xwzz, C510.xyyy
                          						    	MUL_PREVs	R4.___w = R1.zzzz
22: c808070d 04c6c61b eb0c0004	      ALU:	MULADDv	R13.___w = R4.wwww, -R12.zzzz, R0.zzzz
23: 140c0705 011b9bc6 e108090b	      ALU:	MULv	R5.__zw = R8.wwww, R9.wwwy
24: 0c160a0a 0016b1c6 a105fd02	      ALU:	MULv	R10._yz_ = R5.zzww, C509.yyyy
                          						    	MUL_PREVs	R10.x___ = R2.zzzz
      09656025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: b808a0c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R10.___x = R6.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
26: 101900a1 1f1ff63f 00004000	      FETCH:	SAMPLE	R16.__xw = R5.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
27: b447010a 00bfc083 c00d0a07	   (S)ALU:	ADDv	R10.xyz_ = R13.wxyy, R10.xyzz
                          						    	ADD_CONST_1	R1.__z_ = C263.y, R1.w
28: 64392141 1f1ffe88 00004000	      FETCH:	SAMPLE	R18.xyz_ = R10.yzy CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
29: 106850c1 1f1ff611 00004000	      FETCH:	SAMPLE	R5.yzxw = R6.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2a: b0480009 046c6cc3 2009fc07	   (S)ALU:	ADDv	R9.___w = -C265.xxxx, C508.xxxx
                          						    	ADD_CONST_0	R0.__z_ = C263.z, R2.w
      0000602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: 14070711 00c0c01b e0070700	      ALU:	ADDv	R17.xyz_ = R7.xyzz, R7.xyzz
2c: 042b0700 00c06c6c 000c0007	      ALU:	ADDv	R0.xy_w = C268.xyzz, C256.xxxx
                          						    	ADD_PREVs	R7._y__ = C263.xxxx
2d: c80c070d 04b1ac00 a0070400	      ALU:	ADDv	R13.__zw = -R7.yyyy, C260.xxxy
2e: bc110d01 00c6b142 8504fc05	      ALU:	SETGTv	R1.x___ = R4.zzzz, C508.yyyy
                          						    	SUB_CONST_1	R13.x___ = C261.x, R1.z
2f: 14270702 00c0b1c6 a1120b05	      ALU:	MULv	R2.xyz_ = R18.xyzz, C267.yyyy
                          						    	MAXs	R7._y__ = R5.zzzz
30: ac170804 0010c045 e00008ff	      ALU:	ADDv	R4.xyz_ = R0.xyww, R8.xyzz
                          						    	MUL_CONST_1	R8.x___ = C511.x, R7.y
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: ac270806 00c0be84 c11105ff	      ALU:	MULv	R6.xyz_ = R17.xyzz, R5.zxyy
                          						    	MUL_CONST_1	R8._y__ = C511.y, R5.x
32: ac480800 001b1bc5 45fd0eff	      ALU:	SETGTv	R0.___w = C509.wwww, R14.wwww
                          						    	MUL_CONST_1	R8.__z_ = C511.z, R5.y
33: b8121007 00bebe42 d0081106	      ALU:	DOT3v	R7._y__ = R8.zxyy, R17.zxyy
                          						    	SUB_CONST_0	R16.x___ = C262.x, R0.z
34: b8221007 00b1c682 8207fc06	      ALU:	MAXv	R7._y__ = R7.yyyy, C508.zzzz
                          						    	SUB_CONST_0	R16._y__ = C262.y, R0.z
35: bc270d00 00c01082 c1101005	      ALU:	MULv	R0.xyz_ = R16.xyzz, R16.xyww
                          						    	SUB_CONST_1	R13._y__ = C261.y, R1.z
36: c8020700 00b3b3b1 f10d0d00	      ALU:	DOT2ADDv	R0._y__ = R0.yyyy, R13.wyyy, R13.wyyy
      00006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: c8010700 006e6e6c f10d0d00	      ALU:	DOT2ADDv	R0.x___ = R0.xxxx, R13.zxxx, R13.zxxx
38: 58140000 00c66c6c e1000180	      ALU:	MULv	R0.__z_ = R0.zzzz, R1.xxxx
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
39: 58220007 00b11bb1 a307fd80	      ALU:	MINv	R7._y__ = R7.yyyy, C509.wwww
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R0).yyyy
3a: c8030701 00b0b000 e1100000	      ALU:	MULv	R1.xy__ = R16.xyyy, R0.xyyy
3b: c80f070d 000dad00 e10d0000	      ALU:	MULv	R13 = R13.yxzw, R0.yxxy
3c: 38430100 006d6c6c e10d0f09	      ALU:	MULv	R0.xy__ = R13.yxxx, R15.xxxx
                          						    	EXP_IEEE	R1.__z_ = R9.xxxx
      0000603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: c8070708 00c6c000 e1010e00	      ALU:	MULv	R8.xyz_ = R1.zzzz, R14.xyzz
3e: c8070708 001bc0c0 ee00080e	      ALU:	CNDGTv	R8.xyz_ = R14.xyzz, R0.wwww, R8.xyzz
3f: c8030700 001a6cb0 eb0d0c00	      ALU:	MULADDv	R0.xy__ = R0.xyyy, R13.zwww, R12.xxxx
40: c9090700 006d6c6d eb010b00	      ALU:	MULADDv	R0.x__w = R0.yxxx, R1.yxxx, R11.xxxx CLAMP
41: a8120900 00c61b80 c1000002	      ALU:	MULv	R0._y__ = R0.zzzz, R0.wwww
                          						    	MUL_CONST_0	R9.x___ = C258.y, R0.x
42: a8230a01 04181b41 800afd02	      ALU:	ADDv	R1.xy__ = -R10.xwww, C509.wwww
                          						    	MUL_CONST_0	R10._y__ = C258.x, R0.y
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: 14270708 00b1c0b1 e1070800	      ALU:	MULv	R8.xyz_ = R7.yyyy, R8.xyzz
                          						    	MAXs	R7._y__ = R0.yyyy
44: ac160a09 00cc6145 a1000301	      ALU:	MULv	R9._yz_ = R0.xxzz, C259.yyxx
                          						    	MUL_CONST_1	R10.x___ = C257.x, R7.y
45: a8840a0a 00c61b80 c1090001	      ALU:	MULv	R10.__z_ = R9.zzzz, R0.wwww
                          						    	MUL_CONST_0	R10.___w = C257.y, R0.x
46: 081f000a 0000ac6c e10a0301	      ALU:	MULv	R10 = R10, R3.xxxy
                          						    	MULs	R0.x___ = R1.xxxx
47: c8060709 00bcb1c1 eb09030a	      ALU:	MULADDv	R9._yz_ = R10.yyzz, R9.xxyy, R3.yyyy
48: 08810609 006c1b6c e00a0a00	      ALU:	ADDv	R9.x___ = R10.xxxx, R10.wwww
                          						    	MULs	R6.___w = R0.xxxx
      00006049 00001200     	EXEC ADDR(0x49) CNT(0x6) BOOL_ADDR(0x80)
49: c80f0700 00343400 e1060900	      ALU:	MULv	R0 = R6.xzyw, R9.xzyw
4a: c8070700 00b4b4c0 eb060400	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R6.xzyy, R4.xzyy
4b: b2800007 00000043 c2070709	      ALU:	ADD_CONST_0	R0.___w = C265.x, R0.w CLAMP
4c: 14070708 00c01b1b e1080005	      ALU:	MULv	R8.xyz_ = R8.xyzz, R0.wwww
4d: 0c870708 00b41b1b a108fe07	      ALU:	MULv	R8.xyz_ = R8.xzyy, C510.wwww
                          						    	MUL_PREVs	R7.___w = R7.wwww
4e: c8070707 00c0c6c0 ab080800	      ALU:	MULADDv	R7.xyz_ = R0.xyzz, R8.xyzz, C264.zzzz
      0000304f 00002200     	EXEC_END ADDR(0x4f) CNT(0x3) BOOL_ADDR(0x80)
4f: 14070707 02c0b41b e0070207	      ALU:	ADDv	R7.xyz_ = R7.xyzz, -R2.xzyy
50: c8070707 00b46cc0 ab070a02	      ALU:	MULADDv	R7.xyz_ = R2.xyzz, R7.xzyy, C266.xxxx
51: 0c878000 00c06cb1 a1070b01	      ALU:	MULv	export0.xyz_ = R7.xyzz, C267.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R1.yyyy	; COLOR
