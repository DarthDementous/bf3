      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: c8070609 00ca1a00 e1020200	      ALU:	MULv	R9.xyz_ = R2.zwzz, R2.zwww
07: c8070609 00ca1ac0 eb010109	      ALU:	MULADDv	R9.xyz_ = R9.xyzz, R1.zwzz, R1.zwww
08: c8070609 00ca1ac0 eb000009	      ALU:	MULADDv	R9.xyz_ = R9.xyzz, R0.zwzz, R0.zwww
09: 5843080a 00b0b0b1 a1880889	      ALU:	MULv	R10.xy__ = abs(R8).xyyy, C264.xyyy
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R9).yyyy
0a: 58810808 00c6c66c e0090989	      ALU:	ADDv	R8.x___ = R9.zzzz, R9.zzzz
                          						    	RECIPSQ_IEEE	R8.___w = abs(R9).xxxx
0b: c807060d 00c81600 e1080000	      ALU:	MULv	R13.xyz_ = R8.xwzz, R0.zzww
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c80b060c 00cf1600 e1080100	      ALU:	MULv	R12.xy_w = R8.wxzz, R1.zzww
0d: c8020608 04b11b00 e00c0100	      ALU:	ADDv	R8._y__ = -R12.yyyy, R1.wwww
0e: 14070609 01cf166c e108020d	      ALU:	MULv	R9.xyz_ = R8.wxzz, R2.zzww
0f: 04140808 04b11b1b e0090200	      ALU:	ADDv	R8.__z_ = -R9.yyyy, R2.wwww
                          						    	ADD_PREVs	R8.x___ = R0.wwww
10: 4c880407 00bebec6 f0080804	      ALU:	DOT3v	R7.___w = R8.zxyy, R8.zxyy
                          						    	RECIP_IEEE	R4.___w = R4.zzzz
11: 588c070a 001bac1b e1040487	      ALU:	MULv	R10.__zw = R4.wwww, R4.xxxy
                          						    	RECIPSQ_IEEE	R7.___w = abs(R7).wwww
      05006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: b0870408 00c01bc3 e1080707	      ALU:	MULv	R8.xyz_ = R8.xyzz, R7.wwww
                          						    	ADD_CONST_0	R4.___w = C263.z, R2.w
13: c80f0608 00a6cd00 f2080800	      ALU:	CUBEv	R8 = R8.zzxy, R8.yxzz
14: 4c84070b 001b1bc6 e2080888	      ALU:	MAXv	R11.__z_ = R8.wwww, R8.wwww
                          						    	RECIP_IEEE	R7.___w = abs(R8).zzzz
15: c803060b 006d1bc6 cb0807fd	      ALU:	MULADDv	R11.xy__ = C509.zzzz, R8.yxxx, R7.wwww
16: b828c141 1f1ffec7 00004000	      FETCH:	SAMPLE	R12._xw_ = R10.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: b818a0a1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R10.__x_ = R5.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 90488161 1f1ff688 0000c000	      FETCH:	SAMPLE	R8.xyzw = R11.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 100900a1 1f1ff688 00004000	      FETCH:	SAMPLE	R16.xyzw = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 10385141 1f1ffe47 00004000	      FETCH:	SAMPLE	R5._xy_ = R10.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: c8060605 04b6616c 8b0509fc	   (S)ALU:	MULADDv	R5._yz_ = C508.xxxx, -R5.zzyy, C265.yyxx
1c: b417050f 00c0c083 c0060607	      ALU:	ADDv	R15.xyz_ = R6.xyzz, R6.xyzz
                          						    	ADD_CONST_1	R5.x___ = C263.y, R1.w
1d: 14080607 001b1b1b e1100600	      ALU:	MULv	R7.___w = R16.wwww, R6.wwww
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: 0483060e 046cb06c 80050507	      ALU:	ADDv	R14.xy__ = -R5.xxxx, C261.xyyy
                          						    	ADD_PREVs	R6.___w = C263.xxxx
1f: b8430e0a 041bb047 a0040604	      ALU:	ADDv	R10.xy__ = -R4.wwww, C262.xyyy
                          						    	SUB_CONST_0	R14.__z_ = C260.x, R6.w
20: b8890e05 00b0b087 e10a0a04	      ALU:	MULv	R5.x__w = R10.xyyy, R10.xyyy
                          						    	SUB_CONST_0	R14.___w = C260.y, R6.w
21: c8080604 00b3b31b f10e0e05	      ALU:	DOT2ADDv	R4.___w = R5.wwww, R14.wyyy, R14.wyyy
22: c8010605 006e6e6c f10e0e05	      ALU:	DOT2ADDv	R5.x___ = R5.xxxx, R14.zxxx, R14.zxxx
23: 58110b0d 04c6c66c e10d0085	      ALU:	MULv	R13.x___ = -R13.zzzz, R0.zzzz
                          						    	RECIPSQ_IEEE	R11.x___ = abs(R5).xxxx
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 58210b00 041bc61b e10c0184	      ALU:	MULv	R0.x___ = -R12.wwww, R1.zzzz
                          						    	RECIPSQ_IEEE	R11._y__ = abs(R4).wwww
25: c8070606 00c06c00 200d0000	      ALU:	ADDv	R6.xyz_ = C269.xyzz, C256.xxxx
26: 14080600 01c6c66c 8504fc0b	      ALU:	SETGTv	R0.___w = R4.zzzz, C508.zzzz
27: 04470b01 00c0c06c c00607ff	      ALU:	ADDv	R1.xyz_ = R6.xyzz, R7.xyzz
                          						    	ADD_PREVs	R11.__z_ = C511.xxxx
28: 14170607 00c0c01b e10f1008	      ALU:	MULv	R7.xyz_ = R15.xyzz, R16.xyzz
                          						    	MAXs	R6.x___ = R8.wwww
29: a8270604 00c0c004 a110fefe	      ALU:	MULv	R4.xyz_ = R16.xyzz, C510.xyzz
                          						    	MUL_CONST_0	R6._y__ = C510.w, R6.x
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: b0180601 006c1b45 65fc08fd	      ALU:	SETGTv	R1.___w = C508.xxxx, R8.wwww
                          						    	ADD_CONST_0	R6.x___ = C509.x, R6.y
2b: 2c140606 00bebe6c f0040f06	      ALU:	DOT3v	R6.__z_ = R4.zxyy, R15.zxyy
                          						    	FRACs	R6.x___ = R6.xxxx
2c: 14040606 00c61bb1 a206fc06	      ALU:	MAXv	R6.__z_ = R6.zzzz, C508.wwww
2d: 041f0604 010dad6c e10e0b06	      ALU:	MULv	R4 = R14.yxzw, R11.yxxy
                          						    	ADD_PREVs	R6.x___ = -R6.xxxx
2e: b016060d 0016b184 e1040dfc	      ALU:	MULv	R13._yz_ = R4.zzww, R13.yyyy
                          						    	ADD_CONST_0	R6.x___ = C508.y, R6.x
2f: 38160600 00616c6c e1040c06	      ALU:	MULv	R0._yz_ = R4.yyxx, R12.xxxx
                          						    	EXP_IEEE	R6.x___ = R6.xxxx
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: c80b0606 006cc000 e1060800	      ALU:	MULv	R6.xy_w = R6.xxxx, R8.xyzz
31: c8070608 001b10c0 ee010608	      ALU:	CNDGTv	R8.xyz_ = R8.xyzz, R1.wwww, R6.xyww
32: c8070604 00b4b400 e00d0000	      ALU:	ADDv	R4.xyz_ = R13.xzyy, R0.xzyy
33: c808060a 04c6c66c eb090204	      ALU:	MULADDv	R10.___w = R4.xxxx, -R9.zzzz, R2.zzzz
34: c8030600 041a6c00 a00afc00	      ALU:	ADDv	R0.xy__ = -R10.zwww, C508.xxxx
35: 08180c06 00c66cb1 a306fc00	      ALU:	MINv	R6.___w = R6.zzzz, C508.xxxx
                          						    	MULs	R12.x___ = R0.yyyy
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: c80c060a 00acec00 e10c0c00	      ALU:	MULv	R10.__zw = R12.xxxy, R12.xxxz
37: 14070606 00b4b41b e10a0b0a	      ALU:	MULv	R6.xyz_ = R10.xzyy, R11.xzyy
38: 0c160500 00666c1b e1060900	      ALU:	MULv	R0._yz_ = R6.zzxx, R9.xxxx
                          						    	MUL_PREVs	R5.x___ = R0.wwww
39: b3140600 00c6c645 e004000b	      ALU:	ADDv	R0.__z_ = R4.zzzz, R0.zzzz CLAMP
                          						    	ADD_CONST_0	R6.x___ = C267.x, R6.y CLAMP
3a: 140e0606 001bfcb1 e1060804	      ALU:	MULv	R6._yzw = R6.wwww, R8.xxyz
3b: 068d0506 00056cb1 e1060600	      ALU:	MULv	R6.x_zw = R6.yzzw, R6.xxxx
                          						    	ADD_PREVs	R5.___w = R0.yyyy CLAMP
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: a8160202 00bcbc84 e10503fd	      ALU:	MULv	R2._yz_ = R5.xxyy, R3.xxyy
                          						    	MUL_CONST_0	R2.x___ = C509.y, R6.x
3d: a8230206 00b2c787 e10205fd	      ALU:	MULv	R6.xy__ = R2.zyyy, R5.wzzz
                          						    	MUL_CONST_0	R2._y__ = C509.y, R6.w
3e: a8480206 00b1c686 e10600fd	      ALU:	MULv	R6.___w = R6.yyyy, R0.zzzz
                          						    	MUL_CONST_0	R2.__z_ = C509.y, R6.z
3f: c8040603 006fb01b 910603fd	      ALU:	DOT2ADDv	R3.__z_ = C509.wwww, R6.wxxx, C259.xyyy
40: a8170402 00b4c647 a1020a01	      ALU:	MULv	R2.xyz_ = R2.xzyy, C266.zzzz
                          						    	MUL_CONST_0	R4.x___ = C257.x, R6.w
41: a82c0404 005bac84 a1060201	      ALU:	MULv	R4.__zw = R6.wwwx, C258.xxxy
                          						    	MUL_CONST_0	R4._y__ = C257.y, R6.x
      00004042 00002200     	EXEC_END ADDR(0x42) CNT(0x4) BOOL_ADDR(0x80)
42: 14030603 00c4191b e0040407	      ALU:	ADDv	R3.xy__ = R4.xzzz, R4.ywww
43: c8070606 00c0c0c0 eb070302	      ALU:	MULADDv	R6.xyz_ = R2.xyzz, R7.xyzz, R3.xyzz
44: c8070606 00c0c0c0 eb070106	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R7.xyzz, R1.xyzz
45: 0c878000 00c06c6c a1060c00	      ALU:	MULv	export0.xyz_ = R6.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
