//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $height;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   float $usendotl;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $suncolour     c3       1
//   $sunintensity  c4       1
//   $usendotl      c5       1
//   $invscreensize c6       1
//   $matvalue      c7       1
//   $latten0       c8       1
//   $lcol          c9       3
//   $wlightpos     c12      3
//   $worldviewpos  c15      1
//   $compressedhdr c16      1
//   $height        s0       1
//   $diff          s1       1
//   $lmap          s2       1
//   $incan         s3       1
//   $bump          s4       1
//   $spec          s5       1
//   $envmap        s6       1
//   $screenshadmap s7       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s4
defconst $compressedhdr, float, vector, [1, 2], c16
defconst $diff, sampler2d, object, [1, 1], s1
defconst $envmap, samplercube, object, [1, 1], s6
defconst $height, sampler2d, object, [1, 1], s0
defconst $incan, sampler2d, object, [1, 1], s3
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c6
defconst $latten0, float, vector, [1, 4], c8
defconst $lcol, float, matrix_columns, [4, 4], c9-11
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c7
defconst $screenshadmap, sampler2d, object, [1, 1], s7
defconst $spec, sampler2d, object, [1, 1], s5
defconst $suncolour, float, vector, [1, 3], c3
defconst $sunintensity, float, scalar, [1, 1], c4
defconst $usendotl, float, scalar, [1, 1], c5
defconst $wlightpos, float, matrix_columns, [4, 4], c12-14
defconst $worldviewpos, float, vector, [1, 3], c15
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 29
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5.xyz
dcl_texcoord6 r6
dcl_color_centroid r7

def c252, 0.25, -1, 1.5, 2
def c253, 0.5, 10, 0, 1
def c254, 0.0599999987, 0.289999992, 0.150000006, 0.300000012
def c255, 4, 0, 0, 0


/*    0.0 */     exec
/*    8   */     tfetch2D r0.___x, r6.xy, tf0, FetchValidOnly=false
/*    9   */     serialize
                 dp3 r0.z, r0.zxy, r0.zxy
/*   10   */     mul r9.xy, c7.yx, c253.xy
               + rsq r0.z, r0_abs.z
/*   11   */     mad r4.w, r0.w, c7.y, -r9.x
/*   12   */     add r12.xyz, r7.zyx, r7.zyx
               + mulsc r0.w, c7.w, r0.z
/*   13   */     mul r7.xy, r0.zw, r0.yx
/*    0.1 */     exec
/*   14   */     mad r13.xy, r7.yx, r4.w, r6.xy
/*   15   */     tfetch2D r14.xyz_, r6.xy, tf3, FetchValidOnly=false
/*   16   */     tfetch2D r0.x_yz, r13.xy, tf5, FetchValidOnly=false
/*   17   */     tfetch2D r7.yw__, r13.xy, tf4, FetchValidOnly=false
/*   18   */     tfetch2D r10.xyz_, r6.zw, tf2, FetchValidOnly=false
/*   19   */     serialize
                 dp3 r0.y, r4.zxy, r4.zxy
/*    1.0 */     exec
/*   20   */     mul r11.yzw, r10.zzyx, c0.x
               + movs r7._, c1.x
/*   21   */     mad r6.xy, r7.xy, c252.w, c252.y
/*   22   */     dp3 r7.x, r0.wzx, c254.xyz
               + muls_prev r7.y, c253.y
/*   23   */     mul r7.x, r9.y, r7.x
               + rsq r4.w, r0_abs.y
/*   24   */     dp2add r0.y, -r6.yx, r6.yx, c253.w
/*   25   */     mul r9.xyz, r4.w, r4.xyz
               + sqrt r6.z, r0_abs.y
/*    1.1 */     exec
/*   26   */     dp3 r2.y, r6.zxy, r2.zxy
               + addsc r7.x, c253.w, r7.x
/*   27   */     dp3 r2.z, r6.zxy, r3.zxy
               + addsc r7.y, c253.w, r7.y
/*   28   */     mul r4.x, r2.z, r3.w
               + mulsc r0.y, c2.x, r7.y
/*   29   */     dp3 r2.x, r6.zxy, r1.zxy
               + movs r7._, r2.y
/*   30   */     mul r4.yzw, r0.y, r14.xxyz
               + muls_prev r0.y, r2.w
/*   31   */     mad r11.x, r2.x, r1.w, r0.y
/*    2.0 */     exec
/*   32   */     add r4, r11.xwyz, r4.xywz
/*   33   */     dp3_sat r0.y, r9.zxy, r6.zxy
               + adds r5.w, r4.xx
/*   34   */     mul r9.xyz, r5.w, r2.xyz
/*   35   */     add r9.y, -r9.y, r2.w
/*   36   */     max r9.w, r7.x, c253.z
               + movs r7._, -r9.x
/*   37   */     add r9.z, -r9.z, r3.w
               + adds_prev r9.x, r1.w
/*    2.1 */     exec
/*   38   */     dp3 r7.x, r9.zxy, r9.zxy
               + log r0.y, r0.y
/*   39   */     mul r1.xyz, r0.wzx, c253.x
               + rsq r0.x, r7_abs.x
/*   40   */     mul r9, r9, r0.xxxy
/*   41   */     cube r0, r9.zzxy, r9.yxz
/*   42   */     mov r11.z, r0.w
               + rcp r7.x, r0_abs.z
/*   43   */     mad r11.xy, r0.yx, r7.x, c252.z
/*    3.0 */     exec
/*   44   */     tfetchCube r11.xyz_, r11.xyz, tf6
/*   45   */     tfetch2D r0, r13.xy, tf1
/*   46   */     serialize
                 mul r0.xyz, r12.zxy, r0.xzy
/*   47   */     mul r9.xyz, r1.xyz, r11.zyx
/*   48   */     mul r1.xyz, r1.xyz, r10.zyx
               + movs_sat r7.x, r5.z
/*   49   */     mul r10.xyz, r1.xyz, c255.x
               + exp r1.x, r9.w
/*    3.1 */     exec    // PredicateClean=false
/*   50   */     mul r1.xyz, r10.xyz, r1.x
               + movs r7._, r0.w
/*   51   */     mul r1.xyz, r1.xyz, c3.zyx
               + muls_prev r7.w, r7.w
/*   52   */     mul r1.xyz, r1.xyz, c4.x
               + setp_ne r7._, c5.x
/*   53   */     mad r1.xyz, r9.xzy, c7.z, r1.xzy
/*   54   */     mad r1.xyz, r0.xzy, r4.ywz, r1.yzx
/*    4.0 */ (p0) exec
/*   55   */     (p0) mul r7.y, c4.x, c3.x
/*   56   */     (p0) cndeq r4.yzw, c253.zzzw, -r5.zzx, r5.y
/*   57   */     (p0) dp3_sat r4.x, r6.zxy, r5.zxy
               + (p0) movs_sat r7.z, -r5.z
/*   58   */     (p0) dp3_sat r0.w, r6.zxy, r4.yzw
               + (p0) movs r7._, r4.x
/*   59   */     (p0) add r7.z, r0.w, -r7.z
               + (p0) adds_prev r7.x, -r7.x
/*   60   */     (p0) mad r7.x, r7.z, c252.x, r7.x
/*    4.1 */ (p0) exec
/*   61   */     (p0) mul r7.y, r7.y, r7.x
/*   62   */     (p0) mul r4.xw, r7.yx, c254.w
/*   63   */     (p0) mul r7.xy, r4.w, c3.yz
/*   64   */     (p0) mul r4.yz, r7.yyx, c4.x
/*   65   */     (p0) add r1.xyz, r1.xyz, r4.xzy
/*    5.0 */     alloc colors
/*    5.1 */     exec
/*   66   */     mul r7.xy, r8_abs.xy, c6.xy
/*   67   */     tfetch2D r0.___w, r7.xy, tf7
/*   68   */     serialize
                 add r7.y, r2.w, c15.y
               + addsc r7.x, c15.x, r1.w
/*   69   */     add r5.xy, -r7.y, c13.xy
               + addsc r7.z, c15.z, r3.w
/*   70   */     add r3.xy, -r7.x, c12.xy
               + subsc r5.z, c14.x, r7.z
/*   71   */     dp3 r1.w, r2.zxy, r2.zxy
               + subsc r5.w, c14.y, r7.z
/*    6.0 */     exec
/*   72   */     mul r7.xy, r3.yx, r3.yx
               + rsq r7.z, r1_abs.w
/*   73   */     dp2add r7.x, r5.yw, r5.yw, r7.x
/*   74   */     dp2add r7.y, r5.xz, r5.xz, r7.y
/*   75   */     rsq r4.x, r7_abs.y
/*   76   */     rsq r4.y, r7_abs.x
/*   77   */     log r7.y, r7_abs.y
/*    6.1 */     exec
/*   78   */     mul r3.z, r0.w, c253.x
               + log r7.x, r7_abs.x
/*   79   */     mul r2.xzw, r2.xzzy, r7.z
               + mulsc r7.z, c8.x, r7.y
/*   80   */     mul r3.xy, r3.xy, r4.xy
               + mulsc r7.y, c8.z, r7.x
/*   81   */     mul r4, r5.yxzw, r4.yxxy
               + exp r7.x, r7.z
/*   82   */     mul r2.xy, r3.xy, r2.x
               + exp r7.y, r7.y
/*   83   */     dp2add_sat r2.y, r4.xw, r2.wz, r2.y
/*    7.0 */     exec
/*   84   */     dp2add_sat r2.x, r4.yz, r2.wz, r2.x
/*   85   */     mul_sat r3.xy, r7.xy, c8.yw
/*   86   */     add r7.xyz, -r3.yxz, c253.w
/*   87   */     mul r3.xy, r2.xy, r7.yx
               + mulsc r3.z, c11.x, r7.y
/*   88   */     dp2add r2.z, r3.xy, c10.xy, c253.z
/*   89   */     mul r3.xy, r3.xy, c9.xy
               + mulsc r3.w, c11.y, r7.x
/*    7.1 */     exece
/*   90   */     mul r3.zw, r3.zzzw, r2.xxxy
/*   91   */     add r2.xy, r3.xz, r3.yw
/*   92   */     mul r0.xyz, r0.xyz, r2.xyz
/*   93   */     mad r7.xyz, r7.z, r1.xzy, r0.xyz
/*   94   */     mul r7.xyz, r7.xzy, c16.x
/*   95   */     mov oC0, r7

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyz
// [6] texcoord6 r6.xyzw
// [7] color0 r7.xyzw

