//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spotlightmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $latten0       c2       1
//   $lcol          c3       3
//   $wlightpos     c6       3
//   $worldviewpos  c9       1
//   $matvalue      c10      1
//   $fresnelterm   c11      1
//   $compressedhdr c12      1
//   $diff          s0       1
//   $lmap          s1       1
//   $screenshadmap s2       1
//   $spotlightmap  s3       1
//   $envmap        s4       1
//

// Shader type: pixel 

xps_3_0
defconst $compressedhdr, float, vector, [1, 2], c12
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s4
defconst $fresnelterm, float, scalar, [1, 1], c11
defconst $invscreensize, float, vector, [1, 2], c1
defconst $latten0, float, vector, [1, 4], c2
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c10
defconst $screenshadmap, sampler2d, object, [1, 1], s2
defconst $spotlightmap, sampler2d, object, [1, 1], s3
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c9
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=6

// interpolators: 6 interpolants: 6, components: 23
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4
dcl_color_centroid r5

def c252, 0, 0, 0, 0
def c253, 0.150000006, 2, -127.5, 0.200000003
def c254, 0.5, 3.29999995, 1.5, 1
def c255, 0.143999994, 0.298999995, 0.587000012, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     mul r7.xyz, r2.zwz, r2.zw
/*    8   */     mad r7.xyz, r1.zwz, r1.zw, r7.xyz
/*    9   */     mad r8.xyz, r0.zwz, r0.zw, r7.xyz
/*   10   */     mul r7.xw, r6_abs.xy, c1.xy
               + rsq r6.z, r8_abs.y
/*   11   */     add r6.x, r8.z, r8.z
               + rsq r6.w, r8_abs.x
/*   12   */     mul r9.xyz, r6.xzw, r0.zwz
/*    1.0 */     exec
/*   13   */     mul r10.xyz, r6.wxz, r1.zzw
/*   14   */     add r6.y, -r10.y, r1.w
/*   15   */     mul r8.xyw, r6.wzx, r2.zwz
               + movs r5._, -r9.x
/*   16   */     add r6.z, -r8.w, r2.w
               + adds_prev r6.x, r0.w
/*   17   */     dp3 r3.w, r6.zxy, r6.zxy
               + rcp r6.w, r3.z
/*   18   */     mul r7.yz, r6.w, r3.xxy
               + rsq r3.w, r3_abs.w
/*    1.1 */     exec
/*   19   */     mul r6.xyz, r6.xyz, r3.w
/*   20   */     cube r6, r6.zzxy, r6.yxz
/*   21   */     mov r11.z, r6.w
               + rcp r3.w, r6_abs.z
/*   22   */     mad r11.xy, r6.yx, r3.w, c254.z
/*   23   */     tfetch2D r7.w___, r7.xw, tf2
/*   24   */     tfetch2D r6._xyz, r4.zw, tf1
/*    2.0 */     exec
/*   25   */     tfetchCube r14, r11.xyz, tf4
/*   26   */     tfetch2D r13, r4.xy, tf0
/*   27   */     tfetch2D r7._xw_, r7.yz, tf3
/*   28   */     serialize
                 add r8.w, -c11.x, c253.y
               + addsc r1.w, c9.y, r1.w
/*   29   */     add r3.w, r2.w, c9.z
               + movs r5._, r0.w
/*   30   */     mul oC0.w, r13.w, r5.w
/*    2.1 */     exec
/*   31   */     add r4.xyz, r5.xyz, r5.xyz
               + adds_prev r5.z, c9.x
/*   32   */     add r11.xy, -r3.w, c8.xy
               + muls r12.z, r7.yz
/*   33   */     sgt r3.z, r3.z, c253.w
               + movs r5.x, r14.w
/*   34   */     sgt r3.x, c254.w, r14.w
               + mulsc r5.y, c255.w, r5.x
/*   35   */     add r5.x, r5.y, c254.x
               + subsc r11.z, c6.x, r5.z
/*   36   */     frc r5.x, r5.x
               + subsc r11.w, c6.y, r5.z
/*    3.0 */     exec
/*   37   */     add r5.x, r5.y, -r5.x
               + subsc r12.x, c7.x, r1.w
/*   38   */     add r5.y, r5.x, c253.z
               + subsc r12.y, c7.y, r1.w
/*   39   */     mul r5.x, -r8.y, r2.z
               + exp r5.y, r5.y
/*   40   */     mad r5.x, -r10.z, r1.z, r5.x
/*   41   */     mul r5.yzw, r5.y, r14.xxyz
               + mulsc r1.x, c0.x, r6.y
/*   42   */     cndgt r7.yzw, r3.x, r5.yyzw, r14.xxyz
/*    3.1 */     exec
/*   43   */     mad r5.x, -r9.y, r0.z, r5.x
/*   44   */     add r12.w, -r5.x, c254.w
               + mulsc r1.y, c0.x, r6.z
/*   45   */     mul r5.xyw, r12.yxw, r12.yxw
               + mulsc r1.z, c0.x, r6.w
/*   46   */     dp2add r5.x, r11.wy, r11.wy, r5.x
/*   47   */     dp2add r0.x, r11.zx, r11.zx, r5.y
/*   48   */     mul r2.xyz, r4.xyz, r13.xyz
               + rsq r3.x, r0_abs.x
/*    4.0 */     exec
/*   49   */     mul r1.xyz, r1.xyz, r13.xyz
               + rsq r3.y, r5_abs.x
/*   50   */     dp3 r5.z, r2.zxy, c255.xyz
               + log r5.y, r0_abs.x
/*   51   */     mul r2.w, r5.w, r5.w
               + log r5.x, r5_abs.x
/*   52   */     max r5.z, r5.z, c253.x
               + mulsc r5.w, c2.x, r5.y
/*   53   */     mul r0.xyz, r12.xzy, r3.xzy
               + mulsc r5.y, c2.z, r5.x
/*   54   */     mul r3, r11.zwyx, r3.xyyx
               + exp r5.x, r5.w
/*    4.1 */     exec
/*   55   */     mul r9.xy, r0.xz, r10.x
               + exp r5.y, r5.y
/*   56   */     mad r3.xy, r3.xy, r9.z, r9.xy
/*   57   */     mul_sat r5.xy, r5.xy, c2.yw
/*   58   */     mad_sat r8.yz, r3.zzw, r8.x, r3.yyx
/*   59   */     min r0.x, r5.z, c254.w
               + movs r5._, r0.y
/*   60   */     add r5.zw, -r5.yyyx, c254.w
               + muls_prev r8.x, r8.z
/*    5.0 */     exec
/*   61   */     mul r5.xy, r8.yx, r5.zw
/*   62   */     mul r3.zw, r5.yyyx, c4.xxxy
/*   63   */     mul r0.yzw, r0.x, r7.yyzw
               + mulsc r3.x, c3.x, r5.y
/*   64   */     mul r7.yz, r5.yyz, c5.xxy
               + mulsc r3.y, c3.y, r5.x
/*   65   */     mad r8.z, r7.z, r8.y, r7.y
/*   66   */     add r8.xy, r3.xz, r3.yw
/*    5.1 */     exec
/*   67   */     mul r5, r2.wxyz, r8.wxyz
/*   68   */     add_sat r0.x, r5.x, c11.x
/*   69   */     mul r7.yzw, r0.yyzw, r0.x
/*   70   */     mul r0, r7, c254.xy
/*   71   */     mul r1.xyz, r1.xzy, r4.xzy
               + movs r5.x, r0.x
/*   72   */     mul r0.xyz, r0.yzw, c10.z
               + subsc r0.w, c254.w, r5.x
/*    6.0 */     exece
/*   73   */     mad r5.xyz, r1.xzy, r0.w, r5.yzw
/*   74   */     mad r5.xyz, r0.xyz, r6.yzw, r5.xyz
/*   75   */     mul oC0.xyz, r5.xyz, c12.x
/*    6.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x003f SamplingPattern 0x001f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyzw
// [5] color0 r5.xyzw

