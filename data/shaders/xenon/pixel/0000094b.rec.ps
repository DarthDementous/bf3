      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 100090a1 1f1fffc7 00004000	      FETCH:	SAMPLE	R9._x__ = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: b0800006 00000083 e206060a	   (S)ALU:	ADD_CONST_0	R0.___w = C266.y, R2.w
07: 1403060c 00b0b01b a1880b01	      ALU:	MULv	R12.xy__ = abs(R8).xyyy, C267.xyyy
08: 04810708 00b16c6c 0103ff0a	      ALU:	MULv	R8.x___ = C259.yyyy, C511.xxxx
                          						    	ADD_PREVs	R7.___w = C266.xxxx
09: c8040609 01b1b16c ab090308	      ALU:	MULADDv	R9.__z_ = -R8.xxxx, R9.yyyy, C259.yyyy
0a: b41c090a 041bacc3 a007070a	      ALU:	ADDv	R10.__zw = -R7.wwww, C263.xxxy
                          						    	ADD_CONST_1	R9.x___ = C266.z, R3.w
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: b8180a07 00bebe43 d0000008	      ALU:	DOT3v	R7.___w = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R10.x___ = C264.x, R0.w
0c: b8230a08 046cb083 80090908	      ALU:	ADDv	R8.xy__ = -R9.xxxx, C265.xyyy
                          						    	SUB_CONST_0	R10._y__ = C264.y, R0.w
0d: 58830809 00b0b01b e1080887	      ALU:	MULv	R9.xy__ = R8.xyyy, R8.xyyy
                          						    	RECIPSQ_IEEE	R8.___w = abs(R7).wwww
0e: c8080600 00b3b3b1 f10a0a09	      ALU:	DOT2ADDv	R0.___w = R9.yyyy, R10.wyyy, R10.wyyy
0f: c8080607 006e6e6c f10a0a09	      ALU:	DOT2ADDv	R7.___w = R9.xxxx, R10.zxxx, R10.zxxx
10: 58140908 001b1b1b a1080387	      ALU:	MULv	R8.__z_ = R8.wwww, C259.wwww
                          						    	RECIPSQ_IEEE	R9.x___ = abs(R7).wwww
      05406011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 582c0908 0006ac1b e1080080	      ALU:	MULv	R8.__zw = R8.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R9._y__ = abs(R0).wwww
12: c80f0608 00aaa600 e1080900	      ALU:	MULv	R8 = R8.zwxy, R9.zzxy
13: c80a0600 00bcbc00 e0080500	      ALU:	ADDv	R0._y_w = R8.xxyy, R5.xxyy
14: b828d0a1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R13.__x_ = R5.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: 1038b0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R11.xyz_ = R5.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 10480181 1f1ffe39 00004000	      FETCH:	SAMPLE	R0.y_x_ = R12.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 74185001 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R0.ywy CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: c8020600 006c1bc6 0b01ffff	   (S)ALU:	MULADDv	R0._y__ = C511.zzzz, C257.xxxx, C511.wwww
19: c8080600 001b1b00 e1050600	      ALU:	MULv	R0.___w = R5.wwww, R6.wwww
1a: c80e0606 00fcfc00 e0060600	      ALU:	ADDv	R6._yzw = R6.xxyz, R6.xxyz
1b: a81e060c 00fc6c41 000e0002	      ALU:	ADDv	R12._yzw = C270.xxyz, C256.xxxx
                          						    	MUL_CONST_0	R6.x___ = C258.x, R0.y
1c: a8170d05 0015c042 c106050c	      ALU:	MULv	R5.xyz_ = R6.yzww, R5.xyzz
                          						    	MUL_CONST_0	R13.x___ = C268.x, R0.z
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: a82e0d0b 006cfc80 c1060b0c	      ALU:	MULv	R11._yzw = R6.xxxx, R11.xxyz
                          						    	MUL_CONST_0	R13._y__ = C268.y, R0.x
1e: 08170c06 04c0c6c6 a00dff01	      ALU:	ADDv	R6.xyz_ = -R13.xyzz, C511.zzzz
                          						    	MULs	R12.x___ = R1.zzzz
1f: 08130b08 00b0b0c6 e1060402	      ALU:	MULv	R8.xy__ = R6.xyyy, R4.xyyy
                          						    	MULs	R11.x___ = R2.zzzz
20: c80f0604 00000000 e00c0b00	      ALU:	ADDv	R4 = R12, R11
21: c8080606 00c6c66c eb030304	      ALU:	MULADDv	R6.___w = R4.xxxx, R3.zzzz, R3.zzzz
22: 582f0009 000dad1b e10a0986	      ALU:	MULv	R9 = R10.yxzw, R9.yxxy
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R6).wwww
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c8010600 00b1c600 e1000100	      ALU:	MULv	R0.x___ = R0.yyyy, R1.zzzz
24: 14080606 00b1c6b1 e1000300	      ALU:	MULv	R6.___w = R0.yyyy, R3.zzzz
25: 0c430006 001a1bc6 e1080602	      ALU:	MULv	R6.xy__ = R8.zwww, R6.wwww
                          						    	MUL_PREVs	R0.__z_ = R2.zzzz
26: c9020600 006fc4b1 f1090006	      ALU:	DOT2ADDv	R0._y__ = R6.yyyy, R9.wxxx, R0.xzzz CLAMP
27: c9010600 00b2c46c f1090006	      ALU:	DOT2ADDv	R0.x___ = R6.xxxx, R9.zyyy, R0.xzzz CLAMP
28: c8030606 006d6d00 e1080000	      ALU:	MULv	R6.xy__ = R8.yxxx, R0.yxxx
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c8040600 006db0b1 910606ff	      ALU:	DOT2ADDv	R0.__z_ = C511.yyyy, R6.yxxx, C262.xyyy
2a: a8170201 0015c045 e0040704	      ALU:	ADDv	R1.xyz_ = R4.yzww, R7.xyzz
                          						    	MUL_CONST_0	R2.x___ = C260.x, R6.y
2b: a82c0202 0071ac84 a1060504	      ALU:	MULv	R2.__zw = R6.yyyx, C261.xxxy
                          						    	MUL_CONST_0	R2._y__ = C260.y, R6.x
2c: c8030600 00c41900 e0020200	      ALU:	ADDv	R0.xy__ = R2.xzzz, R2.ywww
2d: 14070600 00c0c01b e1050000	      ALU:	MULv	R0.xyz_ = R5.xyzz, R0.xyzz
2e: c8070600 00c0c0c0 eb050100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R5.xyzz, R1.xyzz
      0000102f 00002200     	EXEC_END ADDR(0x2f) CNT(0x1) BOOL_ADDR(0x80)
2f: 0c878000 00c06cc6 a1000d06	      ALU:	MULv	export0.xyz_ = R0.xyzz, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.zzzz	; COLOR
      00000000 00000000     	NOP
