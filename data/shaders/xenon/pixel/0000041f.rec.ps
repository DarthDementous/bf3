      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: 10206081 1f1ffecf 00004000	      FETCH:	SAMPLE	R6._yw_ = R4.xyx CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 08880603 001b1b1b e1010102	   (S)ALU:	MULv	R3.___w = R1.wwww, R1.wwww
                          						    	MULs	R6.___w = R2.wwww
09: c8010506 001b1b1b eb000003	      ALU:	MULADDv	R6.x___ = R3.wwww, R0.wwww, R0.wwww
0a: c8070506 00c0c300 e0060600	      ALU:	ADDv	R6.xyz_ = R6.xyzz, R6.wyzz
0b: c8030507 00c56c00 a006fc00	      ALU:	ADDv	R7.xy__ = R6.yzzz, C508.xxxx
0c: c8080506 046d6d1b d10707fd	      ALU:	DOT2ADDv	R6.___w = C509.wwww, -R7.yxxx, R7.yxxx
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: a0480703 001bb11b a0010886	      ALU:	ADDv	R3.___w = R1.wwww, C264.yyyy
                          						    	SQRT_IEEE	R7.__z_ = abs(R6).wwww
0e: c801050a 00bebe00 f0070000	      ALU:	DOT3v	R10.x___ = R7.zxyy, R0.zxyy
0f: c802050a 00bebe00 f0070100	      ALU:	DOT3v	R10._y__ = R7.zxyy, R1.zxyy
10: 58840a0a 00bebe6c f0070286	      ALU:	DOT3v	R10.__z_ = R7.zxyy, R2.zxyy
                          						    	RECIPSQ_IEEE	R10.___w = abs(R6).xxxx
11: c8030509 00c71b00 e10a0200	      ALU:	MULv	R9.xy__ = R10.wzzz, R2.wwww
12: c8030507 00181b00 e10a0000	      ALU:	MULv	R7.xy__ = R10.xwww, R0.wwww
      00006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c80c0507 00311b00 e10a0100	      ALU:	MULv	R7.__zw = R10.yyyw, R1.wwww
14: c8010506 006cc600 e0070700	      ALU:	ADDv	R6.x___ = R7.xxxx, R7.zzzz
15: c8010506 006cb100 e0060900	      ALU:	ADDv	R6.x___ = R6.xxxx, R9.yyyy
16: c8060506 0411bc00 e1070a00	      ALU:	MULv	R6._yz_ = -R7.yyww, R10.xxyy
17: c8030506 006d6e00 e0060600	      ALU:	ADDv	R6.xy__ = R6.yxxx, R6.zxxx
18: c80e0506 00b18c00 e1060a00	      ALU:	MULv	R6._yzw = R6.yyyy, R10.xxzy
      00006019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 14040501 051b1bb1 e0060106	      ALU:	ADDv	R1.__z_ = -R6.wwww, R1.wwww
1a: 04280101 04c61b1b e0060200	      ALU:	ADDv	R1.___w = -R6.zzzz, R2.wwww
                          						    	ADD_PREVs	R1._y__ = R0.wwww
1b: 4c410601 00c3c3c6 f0010103	      ALU:	DOT3v	R1.x___ = R1.wyzz, R1.wyzz
                          						    	RECIP_IEEE	R6.__z_ = R3.zzzz
1c: 58130107 00c6b06c e1060381	      ALU:	MULv	R7.xy__ = R6.zzzz, R3.xyyy
                          						    	RECIPSQ_IEEE	R1.x___ = abs(R1).xxxx
1d: c8070501 00156c00 e1010100	      ALU:	MULv	R1.xyz_ = R1.yzww, R1.xxxx
1e: c80f0501 00a6cd00 f2010100	      ALU:	CUBEv	R1 = R1.zzxy, R1.yxzz
      0550601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 4c440608 001b1bc6 e2010181	      ALU:	MAXv	R8.__z_ = R1.wwww, R1.wwww
                          						    	RECIP_IEEE	R6.__z_ = abs(R1).zzzz
20: c8030508 006dc6c6 cb0106fd	      ALU:	MULADDv	R8.xy__ = C509.zzzz, R1.yxxx, R6.zzzz
21: b8186081 1f1ff447 00004000	      FETCH:	SAMPLE	R6._xyz = R4.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: 10381081 1f1ff447 00004000	      FETCH:	SAMPLE	R1._xyz = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
23: 9058c101 1f1ff688 0000c000	      FETCH:	SAMPLE	R12.xyzw = R8.xyz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
24: 10088081 1f1ff688 00004000	      FETCH:	SAMPLE	R8.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: 104840e1 1f1fffd8 00004000	      FETCH:	SAMPLE	R4.xw__ = R7.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
26: c8010507 046c6c00 200aff00	   (S)ALU:	ADDv	R7.x___ = -C266.xxxx, C511.xxxx
27: 14010501 001bc61b a0020800	      ALU:	ADDv	R1.x___ = R2.wwww, C264.zzzz
28: c8088000 001b1b00 e1080500	      ALU:	MULv	export0.___w = R8.wwww, R5.wwww	; COLOR
29: 04470502 00c0c06c c0050508	      ALU:	ADDv	R2.xyz_ = R5.xyzz, R5.xyzz
                          						    	ADD_PREVs	R5.__z_ = C264.xxxx
2a: 14180504 00c6c61b a503fc0c	      ALU:	SETGTv	R4.___w = R3.zzzz, C508.zzzz
                          						    	MAXs	R5.x___ = R12.wwww
      0000602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: ac83000b 046cb004 800107fe	      ALU:	ADDv	R11.xy__ = -R1.xxxx, C263.xyyy
                          						    	MUL_CONST_1	R0.___w = C510.w, R5.x
2c: bc470b03 00c0c046 c1020805	      ALU:	MULv	R3.xyz_ = R2.xyzz, R8.xyzz
                          						    	SUB_CONST_1	R11.__z_ = C261.x, R5.z
2d: bc240700 001b1b43 65fd0c06	      ALU:	SETGTv	R0.__z_ = C509.wwww, R12.wwww
                          						    	SUB_CONST_1	R7._y__ = C262.x, R3.w
2e: bc410701 00bec083 b003fe06	      ALU:	DOT3v	R1.x___ = R3.zxyy, C510.xyzz
                          						    	SUB_CONST_1	R7.__z_ = C262.y, R3.w
2f: bc890b05 00c5c586 c1070705	      ALU:	MULv	R5.x__w = R7.yzzz, R7.yzzz
                          						    	SUB_CONST_1	R11.___w = C261.y, R5.z
30: c8080505 00b3b31b f10b0b05	      ALU:	DOT2ADDv	R5.___w = R5.wwww, R11.wyyy, R11.wyyy
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: c8020505 006e6e6c f10b0b05	      ALU:	DOT2ADDv	R5._y__ = R5.xxxx, R11.zxxx, R11.zxxx
32: 58110005 001b6cb1 a000fd85	      ALU:	ADDv	R5.x___ = R0.wwww, C509.xxxx
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R5).yyyy
33: 58210005 006c001b e8050085	      ALU:	FRACv	R5.x___ = R5.xxxx
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R5).wwww
34: 40240505 006c1bb1 a201fc85	      ALU:	MAXv	R5.__z_ = R1.xxxx, C508.wwww
                          						    	LOG_IEEE	R5._y__ = abs(R5).yyyy
35: 40810505 021b6c1b e0000585	      ALU:	ADDv	R5.x___ = R0.wwww, -R5.xxxx
                          						    	LOG_IEEE	R5.___w = abs(R5).wwww
36: b4480509 00c61b84 8305fdfc	      ALU:	MINv	R9.___w = R5.zzzz, C509.wwww
                          						    	ADD_CONST_1	R5.__z_ = C508.y, R5.x
      00006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: 38830005 0019c4c6 a1050105	      ALU:	MULv	R5.xy__ = R5.ywww, C257.xzzz
                          						    	EXP_IEEE	R0.___w = R5.zzzz
38: 381c0505 00f1ac6c e1070005	      ALU:	MULv	R5.__zw = R7.yyyz, R0.xxxy
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
39: 382e0507 001bfcb1 e1000c05	      ALU:	MULv	R7._yzw = R0.wwww, R12.xxyz
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
3a: c80e0507 00c601fc ee00070c	      ALU:	CNDGTv	R7._yzw = R12.xxyz, R0.zzzz, R7.yyzw
3b: ae2f000c 000dad84 c10b0001	      ALU:	MULv	R12 = R11.yxzw, R0.yxxy
                          						    	MUL_CONST_1	R0._y__ = C257.y, R5.x CLAMP
3c: ae410000 00bebe05 d00a0a01	      ALU:	DOT3v	R0.x___ = R10.zxyy, R10.zxyy
                          						    	MUL_CONST_1	R0.__z_ = C257.w, R5.y CLAMP
      0000603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: 581c0500 04861b6c a000fd80	      ALU:	ADDv	R0.__zw = -R0.zzzy, C509.wwww
                          						    	RECIPSQ_IEEE	R5.x___ = abs(R0).xxxx
3e: 0827040b 00656c61 e10a0504	      ALU:	MULv	R11.xyz_ = R10.yzxx, R5.xxxx
                          						    	MULs	R4._y__ = R4.yyxx
3f: ac160505 00166c41 c1050bfd	      ALU:	MULv	R5._yz_ = R5.zzww, R11.xxxx
                          						    	MUL_CONST_1	R5.x___ = C509.x, R1.y
40: c9020509 006fb2c6 f10c0b05	      ALU:	DOT2ADDv	R9._y__ = R5.zzzz, R12.wxxx, R11.zyyy CLAMP
41: c9040504 00b2b2b1 f10c0b05	      ALU:	DOT2ADDv	R4.__z_ = R5.yyyy, R12.zyyy, R11.zyyy CLAMP
42: c8020505 046cc66c eb090a06	      ALU:	MULADDv	R5._y__ = R6.xxxx, -R9.xxxx, R10.zzzz
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: ac410504 04b11b42 8005fdfd	      ALU:	ADDv	R4.x___ = -R5.yyyy, C509.wwww
                          						    	MUL_CONST_1	R5.__z_ = C509.x, R1.z
44: ac830504 00b01843 c10404fd	      ALU:	MULv	R4.xy__ = R4.xyyy, R4.xwww
                          						    	MUL_CONST_1	R5.___w = C509.x, R1.w
45: a8150109 006d6e45 e1040400	      ALU:	MULv	R9.x_z_ = R4.yxxx, R4.zxxx
                          						    	MUL_CONST_0	R1.x___ = C256.x, R6.y
46: a8230100 006d1a46 e1090000	      ALU:	MULv	R0.xy__ = R9.yxxx, R0.zwww
                          						    	MUL_CONST_0	R1._y__ = C256.x, R6.z
47: a84c0104 0071ac47 a1000300	      ALU:	MULv	R4.__zw = R0.yyyx, C259.xxxy
                          						    	MUL_CONST_0	R1.__z_ = C256.x, R6.w
48: a81f0407 001a0041 c1090702	      ALU:	MULv	R7 = R9.zwww, R7
                          						    	MUL_CONST_0	R4.x___ = C258.x, R0.y
      00006049 00001200     	EXEC ADDR(0x49) CNT(0x6) BOOL_ADDR(0x80)
49: 14270501 00c0c06c e1010807	      ALU:	MULv	R1.xyz_ = R1.xyzz, R8.xyzz
                          						    	MAXs	R5._y__ = R7.xxxx
4a: b6230508 00c5b045 8100040a	      ALU:	MULv	R8.xy__ = R0.yzzz, C260.xyyy
                          						    	ADD_CONST_1	R5._y__ = C266.x, R5.y CLAMP
4b: a8270407 0015b180 c1070502	      ALU:	MULv	R7.xyz_ = R7.yzww, R5.yyyy
                          						    	MUL_CONST_0	R4._y__ = C258.y, R0.x
4c: c8040500 00b1b16c eb080908	      ALU:	MULADDv	R0.__z_ = R8.xxxx, R8.yyyy, R9.yyyy
4d: c8070505 00c01400 e1070500	      ALU:	MULv	R5.xyz_ = R7.xyzz, R5.xzww
4e: c8070505 00c0b100 a105fd00	      ALU:	MULv	R5.xyz_ = R5.xyzz, C509.yyyy
      0000504f 00002200     	EXEC_END ADDR(0x4f) CNT(0x5) BOOL_ADDR(0x80)
4f: 00170005 00c0c661 a1050904	      ALU:	MULv	R5.xyz_ = R5.xyzz, C265.zzzz
                          						    	ADDs	R0.x___ = R4.yyxx
50: 00270005 00c015cb e1050604	      ALU:	MULv	R5.xyz_ = R5.xyzz, R6.yzww
                          						    	ADDs	R0._y__ = R4.wwzz
51: c8070505 00c0c0c0 eb030005	      ALU:	MULADDv	R5.xyz_ = R5.xyzz, R3.xyzz, R0.xyzz
52: c8070505 00c0c0c0 eb010205	      ALU:	MULADDv	R5.xyz_ = R5.xyzz, R1.xyzz, R2.xyzz
53: c8078000 00c06c00 a1050b00	      ALU:	MULv	export0.xyz_ = R5.xyzz, C267.xxxx	; COLOR
