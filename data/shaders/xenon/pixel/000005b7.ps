//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   sampler2D $spotlightmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $apptime       c14      1
//   $compressedhdr c15      1
//   $lmap          s0       1
//   $incan         s1       1
//   $spec          s2       1
//   $screenshadmap s3       1
//   $spotlightmap  s4       1
//   $envmap        s5       1
//   $frametexture  s6       1
//   $noisetex      s7       1
//   $bump          s8       1
//   $diff          s9       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c14
defconst $bump, sampler2d, object, [1, 1], s8
defconst $compressedhdr, float, vector, [1, 2], c15
defconst $diff, sampler2d, object, [1, 1], s9
defconst $envmap, samplercube, object, [1, 1], s5
defconst $frametexture, sampler2d, object, [1, 1], s6
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s1
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s0
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $noisetex, sampler3d, object, [1, 1], s7
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spec, sampler2d, object, [1, 1], s2
defconst $spotlightmap, sampler2d, object, [1, 1], s4
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=18
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=7

// interpolators: 7 interpolants: 7, components: 27
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4
dcl_texcoord5 r5
dcl_color_centroid r6

def c252, 2, 10, 0.200000003, 0.150000006
def c253, 0.0529999994, 1.5, -127.5, -1
def c254, 1, 0.5, 255, 3.29999995
def c255, 0.298999995, 0.587000012, 0.143999994, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mov r9.xy, r5.xy
/*    9   */     mul r9.z, c14.x, c254.y
/*   10   */     tfetch2D r8.__yw, r5.xy, tf8, FetchValidOnly=false
/*   11   */     tfetch3D r8._x__, r9.xyz, tf7, FetchValidOnly=false
/*   12   */     serialize
                 addsc r9.x, c11.x, r0.w
/*   13   */     add r8.x, r2.w, c11.z
               + movs r6._, r1.w
/*    1.0 */     exec
/*   14   */     mul r9.yzw, r2.zzwz, r2.zzw
               + adds_prev r3.w, c11.y
/*   15   */     add r17.xy, -r8.x, c10.xy
               + subsc r8.x, -c254.x, -r8.y
/*   16   */     add r10.xy, -r9.x, c8.xy
               + rcp r9.x, r4.w
/*   17   */     mad r11.xyz, r1.zwz, r1.zw, r9.yzw
/*   18   */     mul r9.xy, r9.x, r4.xy
               + subsc r17.z, c9.x, r3.w
/*   19   */     mad r4.xyw, r0.wz, r0.wwz, r11.yzx
/*    1.1 */     exec
/*   20   */     mul r9.zw, r10.xxxy, r10.xxxy
               + subsc r17.w, c9.y, r3.w
/*   21   */     dp2add r3.w, r17.wy, r17.wy, r9.w
/*   22   */     dp2add r11.z, r17.zx, r17.zx, r9.z
/*   23   */     add r13.y, r4.y, r4.y
               + rsq r13.z, r4_abs.x
/*   24   */     add r4.xyz, r8.xzw, r8.yzw
               + rsq r13.w, r4_abs.w
/*   25   */     mul r12.xyw, r13.yzw, r0.zwz
               + subsc r9.z, c254.x, r9.y
/*    2.0 */     exec
/*   26   */     mul r11.xyw, r13.wzy, r2.zwz
               + mulsc r10.z, c255.w, r4.x
/*   27   */     add r8.x, -r12.x, r0.w
               + rcp r4.w, r3.z
/*   28   */     add r8.z, -r11.w, r2.w
               + rsq r13.x, r11_abs.z
/*   29   */     mul r16.xyz, r13.wyz, r1.zzw
               + addsc r13.z, c253.w, r4.y
/*   30   */     add r8.y, -r16.y, r1.w
               + rsq r13.y, r3_abs.w
/*   31   */     mul r18.xy, r7_abs.xy, c3.xy
               + addsc r13.w, c253.w, r4.z
/*    2.1 */     exec
/*   32   */     mul r14.xy, r4.w, r3.xy
               + movs r6._, -r16.z
/*   33   */     mul r15, r10.xyz, r13
               + muls_prev r1.x, r1.z
/*   34   */     mad r9.w, -r12.y, r0.z, r1.x
/*   35   */     mul r0.zw, r15.zzzw, c253.x
               + movs r6._, -r11.y
/*   36   */     dp3 r0.x, r8.zxy, r8.zxy
               + muls_prev r0.y, r2.z
/*   37   */     add r10.xyz, r9.wxz, r0.yzw
               + rsq r0.x, r0_abs.x
/*    3.0 */     exec
/*   38   */     mul r0.xyz, r8.xyz, r0.x
/*   39   */     cube r0, r0.zzxy, r0.yxz
/*   40   */     mov r4.z, r0.w
               + rcp r1.x, r0_abs.z
/*   41   */     mad r4.xy, r0.yx, r1.x, c253.y
/*   42   */     tfetch2D r7.xyz_, r5.zw, tf0
/*   43   */     tfetch2D r8._xyz, r5.xy, tf1
/*    3.1 */     exec
/*   44   */     tfetch2D r9.xw__, r14.xy, tf4
/*   45   */     tfetch2D r2.x_yz, r5.xy, tf2
/*   46   */     tfetch2D r1.x_yz, r10.yz, tf6
/*   47   */     tfetchCube r14.xywz, r4.xyz, tf5
/*   48   */     tfetch2D r4, r5.xy, tf9
/*   49   */     tfetch2D r0.w___, r18.xy, tf3
/*    4.0 */     exec
/*   50   */     serialize
                 add r11.w, -c13.x, c252.x
/*   51   */     mul r0.y, c1.x, c252.y
/*   52   */     add r18.xyz, r6.xyz, r6.xyz
               + mulsc r10.w, c254.y, r0.x
/*   53   */     sgt r8.x, r3.z, c252.z
               + movs r6.x, r14.z
/*   54   */     mul r3.xyz, r4.xyz, c255.xyz
               + mulsc r0.x, c254.z, r6.x
/*   55   */     mul r12.xyz, r18.xyz, r4.xyz
               + mulsc r5.x, c254.y, r2.x
/*    4.1 */     exec
/*   56   */     sgt r0.z, c254.x, r14.z
               + mulsc r5.y, c254.y, r2.z
/*   57   */     dp3 r6.x, r3.zxy, r18.zxy
               + addsc r6.y, c254.x, r0.y
/*   58   */     max r1.y, r6.x, c252.w
               + addsc r6.x, c254.y, r0.x
/*   59   */     frc r6.x, r6.x
               + log r3.x, r11_abs.z
/*   60   */     add r6.x, r0.x, -r6.x
               + log r3.y, r3_abs.w
/*   61   */     mul r0.xy, r3.xy, c4.xz
               + addsc r0.w, c253.z, r6.x
/*    5.0 */     exec
/*   62   */     mul r13, r17.yxzw, r13.yxxy
               + exp r0.x, r0.x
/*   63   */     mul r5.zw, r13.zzzw, r16.x
               + exp r0.w, r0.w
/*   64   */     mul r3.xyz, r0.w, r14.xyw
               + exp r0.y, r0.y
/*   65   */     mad r5.zw, r15.xxxy, r12.w, r5.zzzw
/*   66   */     mad_sat r13.yz, r13.xxy, r11.x, r5.wwz
/*   67   */     mul_sat r0.xy, r0.xy, c4.yw
               + mulsc r14.z, c2.x, r6.y
/*    5.1 */     exec
/*   68   */     cndgt r3.xyw, r0.z, r3.xyz, r14.xyw
/*   69   */     add r0.zw, -r0.xxxy, c254.x
               + movs r0.x, r1.y
/*   70   */     add r9.zw, -r10.xxxw, c254.x
               + movs r0.y, c254.x
/*   71   */     mul r14.xy, r9.xz, r9.yz
               + mins r1.y, r0.xy
/*   72   */     mul r8, r14.xz, r8
               + movs r6._, r1.y
/*   73   */     mad r10.xyz, r7.xyz, c0.x, r8.yzw
/*    6.0 */     exec
/*   74   */     mul r13.x, r8.x, r13.z
               + muls_prev r8.x, r3.x
/*   75   */     mul r0.xy, r13.yx, r0.wz
               + movs r6._, r1.y
/*   76   */     mul r15.zw, r0.yyyx, c6.xxxy
               + muls_prev r8.y, r3.y
/*   77   */     mul r10.xyz, r12.xzy, r10.xzy
               + mulsc r15.x, c5.x, r0.y
/*   78   */     mul r3.xy, r0.yw, c7.xy
               + mulsc r15.y, c5.y, r0.x
/*   79   */     add r11.xz, r15.xz, r15.yw
               + muls r12.w, r14.yy
/*    6.1 */     exec
/*   80   */     mad r11.y, r3.y, r13.y, r3.x
/*   81   */     mul r0, r12.xzyw, r11
               + movs r6._, r1.y
/*   82   */     mad r3.xyz, r10.xyz, r9.w, r0.xyz
/*   83   */     add_sat r0.x, r0.w, c13.x
               + muls_prev r8.z, r3.w
/*   84   */     mul r0.xyz, r8.xyz, r0.x
               + mulsc r5.z, c254.y, r2.w
/*   85   */     mul r0.yzw, r0.xxyz, r5.xxyz
               + mulsc r0.x, c15.y, r1.x
/*    7.0 */     exece
/*   86   */     mul r2.xyz, r0.yzw, c254.w
               + mulsc r0.y, c15.y, r1.z
/*   87   */     mul r2.xyz, r2.xyz, c12.z
               + mulsc r0.z, c15.y, r1.w
/*   88   */     mad r1.xyz, r2.xzy, r7.xzy, r3.xyz
/*   89   */     add r1.xyz, r1.xyz, -r0.xzy
               + movs r6._, r4.w
/*   90   */     mad r0.xyz, r1.xzy, c14.x, r0.xyz
/*   91   */     mul oC0.xyz, r0.xyz, c15.x
               + muls_prev oC0.w, r6.w
/*    7.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x007f SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xyzw
// [6] color0 r6.xyzw

