      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506003 00001200     	EXEC ADDR(0x3) CNT(0x6) BOOL_ADDR(0x80)
03: c80c0004 00acac00 a1870500	      ALU:	MULv	R4.__zw = abs(R7).xxxy, C261.xxxy
04: c80f0008 00a0bc00 a1040000	      ALU:	MULv	R8 = R4.xyxy, C256.xxyy
05: 10087081 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 10180081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R4.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: b8389101 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R8.zwz CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 10288101 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R8.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: b848a081 1f1fffc8 00004000	      FETCH:	SAMPLE	R10.xy__ = R4.zwz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: c8010000 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.x___ = R0.zxyy, R0.zxyy
0b: a04d0004 00f06c6c 20080180	      ALU:	ADDv	R4.x_zw = C264.xyyz, C257.xxxx
                          						    	SQRT_IEEE	R0.__z_ = abs(R0).xxxx
0c: c8030000 026d6dc6 8b0a06ff	      ALU:	MULADDv	R0.xy__ = C511.zzzz, R10.yxxx, -C262.yxxx
0d: a81e0a0a 04fcb180 8008ff02	      ALU:	ADDv	R10._yzw = -R8.xxyz, C511.yyyy
                          						    	MUL_CONST_0	R10.x___ = C258.y, R0.x
0e: a827040b 04c0b141 8009ff03	      ALU:	ADDv	R11.xyz_ = -R9.xyzz, C511.yyyy
                          						    	MUL_CONST_0	R4._y__ = C259.x, R0.y
      0000600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: a8170406 0014c041 c0040602	      ALU:	ADDv	R6.xyz_ = R4.xzww, R6.xyzz
                          						    	MUL_CONST_0	R4.x___ = C258.x, R0.y
10: a9440400 00c66c41 8100ff04	      ALU:	MULv	R0.__z_ = R0.zzzz, C511.xxxx CLAMP
                          						    	MUL_CONST_0	R4.__z_ = C260.x, R0.y
11: c8070009 00c6c0c0 eb000b09	      ALU:	MULADDv	R9.xyz_ = R9.xyzz, R0.zzzz, R11.xyzz
12: c8070008 00c615c0 eb000a08	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R0.zzzz, R10.yzww
13: a8270a04 00c06c80 c1040103	      ALU:	MULv	R4.xyz_ = R4.xyzz, R1.xxxx
                          						    	MUL_CONST_0	R10._y__ = C259.y, R0.x
14: a8470a09 02c0c080 c0090804	      ALU:	ADDv	R9.xyz_ = R9.xyzz, -R8.xyzz
                          						    	MUL_CONST_0	R10.__z_ = C260.y, R0.x
      00006015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: c8070000 00c0b100 e10a0100	      ALU:	MULv	R0.xyz_ = R10.xyzz, R1.yyyy
16: c8070000 00c01b00 e1000300	      ALU:	MULv	R0.xyz_ = R0.xyzz, R3.wwww
17: c8070001 00c01bc0 eb090008	      ALU:	MULADDv	R1.xyz_ = R8.xyzz, R9.xyzz, R0.wwww
18: c8070001 00c0c000 e1010700	      ALU:	MULv	R1.xyz_ = R1.xyzz, R7.xyzz
19: c8070000 00c01bc0 eb040200	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R4.xyzz, R2.wwww
1a: c8070000 00c0c000 e1000700	      ALU:	MULv	R0.xyz_ = R0.xyzz, R7.xyzz
      0000201b 00002200     	EXEC_END ADDR(0x1b) CNT(0x2) BOOL_ADDR(0x80)
1b: c8070000 00c0c0c0 eb010600	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R6.xyzz
1c: 14878000 00c06c1b a1000705	      ALU:	MULv	export0.xyz_ = R0.xyzz, C263.xxxx	; COLOR
                          						    	MAXs	export0.___w = R5.wwww	; COLOR
