//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   sampler2D $spotlightmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $compressedhdr c14      1
//   $diff          s0       1
//   $tranpcy       s1       1
//   $lmap          s2       1
//   $incan         s3       1
//   $bump          s4       1
//   $spec          s5       1
//   $screenshadmap s6       1
//   $spotlightmap  s7       1
//   $envmap        s8       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s4
defconst $compressedhdr, float, vector, [1, 2], c14
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s8
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s3
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $screenshadmap, sampler2d, object, [1, 1], s6
defconst $spec, sampler2d, object, [1, 1], s5
defconst $spotlightmap, sampler2d, object, [1, 1], s7
defconst $tranpcy, sampler2d, object, [1, 1], s1
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=7

// interpolators: 7 interpolants: 7, components: 25
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4
dcl_texcoord5 r5.xy
dcl_color_centroid r6

def c252, 0.150000006, 10, 0.200000003, 0
def c253, -1, 1.5, -127.5, 2
def c254, 1, 0.5, 3.29999995, 0
def c255, 0.298999995, 0.587000012, 0.143999994, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mul r5.zw, r7_abs.xxxy, c3.xxxy
/*    9   */     tfetch2D r9.x___, r4.zw, tf1, FetchValidOnly=false
/*   10   */     tfetch2D r7._yw_, r4.xy, tf4, FetchValidOnly=false
/*   11   */     tfetch2D r3.___w, r5.zw, tf6, FetchValidOnly=false
/*   12   */     serialize
                 mul r5.z, r1.w, r1.w
               + muls r7.w, r2.ww
/*   13   */     mad r7.x, r0.w, r0.w, r5.z
/*    1.0 */     exec
/*   14   */     add r7.xyw, r7.yzx, r7.yzw
/*   15   */     add r8.xy, r7.xy, c253.x
/*   16   */     mul r9.yz, r8.xxy, r8.xxy
               + mulsc r9.w, c254.y, r3.w
/*   17   */     add r7.xyz, -r9.wxy, c254.x
/*   18   */     add r5.z, r7.z, -r9.z
/*   19   */     add r3.w, r0.w, c11.x
               + sqrt r8.z, r5_abs.z
/*    1.1 */     exec
/*   20   */     dp3 r13.x, r8.zxy, r0.zxy
/*   21   */     dp3 r13.y, r8.zxy, r1.zxy
/*   22   */     dp3 r13.z, r8.zxy, r2.zxy
               + rsq r13.w, r7_abs.w
/*   23   */     mul r9.zw, r13.xxxw, r0.w
/*   24   */     mul r9.xy, r13.yw, r1.w
/*   25   */     mul r5.zw, r13.zzzw, r2.w
/*    2.0 */     exec
/*   26   */     add r7.w, r9.z, r9.x
               + movs r6._, -r5.w
/*   27   */     add r8.x, r7.w, r5.z
               + muls_prev r8.z, r13.z
/*   28   */     dp2add r8.y, -r9.wy, r13.xy, c254.w
/*   29   */     add r7.zw, r8.xxxy, r8.xxxz
/*   30   */     mul r8.xyz, r7.z, r13.xyz
/*   31   */     add r8.y, -r8.y, r1.w
               + movs r6._, -r8.x
/*    2.1 */     exec
/*   32   */     add r8.z, -r8.z, r2.w
               + adds_prev r8.x, r0.w
/*   33   */     dp3 r0.x, r8.zxy, r8.zxy
               + rcp r0.y, r3.z
/*   34   */     mul r9.xy, r0.y, r3.xy
               + rsq r0.x, r0_abs.x
/*   35   */     mul r0.xyz, r8.xyz, r0.x
/*   36   */     cube r0, r0.zzxy, r0.yxz
/*   37   */     mov r10.z, r0.w
               + rcp r5.z, r0_abs.z
/*    3.0 */     exec
/*   38   */     mad r10.xy, r0.yx, r5.z, c253.y
/*   39   */     tfetch2D r8.xyz_, r5.xy, tf2
/*   40   */     tfetch2D r12.xy_z, r4.xy, tf3
/*   41   */     tfetch2D r5.x_yz, r4.xy, tf5
/*   42   */     tfetchCube r14, r10.xyz, tf8
/*   43   */     tfetch2D r4, r4.xy, tf0
/*    3.1 */     exec
/*   44   */     tfetch2D r10.xw__, r9.xy, tf7
/*   45   */     serialize
                 add r9.w, -c13.x, c253.w
/*   46   */     mul r9.x, c1.x, c252.y
/*   47   */     add r0.z, r2.w, c11.z
               + movs r6._, r1.w
/*   48   */     add r0.xyw, r6.xyz, r6.xyz
               + adds_prev r6.z, c11.y
/*   49   */     sgt r9.z, r3.z, c252.z
               + muls r12.z, r10.xy
/*    4.0 */     exec
/*   50   */     mul r9.y, r14.w, c255.w
               + subsc r11.x, c10.x, r0.z
/*   51   */     add r6.xy, r9.yx, c254.yx
               + subsc r11.y, c10.y, r0.z
/*   52   */     mul r2.xyz, r4.xyz, c255.xyz
               + frcs r0.z, r6.x
/*   53   */     mul r10.xyz, r0.xyw, r4.xyz
               + mulsc r6.y, c2.x, r6.y
/*   54   */     sgt r6.x, c254.x, r14.w
               + movs r6._, r9.y
/*   55   */     mul r1.xyz, r6.y, r12.xyw
               + adds_prev r6.y, -r0.z
/*    4.1 */     exec
/*   56   */     mad r1.yzw, r8.xxyz, c0.x, r1.xxyz
/*   57   */     add r6.y, r6.y, c253.z
               + subsc r11.z, c9.x, r6.z
/*   58   */     dp3 r1.x, r2.zxy, r0.wxy
               + exp r6.y, r6.y
/*   59   */     mul r0.xyz, r6.y, r14.xyz
               + subsc r11.w, c9.y, r6.z
/*   60   */     cndgt r2.xyz, r6.x, r0.xyz, r14.xyz
/*   61   */     dp3 r6.x, r13.zxy, r13.zxy
               + subsc r12.x, c8.x, r3.w
/*    5.0 */     exec
/*   62   */     add r12.w, -r7.w, c254.x
               + subsc r12.y, c8.y, r3.w
/*   63   */     mul r0.yzw, r12.xxyw, r12.xxyw
               + rsq r0.x, r6_abs.x
/*   64   */     dp2add r6.x, r11.wy, r11.wy, r0.z
/*   65   */     dp2add r6.y, r11.zx, r11.zx, r0.y
/*   66   */     max r1.x, r1.x, c252.x
               + rsq r9.x, r6_abs.y
/*   67   */     min r1.x, r1.x, c254.x
               + rsq r9.y, r6_abs.x
/*    5.1 */     exec
/*   68   */     mul r1.yzw, r10.xxzy, r1.yywz
               + log r6.y, r6_abs.y
/*   69   */     mul r10.w, r0.w, r0.w
               + log r6.x, r6_abs.x
/*   70   */     mul r3.yzw, r13.xxzy, r0.x
               + mulsc r2.w, c4.x, r6.y
/*   71   */     mul r0.xyw, r12.xyz, r9.xyz
               + mulsc r0.z, c4.z, r6.x
/*   72   */     mul r11, r11.yxzw, r9.yxxy
               + exp r3.x, r2.w
/*   73   */     mul r0.xy, r0.xy, r3.y
               + exp r3.y, r0.z
/*    6.0 */     exec
/*   74   */     dp2add_sat r9.y, r11.wx, r3.wz, r0.y
/*   75   */     dp2add_sat r0.x, r11.zy, r3.wz, r0.x
/*   76   */     mul_sat r0.yz, r3.xxy, c4.yyw
               + movs r6._, r0.w
/*   77   */     add r0.zw, -r0.zzzy, c254.x
               + muls_prev r9.x, r0.x
/*   78   */     mul r0.xy, r9.yx, r0.zw
/*   79   */     mul r3.zw, r0.yyyx, c6.xxxy
/*    6.1 */     exec
/*   80   */     mul r2.xyz, r1.x, r2.xyz
               + mulsc r3.x, c5.x, r0.y
/*   81   */     mul r4.xy, r0.yz, c7.xy
               + mulsc r3.y, c5.y, r0.x
/*   82   */     mad r9.z, r4.y, r9.y, r4.x
/*   83   */     add r9.xy, r3.xz, r3.yw
/*   84   */     mul r0, r10, r9
               + mulsc r1.x, c254.y, r5.x
/*   85   */     mad r0.xyz, r1.ywz, r7.x, r0.xyz
/*    7.0 */     exec
/*   86   */     add_sat r0.w, r0.w, c13.x
               + mulsc r1.y, c254.y, r5.z
/*   87   */     mul r2.xyz, r2.xyz, r0.w
               + mulsc r1.z, c254.y, r5.w
/*   88   */     mul r1.xyz, r2.xyz, r1.xyz
               + movs r6._, r4.w
/*   89   */     mul r1.xyz, r1.xyz, c254.z
               + muls_prev r6.w, r6.w
/*   90   */     mul r6.xyz, r1.xyz, c12.z
               + movs r6._, r6.w
/*   91   */     mad r6.xyz, r6.xyz, r8.xyz, r0.xyz
/*    7.1 */     exece
/*   92   */     mul oC0.xyz, r6.xyz, c14.x
               + muls_prev oC0.w, r7.y

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x007f SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xy
// [6] color0 r6.xyzw

