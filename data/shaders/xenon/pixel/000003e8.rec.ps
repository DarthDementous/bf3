      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 14140909 006cb16c 210cfe05	      ALU:	MULv	R9.__z_ = C268.xxxx, C510.yyyy
                          						    	MAXs	R9.x___ = R5.xxxx
06: 142c0903 00acacb1 a1880a05	      ALU:	MULv	R3.__zw = abs(R8).xxxy, C266.xxxy
                          						    	MAXs	R9._y__ = R5.yyyy
07: b800b0a1 1f1ffff8 00004000	      FETCH:	SAMPLE	R11.x___ = R5.zwz CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: b8208061 1f1fffc8 00004000	      FETCH:	SAMPLE	R8.xy__ = R3.zwz CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 105080a1 1f1ff67f 00004000	      FETCH:	SAMPLE	R8.__yw = R5.xyx CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 90403121 1f1ff1ff 00008000	      FETCH:	SAMPLE	R3.___x = R9.xyz CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0002600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: b081070a 006c6cc3 2101fe09	   (S)ALU:	MULv	R10.x___ = C257.xxxx, C510.xxxx
                          						    	ADD_CONST_0	R7.___w = C265.z, R2.w
0c: 14080601 001bb11b a0010900	      ALU:	ADDv	R1.___w = R1.wwww, C265.yyyy
0d: 0446030a 0016166c c0080809	      ALU:	ADDv	R10._yz_ = R8.zzww, R8.zzww
                          						    	ADD_PREVs	R3.__z_ = C265.xxxx
0e: bc1c0c0c 04c6ac43 80030607	      ALU:	ADDv	R12.__zw = -R3.zzzz, C262.xxxy
                          						    	SUB_CONST_1	R12.x___ = C263.x, R1.w
0f: c8030609 04b0b06c 8b080bff	      ALU:	MULADDv	R9.xy__ = C511.xxxx, -R8.xyyy, C267.xyyy
10: 4c8c0708 041bac1b a0070804	      ALU:	ADDv	R8.__zw = -R7.wwww, C264.xxxy
                          						    	RECIP_IEEE	R7.___w = R4.wwww
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: bc230c08 001a1a83 c1080807	      ALU:	MULv	R8.xy__ = R8.zwww, R8.zwww
                          						    	SUB_CONST_1	R12._y__ = C263.y, R1.w
12: c8080609 00b3b3b1 f10c0c08	      ALU:	DOT2ADDv	R9.___w = R8.yyyy, R12.wyyy, R12.wyyy
13: c8040603 006e6e6c f10c0c08	      ALU:	DOT2ADDv	R3.__z_ = R8.xxxx, R12.zxxx, R12.zxxx
14: c80b060a 00656100 a00aff00	      ALU:	ADDv	R10.xy_w = R10.yzxx, C511.yyxx
15: c806060b 00bcbc00 e10a0a00	      ALU:	MULv	R11._yz_ = R10.xxyy, R10.xxyy
16: 58430908 04b06cc6 a00bff83	      ALU:	ADDv	R8.xy__ = -R11.xyyy, C511.xxxx
                          						    	RECIPSQ_IEEE	R9.__z_ = abs(R3).zzzz
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 58840903 02b1c61b e0080b89	      ALU:	ADDv	R3.__z_ = R8.yyyy, -R11.zzzz
                          						    	RECIPSQ_IEEE	R9.___w = abs(R9).wwww
18: a04c0a08 000606c6 e1080983	      ALU:	MULv	R8.__zw = R8.zzzw, R9.zzzw
                          						    	SQRT_IEEE	R10.__z_ = abs(R3).zzzz
19: c801060b 00bebe00 f00a0000	      ALU:	DOT3v	R11.x___ = R10.zxyy, R0.zxyy
1a: bc42030b 01bebe43 f00a01ff	      ALU:	DOT3v	R11._y__ = R10.zxyy, R1.zxyy
                          						    	SUB_CONST_1	R3.__z_ = -C511.x, -R3.w
1b: 1404060b 00bebe6c f00a0209	      ALU:	DOT3v	R11.__z_ = R10.zxyy, R2.zxyy
1c: 0c410000 00bebe6c f00b0b03	      ALU:	DOT3v	R0.x___ = R11.zxyy, R11.zxyy
                          						    	MUL_PREVs	R0.__z_ = R3.xxxx
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 581f0002 000d076c e10c0980	      ALU:	MULv	R2 = R12.yxzw, R9.wzzw
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
1e: 14070601 00be6cb1 e10b0009	      ALU:	MULv	R1.xyz_ = R11.zxyy, R0.xxxx
1f: 0c830000 001a6cb1 e1080103	      ALU:	MULv	R0.xy__ = R8.zwww, R1.xxxx
                          						    	MUL_PREVs	R0.___w = R3.yyyy
20: c9020600 006fc5b1 f1020100	      ALU:	DOT2ADDv	R0._y__ = R0.yyyy, R2.wxxx, R1.yzzz CLAMP
21: c9010600 00b2c56c f1020100	      ALU:	DOT2ADDv	R0.x___ = R0.xxxx, R2.zyyy, R1.yzzz CLAMP
22: 14030601 00c76d1b e1000007	      ALU:	MULv	R1.xy__ = R0.wzzz, R0.yxxx
      04006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: 0c130003 006db06c a1010404	      ALU:	MULv	R3.xy__ = R1.yxxx, C260.xyyy
                          						    	MUL_PREVs	R0.x___ = R4.xxxx
24: 140c0609 00ec311b e0030307	      ALU:	ADDv	R9.__zw = R3.xxxz, R3.yyyw
25: 0c240000 001b1bb1 a109ff04	      ALU:	MULv	R0.__z_ = R9.wwww, C511.wwww
                          						    	MUL_PREVs	R0._y__ = R4.yyyy
26: b84c0001 00c6ac41 c1000aff	      ALU:	MULv	R1.__zw = R0.zzzz, R10.xxxy
                          						    	SUB_CONST_0	R0.__z_ = C511.x, R0.y
27: c8030600 001ac6c4 ab01ff00	      ALU:	MULADDv	R0.xy__ = R0.xzzz, R1.zwww, C511.zzzz
28: 101840a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R4.xyz_ = R5.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: 10380001 1f1ff478 00004000	      FETCH:	SAMPLE	R0.x_yz = R0.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2a: 106830a1 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R5.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2b: c8070605 00c0c000 e0060600	   (S)ALU:	ADDv	R5.xyz_ = R6.xyzz, R6.xyzz
2c: c8080606 001b1b00 e1030600	      ALU:	MULv	R6.___w = R3.wwww, R6.wwww
2d: a8170602 00c06c80 000e000d	      ALU:	ADDv	R2.xyz_ = C270.xyzz, C256.xxxx
                          						    	MUL_CONST_0	R6.x___ = C269.y, R0.x
2e: a8270603 00c0c082 c105030d	      ALU:	MULv	R3.xyz_ = R5.xyzz, R3.xyzz
                          						    	MUL_CONST_0	R6._y__ = C269.y, R0.z
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: a8420600 001b6c83 810a020d	      ALU:	MULv	R0._y__ = R10.wwww, C258.xxxx
                          						    	MUL_CONST_0	R6.__z_ = C269.y, R0.w
30: c8070600 00b1c0c0 eb000402	      ALU:	MULADDv	R0.xyz_ = R2.xyzz, R0.yyyy, R4.xyzz
31: ac170002 00c0c041 c0000703	      ALU:	ADDv	R2.xyz_ = R0.xyzz, R7.xyzz
                          						    	MUL_CONST_1	R0.x___ = C259.x, R1.y
32: ac2c0000 0071ac80 81010503	      ALU:	MULv	R0.__zw = R1.yyyx, C261.xxxy
                          						    	MUL_CONST_1	R0._y__ = C259.y, R1.x
33: 14030609 00c4191b e0000006	      ALU:	ADDv	R9.xy__ = R0.xzzz, R0.ywww
34: c8070600 01b4c0b4 eb030906	      ALU:	MULADDv	R0.xyz_ = -R6.xzyy, R3.xzyy, R9.xyzz
      00003035 00002200     	EXEC_END ADDR(0x35) CNT(0x3) BOOL_ADDR(0x80)
35: c8070600 00b4b4c0 eb030200	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R3.xzyy, R2.xzyy
36: c8070606 00b46cc0 ab000c06	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R0.xzyy, C268.xxxx
37: 0c878000 00c06c6c a1060d08	      ALU:	MULv	export0.xyz_ = R6.xyzz, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R8.xxxx	; COLOR
