      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 100000c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: c8040800 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
07: 58430002 00b06dc6 2101fd80	      ALU:	MULv	R2.xy__ = C257.xyyy, C509.yxxx
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
08: c8080801 011bb1b1 ab000102	      ALU:	MULADDv	R1.___w = -R2.yyyy, R0.wwww, C257.yyyy
09: a88c0009 046cac02 80050701	      ALU:	ADDv	R9.__zw = -R5.xxxx, C263.xxxy
                          						    	MUL_CONST_0	R0.___w = C257.w, R0.z
0a: c8030800 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
      0954600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: c8030800 00b01bb0 eb000106	      ALU:	MULADDv	R0.xy__ = R6.xyyy, R0.xyyy, R1.wwww
0c: 103820e1 1f1ff447 00004000	      FETCH:	SAMPLE	R2._xyz = R7.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 1048c001 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R0.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: 1018b001 1f1ff443 00004000	      FETCH:	SAMPLE	R11.wxyz = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: b82800c1 1f1ffff8 00004000	      FETCH:	SAMPLE	R0.x___ = R6.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: c8020800 00bebe00 f0010100	   (S)ALU:	DOT3v	R0._y__ = R1.zxyy, R1.zxyy
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: c8040800 00bebe00 f0040400	      ALU:	DOT3v	R0.__z_ = R4.zxyy, R4.zxyy
12: 5883060a 04c6b0c6 a0050980	      ALU:	ADDv	R10.xy__ = -R5.zzzz, C265.xyyy
                          						    	RECIPSQ_IEEE	R6.___w = abs(R0).zzzz
13: 58480001 006c1bb1 e10b0880	      ALU:	MULv	R1.___w = R11.xxxx, R8.wwww
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).yyyy
14: c8020800 00bebe00 f0030300	      ALU:	DOT3v	R0._y__ = R3.zxyy, R3.zxyy
15: c8080800 00bec000 b00cfe00	      ALU:	DOT3v	R0.___w = R12.zxyy, C510.xyzz
16: c8010802 006c1b1b cb0200fd	      ALU:	MULADDv	R2.x___ = C509.wwww, R2.xxxx, R0.wwww
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 59880705 00c6c6b1 e1000180	      ALU:	MULv	R5.___w = R0.zzzz, R1.zzzz CLAMP
                          						    	RECIPSQ_IEEE	R7.___w = abs(R0).yyyy
18: c80e0800 00fcfc00 e0080800	      ALU:	ADDv	R0._yzw = R8.xxyz, R8.xxyz
19: c8030809 04b1b000 a0050800	      ALU:	ADDv	R9.xy__ = -R5.yyyy, C264.xyyy
1a: c8070807 00c01b00 a10cfe00	      ALU:	MULv	R7.xyz_ = R12.xyzz, C510.wwww
1b: c8070805 00151500 e1000b00	      ALU:	MULv	R5.xyz_ = R0.yzww, R11.yzww
1c: 28170b06 00c0c01b e10c0803	      ALU:	MULv	R6.xyz_ = R12.xyzz, R8.xyzz
                          						    	SETNEs	R11.x___ = R3.wwww
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 081e0808 00016c6c a102000a	      ALU:	MULv	R8._yzw = R2.yyzw, C256.xxxx
                          						    	MULs	R8.x___ = R10.xxxx
1e: 08270801 001515b1 e1080b0a	      ALU:	MULv	R1.xyz_ = R8.yzww, R11.yzww
                          						    	MULs	R8._y__ = R10.yyyy
1f: c8020808 00b3b3b1 f1090908	      ALU:	DOT2ADDv	R8._y__ = R8.yyyy, R9.wyyy, R9.wyyy
20: c8010808 006e6e6c f1090908	      ALU:	DOT2ADDv	R8.x___ = R8.xxxx, R9.zxxx, R9.zxxx
21: 41140808 001bc66c e1070388	      ALU:	MULv	R8.__z_ = R7.wwww, R3.zzzz CLAMP
                          						    	LOG_IEEE	R8.x___ = abs(R8).xxxx
22: 41280808 001bc6b1 e1060488	      ALU:	MULv	R8.___w = R6.wwww, R4.zzzz CLAMP
                          						    	LOG_IEEE	R8._y__ = abs(R8).yyyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c90c0808 00066cb1 8b080b0b	      ALU:	MULADDv	R8.__zw = C267.yyyy, R8.zzzw, C267.xxxx CLAMP
24: 28230b08 00b0c41b a1080a04	      ALU:	MULv	R8.xy__ = R8.xyyy, C266.xzzz
                          						    	SETNEs	R11._y__ = R4.wwww
25: 381e0802 00fc016c e1070208	      ALU:	MULv	R2._yzw = R7.xxyz, R2.yyzw
                          						    	EXP_IEEE	R8.x___ = R8.xxxx
26: 38230809 001a1ab1 e1080808	      ALU:	MULv	R9.xy__ = R8.zwww, R8.zwww
                          						    	EXP_IEEE	R8._y__ = R8.yyyy
27: b9130008 00b01900 81080afd	      ALU:	MULv	R8.xy__ = R8.xyyy, C266.ywww CLAMP
                          						    	SUB_CONST_0	R0.x___ = C509.w, R0.x
28: 40830908 046d1b1b a008fd05	      ALU:	ADDv	R8.xy__ = -R8.yxxx, C509.wwww
                          						    	LOG_IEEE	R9.___w = R5.wwww
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: a84e0702 00016c49 8102ff05	      ALU:	MULv	R2._yzw = R2.yyzw, C511.xxxx
                          						    	MUL_CONST_0	R7.__z_ = C261.x, R8.y
2a: a8240709 006cc649 8202fd06	      ALU:	MAXv	R9.__z_ = R2.xxxx, C509.zzzz
                          						    	MUL_CONST_0	R7._y__ = C262.x, R8.y
2b: a82d0a09 00aeaf88 c1090906	      ALU:	MULv	R9.x_zw = R9.zxxy, R9.wxxy
                          						    	MUL_CONST_0	R10._y__ = C262.y, R8.x
2c: a84c0a08 00067188 c1090805	      ALU:	MULv	R8.__zw = R9.zzzw, R8.yyyx
                          						    	MUL_CONST_0	R10.__z_ = C261.y, R8.x
2d: 381c0209 0006ac6c a1080509	      ALU:	MULv	R9.__zw = R8.zzzw, C261.xxxy
                          						    	EXP_IEEE	R2.x___ = R9.xxxx
2e: a8170902 00156c4a c1020206	      ALU:	MULv	R2.xyz_ = R2.yzww, R2.xxxx
                          						    	MUL_CONST_0	R9.x___ = C262.x, R8.z
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: a829090a 0018b18b 81080406	      ALU:	MULv	R10.x__w = R8.xwww, C260.yyyy
                          						    	MUL_CONST_0	R9._y__ = C262.y, R8.w
30: 14070802 00b4b41b a102020a	      ALU:	MULv	R2.xyz_ = R2.xzyy, C258.xzyy
31: 0c8f0209 000dadb1 e1090b0b	      ALU:	MULv	R9 = R9.yxzw, R11.yxxy
                          						    	MUL_PREVs	R2.___w = R11.yyyy
32: 00290807 00c56ccb a1080409	      ALU:	MULv	R7.x__w = R8.yzzz, C260.xxxx
                          						    	ADDs	R8._y__ = R9.wwzz
33: c8010808 001b6c1b eb070b02	      ALU:	MULADDv	R8.x___ = R2.wwww, R7.wwww, R11.xxxx
34: 00470804 00c01bbc e10a0409	      ALU:	MULv	R4.xyz_ = R10.xyzz, R4.wwww
                          						    	ADDs	R8.__z_ = R9.xxyy
      00006035 00002200     	EXEC_END ADDR(0x35) CNT(0x6) BOOL_ADDR(0x80)
35: c8070803 00b41bb4 eb070304	      ALU:	MULADDv	R3.xyz_ = R4.xzyy, R7.xzyy, R3.wwww
36: 14070808 00c0c01b e1060801	      ALU:	MULv	R8.xyz_ = R6.xyzz, R8.xyzz
37: c8070808 00c0c0c0 eb050308	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R5.xyzz, R3.xyzz
38: c8070808 00b46cc0 ab020308	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R2.xzyy, C259.xxxx
39: c8070808 00c015c0 eb010008	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R1.xyzz, R0.yzww
3a: 0c878000 00c06c6c a1080c00	      ALU:	MULv	export0.xyz_ = R8.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
