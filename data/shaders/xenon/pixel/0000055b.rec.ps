      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      02546008 00001200     	EXEC ADDR(0x8) CNT(0x6) BOOL_ADDR(0x80)
08: c80c0605 00acac00 a1870100	      ALU:	MULv	R5.__zw = abs(R7).xxxy, C257.xxxy
09: b8109081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R9.___x = R4.zwz CONST(1) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 10307081 1f1ffecf 00004000	      FETCH:	SAMPLE	R7._yw_ = R4.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: b84030a1 1f1ff7ff 00004000	      FETCH:	SAMPLE	R3.___w = R5.zwz CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 08840705 001b1b1b e1010102	   (S)ALU:	MULv	R5.__z_ = R1.wwww, R1.wwww
                          						    	MULs	R7.___w = R2.wwww
0d: c8010607 001b1bc6 eb000005	      ALU:	MULADDv	R7.x___ = R5.zzzz, R0.wwww, R0.wwww
      0000600e 00001200     	EXEC ADDR(0xe) CNT(0x6) BOOL_ADDR(0x80)
0e: c80b0607 00651500 e0070700	      ALU:	ADDv	R7.xy_w = R7.yzxx, R7.yzww
0f: c8030608 00b06c00 a007fc00	      ALU:	ADDv	R8.xy__ = R7.xyyy, C508.xxxx
10: ac430909 00b0b043 e10808fe	      ALU:	MULv	R9.xy__ = R8.xyyy, R8.xyyy
                          						    	MUL_CONST_1	R9.__z_ = C510.x, R3.w
11: c8070607 04cf6c00 a009fd00	      ALU:	ADDv	R7.xyz_ = -R9.wxzz, C509.xxxx
12: c8040605 02b1b100 e0070900	      ALU:	ADDv	R5.__z_ = R7.yyyy, -R9.yyyy
13: a0480803 001bb1c6 a0010985	      ALU:	ADDv	R3.___w = R1.wwww, C265.yyyy
                          						    	SQRT_IEEE	R8.__z_ = abs(R5).zzzz
      00006014 00001200     	EXEC ADDR(0x14) CNT(0x6) BOOL_ADDR(0x80)
14: c801060b 00bebe00 f0080000	      ALU:	DOT3v	R11.x___ = R8.zxyy, R0.zxyy
15: c802060b 00bebe00 f0080100	      ALU:	DOT3v	R11._y__ = R8.zxyy, R1.zxyy
16: 58840b0b 00bebe1b f0080287	      ALU:	DOT3v	R11.__z_ = R8.zxyy, R2.zxyy
                          						    	RECIPSQ_IEEE	R11.___w = abs(R7).wwww
17: c8030609 00181b00 e10b0000	      ALU:	MULv	R9.xy__ = R11.xwww, R0.wwww
18: c80c0609 00311b00 e10b0100	      ALU:	MULv	R9.__zw = R11.yyyw, R1.wwww
19: c80c0605 00061b00 e10b0200	      ALU:	MULv	R5.__zw = R11.zzzw, R2.wwww
      0000601a 00001200     	EXEC ADDR(0x1a) CNT(0x6) BOOL_ADDR(0x80)
1a: 14080607 016cc61b e0090905	      ALU:	ADDv	R7.___w = R9.xxxx, R9.zzzz
1b: 0c420808 001bc6c6 e007050b	      ALU:	ADDv	R8._y__ = R7.wwww, R5.zzzz
                          						    	MUL_PREVs	R8.__z_ = R11.zzzz
1c: c8010608 0419b01b d1090bfe	      ALU:	DOT2ADDv	R8.x___ = C510.wwww, -R9.ywww, R11.xyyy
1d: c80a0607 00bcb600 e0080800	      ALU:	ADDv	R7._y_w = R8.xxyy, R8.zzyy
1e: c8070608 001bb400 e1070b00	      ALU:	MULv	R8.xyz_ = R7.wwww, R11.xzyy
1f: 14020601 05c61b6c e0080108	      ALU:	ADDv	R1._y__ = -R8.zzzz, R1.wwww
      00006020 00001200     	EXEC ADDR(0x20) CNT(0x6) BOOL_ADDR(0x80)
20: 04140101 04b11b1b e0080200	      ALU:	ADDv	R1.__z_ = -R8.yyyy, R2.wwww
                          						    	ADD_PREVs	R1.x___ = R0.wwww
21: 4c840100 00bebec6 f0010103	      ALU:	DOT3v	R0.__z_ = R1.zxyy, R1.zxyy
                          						    	RECIP_IEEE	R1.___w = R3.zzzz
22: 584c0005 001bacc6 e1010380	      ALU:	MULv	R5.__zw = R1.wwww, R3.xxxy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
23: c8070601 00c0c600 e1010000	      ALU:	MULv	R1.xyz_ = R1.xyzz, R0.zzzz
24: c80f0601 00a6cd00 f2010100	      ALU:	CUBEv	R1 = R1.zzxy, R1.yxzz
25: 4c440008 001b1bc6 e2010181	      ALU:	MAXv	R8.__z_ = R1.wwww, R1.wwww
                          						    	RECIP_IEEE	R0.__z_ = abs(R1).zzzz
      09546026 00001200     	EXEC ADDR(0x26) CNT(0x6) BOOL_ADDR(0x80)
26: c8030608 006dc6c6 cb0100fe	      ALU:	MULADDv	R8.xy__ = C510.zzzz, R1.yxxx, R0.zzzz
27: 102810a1 1f1ff447 00004000	      FETCH:	SAMPLE	R1._xyz = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
28: 9068d101 1f1ff688 0000c000	      FETCH:	SAMPLE	R13.xyzw = R8.xyz CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
29: 10084081 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2a: b85850a1 1f1fffd8 00004000	      FETCH:	SAMPLE	R5.xw__ = R5.zwz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2b: c8080605 046cb100 200bfc00	   (S)ALU:	ADDv	R5.___w = -C267.xxxx, C508.yyyy
      0000602c 00001200     	EXEC ADDR(0x2c) CNT(0x6) BOOL_ADDR(0x80)
2c: 14040600 001bc61b a0020900	      ALU:	ADDv	R0.__z_ = R2.wwww, C265.zzzz
2d: 0447060c 00c0c06c c0060609	      ALU:	ADDv	R12.xyz_ = R6.xyzz, R6.xyzz
                          						    	ADD_PREVs	R6.__z_ = C265.xxxx
2e: 08420a06 001b1b61 a10dff05	      ALU:	MULv	R6._y__ = R13.wwww, C511.wwww
                          						    	MULs	R10.__z_ = R5.yyxx
2f: ac140005 00c6c641 8503fd00	      ALU:	SETGTv	R5.__z_ = R3.zzzz, C509.zzzz
                          						    	MUL_CONST_1	R0.x___ = C256.x, R1.y
30: ac210006 006c1b42 45fd0d00	      ALU:	SETGTv	R6.x___ = C509.xxxx, R13.wwww
                          						    	MUL_CONST_1	R0._y__ = C256.x, R1.z
31: ac870008 00c0c043 c10c0400	      ALU:	MULv	R8.xyz_ = R12.xyzz, R4.xyzz
                          						    	MUL_CONST_1	R0.___w = C256.x, R1.w
      00006032 00001200     	EXEC ADDR(0x32) CNT(0x6) BOOL_ADDR(0x80)
32: b0170003 0010c045 e10004fe	      ALU:	MULv	R3.xyz_ = R0.xyww, R4.xyzz
                          						    	ADD_CONST_0	R0.x___ = C510.x, R6.y
33: b8110900 006c0042 c8000008	      ALU:	FRACv	R0.x___ = R0.xxxx
                          						    	SUB_CONST_0	R9.x___ = C264.x, R0.z
34: b8220906 02b16c82 c0060008	      ALU:	ADDv	R6._y__ = R6.yyyy, -R0.xxxx
                          						    	SUB_CONST_0	R9._y__ = C264.y, R0.z
35: b8420906 00b1b146 a006fd06	      ALU:	ADDv	R6._y__ = R6.yyyy, C509.yyyy
                          						    	SUB_CONST_0	R9.__z_ = C262.x, R6.z
36: 38210601 00bec0b1 b008ff06	      ALU:	DOT3v	R1.x___ = R8.zxyy, C511.xyzz
                          						    	EXP_IEEE	R6._y__ = R6.yyyy
37: b8870900 00b1c086 e1060d06	      ALU:	MULv	R0.xyz_ = R6.yyyy, R13.xyzz
                          						    	SUB_CONST_0	R9.___w = C262.y, R6.z
      00006038 00001200     	EXEC ADDR(0x38) CNT(0x6) BOOL_ADDR(0x80)
38: c8070602 006cc0c0 ee06000d	      ALU:	CNDGTv	R2.xyz_ = R13.xyzz, R6.xxxx, R0.xyzz
39: bc110a06 00bebe43 f00b0b07	      ALU:	DOT3v	R6.x___ = R11.zxyy, R11.zxyy
                          						    	SUB_CONST_1	R10.x___ = C263.x, R3.w
3a: bc280a0a 04b16c83 a007fd07	      ALU:	ADDv	R10.___w = -R7.yyyy, C509.xxxx
                          						    	SUB_CONST_1	R10._y__ = C263.y, R3.w
3b: 581e0000 003c3c6c e10a0a86	      ALU:	MULv	R0._yzw = R10.xxyw, R10.xxyw
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R6).xxxx
3c: c8010606 00b3b3c6 f1090900	      ALU:	DOT2ADDv	R6.x___ = R0.zzzz, R9.wyyy, R9.wyyy
3d: c8020606 006e6eb1 f1090900	      ALU:	DOT2ADDv	R6._y__ = R0.yyyy, R9.zxxx, R9.zxxx
      0000603e 00001200     	EXEC ADDR(0x3e) CNT(0x6) BOOL_ADDR(0x80)
3e: 58110501 006c1bb1 a201fd86	      ALU:	MAXv	R1.x___ = R1.xxxx, C509.wwww
                          						    	RECIPSQ_IEEE	R5.x___ = abs(R6).yyyy
3f: 58270503 00b4b46c e1030c86	      ALU:	MULv	R3.xyz_ = R3.xzyy, R12.xzyy
                          						    	RECIPSQ_IEEE	R5._y__ = abs(R6).xxxx
40: 40210601 006c6cb1 a301fd86	      ALU:	MINv	R1.x___ = R1.xxxx, C509.xxxx
                          						    	LOG_IEEE	R6._y__ = abs(R6).yyyy
41: 40180608 001b1b6c e1000086	      ALU:	MULv	R8.___w = R0.wwww, R0.wwww
                          						    	LOG_IEEE	R6.x___ = abs(R6).xxxx
42: a8870204 00656c45 e10b0002	      ALU:	MULv	R4.xyz_ = R11.yzxx, R0.xxxx
                          						    	MUL_CONST_0	R2.___w = C258.x, R6.y
43: a84b0000 00c0c0c4 e10a0502	      ALU:	MULv	R0.xy_w = R10.xyzz, R5.xyzz
                          						    	MUL_CONST_0	R0.__z_ = C258.z, R6.x
      00006044 00001200     	EXEC ADDR(0x44) CNT(0x6) BOOL_ADDR(0x80)
44: 381f0509 000dad1b e1090502	      ALU:	MULv	R9 = R9.yxzw, R5.yxxy
                          						    	EXP_IEEE	R5.x___ = R2.wwww
45: 38430500 00b06cc6 e1000400	      ALU:	MULv	R0.xy__ = R0.xyyy, R4.xxxx
                          						    	EXP_IEEE	R5.__z_ = R0.zzzz
46: c9020605 006fb2b1 f1090400	      ALU:	DOT2ADDv	R5._y__ = R0.yyyy, R9.wxxx, R4.zyyy CLAMP
47: c9010600 00b2b26c f1090400	      ALU:	DOT2ADDv	R0.x___ = R0.xxxx, R9.zyyy, R4.zyyy CLAMP
48: 15060600 00cc111b a1050200	      ALU:	MULv	R0._yz_ = R5.xxzz, C258.yyww CLAMP
49: 0c1c0500 04866c6c a000fd00	      ALU:	ADDv	R0.__zw = -R0.zzzy, C509.xxxx
                          						    	MUL_PREVs	R5.x___ = R0.xxxx
      0000604a 00001200     	EXEC ADDR(0x4a) CNT(0x6) BOOL_ADDR(0x80)
4a: c8030600 006d1a00 e1050000	      ALU:	MULv	R0.xy__ = R5.yxxx, R0.zwww
4b: c80c0609 0071ac00 a1000400	      ALU:	MULv	R9.__zw = R0.yyyx, C260.xxxy
4c: a8170902 006cc041 c1010203	      ALU:	MULv	R2.xyz_ = R1.xxxx, R2.xyzz
                          						    	MUL_CONST_0	R9.x___ = C259.x, R0.y
4d: a8230904 00c5b080 81000503	      ALU:	MULv	R4.xy__ = R0.yzzz, C261.xyyy
                          						    	MUL_CONST_0	R9._y__ = C259.y, R0.x
4e: c8040605 00b1b16c eb040504	      ALU:	MULADDv	R5.__z_ = R4.xxxx, R4.yyyy, R5.yyyy
4f: c8030605 00c41900 e0090900	      ALU:	ADDv	R5.xy__ = R9.xzzz, R9.ywww
      00006050 00001200     	EXEC ADDR(0x50) CNT(0x6) BOOL_ADDR(0x80)
50: c80f0600 00000000 e1080500	      ALU:	MULv	R0 = R8, R5
51: c8070600 00b4c6c0 eb030700	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R3.xzyy, R7.zzzz
52: b2800006 00000043 c206060b	      ALU:	ADD_CONST_0	R0.___w = C267.x, R0.w CLAMP
53: 14070602 00c01b1b e1020004	      ALU:	MULv	R2.xyz_ = R2.xyzz, R0.wwww
54: 0c870602 00c0b11b a102fe06	      ALU:	MULv	R2.xyz_ = R2.xyzz, C510.yyyy
                          						    	MUL_PREVs	R6.___w = R6.wwww
55: 14070606 00c0c61b a1020a06	      ALU:	MULv	R6.xyz_ = R2.xyzz, C266.zzzz
      00002056 00002200     	EXEC_END ADDR(0x56) CNT(0x2) BOOL_ADDR(0x80)
56: c8070606 00c015c0 eb060100	      ALU:	MULADDv	R6.xyz_ = R0.xyzz, R6.xyzz, R1.yzww
57: 0c878000 00c06c6c a1060c07	      ALU:	MULv	export0.xyz_ = R6.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R7.xxxx	; COLOR
      00000000 00000000     	NOP
