      00096007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: 100000c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: c8040700 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
09: 58490009 006d1ac6 2107fe80	      ALU:	MULv	R9.x__w = C263.yxxx, C510.zwww
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0a: c8080704 011bb16c ab000709	      ALU:	MULADDv	R4.___w = -R9.xxxx, R0.wwww, C263.yyyy
0b: a887000a 00626202 c0070707	      ALU:	ADDv	R10.xyz_ = R7.zyxx, R7.zyxx
                          						    	MUL_CONST_0	R0.___w = C263.w, R0.z
0c: c8030707 001a6d00 e1000000	      ALU:	MULv	R7.xy__ = R0.zwww, R0.yxxx
      0554600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: c8030700 006d1bb0 eb070406	      ALU:	MULADDv	R0.xy__ = R6.xyyy, R7.yxxx, R4.wwww
0e: 1038c0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R6.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: b828b0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R11.xyz_ = R6.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 1058d001 1f1ffe88 00004000	      FETCH:	SAMPLE	R13.xyz_ = R0.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: 10487001 1f1fffd9 00004000	      FETCH:	SAMPLE	R7.yw__ = R0.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: 10180001 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c8040707 00bebe00 f0040400	   (S)ALU:	DOT3v	R7.__z_ = R4.zxyy, R4.zxyy
14: 14070709 00beb46c c10a0001	      ALU:	MULv	R9.xyz_ = R10.zxyy, R0.xzyy
15: c8030706 00b06cb1 8b07fdfd	      ALU:	MULADDv	R6.xy__ = C509.yyyy, R7.xyyy, C509.xxxx
16: 0c17070a 0062c61b 810dfefe	      ALU:	MULv	R10.xyz_ = R13.zyxx, C510.zzzz
                          						    	MUL_PREVs	R7.x___ = C510.wwww
17: 58420707 0062c0c6 b00dff87	      ALU:	DOT3v	R7._y__ = R13.zyxx, C511.xyzz
                          						    	RECIPSQ_IEEE	R7.__z_ = abs(R7).zzzz
18: 14070704 00c6c01b e1070409	      ALU:	MULv	R4.xyz_ = R7.zzzz, R4.xyzz
      00006019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 0c47070a 00c062b1 e10a0b07	      ALU:	MULv	R10.xyz_ = R10.xyzz, R11.zyxx
                          						    	MUL_PREVs	R7.__z_ = R7.yyyy
1a: c8020707 046d6db1 d10606fe	      ALU:	DOT2ADDv	R7._y__ = C510.yyyy, -R6.yxxx, R6.yxxx
1b: a047060a 00c01bb1 a10afd87	      ALU:	MULv	R10.xyz_ = R10.xyzz, C509.wwww
                          						    	SQRT_IEEE	R6.__z_ = abs(R7).yyyy
1c: b4210700 00bebe84 f00601fe	      ALU:	DOT3v	R0.x___ = R6.zxyy, R1.zxyy
                          						    	ADD_CONST_1	R7._y__ = C510.y, R7.x
1d: b4120700 00bebe86 f00602fe	      ALU:	DOT3v	R0._y__ = R6.zxyy, R2.zxyy
                          						    	ADD_CONST_1	R7.x___ = C510.y, R7.z
1e: ad140101 00bebe45 f0040602	      ALU:	DOT3v	R1.__z_ = R4.zxyy, R6.zxyy CLAMP
                          						    	MUL_CONST_1	R1.x___ = C258.x, R7.y
      0000601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 40820c01 006c6cc6 a207fe01	      ALU:	MAXv	R1._y__ = R7.xxxx, C510.xxxx
                          						    	LOG_IEEE	R12.___w = R1.zzzz
20: 161f0704 00ac00c6 e1010c05	      ALU:	MULv	R4 = R1.xxxy, R12
                          						    	MAXs	R7.x___ = R5.zzzz CLAMP
21: c8070704 00c06cc0 ab0b0004	      ALU:	MULADDv	R4.xyz_ = R4.xyzz, R11.xyzz, C256.xxxx
22: 38140100 00bebe1b f0060304	      ALU:	DOT3v	R0.__z_ = R6.zxyy, R3.zxyy
                          						    	EXP_IEEE	R1.x___ = R4.wwww
23: 14070701 00c06c1b e10a0100	      ALU:	MULv	R1.xyz_ = R10.xyzz, R1.xxxx
24: 0c870701 00c0621b a1010307	      ALU:	MULv	R1.xyz_ = R1.xyzz, C259.zyxx
                          						    	MUL_PREVs	R7.___w = R7.wwww
      00002025 00001000     	EXEC ADDR(0x25) CNT(0x2)
25: 70070701 00c06c6c 81010405	      ALU:	MULv	R1.xyz_ = R1.xyzz, C260.xxxx
26: c8070701 00b4c062 eb090401	      ALU:	MULADDv	R1.xyz_ = R1.zyxx, R9.xzyy, R4.xyzz
      00006027 00005600     	COND_PRED_EXEC ADDR(0x27) CNT(0x6) BOOL_ADDR(0x80) COND(1)
27: c8020707 186c6c00 21040300	      ALU:	MULv	R7._y__ = C260.xxxx, C259.xxxx COND(1)
28: c80e0704 1aac66b1 6cfe0505	      ALU:	CNDEv	R4._yzw = R5.yyyy, C510.xxxy, -R5.zzxx COND(1)
29: 17410704 19bebec6 f0060505	      ALU:	DOT3v	R4.x___ = R6.zxyy, R5.zxyy CLAMP COND(1)
                          						    	MAXs	R7.__z_ = -R5.zzzz CLAMP
2a: 15080700 18be156c f0060404	      ALU:	DOT3v	R0.___w = R6.zxyy, R4.yzww CLAMP COND(1)
2b: 04140707 1b1bc66c e0000707	      ALU:	ADDv	R7.__z_ = R0.wwww, -R7.zzzz COND(1)
                          						    	ADD_PREVs	R7.x___ = -R7.xxxx
2c: c8010707 18c6c66c ab07fd07	      ALU:	MULADDv	R7.x___ = R7.xxxx, R7.zzzz, C509.zzzz COND(1)
      0000502d 00005600     	COND_PRED_EXEC ADDR(0x2d) CNT(0x5) BOOL_ADDR(0x80) COND(1)
2d: c8020707 18b16c00 e1070700	      ALU:	MULv	R7._y__ = R7.yyyy, R7.xxxx COND(1)
2e: c8090704 186d1b00 a107ff00	      ALU:	MULv	R4.x__w = R7.yxxx, C511.wwww COND(1)
2f: c8030707 181bc500 a1040300	      ALU:	MULv	R7.xy__ = R4.wwww, C259.yzzz COND(1)
30: c8060704 18616c00 a1070400	      ALU:	MULv	R4._yz_ = R7.yyxx, C260.xxxx COND(1)
31: c8070701 18c0b400 e0010400	      ALU:	ADDv	R1.xyz_ = R1.xyzz, R4.xzyy COND(1)
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00246032 00001200     	EXEC ADDR(0x32) CNT(0x6) BOOL_ADDR(0x80)
32: c8030707 00b0b000 a1880600	      ALU:	MULv	R7.xy__ = abs(R8).xyyy, C262.xyyy
33: 106800e1 1f1ff7ff 00004000	      FETCH:	SAMPLE	R0.___w = R7.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
34: b4120707 001bb143 80020f0f	   (S)ALU:	ADDv	R7._y__ = R2.wwww, C271.yyyy
                          						    	ADD_CONST_1	R7.x___ = C271.x, R1.w
35: b4430704 04b1b0c3 a0070d0f	      ALU:	ADDv	R4.xy__ = -R7.yyyy, C269.xyyy
                          						    	ADD_CONST_1	R7.__z_ = C271.z, R3.w
36: bc430402 046cb046 a0070c0e	      ALU:	ADDv	R2.xy__ = -R7.xxxx, C268.xyyy
                          						    	SUB_CONST_1	R4.__z_ = C270.x, R7.z
37: bc880401 00bebe86 f000000e	      ALU:	DOT3v	R1.___w = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_1	R4.___w = C270.y, R7.z
      00006038 00001200     	EXEC ADDR(0x38) CNT(0x6) BOOL_ADDR(0x80)
38: 58430707 006d6d1b e1020281	      ALU:	MULv	R7.xy__ = R2.yxxx, R2.yxxx
                          						    	RECIPSQ_IEEE	R7.__z_ = abs(R1).wwww
39: c8010707 0019196c f1040407	      ALU:	DOT2ADDv	R7.x___ = R7.xxxx, R4.ywww, R4.ywww
3a: c8020707 00c4c4b1 f1040407	      ALU:	DOT2ADDv	R7._y__ = R7.yyyy, R4.xzzz, R4.xzzz
3b: 58100307 000000b1 e2070787	      ALU:	RECIPSQ_IEEE	R3.x___ = abs(R7).yyyy
3c: 58200307 0000006c e2070787	      ALU:	RECIPSQ_IEEE	R3._y__ = abs(R7).xxxx
3d: 40200707 000000b1 e2070787	      ALU:	LOG_IEEE	R7._y__ = abs(R7).yyyy
      0000603e 00001200     	EXEC ADDR(0x3e) CNT(0x6) BOOL_ADDR(0x80)
3e: 40140702 001bc66c a100fe87	      ALU:	MULv	R2.__z_ = R0.wwww, C510.zzzz
                          						    	LOG_IEEE	R7.x___ = abs(R7).xxxx
3f: ac4d0700 0084c645 e1000708	      ALU:	MULv	R0.x_zw = R0.xzzy, R7.zzzz
                          						    	MUL_CONST_1	R7.__z_ = C264.x, R7.y
40: ac230702 00b0b0c4 e1020308	      ALU:	MULv	R2.xy__ = R2.xyyy, R3.xyyy
                          						    	MUL_CONST_1	R7._y__ = C264.z, R7.x
41: 381f0703 000dadc6 e1040307	      ALU:	MULv	R3 = R4.yxzw, R3.yxxy
                          						    	EXP_IEEE	R7.x___ = R7.zzzz
42: 38230700 00b06cb1 e1020007	      ALU:	MULv	R0.xy__ = R2.xyyy, R0.xxxx
                          						    	EXP_IEEE	R7._y__ = R7.yyyy
43: c9020700 0018c7b1 f1030000	      ALU:	DOT2ADDv	R0._y__ = R0.yyyy, R3.xwww, R0.wzzz CLAMP
      00006044 00001200     	EXEC ADDR(0x44) CNT(0x6) BOOL_ADDR(0x80)
44: c9010700 00c5c76c f1030000	      ALU:	DOT2ADDv	R0.x___ = R0.xxxx, R3.yzzz, R0.wzzz CLAMP
45: c9030702 00b01900 a1070800	      ALU:	MULv	R2.xy__ = R7.xyyy, C264.ywww CLAMP
46: c8070707 04cdb100 a002fe00	      ALU:	ADDv	R7.xyz_ = -R2.yxzz, C510.yyyy
47: ac430202 00b06d45 e100070b	      ALU:	MULv	R2.xy__ = R0.xyyy, R7.yxxx
                          						    	MUL_CONST_1	R2.__z_ = C267.x, R7.y
48: c8040700 00b0b06c 91020afe	      ALU:	DOT2ADDv	R0.__z_ = C510.xxxx, R2.xyyy, C266.xyyy
49: ac830202 00b0b084 a102090b	      ALU:	MULv	R2.xy__ = R2.xyyy, C265.xyyy
                          						    	MUL_CONST_1	R2.___w = C267.y, R7.x
      0000604a 00002200     	EXEC_END ADDR(0x4a) CNT(0x6) BOOL_ADDR(0x80)
4a: c80c0702 0006ac00 e1020000	      ALU:	MULv	R2.__zw = R2.zzzw, R0.xxxy
4b: c8030700 00c41900 e0020200	      ALU:	ADDv	R0.xy__ = R2.xzzz, R2.ywww
4c: c8070700 00c0c000 e1090000	      ALU:	MULv	R0.xyz_ = R9.xyzz, R0.xyzz
4d: c8070707 00c6b4c0 eb070100	      ALU:	MULADDv	R7.xyz_ = R0.xyzz, R7.zzzz, R1.xzyy
4e: c8070707 00b46c00 a1071000	      ALU:	MULv	R7.xyz_ = R7.xzyy, C272.xxxx
4f: c80f8000 00000000 e2070700	      ALU:	MAXv	export0 = R7, R7	; COLOR
