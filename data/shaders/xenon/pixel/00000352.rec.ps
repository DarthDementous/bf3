      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: c8070507 00ca1a00 e1020200	      ALU:	MULv	R7.xyz_ = R2.zwzz, R2.zwww
07: c8070507 00ca1ac0 eb010107	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R1.zwzz, R1.zwww
08: c8070507 00cacb62 eb000007	      ALU:	MULADDv	R7.xyz_ = R7.zyxx, R0.zwzz, R0.wwzz
09: 58410707 006c6cc6 e0070787	      ALU:	ADDv	R7.x___ = R7.xxxx, R7.xxxx
                          						    	RECIPSQ_IEEE	R7.__z_ = abs(R7).zzzz
0a: 58270709 00c0c0b1 e0050587	      ALU:	ADDv	R9.xyz_ = R5.xyzz, R5.xyzz
                          						    	RECIPSQ_IEEE	R7._y__ = abs(R7).yyyy
0b: c807050b 00b41600 e1070000	      ALU:	MULv	R11.xyz_ = R7.xzyy, R0.zzww
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c80b0508 00c0ca00 e1070100	      ALU:	MULv	R8.xy_w = R7.xyzz, R1.zwzz
0d: c802050a 046c1b00 e0080100	      ALU:	ADDv	R10._y__ = -R8.xxxx, R1.wwww
0e: 140d0507 0172da6c e107020b	      ALU:	MULv	R7.x_zw = R7.zyyx, R2.zwwz
0f: 04140a0a 041b1b1b e0070200	      ALU:	ADDv	R10.__z_ = -R7.wwww, R2.wwww
                          						    	ADD_PREVs	R10.x___ = R0.wwww
10: c8040505 00bebe00 f00a0a00	      ALU:	DOT3v	R5.__z_ = R10.zxyy, R10.zxyy
11: 58430505 00b0b0c6 a1860185	      ALU:	MULv	R5.xy__ = abs(R6).xyyy, C257.xyyy
                          						    	RECIPSQ_IEEE	R5.__z_ = abs(R5).zzzz
      05006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8070506 00c0c600 e10a0500	      ALU:	MULv	R6.xyz_ = R10.xyzz, R5.zzzz
13: c80f0506 00a6cd00 f2060600	      ALU:	CUBEv	R6 = R6.zzxy, R6.yxzz
14: 4c44050a 001b1bc6 e2060686	      ALU:	MAXv	R10.__z_ = R6.wwww, R6.wwww
                          						    	RECIP_IEEE	R5.__z_ = abs(R6).zzzz
15: c803050a 006dc6c6 cb0605fe	      ALU:	MULADDv	R10.xy__ = C510.zzzz, R6.yxxx, R5.zzzz
16: 10284081 1f1ffe88 00004000	      FETCH:	SAMPLE	R4.xyz_ = R4.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: b8180061 1f1fffc7 00004000	      FETCH:	SAMPLE	R0._x__ = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 9048d141 1f1ff688 0000c000	      FETCH:	SAMPLE	R13.xyzw = R10.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 10083061 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 103850a1 1f1fffdf 00004000	      FETCH:	SAMPLE	R5._w__ = R5.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: 14040505 001b6c1b a0000901	   (S)ALU:	ADDv	R5.__z_ = R0.wwww, C265.xxxx
1c: 04180500 001bc6b1 80020909	      ALU:	ADDv	R0.___w = R2.wwww, C265.zzzz
                          						    	ADD_PREVs	R5.x___ = C265.yyyy
1d: ac83000e 041bb045 800008fe	      ALU:	ADDv	R14.xy__ = -R0.wwww, C264.xyyy
                          						    	MUL_CONST_1	R0.___w = C510.x, R5.y
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: bc460e0c 046cbc46 80050706	      ALU:	ADDv	R12._yz_ = -R5.xxxx, C263.xxyy
                          						    	SUB_CONST_1	R14.__z_ = C262.x, R5.z
1f: bc820e05 001b1b86 810dff06	      ALU:	MULv	R5._y__ = R13.wwww, C511.wwww
                          						    	SUB_CONST_1	R14.___w = C262.y, R5.z
20: b4130506 00c5c545 c10c0cfe	      ALU:	MULv	R6.xy__ = R12.yzzz, R12.yzzz
                          						    	ADD_CONST_1	R5.x___ = C510.x, R5.y
21: c8080504 00b3b3b1 f10e0e06	      ALU:	DOT2ADDv	R4.___w = R6.yyyy, R14.wyyy, R14.wyyy
22: c8040505 006e6e6c f10e0e06	      ALU:	DOT2ADDv	R5.__z_ = R6.xxxx, R14.zxxx, R14.zxxx
23: 40410a05 006c00c6 e8050085	      ALU:	FRACv	R5.x___ = R5.xxxx
                          						    	LOG_IEEE	R10.__z_ = abs(R5).zzzz
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 58110a0c 04c6c6c6 e10b0085	      ALU:	MULv	R12.x___ = -R11.zzzz, R0.zzzz
                          						    	RECIPSQ_IEEE	R10.x___ = abs(R5).zzzz
25: 58210a0b 04b1c61b e1080184	      ALU:	MULv	R11.x___ = -R8.yyyy, R1.zzzz
                          						    	RECIPSQ_IEEE	R10._y__ = abs(R4).wwww
26: c8070501 00c06c00 a1040000	      ALU:	MULv	R1.xyz_ = R4.xyzz, C256.xxxx
27: c8040505 006c1b00 65fd0d00	      ALU:	SETGTv	R5.__z_ = C509.xxxx, R13.wwww
28: 14070508 01c0c06c c109030b	      ALU:	MULv	R8.xyz_ = R9.xyzz, R3.xyzz
29: 04870706 00c0c01b c10103fd	      ALU:	MULv	R6.xyz_ = R1.xyzz, R3.xyzz
                          						    	ADD_PREVs	R7.___w = C509.wwww
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 14010500 00bec0b1 b008ff05	      ALU:	DOT3v	R0.x___ = R8.zxyy, C511.xyzz
2b: 04180501 016cc66c a200fd05	      ALU:	MAXv	R1.___w = R0.xxxx, C509.zzzz
                          						    	ADD_PREVs	R5.x___ = -R5.xxxx
2c: 40850a00 00c5b01b e10c0a84	      ALU:	MULv	R0.x_z_ = R12.yzzz, R10.xyyy
                          						    	LOG_IEEE	R10.___w = abs(R4).wwww
2d: b4130503 001ac484 810a02fd	      ALU:	MULv	R3.xy__ = R10.zwww, C258.xzzz
                          						    	ADD_CONST_1	R5.x___ = C509.y, R5.x
2e: 382f050a 007a706c e10e0a05	      ALU:	MULv	R10 = R14.zwyx, R10.xyyx
                          						    	EXP_IEEE	R5._y__ = R5.xxxx
2f: 3816050c 00bcb16c e10a0b03	      ALU:	MULv	R12._yz_ = R10.xxyy, R11.yyyy
                          						    	EXP_IEEE	R5.x___ = R3.xxxx
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: 38270501 00b1c0b1 e1050d03	      ALU:	MULv	R1.xyz_ = R5.yyyy, R13.xyzz
                          						    	EXP_IEEE	R5._y__ = R3.yyyy
31: c8070501 00c6c0c0 ee05010d	      ALU:	CNDGTv	R1.xyz_ = R13.xyzz, R5.zzzz, R1.xyzz
32: ae160a0b 00cc1b84 c1000802	      ALU:	MULv	R11._yz_ = R0.xxzz, R8.wwww
                          						    	MUL_CONST_1	R10.x___ = C258.y, R5.x CLAMP
33: ae270a03 00c0c005 c00c0b02	      ALU:	ADDv	R3.xyz_ = R12.xyzz, R11.xyzz
                          						    	MUL_CONST_1	R10._y__ = C258.w, R5.y CLAMP
34: c9030507 00c76cc5 eb0a0703	      ALU:	MULADDv	R7.xy__ = R3.yzzz, R10.wzzz, R7.xxxx CLAMP
35: c804050a 04c6c66c eb070203	      ALU:	MULADDv	R10.__z_ = R3.xxxx, -R7.zzzz, R2.zzzz
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: b8170005 04be6c41 800afdfd	      ALU:	ADDv	R5.xyz_ = -R10.zxyy, C509.xxxx
                          						    	SUB_CONST_0	R0.x___ = C509.x, R0.y
37: 08470006 00b4b46c e1060905	      ALU:	MULv	R6.xyz_ = R6.xzyy, R9.xzyy
                          						    	MULs	R0.__z_ = R5.xxxx
38: ac180201 001b6c45 8301fd05	      ALU:	MINv	R1.___w = R1.wwww, C509.xxxx
                          						    	MUL_CONST_1	R2.x___ = C261.x, R5.y
39: ac230205 006db286 c1070505	      ALU:	MULv	R5.xy__ = R7.yxxx, R5.zyyy
                          						    	MUL_CONST_1	R2._y__ = C261.y, R5.z
3a: c8040507 00b0b01b d10207fe	      ALU:	DOT2ADDv	R7.__z_ = C510.wwww, R2.xyyy, R7.xyyy
3b: ac1e0201 001bfc45 c1010103	      ALU:	MULv	R1._yzw = R1.wwww, R1.xxyz
                          						    	MUL_CONST_1	R2.x___ = C259.x, R5.y
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: ac2c0202 0071ac84 81050403	      ALU:	MULv	R2.__zw = R5.yyyx, C260.xxxy
                          						    	MUL_CONST_1	R2._y__ = C259.y, R5.x
3d: 08830807 00c419c6 e0020200	      ALU:	ADDv	R7.xy__ = R2.xzzz, R2.ywww
                          						    	MULs	R8.___w = R0.zzzz
3e: b82f0002 00000043 c10807fd	      ALU:	MULv	R2 = R8, R7
                          						    	SUB_CONST_0	R0._y__ = C509.x, R0.w
3f: c80e0500 008cb1fc eb060002	      ALU:	MULADDv	R0._yzw = R2.xxyz, R6.xxzy, R0.yyyy
40: b2100105 00000043 e205050b	      ALU:	ADD_CONST_0	R1.x___ = C267.x, R2.w CLAMP
41: 14070501 00156c1b e1010103	      ALU:	MULv	R1.xyz_ = R1.yzww, R1.xxxx
      00004042 00002200     	EXEC_END ADDR(0x42) CNT(0x4) BOOL_ADDR(0x80)
42: 0c870501 00c0b11b a101fe05	      ALU:	MULv	R1.xyz_ = R1.xyzz, C510.yyyy
                          						    	MUL_PREVs	R5.___w = R5.wwww
43: 14070505 00c0c61b a1010a05	      ALU:	MULv	R5.xyz_ = R1.xyzz, C266.zzzz
44: c8070505 00c0c015 eb050400	      ALU:	MULADDv	R5.xyz_ = R0.yzww, R5.xyzz, R4.xyzz
45: 0c878000 00c06c6c a1050c00	      ALU:	MULv	export0.xyz_ = R5.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
