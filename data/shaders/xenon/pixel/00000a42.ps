//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $height;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   sampler2D $spotlightmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $matvalue      c2       1
//   $latten0       c3       1
//   $lcol          c4       3
//   $wlightpos     c7       3
//   $worldviewpos  c10      1
//   $compressedhdr c11      1
//   $height        s0       1
//   $diff          s1       1
//   $tranpcy       s2       1
//   $lmap          s3       1
//   $spec          s4       1
//   $envmap        s5       1
//   $screenshadmap s6       1
//   $spotlightmap  s7       1
//

// Shader type: pixel 

xps_3_0
defconst $compressedhdr, float, vector, [1, 2], c11
defconst $diff, sampler2d, object, [1, 1], s1
defconst $envmap, samplercube, object, [1, 1], s5
defconst $height, sampler2d, object, [1, 1], s0
defconst $invscreensize, float, vector, [1, 2], c1
defconst $latten0, float, vector, [1, 4], c3
defconst $lcol, float, matrix_columns, [4, 4], c4-6
defconst $lmap, sampler2d, object, [1, 1], s3
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c2
defconst $screenshadmap, sampler2d, object, [1, 1], s6
defconst $spec, sampler2d, object, [1, 1], s4
defconst $spotlightmap, sampler2d, object, [1, 1], s7
defconst $tranpcy, sampler2d, object, [1, 1], s2
defconst $wlightpos, float, matrix_columns, [4, 4], c7-9
defconst $worldviewpos, float, vector, [1, 3], c10
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=13
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 28
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6.xy
dcl_color_centroid r7

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.5, 1.5, 1, 0.200000003


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    6   */     tfetch2D r9.x___, r5.xy, tf0, FetchValidOnly=false
/*    7   */     serialize
                 addsc r4.w, c10.y, r2.w
/*    8   */     mul r13.zw, r8_abs.xxxy, c1.xxxy
               + muls r6.z, r3.zw
/*    9   */     add r0.w, r3.w, c10.z
               + muls r6.w, r3.zz
/*   10   */     dp3 r0.z, r0.zxy, r0.zxy
               + movs r7._, r1.w
/*   11   */     mul r8.y, c2.y, c255.x
               + adds_prev r8.x, c10.x
/*    1.0 */     exec
/*   12   */     mad r10.z, r9.x, c2.y, -r8.y
/*   13   */     add r11.zw, -r8.x, c7.xxxy
               + rcp r8.x, r4.z
/*   14   */     mul r13.xy, r8.x, r4.xy
               + subsc r11.x, c9.x, r0.w
/*   15   */     mad r6.zw, r2.z, r2.wwwz, r6.zzzw
/*   16   */     add r8.xy, -r4.w, c8.xy
               + rsq r0.z, r0_abs.z
/*   17   */     mad r6.zw, r1.z, r1.wwwz, r6.zzzw
/*    1.1 */     exec
/*   18   */     mul r8.zw, r8.xxxy, r8.xxxy
               + subsc r11.y, c9.y, r0.w
/*   19   */     dp2add r4.w, r11.wy, r11.wy, r8.w
/*   20   */     dp2add r10.w, r11.zx, r11.zx, r8.z
/*   21   */     add r8.z, r6.z, r6.z
               + rsq r8.w, r6_abs.w
/*   22   */     mul r6.zw, r8.zzzw, r2.z
/*   23   */     mul r9.zw, r8.zzzw, r1.z
/*    2.0 */     exec
/*   24   */     mul r9.xy, r8.zw, r3.z
               + mulsc r0.w, c2.w, r0.z
/*   25   */     add r3.z, -r9.x, r3.w
               + rsq r10.x, r10_abs.w
/*   26   */     add r3.x, -r9.z, r1.w
               + rsq r10.y, r4_abs.w
/*   27   */     mul r8.zw, r0.wwwz, r0.xxxy
               + movs r7._, -r6.z
/*   28   */     mul r8, r8, r10.xyz
               + adds_prev r3.y, r2.w
/*   29   */     dp3 r0.x, r3.zxy, r3.zxy
/*    2.1 */     exec
/*   30   */     add r2.xy, r8.zw, r5.xy
               + rsq r0.x, r0_abs.x
/*   31   */     mul r0.xyz, r3.xyz, r0.x
/*   32   */     cube r0, r0.zzxy, r0.yxz
/*   33   */     mov r1.z, r0.w
               + rcp r1.x, r0_abs.z
/*   34   */     mad r1.xy, r0.yx, r1.x, c255.y
/*   35   */     tfetch2D r5.__x_, r5.zw, tf2
/*    3.0 */     exec
/*   36   */     tfetchCube r12.xyz_, r1.xyz, tf5
/*   37   */     tfetch2D r1.w___, r13.zw, tf6
/*   38   */     tfetch2D r1._xyz, r2.xy, tf4
/*   39   */     tfetch2D r5.xy_z, r6.xy, tf3
/*   40   */     tfetch2D r2, r2.xy, tf1
/*   41   */     tfetch2D r0.xw__, r13.xy, tf7
/*    3.1 */     exec
/*   42   */     serialize
                 mul r0.w, r2.w, r7.w
/*   43   */     add r3.xyz, r7.xyz, r7.xyz
/*   44   */     sgt r7.z, r4.z, c255.w
/*   45   */     mul r7.xyw, r5.xyw, c0.x
/*   46   */     mul r5.xyw, r7.xyw, r2.xyz
/*   47   */     mul r1, r1.yzwx, c255.x
/*    4.0 */     exec
/*   48   */     mul r4.xyz, r1.xyz, r12.xyz
               + log r7.x, r10_abs.w
/*   49   */     mul r4.xyz, r4.xyz, c2.z
               + log r7.y, r4_abs.w
/*   50   */     mad r1.xyz, r5.xyw, r3.xyz, r4.xyz
/*   51   */     mul r7.yw, r7.xxy, c3.xxz
               + muls r7.x, r0.xy
/*   52   */     mul r4, r11.yxzw, r10.yxxy
               + exp r7.y, r7.y
/*   53   */     mul r4, r4.yzwx, r9.ywwy
               + exp r7.w, r7.w
/*    4.1 */     exec
/*   54   */     mad r0.yz, r8.xxy, r6.w, r4.yyz
/*   55   */     mul_sat r5.xy, r7.yw, c3.yw
               + movs r7._, r7.x
/*   56   */     add r7.xyw, -r5.yxz, c255.z
               + muls_prev r0.x, r7.z
/*   57   */     add_sat r4.yz, r0.zzy, r4.wwx
               + mulsc r0.y, c6.y, r7.x
/*   58   */     mul r4.xw, r0.xy, r4.zy
/*   59   */     mul r7.yz, r4.xxy, r7.yyx
               + movs r7.x, r1.w
/*    5.0 */     exec
/*   60   */     mad r0.z, r7.y, c6.x, r4.w
/*   61   */     mul r2.xyz, r3.xyz, r2.xyz
               + mulsc r3.x, c4.x, r7.y
/*   62   */     mul r3.zw, r7.yyyz, c5.xxxy
               + mulsc r3.y, c4.y, r7.z
/*   63   */     add r0.xy, r3.xz, r3.yw
               + subsc r7.z, c255.z, r7.x
/*   64   */     mul r0.xyz, r2.xyz, r0.xyz
               + movs r7._, r0.w
/*   65   */     mad r0.xyz, r1.xyz, r7.z, r0.xyz
/*    5.1 */     exece
/*   66   */     mul oC0.xyz, r0.xyz, c11.x
               + muls_prev oC0.w, r7.w

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xy
// [7] color0 r7.xyzw

