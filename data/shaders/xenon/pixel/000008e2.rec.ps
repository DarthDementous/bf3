      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: 100050c1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R5.__x_ = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: 14030805 00c6c71b e1030301	   (S)ALU:	MULv	R5.xy__ = R3.zzzz, R3.wzzz
08: 04880400 001bc66c 80030d0d	      ALU:	ADDv	R0.___w = R3.wwww, C269.zzzz
                          						    	ADD_PREVs	R4.___w = C269.xxxx
09: 140c080a 0071ac1b 2105fd02	      ALU:	MULv	R10.__zw = C261.yyyx, C509.xxxy
0a: c804080c 01c6b1c6 ab05050a	      ALU:	MULADDv	R12.__z_ = -R10.zzzz, R5.zzzz, C261.yyyy
0b: 048c000e 041bacb1 80000c0d	      ALU:	ADDv	R14.__zw = -R0.wwww, C268.xxxy
                          						    	ADD_PREVs	R0.___w = C269.yyyy
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: b8140e00 00bebe43 d000000b	      ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R14.x___ = C267.x, R0.w
0d: c8030805 00c6c7b0 eb020205	      ALU:	MULADDv	R5.xy__ = R5.xyyy, R2.zzzz, R2.wzzz
0e: 58430009 041bb0c6 a0040a80	      ALU:	ADDv	R9.xy__ = -R4.wwww, C266.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0f: c8050805 00c6c7b0 eb010105	      ALU:	MULADDv	R5.x_z_ = R5.xyyy, R1.zzzz, R1.wzzz
10: b82a0e05 00bcbc83 c109090b	      ALU:	MULv	R5._y_w = R9.xxyy, R9.xxyy
                          						    	SUB_CONST_0	R14._y__ = C267.y, R0.w
11: c8080804 0019191b f10e0e05	      ALU:	DOT2ADDv	R4.___w = R5.wwww, R14.ywww, R14.ywww
      00006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8020805 00c4c4b1 f10e0e05	      ALU:	DOT2ADDv	R5._y__ = R5.yyyy, R14.xzzz, R14.xzzz
13: 58840707 006c6cc6 e0050585	      ALU:	ADDv	R7.__z_ = R5.xxxx, R5.xxxx
                          						    	RECIPSQ_IEEE	R7.___w = abs(R5).zzzz
14: c80c080b 0006c600 e1070200	      ALU:	MULv	R11.__zw = R7.zzzw, R2.zzzz
15: c8050805 00c7c600 e1070100	      ALU:	MULv	R5.x_z_ = R7.wzzz, R1.zzzz
16: a883000b 001ac602 c1070305	      ALU:	MULv	R11.xy__ = R7.zwww, R3.zzzz
                          						    	MUL_CONST_0	R0.___w = C261.w, R0.z
17: 58140c03 046c1bb1 e00b0385	      ALU:	ADDv	R3.__z_ = -R11.xxxx, R3.wwww
                          						    	RECIPSQ_IEEE	R12.x___ = abs(R5).yyyy
      00006018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 58210c03 04c61b1b e0050184	      ALU:	ADDv	R3.x___ = -R5.zzzz, R1.wwww
                          						    	RECIPSQ_IEEE	R12._y__ = abs(R4).wwww
19: 140c0809 01dbacc6 e100000b	      ALU:	MULv	R9.__zw = R0.wwwz, R0.xxxy
1a: 042f030d 0000c01b e1090c02	      ALU:	MULv	R13 = R9, R12.xyzz
                          						    	ADD_PREVs	R3._y__ = R2.wwww
1b: c8010800 00bebe00 f0030300	      ALU:	DOT3v	R0.x___ = R3.zxyy, R3.zxyy
1c: 581c0007 0006ac6c e00d0680	      ALU:	ADDv	R7.__zw = R13.zzzw, R6.xxxy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
1d: c8070800 00c06c00 e1030000	      ALU:	MULv	R0.xyz_ = R3.xyzz, R0.xxxx
      0540601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: c80f0800 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
1f: 4c140102 001b1bc6 e2000080	      ALU:	MAXv	R2.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
20: c8030802 006d6cc6 cb0001fd	      ALU:	MULADDv	R2.xy__ = C509.zzzz, R0.yxxx, R1.xxxx
21: 104890c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R6.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: 103810e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R1.xyz_ = R7.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
23: 90683041 1f1ffe88 0000c000	      FETCH:	SAMPLE	R3.xyz_ = R2.xyz CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: b82860c1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R6.__x_ = R6.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
25: b81820e1 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R7.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
26: b85800e1 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R7.zwz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
27: 140e0807 00fcfc6c c0080801	   (S)ALU:	ADDv	R7._yzw = R8.xxyz, R8.xxyz
28: 0c110700 00bebeb1 d00404fd	      ALU:	DOT3v	R0.x___ = R4.zxyy, R4.zxyy
                          						    	MUL_PREVs	R7.x___ = C509.yyyy
29: 58140005 00c3c06c b000fe80	      ALU:	DOT3v	R5.__z_ = R0.wyzz, C510.xyzz
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 40180801 001b1bb1 e1020885	      ALU:	MULv	R1.___w = R2.wwww, R8.wwww
                          						    	LOG_IEEE	R8.x___ = abs(R5).yyyy
2b: 41280808 006cc61b e1000484	      ALU:	MULv	R8.___w = R0.xxxx, R4.zzzz CLAMP
                          						    	LOG_IEEE	R8._y__ = abs(R4).wwww
2c: a8130408 00b0c441 810806fd	      ALU:	MULv	R8.xy__ = R8.xyyy, C262.xzzz
                          						    	MUL_CONST_0	R4.x___ = C509.x, R0.y
2d: 381f080c 000dad6c e10e0c08	      ALU:	MULv	R12 = R14.yxzw, R12.yxxy
                          						    	EXP_IEEE	R8.x___ = R8.xxxx
2e: 38260804 00bc6cb1 e10d0508	      ALU:	MULv	R4._yz_ = R13.xxyy, R5.xxxx
                          						    	EXP_IEEE	R8._y__ = R8.yyyy
2f: c9010805 00c5b3b1 f10c0b04	      ALU:	DOT2ADDv	R5.x___ = R4.yyyy, R12.yzzz, R11.wyyy CLAMP
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: c9020805 0018b3c6 f10c0b04	      ALU:	DOT2ADDv	R5._y__ = R4.zzzz, R12.xwww, R11.wyyy CLAMP
31: a9230406 00b01942 810806fd	      ALU:	MULv	R6.xy__ = R8.xyyy, C262.ywww CLAMP
                          						    	MUL_CONST_0	R4._y__ = C509.x, R0.z
32: a8470400 04cd1b43 8006fefd	      ALU:	ADDv	R0.xyz_ = -R6.yxzz, C510.wwww
                          						    	MUL_CONST_0	R4.__z_ = C509.x, R0.w
33: a8130a08 006db041 c1050009	      ALU:	MULv	R8.xy__ = R5.yxxx, R0.xyyy
                          						    	MUL_CONST_0	R10.x___ = C265.x, R0.y
34: a82c0a06 0071ac80 81080809	      ALU:	MULv	R6.__zw = R8.yyyx, C264.xxxy
                          						    	MUL_CONST_0	R10._y__ = C265.y, R0.x
35: a8170602 0015c049 c1070207	      ALU:	MULv	R2.xyz_ = R7.yzww, R2.xyzz
                          						    	MUL_CONST_0	R6.x___ = C263.x, R8.y
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: a82e0607 003cfc88 c10a0507	      ALU:	MULv	R7._yzw = R10.xxyw, R5.xxyz
                          						    	MUL_CONST_0	R6._y__ = C263.y, R8.x
37: 00470503 00b4b4b6 e1040307	      ALU:	MULv	R3.xyz_ = R4.xzyy, R3.xzyy
                          						    	ADDs	R5.__z_ = R7.zzyy
38: 00170504 00c0c061 e1040106	      ALU:	MULv	R4.xyz_ = R4.xyzz, R1.xyzz
                          						    	ADDs	R5.x___ = R6.yyxx
39: 00230508 006f1bcb a007fe06	      ALU:	ADDv	R8.xy__ = R7.wxxx, C510.wwww
                          						    	ADDs	R5._y__ = R6.wwzz
3a: a8180802 006c1b49 8208fd02	      ALU:	MAXv	R2.___w = R8.xxxx, C509.wwww
                          						    	MUL_CONST_0	R8.x___ = C258.x, R8.y
3b: 40870508 006cc01b e1080908	      ALU:	MULv	R8.xyz_ = R8.xxxx, R9.xyzz
                          						    	LOG_IEEE	R5.___w = R8.wwww
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: c8070801 00b46cb4 ab010008	      ALU:	MULADDv	R1.xyz_ = R8.xzyy, R1.xzyy, C256.xxxx
3d: c80f0808 00000000 e1020500	      ALU:	MULv	R8 = R2, R5
3e: 38870004 00c06c1b a104ff08	      ALU:	MULv	R4.xyz_ = R4.xyzz, C511.xxxx
                          						    	EXP_IEEE	R0.___w = R8.wwww
3f: c8070804 00c01b00 e1040000	      ALU:	MULv	R4.xyz_ = R4.xyzz, R0.wwww
40: 14070804 00b4b41b a1040301	      ALU:	MULv	R4.xyz_ = R4.xzyy, C259.xzyy
41: c8070808 00b46cc0 ab040408	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R4.xzyy, C260.xxxx
      00003042 00002200     	EXEC_END ADDR(0x42) CNT(0x3) BOOL_ADDR(0x80)
42: c8070808 00c0c6b4 ab030508	      ALU:	MULADDv	R8.xyz_ = R8.xzyy, R3.xyzz, C261.zzzz
43: c8070808 00c0b4b4 eb020108	      ALU:	MULADDv	R8.xyz_ = R8.xzyy, R2.xyzz, R1.xzyy
44: 0c878000 00c06cc6 a1080e00	      ALU:	MULv	export0.xyz_ = R8.xyzz, C270.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.zzzz	; COLOR
