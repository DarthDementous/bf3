      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 4c870207 00c0c0c6 e0060603	      ALU:	ADDv	R7.xyz_ = R6.xyzz, R6.xyzz
                          						    	RECIP_IEEE	R2.___w = R3.zzzz
06: c8030608 001bb000 e1020300	      ALU:	MULv	R8.xy__ = R2.wwww, R3.xyyy
07: 1038c081 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 102850a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: b8182081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R2.___x = R4.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 1008a081 1f1ff688 00004000	      FETCH:	SAMPLE	R10.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0009600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 10484101 1f1ff63f 00004000	      FETCH:	SAMPLE	R4.__xw = R8.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: c8010604 00bebe00 f0000000	   (S)ALU:	DOT3v	R4.x___ = R0.zxyy, R0.zxyy
0d: c8020604 00bebe00 f0010100	      ALU:	DOT3v	R4._y__ = R1.zxyy, R1.zxyy
0e: 58280403 00c61bb1 e1040484	      ALU:	MULv	R3.___w = R4.zzzz, R4.wwww
                          						    	RECIPSQ_IEEE	R4._y__ = abs(R4).yyyy
0f: 59120404 00b1c66c e1040184	      ALU:	MULv	R4._y__ = R4.yyyy, R1.zzzz CLAMP
                          						    	RECIPSQ_IEEE	R4.x___ = abs(R4).xxxx
10: c8030608 04b1b000 a0020500	      ALU:	ADDv	R8.xy__ = -R2.yyyy, C261.xyyy
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: c80c0608 04c6ac00 a0020600	      ALU:	ADDv	R8.__zw = -R2.zzzz, C262.xxxy
12: c8030609 046cb000 a0020400	      ALU:	ADDv	R9.xy__ = -R2.xxxx, C260.xyyy
13: 14010602 00c6c66c a503ff04	      ALU:	SETGTv	R2.x___ = R3.zzzz, C511.zzzz
14: 0e180204 001b6cc6 e1030200	      ALU:	MULv	R4.___w = R3.wwww, R2.xxxx
                          						    	MUL_PREVs	R2.x___ = R0.zzzz CLAMP
15: c8010604 006c1b00 e1020400	      ALU:	MULv	R4.x___ = R2.xxxx, R4.wwww
16: c90c0609 00ac6cb1 8b040808	      ALU:	MULADDv	R9.__zw = C264.yyyy, R4.xxxy, C264.xxxx CLAMP
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: c80f0603 00000000 e1090900	      ALU:	MULv	R3 = R9, R9
18: c8020602 001919b1 f1080803	      ALU:	DOT2ADDv	R2._y__ = R3.yyyy, R8.ywww, R8.ywww
19: c8010602 00c4c46c f1080803	      ALU:	DOT2ADDv	R2.x___ = R3.xxxx, R8.xzzz, R8.xzzz
1a: 40140209 001b6c6c a700ff82	      ALU:	SETNEv	R9.__z_ = R0.wwww, C511.xxxx
                          						    	LOG_IEEE	R2.x___ = abs(R2).xxxx
1b: 40280209 001b6cb1 a701ff82	      ALU:	SETNEv	R9.___w = R1.wwww, C511.xxxx
                          						    	LOG_IEEE	R2._y__ = abs(R2).yyyy
1c: c8030602 00b0c400 a1020700	      ALU:	MULv	R2.xy__ = R2.xyyy, C263.xzzz
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 38110204 001b1b6c e10a0602	      ALU:	MULv	R4.x___ = R10.wwww, R6.wwww
                          						    	EXP_IEEE	R2.x___ = R2.xxxx
1e: 382c0208 000606b1 e1030302	      ALU:	MULv	R8.__zw = R3.zzzw, R3.zzzw
                          						    	EXP_IEEE	R2._y__ = R2.yyyy
1f: c9030602 006db300 a1020700	      ALU:	MULv	R2.xy__ = R2.yxxx, C263.wyyy CLAMP
20: c8060604 04bbb100 a002ff00	      ALU:	ADDv	R4._yz_ = -R2.wwyy, C511.yyyy
21: c8088000 006cb100 e1040400	      ALU:	MULv	export0.___w = R4.xxxx, R4.yyyy	; COLOR
22: c807060b 00c06c00 a1050000	      ALU:	MULv	R11.xyz_ = R5.xyzz, C256.xxxx
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c8070603 00c0c000 e1070a00	      ALU:	MULv	R3.xyz_ = R7.xyzz, R10.xyzz
24: b8170005 00c0c080 e10c06ff	      ALU:	MULv	R5.xyz_ = R12.xyzz, R6.xyzz
                          						    	SUB_CONST_0	R0.x___ = C511.y, R2.x
25: a8170802 00c0c080 c10b0a01	      ALU:	MULv	R2.xyz_ = R11.xyzz, R10.xyzz
                          						    	MUL_CONST_0	R8.x___ = C257.y, R0.x
26: 14020608 00c61b1b e1040008	      ALU:	MULv	R8._y__ = R4.zzzz, R0.wwww
27: 0c4a0000 00c1cb6c e1080400	      ALU:	MULv	R0._y_w = R8.yyzz, R4.wwzz
                          						    	MUL_PREVs	R0.__z_ = R0.xxxx
28: a84a0808 00bc6180 81000203	      ALU:	MULv	R8._y_w = R0.xxyy, C258.yyxx
                          						    	MUL_CONST_0	R8.__z_ = C259.y, R0.x
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: 14260604 00cbbcb1 a1000200	      ALU:	MULv	R4._yz_ = R0.wwzz, C258.xxyy
                          						    	MAXs	R6._y__ = R0.yyyy
2a: a81d0406 00f3ac45 a1000103	      ALU:	MULv	R6.x_zw = R0.wyyz, C257.xxxy
                          						    	MUL_CONST_0	R4.x___ = C259.x, R6.y
2b: c8040604 00c51a6c d10409ff	      ALU:	DOT2ADDv	R4.__z_ = C511.xxxx, R4.yzzz, R9.zwww
2c: a8230409 00181a43 c1060903	      ALU:	MULv	R9.xy__ = R6.xwww, R9.zwww
                          						    	MUL_CONST_0	R4._y__ = C259.x, R0.w
2d: a88b0406 00b41b82 c1080103	      ALU:	MULv	R6.xy_w = R8.xzyy, R1.wwww
                          						    	MUL_CONST_0	R4.___w = C259.y, R0.z
2e: 140c0609 003106c6 e1040906	      ALU:	MULv	R9.__zw = R4.yyyw, R9.zzzw
      0000602f 00002200     	EXEC_END ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: 04120000 006cb16c e0040606	      ALU:	ADDv	R0._y__ = R4.xxxx, R6.yyyy
                          						    	ADD_PREVs	R0.x___ = R6.xxxx
30: 14030604 00c4191b e0090908	      ALU:	ADDv	R4.xy__ = R9.xzzz, R9.ywww
31: 04470006 00b4c01b e1050406	      ALU:	MULv	R6.xyz_ = R5.xzyy, R4.xyzz
                          						    	ADD_PREVs	R0.__z_ = R6.wwww
32: c8070606 00c0b4b4 eb030006	      ALU:	MULADDv	R6.xyz_ = R6.xzyy, R3.xyzz, R0.xzyy
33: c8070606 00c0c0c0 eb020706	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R2.xyzz, R7.xyzz
34: c8078000 00c06c00 a1060900	      ALU:	MULv	export0.xyz_ = R6.xyzz, C265.xxxx	; COLOR
      00000000 00000000     	NOP
