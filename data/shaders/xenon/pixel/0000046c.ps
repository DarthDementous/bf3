//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $ambientcolour;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float4x4 $lcol;
//   float $lightningintensity;
//   float4 $matvalue;
//   float3 $rimlightcolour;
//   float $rimlightfade;
//   float $rimlightwidth;
//   sampler2D $spec;
//   sampler2D $spotlightmap;
//   float3 $sundir;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   $lightningintensity c0       1
//   $incanglow          c1       1
//   $incanflag          c2       1
//   $lcol               c3       3
//   $wlightpos          c6       3
//   $matvalue           c9       1
//   $worldviewpos       c10      1
//   $sundir             c11      1
//   $rimlightwidth      c12      1
//   $rimlightfade       c13      1
//   $rimlightcolour     c14      1
//   $compressedhdr      c15      1
//   $ambientcolour      c16      1
//   $diff               s0       1
//   $tranpcy            s1       1
//   $incan              s2       1
//   $bump               s3       1
//   $spec               s4       1
//   $spotlightmap       s5       1
//

// Shader type: pixel 

xps_3_0
defconst $ambientcolour, float, vector, [1, 4], c16
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c15
defconst $diff, sampler2d, object, [1, 1], s0
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lightningintensity, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c9
defconst $rimlightcolour, float, vector, [1, 3], c14
defconst $rimlightfade, float, scalar, [1, 1], c13
defconst $rimlightwidth, float, scalar, [1, 1], c12
defconst $spec, sampler2d, object, [1, 1], s4
defconst $spotlightmap, sampler2d, object, [1, 1], s5
defconst $sundir, float, vector, [1, 3], c11
defconst $tranpcy, sampler2d, object, [1, 1], s1
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c10
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=18
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 9 interpolants: 9, components: 34
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_color_centroid r7
dcl_color1_centroid r8.xyz

def c252, 0, 0, 0, 0
def c253, -1, 0, 10, 0.200000003
def c254, 9.99999975e-005, 1, 3, 0.5
def c255, 0.0599999987, 0.289999992, 0.150000006, 5


/*    0.0 */     exec
/*    9   */     rcp r8.w, r4.z
/*   10   */     tfetch2D r11.xyz_, r6.xy, tf2
/*   11   */     tfetch2D r9.xyz_, r6.xy, tf4
/*   12   */     tfetch2D r18.__x_, r6.zw, tf1
/*   13   */     tfetch2D r10._yw_, r6.xy, tf3
/*   14   */     tfetch2D r6.xwyz, r6.xy, tf0
/*    0.1 */     exec
/*   15   */     serialize
                 mul r12.xy, r8.w, r4.xy
               + muls r10.w, -r2.ww
/*   16   */     tfetch2D r12.xw__, r12.xy, tf5
/*   17   */     serialize
                 mul r14.z, c9.x, c255.w
               + muls r4.w, -r1.ww
/*   18   */     add r9.w, r2.w, c10.z
               + movs r7._, r1.w
/*   19   */     add r8.w, r0.w, c10.x
               + adds_prev r3.z, c10.y
/*   20   */     mul r7.w, r6.y, r7.w
               + muls r15.z, r12.xy
/*    1.0 */     exec
/*   21   */     add r16.zw, -r9.w, c8.xxxy
               + subsc r16.x, c6.x, r8.w
/*   22   */     sgt r15.w, r4.z, c253.w
               + subsc r15.x, c7.x, r3.z
/*   23   */     mad r10.x, -r0.w, -r0.w, r4.w
/*   24   */     add r10.xyz, r10.xyz, r10.wyz
               + subsc r15.y, c7.y, r3.z
/*   25   */     mul r4.xyw, r15.xyz, r15.xyw
               + subsc r16.y, c6.y, r8.w
/*   26   */     dp2add r8.w, r16.yw, r16.yw, r4.y
/*    1.1 */     exec
/*   27   */     dp2add r9.w, r16.xz, r16.xz, r4.x
/*   28   */     add r17.xy, r10.yz, c253.x
               + rsq r4.z, r10_abs.x
/*   29   */     mul r18.xy, r17.xy, r17.xy
/*   30   */     add r4.xy, -r18.xz, c254.y
               + rsq r13.z, r9_abs.w
/*   31   */     mul r7.w, r7.w, r4.y
               + rsq r13.w, r8_abs.w
/*   32   */     add r12.xyz, r7.zyx, r7.zyx
               + movs r7._, r4.z
/*    2.0 */     exec
/*   33   */     add r10.xyz, c16.zyx, c0.x
               + muls_prev r13.x, -r0.w
/*   34   */     dp3 r14.w, r9.zyx, c255.xyz
               + movs r7._, r4.z
/*   35   */     mul r16, r16, r13.zwzw
               + muls_prev r13.y, -r2.w
/*   36   */     mul r15.xy, r15.xy, r13.zw
               + movs r7._, r4.x
/*   37   */     add r13, r16, r13.xxy
               + adds_prev r8.w, -r18.y
/*   38   */     mad r14.xy, r4.z, -r1.w, r15.xy
/*    2.1 */     exec
/*   39   */     mul r4.xyz, r14.zxy, r14.wxy
               + sqrt r17.z, r8_abs.w
/*   40   */     dp2add r8.w, r13.yw, r13.yw, r4.z
/*   41   */     dp3 r1.w, r17.zxy, r2.zxy
/*   42   */     dp3 r1.y, r17.zxy, r1.zxy
/*   43   */     dp2add r1.z, r13.xz, r13.xz, r4.y
/*   44   */     dp3 r1.x, r17.zxy, r0.zxy
               + rsq r0.y, r1_abs.z
/*    3.0 */     exec
/*   45   */     dp3 r0.x, r1.wxy, r1.wxy
               + rsq r0.z, r8_abs.w
/*   46   */     mul r15.zw, r14.xxxy, r0.yyyz
/*   47   */     mul r14, r13.xzyw, r0.yyz
               + rsq r0.x, r0_abs.x
/*   48   */     mul r13.xyz, r1.ywx, r0.x
/*   49   */     mul r0, r16.xzwy, r13.zyyz
/*   50   */     mul r2, r15.zwxy, r13.x
               + movs r7._, c1.x
/*    3.1 */     exec
/*   51   */     dp2add_sat r2.x, r14.xy, r13.zy, r2.x
/*   52   */     dp2add_sat r2.y, r14.zw, r13.zy, r2.y
/*   53   */     add r13.xy, r0.xw, r2.zw
               + muls_prev r2.z, c253.z
/*   54   */     mul r9.xyz, r9.zyx, c254.w
               + movs r7._, r13.x
/*   55   */     add_sat r0.x, r13.y, r0.z
               + adds_prev_sat r0.y, r0.y
/*   56   */     add r2.xyz, r2.xyz, c254.xxy
               + snes r0.z, r0.y
/*    4.0 */     exec
/*   57   */     mul r1.z, r2.z, c2.x
               + snes r0.w, r0.x
/*   58   */     mad r11.xyz, r1.z, r11.xyz, r10.zyx
/*   59   */     mul r0.zw, r2.xxxy, r0.zzzw
               + addsc r1.z, c254.y, r4.x
/*   60   */     mul r0.z, r0.z, r4.w
               + log r0.w, r0_abs.w
/*   61   */     mul r0.y, r4.w, r0.y
               + log r0.z, r0_abs.z
/*   62   */     mul r0.zw, r1.z, r0.zzzw
/*    4.1 */     exec
/*   63   */     mul r10.y, r0.y, c4.x
               + exp r0.z, r0.z
/*   64   */     mul r10.z, r0.y, c5.x
               + exp r0.w, r0.w
/*   65   */     add r0.zw, r0.wwwz, r0.wwwz
               + mulsc r6.y, c5.y, r0.x
/*   66   */     mul r2.xyz, r12.zyx, r6.xzw
               + mulsc r6.z, c3.x, r0.w
/*   67   */     mul r4.xyz, r9.xyz, r7.zyx
               + mulsc r9.z, c3.y, r0.z
/*   68   */     mul r9.xy, r0.wz, c5.xy
               + mulsc r9.w, c4.y, r0.z
/*    5.0 */     exec
/*   69   */     add r8.xyz, r11.xyz, r8.xyz
               + movs r7.y, r0.y
/*   70   */     mul r6.xw, r0.xw, c4.yx
               + mulsc r10.x, c3.x, r7.y
/*   71   */     mul r9, r9, r3.xy
               + mulsc r10.w, c3.y, r0.x
/*   72   */     mad r7.xy, r6.zw, r3.x, r9.zw
/*   73   */     mul r0, r10.yzxw, r3.xxxy
               + adds r7.z, r9.xy
/*   74   */     mad r0.xy, r6.yx, r3.y, r0.yx
/*    5.1 */     exec    // PredicateClean=false
/*   75   */     add r7.xyz, r7.xyz, r7.xyz
               + adds r8.w, r0.zw
/*   76   */     mul r8, r2.xzyx, r8.xzyw
/*   77   */     mad r7.xyz, r4.zxy, r7.xzy, r8.xyz
/*   78   */     add r7.x, r7.x, r8.w
               + setp_gt r7._, c12.x
/*   79   */     mad r7.yz, r2.yyz, r0.yyx, r7.zzy
/*    6.0 */ (!p0) jmp L16
/*    6.1 */     exec
/*   80   */     add r2.xyz, -r5.zyx, c10.zyx
/*   81   */     dp3 r0.x, r2.xzy, r2.xzy
/*   82   */     dp3_sat r0.w, r1.wxy, c11.zxy
               + rsq r0.x, r0_abs.x
/*   83   */     mul r0.xyz, r2.xyz, r0.x
/*   84   */     dp3 r0.x, r0.xzy, r1.wxy
               + movs r7._, -c12.x
/*   85   */     max r1.x, r0.x, c253.y
               + adds_prev r1.y, c254.y
/*    7.0 */     exec
/*   86   */     add r0.xy, -r1.yx, c254.y
/*   87   */     add r0.y, r0.y, -r1.y
               + rcp r0.x, r0.x
/*   88   */     mul_sat r0.z, r0.y, r0.x
/*   89   */     add r0.xy, -r0.wz, c254.yz
/*   90   */     mad r0.x, r0.x, c13.x, r0.w
/*   91   */     add r0.y, r0.y, -r0.z
               + muls r0.z, r0.zz
/*    7.1 */     exec
/*   92   */     mul r0.y, r0.z, r0.y
/*   93   */     dp2add r0.x, r0.y, r0.x, c253.y
/*   94   */     mad r0.xyz, r0.x, c14.zyx, c254.y
/*   95   */     mul r7.xyz, r7.xyz, r0.zyx
       label L16
/*    8.0 */     alloc colors
/*    8.1 */     exece
/*   96   */     mul r7.xyz, r7.xyz, c15.x
/*   97   */     mov oC0, r7

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x01ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] color0 r7.xyzw
// [8] color1 r8.xyz

