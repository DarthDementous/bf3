//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $boldx;
//   sampler2D $fonttex;
//   float4 $incolour;
//   float4 $outlinecolour;
//   float $pixx;
//   float $pixy;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $pixx          c0       1
//   $pixy          c1       1
//   $boldx         c2       1
//   $incolour      c3       1
//   $outlinecolour c4       1
//   $fonttex       s0       1
//

// Shader type: pixel 

xps_3_0
defconst $boldx, float, scalar, [1, 1], c2
defconst $fonttex, sampler2d, object, [1, 1], s0
defconst $incolour, float, vector, [1, 4], c3
defconst $outlinecolour, float, vector, [1, 4], c4
defconst $pixx, float, scalar, [1, 1], c0
defconst $pixy, float, scalar, [1, 1], c1
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=5
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 3 interpolants: 3, components: 12
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_color_centroid r2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 1, -1, 2
def c255, -2, 0, 0, 0


/*    0.0 */     exec
/*    7   */     max r2.zw, r0.xxxy, r1.xxxy
/*    8   */     min r0.zw, r2.zzzw, r1.zzzw
/*    9   */     max r2.y, r0.w, r1.y
               + addsc r2.x, c0.x, r0.z
/*   10   */     max r2.x, r2.x, r1.x
/*   11   */     min r2.xzw, r2.zxxy, r1.zzzw
/*   12   */     subsc r2.y, -c1.x, -r2.w
/*    0.1 */     exec
/*   13   */     max r2.y, r2.y, r1.y
               + movs r3.x, r0.z
/*   14   */     min r2.y, r2.y, r1.w
               + movs r3.z, r1.x
/*   15   */     mad r3.y, c1.x, c254.w, r2.y
/*   16   */     max r3.y, r3.y, r1.y
               + maxs r3.x, r3.xz
/*   17   */     min r3.xy, r3.xy, r1.zw
/*   18   */     tfetch2D r2.w___, r2.xy, tf0
/*    1.0 */     exec
/*   19   */     tfetch2D r2._w__, r3.xy, tf0
/*   20   */     tfetch2D r2.__w_, r2.zw, tf0
/*   21   */     serialize
                 sgt r3.z, r2.z, c254.z
/*   22   */     cndeq r4.xyz, r3.z, c254.y, c4.xyz
/*   23   */     max r2.w, r2.z, c254.z
               + mulsc r3.y, c4.w, r2.z
/*   24   */     max r2.z, r2.x, r2.w
               + mulsc r3.x, c4.w, r2.x
/*    1.1 */     exec    // PredicateClean=false
/*   25   */     cndeq r3.y, r3.z, c254.y, r3.y
/*   26   */     sgt r2.xw, r2.xy, r2.wz
/*   27   */     cndeq r3.z, r2.x, r3.y, r3.x
/*   28   */     mov r3.xy, c254.xy
               + setp_ne r2._, r2.w
/*   29   */     cndeq r4.xyz, r2.x, r4.xyz, c4.xyz
/*   30   */     (!p0) movs r2.y, r0.x
/*    2.0 */     exec
/*   31   */     (p0) mov r4.xyz, c4.xyz
               + (p0) movs r2.z, r2.y
/*   32   */     (p0) mov r2.y, r0.x
               + (p0) mulsc r3.z, c4.w, r2.y
/*   33   */     add r2.w, r0.y, c1.x
               + subsc r2.x, -c0.x, -r2.y
/*   34   */     max r2.xy, r2.xw, r1.xy
/*   35   */     min r5.xy, r2.xy, r1.zw
/*   36   */     tfetch2D r2.w___, r5.xy, tf0
/*    2.1 */     exec    // PredicateClean=false
/*   37   */     serialize
                 sgt r2.y, r2.x, r2.z
/*   38   */     setp_ne r2._, r2.y
/*   39   */     (p0) mulsc r3.z, c4.w, r2.x
/*   40   */     (p0) mov r4.xyz, c4.xyz
               + (p0) movs r2.z, r2.x
/*   41   */     mad r2.y, c0.x, c255.x, r0.x
/*   42   */     mov r5.w, r0.w
               + subsc r2.x, -c1.x, -r0.y
/*    3.0 */     exec
/*   43   */     max r2.xy, r2.xy, r1.yx
/*   44   */     min r5.yz, r2.xxy, r1.wwz
/*   45   */     tfetch2D r2._w__, r5.zw, tf0
/*   46   */     tfetch2D r2.w___, r5.xy, tf0
/*   47   */     serialize
                 max r2.w, r2.x, r2.z
/*   48   */     sgt r5.xy, r2.xy, r2.zw
               + mulsc r2.x, c4.w, r2.x
/*    3.1 */     exec    // PredicateClean=false
/*   49   */     cndeq r4.w, r5.x, r3.z, r2.x
/*   50   */     setp_ne r2._, r5.y
/*   51   */     cndeq r4.xyz, r5.x, r4.xyz, c4.xyz
/*   52   */     (p0) mulsc r4.w, c4.w, r2.y
/*   53   */     (p0) mov r4.xyz, c4.xyz
               + (p0) movs r2.w, r2.y
/*   54   */     tfetch2D r2.w___, r0.zw, tf0
/*    4.0 */     exec    // PredicateClean=false
/*   55   */     serialize
                 movs r3.w, r3.y
/*   56   */     mov r3.z, r3.y
               + setp_ne r2._, r2.x
/*   57   */     cndgt r3, r2.w, r4, r3.zywx
/*   58   */     (p0) mulsc r2.x, c3.w, r2.x
/*   59   */     (p0) subsc r2.y, c254.y, r2.x
/*   60   */     (p0) mul r4.xyz, r2.x, c3.xyz
               + (p0) muls r4.w, r2.xx
/*    4.1 */     exec
/*   61   */     (p0) mad r3, r2.y, r3, r4
/*   62   */     movs r2.y, r0.x
/*   63   */     subsc r2.x, -c2.x, -r2.y
/*   64   */     max r2.x, r2.x, r1.x
/*   65   */     min r0.z, r2.x, r1.z
/*   66   */     tfetch2D r2.w___, r0.zw, tf0
/*    5.0 */     exec    // PredicateClean=false
/*   67   */     serialize
                 setp_ne_push r2._, c254.x, r2.x
/*   68   */     (p0) mulsc r2.x, c3.w, r2.x
/*   69   */     (p0) add r2.y, r2.x, r3.w
/*   70   */     (p0) min r3.w, r2.y, c254.y
               + (p0) subsc r2.y, c254.y, r2.x
/*   71   */     (p0) mul r2.yzw, r2.y, r3.xxyz
/*   72   */     (p0) mad r3.xyz, r2.x, c3.xyz, r2.yzw
/*    5.1 */     alloc colors
/*    6.0 */     exece
/*   73   */     mov oC0, r3
/*    6.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x0007 SamplingPattern 0x0003
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] color0 r2.xyzw

