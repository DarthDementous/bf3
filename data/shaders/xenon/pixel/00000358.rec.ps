      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05546004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: c80c0504 00acac00 a1860100	      ALU:	MULv	R4.__zw = abs(R6).xxxy, C257.xxxy
05: b8189061 1f1ffe3f 00004000	      FETCH:	SAMPLE	R9.__x_ = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 10387061 1f1fffd9 00004000	      FETCH:	SAMPLE	R7.yw__ = R3.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: 10288081 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R4.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 10086061 1f1ff688 00004000	      FETCH:	SAMPLE	R6.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: b8483081 1f1fffdf 00004000	      FETCH:	SAMPLE	R3._w__ = R4.zwz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0002600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: 14080502 001bc61b a0020900	   (S)ALU:	ADDv	R2.___w = R2.wwww, C265.zzzz
0b: 04410303 001b1b6c c1060509	      ALU:	MULv	R3.x___ = R6.wwww, R5.wwww
                          						    	ADD_PREVs	R3.__z_ = C265.xxxx
0c: 14070504 00c0c01b e0050501	      ALU:	ADDv	R4.xyz_ = R5.xyzz, R5.xyzz
0d: 04170508 00c06cb1 81080009	      ALU:	MULv	R8.xyz_ = R8.xyzz, C256.xxxx
                          						    	ADD_PREVs	R5.x___ = C265.yyyy
0e: c8030509 00b06cc6 8b07fffe	      ALU:	MULADDv	R9.xy__ = C510.zzzz, R7.xyyy, C511.xxxx
0f: ac430b0a 046cb041 a00507fe	      ALU:	ADDv	R10.xy__ = -R5.xxxx, C263.xyyy
                          						    	MUL_CONST_1	R11.__z_ = C510.x, R3.y
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: b84c0a07 04c6ac43 a0030608	      ALU:	ADDv	R7.__zw = -R3.zzzz, C262.xxxy
                          						    	SUB_CONST_0	R10.__z_ = C264.x, R2.w
11: b8850a05 001a1a83 e1070708	      ALU:	MULv	R5.x_z_ = R7.zwww, R7.zwww
                          						    	SUB_CONST_0	R10.___w = C264.y, R2.w
12: c8040505 001919c6 f10a0a05	      ALU:	DOT2ADDv	R5.__z_ = R5.zzzz, R10.ywww, R10.ywww
13: c8020505 00c4c46c f10a0a05	      ALU:	DOT2ADDv	R5._y__ = R5.xxxx, R10.xzzz, R10.xzzz
14: 581e0703 00fcfcb1 e1040685	      ALU:	MULv	R3._yzw = R4.xxyz, R6.xxyz
                          						    	RECIPSQ_IEEE	R7.x___ = abs(R5).yyyy
15: 5823070b 00b0b0c6 e1090985	      ALU:	MULv	R11.xy__ = R9.xyyy, R9.xyyy
                          						    	RECIPSQ_IEEE	R7._y__ = abs(R5).zzzz
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: 40290505 04c41bb1 a00bfe85	      ALU:	ADDv	R5.x__w = -R11.xzzz, C510.wwww
                          						    	LOG_IEEE	R5._y__ = abs(R5).yyyy
17: 40180504 026cb1c6 e0050b85	      ALU:	ADDv	R4.___w = R5.xxxx, -R11.yyyy
                          						    	LOG_IEEE	R5.x___ = abs(R5).zzzz
18: ac470506 00c0c045 c1080602	      ALU:	MULv	R6.xyz_ = R8.xyzz, R6.xyzz
                          						    	MUL_CONST_1	R5.__z_ = C258.x, R5.y
19: ac230508 001ab0c4 c1070702	      ALU:	MULv	R8.xy__ = R7.zwww, R7.xyyy
                          						    	MUL_CONST_1	R5._y__ = C258.z, R5.x
1a: a08f0907 000dad1b e10a0784	      ALU:	MULv	R7 = R10.yxzw, R7.yxxy
                          						    	SQRT_IEEE	R9.___w = abs(R4).wwww
1b: 38120500 00bfbec6 f0090005	      ALU:	DOT3v	R0._y__ = R9.wxyy, R0.zxyy
                          						    	EXP_IEEE	R5.x___ = R5.zzzz
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: 38240500 00bfbeb1 f0090105	      ALU:	DOT3v	R0.__z_ = R9.wxyy, R1.zxyy
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
1d: ae180900 00bfbe84 d0090202	      ALU:	DOT3v	R0.___w = R9.wxyy, R2.zxyy
                          						    	MUL_CONST_1	R9.x___ = C258.y, R5.x CLAMP
1e: ae210900 00c3c305 d0000002	      ALU:	DOT3v	R0.x___ = R0.wyzz, R0.wyzz
                          						    	MUL_CONST_1	R9._y__ = C258.w, R5.y CLAMP
1f: 58170005 04cd1b6c a009fe80	      ALU:	ADDv	R5.xyz_ = -R9.yxzz, C510.wwww
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
20: ac470001 00c96c45 c1000005	      ALU:	MULv	R1.xyz_ = R0.ywzz, R0.xxxx
                          						    	MUL_CONST_1	R0.__z_ = C261.x, R5.y
21: ac830000 00b06c84 c1080105	      ALU:	MULv	R0.xy__ = R8.xyyy, R1.xxxx
                          						    	MUL_CONST_1	R0.___w = C261.y, R5.x
      00006022 00001200     	EXEC ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: c9020500 0018b2b1 f1070100	      ALU:	DOT2ADDv	R0._y__ = R0.yyyy, R7.xwww, R1.zyyy CLAMP
23: c9010500 00c5b26c f1070100	      ALU:	DOT2ADDv	R0.x___ = R0.xxxx, R7.yzzz, R1.zyyy CLAMP
24: c8040500 001ab0b1 d10000fe	      ALU:	DOT2ADDv	R0.__z_ = C510.yyyy, R0.zwww, R0.xyyy
25: c8030505 006db000 e1000500	      ALU:	MULv	R5.xy__ = R0.yxxx, R5.xyyy
26: ac170201 00c0c045 c1060403	      ALU:	MULv	R1.xyz_ = R6.xyzz, R4.xyzz
                          						    	MUL_CONST_1	R2.x___ = C259.x, R5.y
27: ac2c0202 0071ac84 81050403	      ALU:	MULv	R2.__zw = R5.yyyx, C260.xxxy
                          						    	MUL_CONST_1	R2._y__ = C259.y, R5.x
      00004028 00002200     	EXEC_END ADDR(0x28) CNT(0x4) BOOL_ADDR(0x80)
28: c8030500 00c41900 e0020200	      ALU:	ADDv	R0.xy__ = R2.xzzz, R2.ywww
29: 14070500 0015c06c e1030003	      ALU:	MULv	R0.xyz_ = R3.yzww, R0.xyzz
2a: c8070500 00c01bc0 eb010500	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R5.wwww
2b: 0c878000 00c06cc6 a1000a05	      ALU:	MULv	export0.xyz_ = R0.xyzz, C266.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.zzzz	; COLOR
