      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 10006081 1f1ffff8 00004000	      FETCH:	SAMPLE	R6.x___ = R4.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: c8040500 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
06: 58480000 00b1c6c6 2103fe80	      ALU:	MULv	R0.___w = C259.yyyy, C510.zzzz
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
07: c8080506 016cb11b ab060300	      ALU:	MULADDv	R6.___w = -R0.wwww, R6.xxxx, C259.yyyy
08: a8870006 00c0c002 c0050503	      ALU:	ADDv	R6.xyz_ = R5.xyzz, R5.xyzz
                          						    	MUL_CONST_0	R0.___w = C259.w, R0.z
09: c8030500 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
      0254600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: c8030507 00b01bb0 eb000604	      ALU:	MULADDv	R7.xy__ = R4.xyyy, R0.xyyy, R6.wwww
0b: 10308081 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R4.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: b8204081 1f1ffe88 00004000	      FETCH:	SAMPLE	R4.xyz_ = R4.zwz CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 104000e1 1f1ffecf 00004000	      FETCH:	SAMPLE	R0._yw_ = R7.xyx CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: c8010500 006c6c00 2101ff00	   (S)ALU:	MULv	R0.x___ = C257.xxxx, C511.xxxx
0f: c8060500 00c1c100 e0000000	      ALU:	ADDv	R0._yz_ = R0.yyzz, R0.yyzz
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: c8070500 00cdbd00 a000fe00	      ALU:	ADDv	R0.xyz_ = R0.yxzz, C510.yxyy
11: a8170409 00c06c41 81040002	      ALU:	MULv	R9.xyz_ = R4.xyzz, C256.xxxx
                          						    	MUL_CONST_0	R4.x___ = C258.x, R0.y
12: c8080500 046e6e6c d10000fe	      ALU:	DOT2ADDv	R0.___w = C510.xxxx, -R0.zxxx, R0.zxxx
13: a0870004 006cc01b e1040880	      ALU:	MULv	R4.xyz_ = R4.xxxx, R8.xyzz
                          						    	SQRT_IEEE	R0.___w = abs(R0).wwww
14: c8020508 00cfbe00 f0000300	      ALU:	DOT3v	R8._y__ = R0.wxzz, R3.zxyy
15: c8010508 00cfbe00 f0000100	      ALU:	DOT3v	R8.x___ = R0.wxzz, R1.zxyy
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: 14040508 00cfbe6c f0000208	      ALU:	DOT3v	R8.__z_ = R0.wxzz, R2.zxyy
17: 0c880904 00c61b1b e1080201	      ALU:	MULv	R4.___w = R8.zzzz, R2.wwww
                          						    	MUL_PREVs	R9.___w = R1.wwww
18: c80f0504 00000000 e0090400	      ALU:	ADDv	R4 = R9, R4
19: c8010500 00b11b1b eb080304	      ALU:	MULADDv	R0.x___ = R4.wwww, R8.yyyy, R3.wwww
1a: 00100005 0000006c e2050500	      ALU:	ADDs	R0.x___ = R0.xxxx
1b: c8070500 006cc000 e1000800	      ALU:	MULv	R0.xyz_ = R0.xxxx, R8.xyzz
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: 14040500 05c61b6c e0000200	      ALU:	ADDv	R0.__z_ = -R0.zzzz, R2.wwww
1d: 04280000 04b11b1b e0000301	      ALU:	ADDv	R0.___w = -R0.yyyy, R3.wwww
                          						    	ADD_PREVs	R0._y__ = R1.wwww
1e: c8010500 00c3c300 f0000000	      ALU:	DOT3v	R0.x___ = R0.wyzz, R0.wyzz
1f: 58100005 0000006c e2050580	      ALU:	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
20: c8070500 00156c00 e1000000	      ALU:	MULv	R0.xyz_ = R0.yzww, R0.xxxx
21: c80f0500 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
      09506022 00001200     	EXEC ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: 4c140101 001b1bc6 e2000080	      ALU:	MAXv	R1.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
23: c8030501 006d6c1b cb0001fe	      ALU:	MULADDv	R1.xy__ = C510.wwww, R0.yxxx, R1.xxxx
24: 90682021 1f1ffe88 0000c000	      FETCH:	SAMPLE	R2.xyz_ = R1.xyz CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
25: 105810e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R1.xyz_ = R7.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
26: 101800e1 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R7.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
27: c8070503 00c0c600 a101fe00	   (S)ALU:	MULv	R3.xyz_ = R1.xyzz, C510.zzzz
      00005028 00002200     	EXEC_END ADDR(0x28) CNT(0x5) BOOL_ADDR(0x80)
28: c8070501 00c0c000 e1060000	      ALU:	MULv	R1.xyz_ = R6.xyzz, R0.xyzz
29: c8070502 00c0c000 e1030200	      ALU:	MULv	R2.xyz_ = R3.xyzz, R2.xyzz
2a: 14070500 00c0c61b a1020300	      ALU:	MULv	R0.xyz_ = R2.xyzz, C259.zzzz
2b: c8070500 00c0c0c0 eb010400	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R4.xyzz
2c: 0c878000 00c06c1b a1000405	      ALU:	MULv	export0.xyz_ = R0.xyzz, C260.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
