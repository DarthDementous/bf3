//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $latten0       c3       1
//   $lcol          c4       3
//   $wlightpos     c7       3
//   $worldviewpos  c10      1
//   $matvalue      c11      1
//   $fresnelterm   c12      1
//   $apptime       c13      1
//   $compressedhdr c14      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $envmap        s3       1
//   $frametexture  s4       1
//   $noisetex      s5       1
//   $bump          s6       1
//   $diff          s7       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c13
defconst $bump, sampler2d, object, [1, 1], s6
defconst $compressedhdr, float, vector, [1, 2], c14
defconst $diff, sampler2d, object, [1, 1], s7
defconst $envmap, samplercube, object, [1, 1], s3
defconst $frametexture, sampler2d, object, [1, 1], s4
defconst $fresnelterm, float, scalar, [1, 1], c12
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $latten0, float, vector, [1, 4], c3
defconst $lcol, float, matrix_columns, [4, 4], c4-6
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c11
defconst $noisetex, sampler3d, object, [1, 1], s5
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c7-9
defconst $worldviewpos, float, vector, [1, 3], c10
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 7 interpolants: 7, components: 26
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4
dcl_texcoord5 r5.xy
dcl_color_centroid r6

def c252, -1, 10, 0.150000006, 2
def c253, 0.0529999994, 3.29999995, 1.5, -127.5
def c254, 1, 0.5, 0, 255
def c255, 0.298999995, 0.587000012, 0.143999994, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mul r7.z, c13.x, c254.y
/*    9   */     mov r7.xy, r4.xy
               + muls r9.x, r0.ww
/*   10   */     tfetch2D r7.___x, r4.zw, tf0, FetchValidOnly=false
/*   11   */     tfetch2D r9._yw_, r4.xy, tf6, FetchValidOnly=false
/*   12   */     tfetch3D r3.__x_, r7.xyz, tf5, FetchValidOnly=false
/*   13   */     serialize
                 mul r9.w, r1.w, r1.w
               + rcp r8.x, r3.w
/*    1.0 */     exec
/*   14   */     add r7.xyz, r9.xyz, r9.wyz
/*   15   */     mad r7.x, r2.w, r2.w, r7.x
/*   16   */     add r10.xy, r7.yz, c252.x
               + movs r6._, r8.x
/*   17   */     mul r7.yz, r10.xxy, r10.xxy
               + muls_prev r9.x, r3.x
/*   18   */     add r5.zw, -r7.yyyw, c254.x
               + movs r6._, r8.x
/*   19   */     add r7.y, r5.z, -r7.z
               + muls_prev r9.z, r3.y
/*    1.1 */     exec
/*   20   */     add r9.y, -r9.z, c254.x
               + sqrt r10.z, r7_abs.y
/*   21   */     dp3 r12.x, r10.zxy, r0.zxy
/*   22   */     dp3 r12.y, r10.zxy, r1.zxy
/*   23   */     dp3 r12.z, r10.zxy, r2.zxy
               + rsq r12.w, r7_abs.x
/*   24   */     mul r8.xy, r12.zw, r2.w
/*   25   */     mul r3.xw, r12.xw, r0.w
/*    2.0 */     exec
/*   26   */     mul r8.zw, r12.yyyw, r1.w
/*   27   */     add r0.x, r3.x, r8.z
/*   28   */     add r3.y, r0.x, r8.x
               + subsc r3.x, -c254.x, -r3.z
/*   29   */     add r0.xy, r3.xy, r3.zy
/*   30   */     mul r3.xyz, r0.y, r12.zxy
/*   31   */     add r7.x, -r3.y, r0.w
               + mulsc r3.y, c255.w, r0.x
/*    2.1 */     exec
/*   32   */     add r7.z, -r3.x, r2.w
               + movs r6._, -r3.z
/*   33   */     mul r3.yz, r3.y, r10.xxy
               + adds_prev r7.y, r1.w
/*   34   */     mad r9.xy, r3.yz, c253.x, r9.xy
/*   35   */     dp3 r3.y, r7.zxy, r7.zxy
/*   36   */     add r1.z, r0.w, c10.x
               + rsq r0.x, r3_abs.y
/*   37   */     mul r0.xyz, r7.xyz, r0.x
/*    3.0 */     exec
/*   38   */     cube r0, r0.zzxy, r0.yxz
/*   39   */     mov r10.z, r0.w
               + rcp r3.y, r0_abs.z
/*   40   */     mad r10.xy, r0.yx, r3.y, c253.z
/*   41   */     tfetch2D r3.xyz_, r5.xy, tf1
/*   42   */     tfetch2D r7.xyz_, r4.xy, tf2
/*   43   */     tfetch2D r9.xyz_, r9.xy, tf4
/*    3.1 */     exec
/*   44   */     tfetchCube r11, r10.xyz, tf3
/*   45   */     tfetch2D r4, r4.xy, tf7
/*   46   */     serialize
                 add r9.w, -c12.x, c252.w
/*   47   */     mul r5.x, c1.x, c252.y
/*   48   */     add r0.z, r1.w, c10.y
               + movs r6._, r2.w
/*   49   */     mul r5.y, r11.w, c254.w
               + adds_prev r0.w, c10.z
/*    4.0 */     exec
/*   50   */     add r0.xy, r5.yx, c254.yx
               + subsc r10.x, c8.x, r0.z
/*   51   */     frc r2.x, r0.x
               + subsc r10.y, c8.y, r0.z
/*   52   */     add r13.xyz, r6.xyz, r6.xyz
               + mulsc r6.x, c2.x, r0.y
/*   53   */     mul r0.xyz, r9.xyz, c14.y
               + movs r6._, r5.y
/*   54   */     mul r1.xyw, r6.x, r7.xyz
               + adds_prev r6.x, -r2.x
/*   55   */     mad r7.xyz, r3.xzy, c0.x, r1.xwy
/*    4.1 */     exec
/*   56   */     mul r14.xyz, r4.xyz, c255.xyz
               + addsc r6.x, c253.w, r6.x
/*   57   */     sgt r1.x, c254.x, r11.w
               + exp r6.x, r6.x
/*   58   */     mul r6.xyz, r6.x, r11.xyz
               + subsc r10.z, c9.x, r0.w
/*   59   */     cndgt r2.xyz, r1.x, r6.xyz, r11.xyz
/*   60   */     dp3 r6.x, r12.zxy, r12.zxy
               + subsc r10.w, c9.y, r0.w
/*   61   */     cndeq r1.xyw, c254.zx, -r3.w, -r8.yyw
/*    5.0 */     exec
/*   62   */     dp3 r6.y, r1.ywx, r12.zyx
               + subsc r11.x, c7.x, r1.z
/*   63   */     add r11.z, -r6.y, c254.x
               + subsc r11.y, c7.y, r1.z
/*   64   */     mul r1.xyz, r11.xyz, r11.xyz
               + rsq r6.z, r6_abs.x
/*   65   */     dp2add r6.x, r10.yw, r10.yw, r1.y
/*   66   */     dp2add r6.y, r10.xz, r10.xz, r1.x
/*   67   */     mul r8.xyz, r13.xyz, r4.xyz
               + rsq r9.x, r6_abs.y
/*    5.1 */     exec
/*   68   */     dp3 r0.w, r14.zxy, r13.zxy
               + rsq r9.y, r6_abs.x
/*   69   */     max r0.w, r0.w, c252.z
               + log r6.y, r6_abs.y
/*   70   */     mul r8.w, r1.z, r1.z
               + log r6.x, r6_abs.x
/*   71   */     mul r1.xyw, r12.xzy, r6.z
               + mulsc r6.z, c3.x, r6.y
/*   72   */     mul r5.xy, r11.xy, r9.xy
               + mulsc r6.y, c3.z, r6.x
/*   73   */     mul r10, r10.yxzw, r9.yxxy
               + exp r6.x, r6.z
/*    6.0 */     exec
/*   74   */     mul r1.xz, r5.xy, r1.x
               + exp r6.y, r6.y
/*   75   */     dp2add_sat r1.z, r10.xw, r1.wy, r1.z
/*   76   */     dp2add_sat r1.y, r10.yz, r1.wy, r1.x
/*   77   */     mul_sat r6.xy, r6.xy, c3.yw
/*   78   */     add r6.yz, -r6.xxy, c254.x
/*   79   */     min r0.w, r0.w, c254.x
               + mulsc r5.x, c6.x, r6.y
/*    6.1 */     exec
/*   80   */     mul r6.xy, r1.zy, r6.zy
               + mulsc r5.y, c6.y, r6.z
/*   81   */     dp2add r9.z, r6.yx, c5.xy, c254.z
/*   82   */     mul r2.xyz, r0.w, r2.xyz
               + mulsc r1.x, c4.x, r6.y
/*   83   */     mul r1.zw, r5.xxxy, r1.yyyz
               + mulsc r1.y, c4.y, r6.x
/*   84   */     add r9.xy, r1.xz, r1.yw
/*   85   */     mul r1, r8.xzyw, r9
/*    7.0 */     exec
/*   86   */     mad r1.xyz, r8.xzy, r7.xyz, r1.xyz
/*   87   */     addsc_sat r0.w, c12.x, r1.w
/*   88   */     mul r2.xyz, r2.xyz, r0.w
/*   89   */     mul r2.xyz, r2.xyz, c253.y
               + movs r6._, r4.w
/*   90   */     mul r2.xyz, r2.xyz, c11.z
               + muls_prev r6.w, r6.w
/*   91   */     mad r6.xyz, r2.xzy, r3.xzy, r1.xyz
/*    7.1 */     exece
/*   92   */     add r6.xyz, r6.xyz, -r0.xzy
               + movs r6._, r6.w
/*   93   */     mad r6.xyz, r6.xzy, c13.x, r0.xyz
/*   94   */     mul oC0.xyz, r6.xyz, c14.x
               + muls_prev oC0.w, r5.w

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x007f SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xy
// [6] color0 r6.xyzw

