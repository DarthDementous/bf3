      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006002 00001200     	EXEC ADDR(0x2) CNT(0x6) BOOL_ADDR(0x80)
02: c8030102 04b0b000 a0000000	      ALU:	ADDv	R2.xy__ = -R0.xyyy, C256.xyyy
03: c8040100 00b0b06c d10202ff	      ALU:	DOT2ADDv	R0.__z_ = C511.xxxx, R2.xyyy, R2.xyyy
04: a0400001 000000c6 e2010180	      ALU:	SQRT_IEEE	R0.__z_ = abs(R0).zzzz
05: c8040100 00c6b100 a300ff00	      ALU:	MINv	R0.__z_ = R0.zzzz, C511.yyyy
06: c8040100 00c6c61b 8b00feff	      ALU:	MULADDv	R0.__z_ = C511.wwww, R0.zzzz, C510.zzzz
07: c8040100 00c6b1b1 8b00feff	      ALU:	MULADDv	R0.__z_ = C511.yyyy, R0.zzzz, C510.yyyy
      00006008 00001200     	EXEC ADDR(0x8) CNT(0x6) BOOL_ADDR(0x80)
08: c8040100 00c6c66c 8b00fefe	      ALU:	MULADDv	R0.__z_ = C510.xxxx, R0.zzzz, C510.zzzz
09: c0400001 000000c6 e2010100	      ALU:	SIN	R0.__z_ = R0.zzzz
0a: c8080100 00c6b1b1 8b00ffff	      ALU:	MULADDv	R0.___w = C511.yyyy, R0.zzzz, C511.yyyy
0b: b8400001 000000c3 c20101ff	      ALU:	SUB_CONST_0	R0.__z_ = C511.z, R0.w
0c: a8400001 00000042 c2010102	      ALU:	MUL_CONST_0	R0.__z_ = C258.x, R0.z
0d: c8060102 00c6bc00 e1000200	      ALU:	MULv	R2._yz_ = R0.zzzz, R2.xxyy
      0090400e 00002200     	EXEC_END ADDR(0xe) CNT(0x4) BOOL_ADDR(0x80)
0e: a8100201 00000041 e2010101	      ALU:	MUL_CONST_0	R2.x___ = C257.x, R2.y
0f: c8030100 00c4b000 e0020000	      ALU:	ADDv	R0.xy__ = R2.xzzz, R0.xyyy
10: 10080001 1f1ffa88 00004000	      FETCH:	SAMPLE	R0.xyz1 = R0.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: c80f8000 00000000 e1000100	   (S)ALU:	MULv	export0 = R0, R1	; COLOR
