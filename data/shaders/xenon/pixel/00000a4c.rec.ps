      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 1000a0c1 1f1ffff8 00004000	      FETCH:	SAMPLE	R10.x___ = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 14060709 00bcbc1b a1890b02	   (S)ALU:	MULv	R9._yz_ = abs(R9).xxyy, C267.xxyy
07: 04880500 001bc6b1 80030a0a	      ALU:	ADDv	R0.___w = R3.wwww, C266.zzzz
                          						    	ADD_PREVs	R5.___w = C266.yyyy
08: 14080708 00bebe1b f0000001	      ALU:	DOT3v	R8.___w = R0.zxyy, R0.zxyy
09: 04180909 00b11b6c 0103ff0a	      ALU:	MULv	R9.___w = C259.yyyy, C511.wwww
                          						    	ADD_PREVs	R9.x___ = C266.xxxx
0a: c804070b 016cb11b ab0a0309	      ALU:	MULADDv	R11.__z_ = -R9.wwww, R10.xxxx, C259.yyyy
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 4c1c090c 046cacc6 a0090705	      ALU:	ADDv	R12.__zw = -R9.xxxx, C263.xxxy
                          						    	RECIP_IEEE	R9.x___ = R5.zzzz
0c: b8190c09 006cb043 c1090509	      ALU:	MULv	R9.x__w = R9.xxxx, R5.xyyy
                          						    	SUB_CONST_0	R12.x___ = C265.x, R0.w
0d: b8230c0a 041bb083 80050809	      ALU:	ADDv	R10.xy__ = -R5.wwww, C264.xyyy
                          						    	SUB_CONST_0	R12._y__ = C265.y, R0.w
0e: 58830a0b 00b0b01b e10a0a88	      ALU:	MULv	R11.xy__ = R10.xyyy, R10.xyyy
                          						    	RECIPSQ_IEEE	R10.___w = abs(R8).wwww
0f: c8080700 006e6e6c f10c0c0b	      ALU:	DOT2ADDv	R0.___w = R11.xxxx, R12.zxxx, R12.zxxx
10: c8080708 00b3b3b1 f10c0c0b	      ALU:	DOT2ADDv	R8.___w = R11.yyyy, R12.wyyy, R12.wyyy
      05006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 58140b0a 001b1b1b a10a0388	      ALU:	MULv	R10.__z_ = R10.wwww, C259.wwww
                          						    	RECIPSQ_IEEE	R11.x___ = abs(R8).wwww
12: 582c0b0a 0006ac1b e10a0080	      ALU:	MULv	R10.__zw = R10.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R11._y__ = abs(R0).wwww
13: c80f070a 000dc000 e10a0b00	      ALU:	MULv	R10 = R10.yxzw, R11.xyzz
14: c80c0700 0006ac00 e00a0600	      ALU:	ADDv	R0.__zw = R10.zzzw, R6.xxxy
15: b828d0c1 1f1ffff8 00004000	      FETCH:	SAMPLE	R13.x___ = R6.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 1038e0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R14.xyz_ = R6.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      02556017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: b8480001 1f1fffd9 00004000	      FETCH:	SAMPLE	R0.yw__ = R0.zwz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: b818f001 1f1ff688 00004000	      FETCH:	SAMPLE	R15.xyzw = R0.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 30589121 1f1ff7f8 00004000	      FETCH:	SAMPLE	R9.x__w = R9.xwx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 64680121 1f1ff23f 00004000	      FETCH:	SAMPLE	R0.__xy = R9.yzy CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: c8060709 0416bc6c 8b000cff	   (S)ALU:	MULADDv	R9._yz_ = C511.xxxx, -R0.zzww, C268.xxyy
1c: c8040700 001b1b00 e10f0700	      ALU:	MULv	R0.__z_ = R15.wwww, R7.wwww
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: c8070707 00c0c000 e0070700	      ALU:	ADDv	R7.xyz_ = R7.xyzz, R7.xyzz
1e: c8070706 00c06c00 200e0000	      ALU:	ADDv	R6.xyz_ = C270.xyzz, C256.xxxx
1f: c8080700 00c66c00 a505fe00	      ALU:	SETGTv	R0.___w = R5.zzzz, C510.xxxx
20: 14070705 00c0c06c c1070f01	      ALU:	MULv	R5.xyz_ = R7.xyzz, R15.xyzz
21: 0c160707 00bcbcb1 c00000fe	      ALU:	ADDv	R7._yz_ = R0.xxyy, R0.xxyy
                          						    	MUL_PREVs	R7.x___ = C510.yyyy
22: c8070707 00cdbd00 a007ff00	      ALU:	ADDv	R7.xyz_ = R7.yxzz, C511.yxyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: ac86070d 00cccc45 e1070702	      ALU:	MULv	R13._yz_ = R7.xxzz, R7.xxzz
                          						    	MUL_CONST_1	R7.___w = C258.x, R7.y
24: c8070706 001bc0c0 eb070e06	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R7.wwww, R14.xyzz
25: c8030700 04b06c00 a00dff00	      ALU:	ADDv	R0.xy__ = -R13.xyyy, C511.xxxx
26: 08880807 02b1c66b e0000d09	      ALU:	ADDv	R7.___w = R0.yyyy, -R13.zzzz
                          						    	MULs	R8.___w = R9.wwxx
27: a0810709 001b1b1b e1080087	      ALU:	MULv	R9.x___ = R8.wwww, R0.wwww
                          						    	SQRT_IEEE	R7.___w = abs(R7).wwww
28: c8010701 00cfbe00 f0070100	      ALU:	DOT3v	R1.x___ = R7.wxzz, R1.zxyy
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c8020701 00cfbe00 f0070200	      ALU:	DOT3v	R1._y__ = R7.wxzz, R2.zxyy
2a: c8040701 00cfbe00 f0070300	      ALU:	DOT3v	R1.__z_ = R7.wxzz, R3.zxyy
2b: c8080700 00bebe00 f0010100	      ALU:	DOT3v	R0.___w = R1.zxyy, R1.zxyy
2c: 588f0007 00d0ad1b e10c0b80	      ALU:	MULv	R7 = R12.xywz, R11.yxxy
                          						    	RECIPSQ_IEEE	R0.___w = abs(R0).wwww
2d: c8070701 00651b00 e1010000	      ALU:	MULv	R1.xyz_ = R1.yzxx, R0.wwww
2e: c80f0707 000dc100 e1070100	      ALU:	MULv	R7 = R7.yxzw, R1.yyzz
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: c80a0700 00bc6c16 eb0a0107	      ALU:	MULADDv	R0._y_w = R7.zzww, R10.xxyy, R1.xxxx
30: c9080709 00b16c00 e0000700	      ALU:	ADDv	R9.___w = R0.yyyy, R7.xxxx CLAMP
31: 14030701 00c4b01b e1090400	      ALU:	MULv	R1.xy__ = R9.xzzz, R4.xyyy
32: 06250707 006db3b1 e1010907	      ALU:	MULv	R7.x_z_ = R1.yxxx, R9.wyyy
                          						    	ADD_PREVs	R7._y__ = R7.yyyy CLAMP
33: c8020707 00c6b100 e1070700	      ALU:	MULv	R7._y__ = R7.zzzz, R7.yyyy
34: c8040702 006db0c6 910706ff	      ALU:	DOT2ADDv	R2.__z_ = C511.zzzz, R7.yxxx, C262.xyyy
      00006035 00002200     	EXEC_END ADDR(0x35) CNT(0x6) BOOL_ADDR(0x80)
35: ac170301 00c0c045 e0060804	      ALU:	ADDv	R1.xyz_ = R6.xyzz, R8.xyzz
                          						    	MUL_CONST_1	R3.x___ = C260.x, R7.y
36: ac2c0303 0071ac84 a1070504	      ALU:	MULv	R3.__zw = R7.yyyx, C261.xxxy
                          						    	MUL_CONST_1	R3._y__ = C260.y, R7.x
37: c8030702 00c41900 e0030300	      ALU:	ADDv	R2.xy__ = R3.xzzz, R3.ywww
38: 14070707 00c0c0c6 e1050200	      ALU:	MULv	R7.xyz_ = R5.xyzz, R2.xyzz
39: c8070707 00c0c0c0 eb050107	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R5.xyzz, R1.xyzz
3a: 0c878000 00c06c6c a1070d00	      ALU:	MULv	export0.xyz_ = R7.xyzz, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
