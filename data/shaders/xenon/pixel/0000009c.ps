//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $frametexture;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   float $usendotl;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $matvalue      c1       1
//   $suncolour     c2       1
//   $sunintensity  c3       1
//   $usendotl      c4       1
//   $apptime       c5       1
//   $compressedhdr c6       1
//   $lmap          s0       1
//   $spec          s1       1
//   $frametexture  s2       1
//   $noisetex      s3       1
//   $bump          s4       1
//   $diff          s5       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c5
defconst $bump, sampler2d, object, [1, 1], s4
defconst $compressedhdr, float, vector, [1, 2], c6
defconst $diff, sampler2d, object, [1, 1], s5
defconst $frametexture, sampler2d, object, [1, 1], s2
defconst $lmap, sampler2d, object, [1, 1], s0
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c1
defconst $noisetex, sampler3d, object, [1, 1], s3
defconst $spec, sampler2d, object, [1, 1], s1
defconst $suncolour, float, vector, [1, 3], c2
defconst $sunintensity, float, scalar, [1, 1], c3
defconst $usendotl, float, scalar, [1, 1], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=10
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 5 interpolants: 5, components: 18
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1.xyz
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_color_centroid r4

def c252, 0.0529999994, 0.25, 0, 0
def c253, 2, 0.5, 4, 10
def c254, 0, 1, 0.300000012, -1
def c255, 0.0599999987, 0.289999992, 0.150000006, 5


/*    0.0 */     exec
/*    5   */     tfetch2D r6.yw__, r3.xy, tf4, FetchValidOnly=false
/*    6   */     tfetch2D r7.xyz_, r3.xy, tf1
/*    7   */     tfetch2D r5._xyz, r3.zw, tf0
/*    8   */     tfetch2D r9, r3.xy, tf5
/*    9   */     serialize
                 mul r4.w, r9.w, r4.w
/*   10   */     add r8.xyz, r4.zyx, r4.zyx
               + movs r4._, c1.x
/*    0.1 */     exec
/*   11   */     dp3 r4.x, r0.zxy, r0.zxy
               + muls_prev r9.w, c253.w
/*   12   */     dp3 r8.w, r7.zyx, c255.xyz
               + mulsc r10.x, c0.x, r5.y
/*   13   */     mad r6.xy, r6.xy, c253.x, c254.w
/*   14   */     mul r7.xyz, r7.zyx, c253.y
               + mulsc r10.y, c0.x, r5.z
/*   15   */     mul r7.xyz, r7.xyz, r5.wzy
               + mulsc r10.z, c0.x, r5.w
/*   16   */     dp2add r4.y, -r6.yx, r6.yx, c254.y
/*    1.0 */     exec
/*   17   */     mul r9.xyz, r10.xyz, r9.xyz
               + rsq r4.x, r4_abs.x
/*   18   */     mul r5, r9.zyxw, r8
               + sqrt r6.z, r4_abs.y
/*   19   */     mul r0.xyz, r4.x, r0.xyz
               + movs r4.x, r5.w
/*   20   */     dp3_sat r4.z, r0.zxy, r6.zxy
               + addsc r4.x, c254.y, r4.x
/*   21   */     max r4.y, r4.x, c254.x
               + log r4.x, r4.z
/*   22   */     mul r4.x, r4.y, r4.x
/*    1.1 */     exec    // PredicateClean=false
/*   23   */     mul r0.xyz, r7.xyz, c253.z
               + exp r4.x, r4.x
/*   24   */     mul r0.xyz, r0.xyz, r4.x
               + movs_sat r4.x, r1.z
/*   25   */     mul r0.xyz, r0.xyz, c2.zyx
               + setp_ne r4._, c4.x
/*   26   */     mad r0.xyz, r0.zyx, c3.x, r5.zyx
/*    2.0 */ (p0) exec
/*   27   */     (p0) mul r4.y, c3.x, c2.x
/*   28   */     (p0) cndeq r5.xyz, c254.xxy, -r1.zx, r1.y
/*   29   */     (p0) dp3_sat r1.w, r6.zxy, r1.zxy
               + (p0) movs_sat r4.z, -r1.z
/*   30   */     (p0) dp3_sat r0.w, r6.zxy, r5.xyz
               + (p0) movs r4._, r1.w
/*   31   */     (p0) add r4.z, r0.w, -r4.z
               + (p0) adds_prev r4.x, -r4.x
/*   32   */     (p0) mad r4.x, r4.z, c252.y, r4.x
/*    2.1 */ (p0) exec
/*   33   */     (p0) mul r4.y, r4.y, r4.x
/*   34   */     (p0) mul r1.xw, r4.yx, c254.z
/*   35   */     (p0) mul r4.xy, r1.w, c2.yz
/*   36   */     (p0) mul r1.yz, r4.yyx, c3.x
/*   37   */     (p0) add r0.xyz, r0.xyz, r1.xzy
/*    3.0 */     alloc colors
/*    3.1 */     exec
/*   38   */     mul r3.z, c5.x, c253.y
               + rcp r4.y, r2.w
/*   39   */     tfetch3D r4.x___, r3.xyz, tf3, FetchValidOnly=false
/*   40   */     serialize
                 mad r4.x, r4.x, c253.x, c254.w
/*   41   */     mul r4.yz, r4.y, r2.xxy
               + mulsc r4.x, c255.w, r4.x
/*   42   */     mul r1.xy, r4.x, r6.xy
               + subsc r4.x, c254.y, r4.z
/*   43   */     mad r4.xy, r1.xy, c252.x, r4.yx
/*    4.0 */     exece
/*   44   */     tfetch2D r4.xyz_, r4.xy, tf2
/*   45   */     serialize
                 mul r4.xyz, r4.xyz, c6.y
/*   46   */     add r0.xyz, -r4.xyz, r0.xyz
/*   47   */     mad r4.xyz, r0.xyz, c5.x, r4.xyz
/*   48   */     mul r4.xyz, r4.xyz, c6.x
/*   49   */     mov oC0, r4
/*    4.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x001f SamplingPattern 0x000f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyz
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] color0 r4.xyzw

