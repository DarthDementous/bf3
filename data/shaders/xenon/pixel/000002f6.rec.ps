      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506008 00001200     	EXEC ADDR(0x8) CNT(0x6) BOOL_ADDR(0x80)
08: c8030804 00b0b000 e2060600	      ALU:	MAXv	R4.xy__ = R6.xyyy, R6.xyyy
09: c8040804 006cc600 210ffc00	      ALU:	MULv	R4.__z_ = C271.xxxx, C508.zzzz
0a: 101070e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R7.xyx CONST(1) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 90604081 1f1fffc7 00008000	      FETCH:	SAMPLE	R4._x__ = R4.xyz CONST(6) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 1030b0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R11.xyz_ = R6.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 107040c1 1f1ffef9 00004000	      FETCH:	SAMPLE	R4.y_w_ = R6.xyx CONST(7) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0002600e 00001200     	EXEC ADDR(0xe) CNT(0x6) BOOL_ADDR(0x80)
0e: b4880307 006cb183 010dfb0c	   (S)ALU:	MULv	R7.___w = C269.xxxx, C507.yyyy
                          						    	ADD_CONST_1	R3.___w = C268.y, R1.w
0f: bc170d09 00161a43 e102020a	      ALU:	MULv	R9.xyz_ = R2.zzww, R2.zwww
                          						    	SUB_CONST_1	R13.x___ = C266.x, R3.w
10: bc2c0d04 00ecec83 e004040a	      ALU:	ADDv	R4.__zw = R4.xxxz, R4.xxxz
                          						    	SUB_CONST_1	R13._y__ = C266.y, R3.w
11: c8070809 00ca1ab4 eb010109	      ALU:	MULADDv	R9.xyz_ = R9.xzyy, R1.zwzz, R1.zwww
12: 4c180403 0062c01b b00bff05	      ALU:	DOT3v	R3.___w = R11.zyxx, C511.xyzz
                          						    	RECIP_IEEE	R4.x___ = R5.wwww
13: c8080803 001b1b1b cb0703fd	      ALU:	MULADDv	R3.___w = C509.wwww, R7.wwww, R3.wwww
      00006014 00001200     	EXEC ADDR(0x14) CNT(0x6) BOOL_ADDR(0x80)
14: c8070809 00ca1ac0 eb000009	      ALU:	MULADDv	R9.xyz_ = R9.xyzz, R0.zwzz, R0.zwww
15: 58250a0f 006cb0b1 e1040589	      ALU:	MULv	R15.x_z_ = R4.xxxx, R5.xyyy
                          						    	RECIPSQ_IEEE	R10._y__ = abs(R9).yyyy
16: 58420a0f 04c61b6c a00ffd89	      ALU:	ADDv	R15._y__ = -R15.zzzz, C509.wwww
                          						    	RECIPSQ_IEEE	R10.__z_ = abs(R9).xxxx
17: 00170a05 00c0c6c6 a10bfc09	      ALU:	MULv	R5.xyz_ = R11.xyzz, C508.zzzz
                          						    	ADDs	R10.x___ = R9.zzzz
18: b02e0e0b 00fcfc45 c10507fb	      ALU:	MULv	R11._yzw = R5.xxyz, R7.xxyz
                          						    	ADD_CONST_0	R14._y__ = C507.x, R4.y
19: b04b0e09 00c0ca46 c10a02fb	      ALU:	MULv	R9.xy_w = R10.xyzz, R2.zwzz
                          						    	ADD_CONST_0	R14.__z_ = C507.x, R4.z
      0000601a 00001200     	EXEC ADDR(0x1a) CNT(0x6) BOOL_ADDR(0x80)
1a: b0870e0c 00be1647 c10a01fb	      ALU:	MULv	R12.xyz_ = R10.zxyy, R1.zzww
                          						    	ADD_CONST_0	R14.___w = C507.x, R4.w
1b: 140b080a 00c0cab1 e10a000e	      ALU:	MULv	R10.xy_w = R10.xyzz, R0.zwzz
1c: 04110b0e 046c1bb1 e00a0004	      ALU:	ADDv	R14.x___ = -R10.xxxx, R0.wwww
                          						    	ADD_PREVs	R11.x___ = R4.yyyy
1d: 1404080d 011bb1c6 a203fc0c	      ALU:	MAXv	R13.__z_ = R3.wwww, C508.yyyy
1e: 0c8f030b 0000b0c6 a10bfd01	      ALU:	MULv	R11 = R11, C509.xyyy
                          						    	MUL_PREVs	R3.___w = R1.zzzz
1f: c808080f 04b1c61b eb0a0003	      ALU:	MULADDv	R15.___w = R3.wwww, -R10.yyyy, R0.zzzz
      00006020 00001200     	EXEC ADDR(0x20) CNT(0x6) BOOL_ADDR(0x80)
20: 14030804 016c1ab1 e10b0e09	      ALU:	MULv	R4.xy__ = R11.xxxx, R14.zwww
21: 0c160404 00bcc6c6 a104fb02	      ALU:	MULv	R4._yz_ = R4.xxyy, C507.zzzz
                          						    	MUL_PREVs	R4.x___ = R2.zzzz
22: 1407080a 01bfc0b1 e00f040c	      ALU:	ADDv	R10.xyz_ = R15.wxyy, R4.xyzz
23: 04280e0d 046c1b1b a00afd01	      ALU:	ADDv	R13.___w = -R10.xxxx, C509.wwww
                          						    	ADD_PREVs	R14._y__ = R1.wwww
24: 140e080c 01abab6c e10d0d09	      ALU:	MULv	R12._yzw = R13.wwxy, R13.wwxy
25: 04480e0e 00b1b11b e10c0c02	      ALU:	MULv	R14.___w = R12.yyyy, R12.yyyy
                          						    	ADD_PREVs	R14.__z_ = R2.wwww
      00006026 00001200     	EXEC ADDR(0x26) CNT(0x6) BOOL_ADDR(0x80)
26: c8040800 00bebe00 f00e0e00	      ALU:	DOT3v	R0.__z_ = R14.zxyy, R14.zxyy
27: 58210101 046c6cc6 200efc80	      ALU:	ADDv	R1.x___ = -C270.xxxx, C508.xxxx
                          						    	RECIPSQ_IEEE	R1._y__ = abs(R0).zzzz
28: c80f0804 00d0a100 e10e0100	      ALU:	MULv	R4 = R14.xywz, R1.yyxy
29: c80f0801 00ab1d00 f2040400	      ALU:	CUBEv	R1 = R4.wwxy, R4.yxww
2a: 4c44000e 001b1bc6 e2010181	      ALU:	MAXv	R14.__z_ = R1.wwww, R1.wwww
                          						    	RECIP_IEEE	R0.__z_ = abs(R1).zzzz
2b: c803080e 006dc61b cb0100fc	      ALU:	MULADDv	R14.xy__ = C508.wwww, R1.yxxx, R0.zzzz
      0955602c 00001200     	EXEC ADDR(0x2c) CNT(0x6) BOOL_ADDR(0x80)
2c: b80840c1 1f1fffc7 00004000	      FETCH:	SAMPLE	R4._x__ = R6.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2d: 102910c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R17.xyz_ = R6.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2e: 64581141 1f1ffe88 00004000	      FETCH:	SAMPLE	R1.xyz_ = R10.yzy CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2f: 9048f1c1 1f1ff688 0000c000	      FETCH:	SAMPLE	R15.xyzw = R14.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
30: 108900c1 1f1ff688 00004000	      FETCH:	SAMPLE	R16.xyzw = R6.xyx CONST(8) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
31: b0220002 006cb143 0101fb0c	   (S)ALU:	MULv	R2._y__ = C257.xxxx, C507.yyyy
                          						    	ADD_CONST_0	R0._y__ = C268.x, R0.w
      00006032 00001200     	EXEC ADDR(0x32) CNT(0x6) BOOL_ADDR(0x80)
32: c8010800 00bebe00 f0030300	      ALU:	DOT3v	R0.x___ = R3.zxyy, R3.zxyy
33: 581c0006 04b1ac6c a0000980	      ALU:	ADDv	R6.__zw = -R0.yyyy, C265.xxxy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
34: 1417080e 00c0c01b e008080f	      ALU:	ADDv	R14.xyz_ = R8.xyzz, R8.xyzz
                          						    	MAXs	R8.x___ = R15.wwww
35: a8170801 00c0b108 810110ff	      ALU:	MULv	R1.xyz_ = R1.xyzz, C272.yyyy
                          						    	MUL_CONST_0	R8.x___ = C511.w, R8.x
36: b1420000 006cc6c3 e100030c	      ALU:	MULv	R0._y__ = R0.xxxx, R3.zzzz CLAMP
                          						    	ADD_CONST_0	R0.__z_ = C268.z, R2.w
37: b0810000 001b1bc8 45fd0ffc	      ALU:	SETGTv	R0.x___ = C509.wwww, R15.wwww
                          						    	ADD_CONST_0	R0.___w = C508.z, R8.x
      00006038 00001200     	EXEC ADDR(0x38) CNT(0x6) BOOL_ADDR(0x80)
38: 14080800 001b001b e8000010	      ALU:	FRACv	R0.___w = R0.wwww
39: 0c810802 026c1b1b e0080008	      ALU:	ADDv	R2.x___ = R8.xxxx, -R0.wwww
                          						    	MUL_PREVs	R8.___w = R8.wwww
3a: b8130608 00b01a42 8002fd0b	      ALU:	ADDv	R8.xy__ = R2.xyyy, C509.zwww
                          						    	SUB_CONST_0	R6.x___ = C267.x, R0.z
3b: 38180800 00b16c6c a1080208	      ALU:	MULv	R0.___w = R8.yyyy, C258.xxxx
                          						    	EXP_IEEE	R8.x___ = R8.xxxx
3c: b8270608 006cc082 c1080f0b	      ALU:	MULv	R8.xyz_ = R8.xxxx, R15.xyzz
                          						    	SUB_CONST_0	R6._y__ = C267.y, R0.z
3d: 40870002 001bc0b1 e1001100	      ALU:	MULv	R2.xyz_ = R0.wwww, R17.xyzz
                          						    	LOG_IEEE	R0.___w = R0.yyyy
      0000603e 00001200     	EXEC ADDR(0x3e) CNT(0x6) BOOL_ADDR(0x80)
3e: c8070802 00b46cb4 ab070002	      ALU:	MULADDv	R2.xyz_ = R2.xzyy, R7.xzyy, C256.xxxx
3f: c807080a 006cc0c0 ee00080f	      ALU:	CNDGTv	R10.xyz_ = R15.xyzz, R0.xxxx, R8.xyzz
40: c8010808 00b3b31b f106060c	      ALU:	DOT2ADDv	R8.x___ = R12.wwww, R6.wyyy, R6.wyyy
41: c8020808 006e6ec6 f106060c	      ALU:	DOT2ADDv	R8._y__ = R12.zzzz, R6.zxxx, R6.zxxx
42: 5817000f 00c0c0b1 a110fe88	      ALU:	MULv	R15.xyz_ = R16.xyzz, C510.xyzz
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R8).yyyy
43: 58470003 00c0c06c e10e1088	      ALU:	MULv	R3.xyz_ = R14.xyzz, R16.xyzz
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R8).xxxx
      00006044 00001200     	EXEC ADDR(0x44) CNT(0x6) BOOL_ADDR(0x80)
44: 40240808 00bebeb1 f00f0e88	      ALU:	DOT3v	R8.__z_ = R15.zxyy, R14.zxyy
                          						    	LOG_IEEE	R8._y__ = abs(R8).yyyy
45: 40140808 00c6c66c a208ff88	      ALU:	MAXv	R8.__z_ = R8.zzzz, C511.zzzz
                          						    	LOG_IEEE	R8.x___ = abs(R8).xxxx
46: a8480801 00c61b49 8308fd05	      ALU:	MINv	R1.___w = R8.zzzz, C509.wwww
                          						    	MUL_CONST_0	R8.__z_ = C261.x, R8.y
47: a8270009 00c014c8 c10d0005	      ALU:	MULv	R9.xyz_ = R13.xyzz, R0.xzww
                          						    	MUL_CONST_0	R0._y__ = C261.z, R8.x
48: 381f0006 000deec6 e1060008	      ALU:	MULv	R6 = R6.yxzw, R0.zxxz
                          						    	EXP_IEEE	R0.x___ = R8.zzzz
49: 38160808 00bc6cc6 e1090c09	      ALU:	MULv	R8._yz_ = R9.xxyy, R12.xxxx
                          						    	EXP_IEEE	R8.x___ = R9.zzzz
      0000604a 00001200     	EXEC ADDR(0x4a) CNT(0x6) BOOL_ADDR(0x80)
4a: c80c0800 00061bf1 eb060a08	      ALU:	MULADDv	R0.__zw = R8.yyyz, R6.zzzw, R10.wwww
4b: 38270008 00c36cb1 e10b0800	      ALU:	MULv	R8.xyz_ = R11.wyzz, R8.xxxx
                          						    	EXP_IEEE	R0._y__ = R0.yyyy
4c: a8170409 001bc049 c1010a03	      ALU:	MULv	R9.xyz_ = R1.wwww, R10.xyzz
                          						    	MUL_CONST_0	R4.x___ = C259.x, R8.y
4d: c9060806 00611b16 eb060900	      ALU:	MULADDv	R6._yz_ = R0.zzww, R6.yyxx, R9.wwww CLAMP
4e: ab440400 00c66c80 80040e05	      ALU:	ADDv	R0.__z_ = R4.zzzz, C270.xxxx CLAMP
                          						    	MUL_CONST_0	R4.__z_ = C261.y, R0.x CLAMP
4f: aa870409 00c0c601 c1090005	      ALU:	MULv	R9.xyz_ = R9.xyzz, R0.zzzz
                          						    	MUL_CONST_0	R4.___w = C261.w, R0.y CLAMP
      00006050 00001200     	EXEC ADDR(0x50) CNT(0x6) BOOL_ADDR(0x80)
50: a8270400 04151bc8 8004fd03	      ALU:	ADDv	R0.xyz_ = -R4.yzww, C509.wwww
                          						    	MUL_CONST_0	R4._y__ = C259.z, R8.x
51: a8470405 00c0c08a c1090503	      ALU:	MULv	R5.xyz_ = R9.xyzz, R5.xyzz
                          						    	MUL_CONST_0	R4.__z_ = C259.y, R8.z
52: a81b0905 00c01b41 8105fe08	      ALU:	MULv	R5.xy_w = R5.xyzz, C510.wwww
                          						    	MUL_CONST_0	R9.x___ = C264.x, R0.y
53: a8230908 00b2b282 c1060008	      ALU:	MULv	R8.xy__ = R6.zyyy, R0.zyyy
                          						    	MUL_CONST_0	R9._y__ = C264.y, R0.z
54: c8040805 006db0b1 910807fc	      ALU:	DOT2ADDv	R5.__z_ = C508.yyyy, R8.yxxx, C263.xyyy
55: a81b0605 0010c649 81050d06	      ALU:	MULv	R5.xy_w = R5.xyww, C269.zzzz
                          						    	MUL_CONST_0	R6.x___ = C262.x, R8.y
      00006056 00001200     	EXEC ADDR(0x56) CNT(0x6) BOOL_ADDR(0x80)
56: a82c0606 00acf188 c1090606	      ALU:	MULv	R6.__zw = R9.xxxy, R6.yyyz
                          						    	MUL_CONST_0	R6._y__ = C262.y, R8.x
57: c8070808 01b8b4b4 eb050701	      ALU:	MULADDv	R8.xyz_ = -R1.xzyy, R5.xwyy, R7.xzyy
58: 14030805 00c4191b e0060608	      ALU:	ADDv	R5.xy__ = R6.xzzz, R6.ywww
59: c8070808 00b4c0c0 eb030508	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R3.xzyy, R5.xyzz
5a: c8070808 00c06cc0 ab040408	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R4.xyzz, C260.xxxx
5b: c8070808 00c0b4b4 eb030208	      ALU:	MULADDv	R8.xyz_ = R8.xzyy, R3.xyzz, R2.xzyy
      0000205c 00002200     	EXEC_END ADDR(0x5c) CNT(0x2) BOOL_ADDR(0x80)
5c: c8070808 00c06cc0 ab080f01	      ALU:	MULADDv	R8.xyz_ = R1.xyzz, R8.xyzz, C271.xxxx
5d: 0c878000 00c06c6c a1081000	      ALU:	MULv	export0.xyz_ = R8.xyzz, C272.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
