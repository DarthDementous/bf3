//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $suncolour     c3       1
//   $sunintensity  c4       1
//   $invscreensize c5       1
//   $latten0       c6       1
//   $lcol          c7       3
//   $wlightpos     c10      3
//   $worldviewpos  c13      1
//   $matvalue      c14      1
//   $fresnelterm   c15      1
//   $apptime       c16      1
//   $compressedhdr c17      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $spec          s3       1
//   $screenshadmap s4       1
//   $envmap        s5       1
//   $frametexture  s6       1
//   $noisetex      s7       1
//   $bump          s8       1
//   $diff          s9       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c16
defconst $bump, sampler2d, object, [1, 1], s8
defconst $compressedhdr, float, vector, [1, 2], c17
defconst $diff, sampler2d, object, [1, 1], s9
defconst $envmap, samplercube, object, [1, 1], s5
defconst $frametexture, sampler2d, object, [1, 1], s6
defconst $fresnelterm, float, scalar, [1, 1], c15
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c5
defconst $latten0, float, vector, [1, 4], c6
defconst $lcol, float, matrix_columns, [4, 4], c7-9
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c14
defconst $noisetex, sampler3d, object, [1, 1], s7
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $spec, sampler2d, object, [1, 1], s3
defconst $suncolour, float, vector, [1, 3], c3
defconst $sunintensity, float, scalar, [1, 1], c4
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c10-12
defconst $worldviewpos, float, vector, [1, 3], c13
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=18
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=9

// interpolators: 9 interpolants: 9, components: 32
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_texcoord7 r7.xy
dcl_color_centroid r8

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 0, 0, 0, 0
def c251, 2, -127.5, 10, 0
def c252, 4, 3.29999995, 1.5, 1
def c253, 0.5, -1, 0.0529999994, 255
def c254, 0.0599999987, 0.289999992, 0.150000006, 0
def c255, 0.298999995, 0.587000012, 0.143999994, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    9   */     tfetch2D r13._yw_, r6.xy, tf8, FetchValidOnly=false
/*   10   */     serialize
                 mul r14.x, c1.x, c251.z
               + addsc r3.w, c13.z, r2.w
/*   11   */     mul r4.xyz, r2.zzw, r2.zw
               + movs r8._, r0.w
/*   12   */     add r16.xy, -r3.w, c12.xy
               + adds_prev r3.w, c13.x
/*   13   */     mul r14.w, c14.x, c251.z
               + addsc r4.w, c13.y, r1.w
/*   14   */     add r14.yz, -r4.w, c11.xxy
               + subsc r16.z, c10.x, r3.w
/*    1.0 */     exec
/*   15   */     mad r4.xyz, r1.zwz, r1.zw, r4.xzy
/*   16   */     mad r4.xyw, r0.zwz, r0.zw, r4.xyz
/*   17   */     mul r7.zw, r14.yyyz, r14.yyyz
               + subsc r16.w, c10.y, r3.w
/*   18   */     dp2add r3.w, r16.wy, r16.wy, r7.w
/*   19   */     dp2add r4.z, r16.zx, r16.zx, r7.z
/*   20   */     add r10.x, -c15.x, c251.x
               + rsq r10.z, r4_abs.y
/*    1.1 */     exec
/*   21   */     add r10.y, r4.w, r4.w
               + rsq r10.w, r4_abs.x
/*   22   */     mul r11.xyw, r10.yzw, r0.zwz
/*   23   */     add r12.x, -r11.x, r0.w
               + log r7.z, r4_abs.z
/*   24   */     mul r4.xyw, r10.ywz, r2.zzw
/*   25   */     mul r15.xyz, r10.wyz, r1.zzw
/*   26   */     mul r13.x, -r11.y, r0.z
               + log r7.w, r3_abs.w
/*    2.0 */     exec
/*   27   */     mul r0.xy, r7.zw, c6.xz
               + movs r18.x, r6.x
/*   28   */     mul r13.w, -r15.z, r1.z
               + exp r0.x, r0.x
/*   29   */     add r1.xyz, r13.yxz, r13.ywz
               + exp r0.y, r0.y
/*   30   */     mad r0.z, -r4.w, r2.z, r1.y
/*   31   */     mul_sat r0.xy, r0.xy, c6.yw
               + movs r8._, -r15.y
/*   32   */     add r2.xyz, -r0.yxz, c252.w
               + adds_prev r12.y, r1.w
/*    2.1 */     exec
/*   33   */     mul r0.x, r2.z, r2.z
               + movs r8._, -r4.x
/*   34   */     mul r12.w, r0.x, r0.x
               + adds_prev r12.z, r2.w
/*   35   */     dp3 r0.x, r12.zxy, r12.zxy
               + movs r18.y, r6.y
/*   36   */     mul r7.zw, r9_abs.xxxy, c5.xxxy
               + rsq r10.y, r0_abs.x
/*   37   */     mul r10, r12.wxyz, r10.xy
               + movs r8._, c16.x
/*   38   */     cube r0, r10.wwyz, r10.zyw
               + muls_prev r18.z, c253.x
/*    3.0 */     exec
/*   39   */     mov r9.w, r0.w
               + rcp r1.w, r0_abs.z
/*   40   */     mad r9.yz, r0.yyx, r1.w, c252.z
/*   41   */     tfetch2D r9.w___, r7.zw, tf4, FetchValidOnly=false
/*   42   */     tfetch2D r12, r6.xy, tf9, FetchValidOnly=false
/*   43   */     tfetch2D r17.xyz_, r6.xy, tf3, FetchValidOnly=false
/*   44   */     tfetchCube r13, r9.yzw, tf5, FetchValidOnly=false
/*    3.1 */     exec
/*   45   */     tfetch3D r4.x___, r18.xyz, tf7, FetchValidOnly=false
/*   46   */     serialize
                 add r10.yzw, r8.xxyz, r8.xxyz
/*   47   */     dp3 r8.x, r3.zxy, r3.zxy
/*   48   */     dp3 r9.w, r17.zyx, c254.xyz
/*   49   */     mul r18.xyz, r12.xyz, c255.xyz
               + rcp r8.y, r5.w
/*   50   */     mul r0.xy, r8.y, r5.yx
               + rsq r8.x, r8_abs.x
/*    4.0 */     exec
/*   51   */     mul_sat r8.y, r8.x, r3.z
               + rsq r9.y, r4_abs.z
/*   52   */     dp3 r11.x, r18.zxy, r10.wyz
               + rsq r9.z, r3_abs.w
/*   53   */     mul r3, r16.yxzw, r9.zyyz
/*   54   */     mul r14.yzw, r14.yyzw, r9.yyzw
               + subsc r4.w, -c252.w, -r4.x
/*   55   */     mul r0.zw, r14.yyyz, r15.x
               + movs r8.x, r13.w
/*   56   */     add r11.yz, r14.xxw, c252.w
               + mulsc r1.w, c253.w, r8.x
/*    4.1 */     exec
/*   57   */     mad r0.zw, r3.zzzw, r11.w, r0.zzzw
/*   58   */     mad_sat r15.xy, r3.yx, r4.y, r0.zw
/*   59   */     max r15.zw, r11.xxxz, c254.zzzw
               + log r2.w, r8.y
/*   60   */     mul r14.xyz, r15.xyw, r2.yxw
               + movs r8.y, r1.w
/*   61   */     mul r4.yz, r14.xxy, c8.xxy
               + addsc r16.x, c253.x, r8.y
/*   62   */     add r3.zw, r4.yyyw, r4.zzzx
               + addsc r16.y, c253.y, r1.x
/*    5.0 */     exec
/*   63   */     mul r0.z, r3.w, c255.w
               + addsc r16.z, c253.y, r1.z
/*   64   */     mul r9.yz, r0.z, r16.yyz
/*   65   */     mul r9.yzw, r9.xxyz, c253.xxz
               + subsc r0.z, c252.w, r0.x
/*   66   */     add r0.xy, r0.yz, r9.zw
/*   67   */     tfetch2D r9.x___, r6.zw, tf0
/*   68   */     tfetch2D r6.xyz_, r6.xy, tf2
/*    5.1 */     exec
/*   69   */     tfetch2D r5.xyz_, r7.xy, tf1
/*   70   */     tfetch2D r0.x_yz, r0.xy, tf6
/*   71   */     serialize
                 mul r7.xyz, r17.xyz, c253.x
/*   72   */     sgt r3.x, c252.w, r13.w
               + movs r8._, r12.w
/*   73   */     mul r4.yzw, r7.xxyz, r5.xxyz
               + muls_prev r8.z, r8.w
/*   74   */     mul r8.x, r11.y, c2.x
               + movs r8._, r10.y
/*    6.0 */     exec
/*   75   */     mul r8.xyw, r8.x, r6.xyz
               + muls_prev r4.x, r12.x
/*   76   */     mad r11.xyz, r5.xyz, c0.x, r8.xyw
/*   77   */     mul r4.yzw, r4.yyzw, c252.x
               + frcs r8.x, r16.x
/*   78   */     min r0.y, r15.z, c252.w
               + mulsc r8.y, c9.x, r2.y
/*   79   */     add r8.x, r1.w, -r8.x
               + mulsc r8.w, c9.y, r2.x
/*   80   */     mul r6.zw, r8.yyyw, r15.xxxy
               + addsc r1.x, c251.y, r8.x
/*    6.1 */     exec
/*   81   */     mul r6.xy, r14.xy, c7.xy
               + exp r8.x, r14.z
/*   82   */     mul r8.xyw, r4.yzw, r8.x
               + exp r1.x, r1.x
/*   83   */     mul r1.xyz, r1.x, r13.xyz
               + movs r8._, r10.z
/*   84   */     cndgt r1.xyz, r3.x, r1.xyz, r13.xyz
/*   85   */     mul r8.xyw, r8.xyw, c3.xyz
               + muls_prev r4.y, r12.y
/*   86   */     mul r8.xyw, r8.xyw, c4.x
               + movs r8._, r10.w
/*    7.0 */     exec
/*   87   */     mul r1.yzw, r0.y, r1.xxyz
               + muls_prev r4.z, r12.z
/*   88   */     mad r2.xyz, r4.xzy, r11.xzy, r8.xwy
/*   89   */     add_sat r8.x, r10.x, c15.x
               + mulsc r1.x, c17.y, r0.x
/*   90   */     mul r8.xyw, r1.yzw, r8.x
               + mulsc r1.y, c17.y, r0.z
/*   91   */     mul r8.xyw, r8.xyw, r7.xyz
               + mulsc r1.z, c17.y, r0.w
/*   92   */     mul r0.xyz, r8.xyw, c252.y
               + adds r3.x, r6.xy
/*    7.1 */     exec
/*   93   */     add r8.xy, -r9.xy, c252.w
               + adds r3.y, r6.zw
/*   94   */     mul r0.xyz, r0.xyz, c14.z
               + movs r8._, r8.z
/*   95   */     mad r0.xyz, r0.xzy, r5.xzy, -r1.xzy
/*   96   */     mad r0.xyz, r4.xzy, r3.xyz, r0.xyz
/*   97   */     mad r0.xyz, r8.y, r2.xyz, r0.xyz
/*   98   */     mad r0.xyz, r0.xzy, c16.x, r1.xyz
/*    8.0 */     exece
/*   99   */     mul oC0.xyz, r0.xyz, c17.x
               + muls_prev oC0.w, r8.x
/*    8.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x01ff SamplingPattern 0x00ff
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] texcoord7 r7.xy
// [8] color0 r8.xyzw

