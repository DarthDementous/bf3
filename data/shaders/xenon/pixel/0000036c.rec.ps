      05546009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: c8030608 00b0b000 a1880900	      ALU:	MULv	R8.xy__ = abs(R8).xyyy, C265.xyyy
0a: 1008b0a1 1f1ff688 00004000	      FETCH:	SAMPLE	R11.xyzw = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 1028d0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R13.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 1048e0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R14.xyz_ = R5.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: b81850a1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R5.__x_ = R5.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: 103900a1 1f1ffecf 00004000	      FETCH:	SAMPLE	R16._yw_ = R5.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0009600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: 10585101 1f1ff3c7 00004000	      FETCH:	SAMPLE	R5._x_y = R8.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 08141011 016c1b1b 210bff00	   (S)ALU:	MULv	R17.__z_ = C267.xxxx, C511.wwww
                          						    	MULs	R16.x___ = -R0.wwww
11: 08811005 011bb11b a0010c01	      ALU:	ADDv	R5.x___ = R1.wwww, C268.yyyy
                          						    	MULs	R16.___w = -R1.wwww
12: 14080607 001bc61b a0020c00	      ALU:	ADDv	R7.___w = R2.wwww, C268.zzzz
13: c8060608 04bb61b1 8b050afe	      ALU:	MULADDv	R8._yz_ = C510.yyyy, -R5.wwyy, C266.yyxx
14: 048c070a 041bac6c 8007080c	      ALU:	ADDv	R10.__zw = -R7.wwww, C264.xxxy
                          						    	ADD_PREVs	R7.___w = C268.xxxx
      00006015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: bc170a0c 00626247 e0060606	      ALU:	ADDv	R12.xyz_ = R6.zyxx, R6.zyxx
                          						    	SUB_CONST_1	R10.x___ = C262.x, R7.w
16: bc2c0a0f 046cac87 a0050706	      ALU:	ADDv	R15.__zw = -R5.xxxx, C263.xxxy
                          						    	SUB_CONST_1	R10._y__ = C262.y, R7.w
17: 08170809 00626cc6 2012000f	      ALU:	ADDv	R9.xyz_ = C274.zyxx, C256.xxxx
                          						    	MULs	R8.x___ = R15.zzzz
18: 088b0705 00c0c31b e010100f	      ALU:	ADDv	R5.xy_w = R16.xyzz, R16.wyzz
                          						    	MULs	R7.___w = R15.wwww
19: c8080607 0019191b f10a0a07	      ALU:	DOT2ADDv	R7.___w = R7.wwww, R10.ywww, R10.ywww
1a: c8080608 00c4c46c f10a0a08	      ALU:	DOT2ADDv	R8.___w = R8.xxxx, R10.xzzz, R10.xzzz
      0000601b 00001200     	EXEC ADDR(0x1b) CNT(0x6) BOOL_ADDR(0x80)
1b: c8030612 00196c00 a005fd00	      ALU:	ADDv	R18.xy__ = R5.ywww, C509.xxxx
1c: c8080605 061b1b6c eb020205	      ALU:	MULADDv	R5.___w = R5.xxxx, -R2.wwww, -R2.wwww
1d: 58830505 00b0b01b e1121285	      ALU:	MULv	R5.xy__ = R18.xyyy, R18.xyyy
                          						    	RECIPSQ_IEEE	R5.___w = abs(R5).wwww
1e: 58110f08 021b1b1b e1050088	      ALU:	MULv	R8.x___ = R5.wwww, -R0.wwww
                          						    	RECIPSQ_IEEE	R15.x___ = abs(R8).wwww
1f: 58280f08 021b1b1b e1050287	      ALU:	MULv	R8.___w = R5.wwww, -R2.wwww
                          						    	RECIPSQ_IEEE	R15._y__ = abs(R7).wwww
20: bc880911 0062c084 900efffe	      ALU:	DOT3v	R17.___w = R14.zyxx, C511.xyzz
                          						    	SUB_CONST_1	R9.___w = C510.y, R5.x
      00006021 00001200     	EXEC ADDR(0x21) CNT(0x6) BOOL_ADDR(0x80)
21: bc8f070a 0000a086 c10a0ffe	      ALU:	MULv	R10 = R10, R15.xyxy
                          						    	SUB_CONST_1	R7.___w = C510.y, R5.z
22: 14030610 001ab01b e10f0f09	      ALU:	MULv	R16.xy__ = R15.zwww, R15.xyyy
23: 044f050f 01001cb1 e00a0805	      ALU:	ADDv	R15 = R10, R8.xxww
                          						    	ADD_PREVs	R5.__z_ = -R5.yyyy
24: c8030611 021b1bb0 eb050110	      ALU:	MULADDv	R17.xy__ = R16.xyyy, R5.wwww, -R1.wwww
25: a04b1205 00c010c6 e1111185	      ALU:	MULv	R5.xy_w = R17.xyzz, R17.xyww
                          						    	SQRT_IEEE	R18.__z_ = abs(R5).zzzz
26: c8040605 001919b1 f10f0f05	      ALU:	DOT2ADDv	R5.__z_ = R5.yyyy, R15.ywww, R15.ywww
      00006027 00001200     	EXEC ADDR(0x27) CNT(0x6) BOOL_ADDR(0x80)
27: c8080601 00bebe00 f0120200	      ALU:	DOT3v	R1.___w = R18.zxyy, R2.zxyy
28: c8020601 00bebe00 f0120100	      ALU:	DOT3v	R1._y__ = R18.zxyy, R1.zxyy
29: c8040601 00c4c46c f10f0f05	      ALU:	DOT2ADDv	R1.__z_ = R5.xxxx, R15.xzzz, R15.xzzz
2a: 58210001 00bebec6 f0120081	      ALU:	DOT3v	R1.x___ = R18.zxyy, R0.zxyy
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R1).zzzz
2b: 58410000 00bfbfc6 f0010185	      ALU:	DOT3v	R0.x___ = R1.wxyy, R1.wxyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R5).zzzz
2c: c80c0610 00acf100 e1110000	      ALU:	MULv	R16.__zw = R17.xxxy, R0.yyyz
      0000602d 00001200     	EXEC ADDR(0x2d) CNT(0x6) BOOL_ADDR(0x80)
2d: 581f000f 0034c16c e10f0080	      ALU:	MULv	R15 = R15.xzyw, R0.yyzz
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
2e: 14070605 00696c6c c1010001	      ALU:	MULv	R5.xyz_ = R1.ywxx, R0.xxxx
2f: 0c4f0002 00006cc6 c11005fd	      ALU:	MULv	R2 = R16, R5.xxxx
                          						    	MUL_PREVs	R0.__z_ = C509.zzzz
30: c9010600 00b0b2c6 f10f0502	      ALU:	DOT2ADDv	R0.x___ = R2.zzzz, R15.xyyy, R5.zyyy CLAMP
31: c9020600 001ab21b f10f0502	      ALU:	DOT2ADDv	R0._y__ = R2.wwww, R15.zwww, R5.zyyy CLAMP
32: c902060a 0019b2b1 f10a0502	      ALU:	DOT2ADDv	R10._y__ = R2.yyyy, R10.ywww, R5.zyyy CLAMP
      00006033 00001200     	EXEC ADDR(0x33) CNT(0x6) BOOL_ADDR(0x80)
33: c901060a 00c4b26c f10a0502	      ALU:	DOT2ADDv	R10.x___ = R2.xxxx, R10.xzzz, R5.zyyy CLAMP
34: 28170205 00621b6c a10efe0a	      ALU:	MULv	R5.xyz_ = R14.zyxx, C510.wwww
                          						    	SETNEs	R2.x___ = R10.xxxx
35: 28270200 00b460b1 a000fe0a	      ALU:	ADDv	R0.xyz_ = R0.xzyy, C510.xyxx
                          						    	SETNEs	R2._y__ = R10.yyyy
36: a8190008 00c4b041 c1000202	      ALU:	MULv	R8.x__w = R0.xzzz, R2.xyyy
                          						    	MUL_CONST_0	R0.x___ = C258.x, R0.y
37: c8070609 006cc062 eb000d09	      ALU:	MULADDv	R9.xyz_ = R9.zyxx, R0.xxxx, R13.xyzz
38: 40170002 0062c06c e10c0b88	      ALU:	MULv	R2.xyz_ = R12.zyxx, R11.xyzz
                          						    	LOG_IEEE	R0.x___ = abs(R8).xxxx
      00006039 00001200     	EXEC ADDR(0x39) CNT(0x6) BOOL_ADDR(0x80)
39: 40240000 001bb11b a005fe88	      ALU:	ADDv	R0.__z_ = R5.wwww, C510.yyyy
                          						    	LOG_IEEE	R0._y__ = abs(R8).wwww
3a: c8030600 00c6b000 e1000000	      ALU:	MULv	R0.xy__ = R0.zzzz, R0.xyyy
3b: 38180806 001b1b6c e10b0600	      ALU:	MULv	R6.___w = R11.wwww, R6.wwww
                          						    	EXP_IEEE	R8.x___ = R0.xxxx
3c: 38880806 001b1bb1 e1060700	      ALU:	MULv	R6.___w = R6.wwww, R7.wwww
                          						    	EXP_IEEE	R8.___w = R0.yyyy
3d: c80f0600 0094bc00 e1080300	      ALU:	MULv	R0 = R8.xzwy, R3.xxyy
3e: c8090603 0019b000 e1000a00	      ALU:	MULv	R3.x__w = R0.ywww, R10.xyyy
      0000603f 00001200     	EXEC ADDR(0x3f) CNT(0x6) BOOL_ADDR(0x80)
3f: c8030600 00c4b200 e1000800	      ALU:	MULv	R0.xy__ = R0.xzzz, R8.zyyy
40: c8060603 00bcbc00 e0000000	      ALU:	ADDv	R3._yz_ = R0.xxyy, R0.xxyy
41: c80f0600 0000bc00 a1030300	      ALU:	MULv	R0 = R3, C259.xxyy
42: c80f0608 0000bc00 a1030500	      ALU:	MULv	R8 = R3, C261.xxyy
43: c80c0608 00acdb00 e0080800	      ALU:	ADDv	R8.__zw = R8.xxxy, R8.wwwz
44: 001f0803 0000bc6b a1030400	      ALU:	MULv	R3 = R3, C260.xxyy
                          						    	ADDs	R8.x___ = R0.wwxx
      00006045 00001000     	EXEC ADDR(0x45) CNT(0x6)
45: 00290800 006d1ab6 e0030300	      ALU:	ADDv	R0.x__w = R3.yxxx, R3.zwww
                          						    	ADDs	R8._y__ = R0.zzyy
46: 00470305 00c0626c e1050600	      ALU:	MULv	R5.xyz_ = R5.xyzz, R6.zyxx
                          						    	ADDs	R3.__z_ = R0.xxxx
47: 14070600 00c0c0b1 e0090702	      ALU:	ADDv	R0.xyz_ = R9.xyzz, R7.xyzz
48: 0c430603 0019191b e0080800	      ALU:	ADDv	R3.xy__ = R8.ywww, R8.ywww
                          						    	MUL_PREVs	R6.__z_ = R0.wwww
49: 74030606 00c4c46c c102080e	      ALU:	MULv	R6.xy__ = R2.xzzz, R8.xzzz
4a: c8070606 00bec0c0 eb050306	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R5.zxyy, R3.xyzz
      0000104b 00001200     	EXEC ADDR(0x4b) CNT(0x1) BOOL_ADDR(0x80)
4b: c8070606 00c0c0b4 eb020006	      ALU:	MULADDv	R6.xyz_ = R6.xzyy, R2.xyzz, R0.xyzz
      00004010 0000b000     	COND_JMP ADDR(0x10) DIR(0) COND(0)
      0000604c 00001200     	EXEC ADDR(0x4c) CNT(0x6) BOOL_ADDR(0x80)
4c: c8070602 04626200 a0040c00	      ALU:	ADDv	R2.xyz_ = -R4.zyxx, C268.zyxx
4d: c8010600 00b4b400 f0020200	      ALU:	DOT3v	R0.x___ = R2.xzyy, R2.xzyy
4e: 59180000 00bfbe6c b0010d80	      ALU:	DOT3v	R0.___w = R1.wxyy, C269.zxyy CLAMP
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
4f: c8070600 00c06c00 e1020000	      ALU:	MULv	R0.xyz_ = R2.xyzz, R0.xxxx
50: 14010600 01b4bf6c d000010e	      ALU:	DOT3v	R0.x___ = R0.xzyy, R1.wxyy
51: 04210101 006cb1b1 8200fdfe	      ALU:	MAXv	R1.x___ = R0.xxxx, C509.yyyy
                          						    	ADD_PREVs	R1._y__ = C510.yyyy
      00006052 00001200     	EXEC ADDR(0x52) CNT(0x6) BOOL_ADDR(0x80)
52: c8030600 046db100 a001fe00	      ALU:	ADDv	R0.xy__ = -R1.yxxx, C510.yyyy
53: 4c120000 02b1b16c e0000100	      ALU:	ADDv	R0._y__ = R0.yyyy, -R1.yyyy
                          						    	RECIP_IEEE	R0.x___ = R0.xxxx
54: c9040600 00b16c00 e1000000	      ALU:	MULv	R0.__z_ = R0.yyyy, R0.xxxx CLAMP
55: c8030600 04c7c500 a000fe00	      ALU:	ADDv	R0.xy__ = -R0.wzzz, C510.yzzz
56: c8010600 006c6c1b ab000f00	      ALU:	MULADDv	R0.x___ = R0.wwww, R0.xxxx, C271.xxxx
57: 08420000 02b1c6c6 e0000000	      ALU:	ADDv	R0._y__ = R0.yyyy, -R0.zzzz
                          						    	MULs	R0.__z_ = R0.zzzz
      00004058 00001200     	EXEC ADDR(0x58) CNT(0x4) BOOL_ADDR(0x80)
58: c8020600 00c6b100 e1000000	      ALU:	MULv	R0._y__ = R0.zzzz, R0.yyyy
59: c8010600 00b16cb1 d10000fd	      ALU:	DOT2ADDv	R0.x___ = C509.yyyy, R0.yyyy, R0.xxxx
5a: c8070600 006c62b1 8b0010fe	      ALU:	MULADDv	R0.xyz_ = C510.yyyy, R0.xxxx, C272.zyxx
5b: c8070606 00c06200 e1060000	      ALU:	MULv	R6.xyz_ = R6.xyzz, R0.zyxx
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      0000205c 00002200     	EXEC_END ADDR(0x5c) CNT(0x2) BOOL_ADDR(0x80)
5c: c8070606 00c06c00 a1061100	      ALU:	MULv	R6.xyz_ = R6.xyzz, C273.xxxx
5d: c80f8000 00000000 e2060600	      ALU:	MAXv	export0 = R6, R6	; COLOR
