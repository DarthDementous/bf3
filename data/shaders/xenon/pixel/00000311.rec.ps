      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: c8070406 00ca1a00 e1020200	      ALU:	MULv	R6.xyz_ = R2.zwzz, R2.zwww
07: c8070406 00ca1ac0 eb010106	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R1.zwzz, R1.zwww
08: c8070406 00ca1ac0 eb000006	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R0.zwzz, R0.zwww
09: 58810808 00c6c66c e0060686	      ALU:	ADDv	R8.x___ = R6.zzzz, R6.zzzz
                          						    	RECIPSQ_IEEE	R8.___w = abs(R6).xxxx
0a: 584e080c 00fcfcb1 e0040486	      ALU:	ADDv	R12._yzw = R4.xxyz, R4.xxyz
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R6).yyyy
0b: c80b0407 0014ca00 e1080000	      ALU:	MULv	R7.xy_w = R8.xzww, R0.zwzz
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c80b0406 0014ca00 e1080100	      ALU:	MULv	R6.xy_w = R8.xzww, R1.zwzz
0d: c8020408 046c1b00 e0060100	      ALU:	ADDv	R8._y__ = -R6.xxxx, R1.wwww
0e: 14070409 01cf166c e1080207	      ALU:	MULv	R9.xyz_ = R8.wxzz, R2.zzww
0f: 04140808 04b11b1b e0090200	      ALU:	ADDv	R8.__z_ = -R9.yyyy, R2.wwww
                          						    	ADD_PREVs	R8.x___ = R0.wwww
10: c8040404 00bebe00 f0080800	      ALU:	DOT3v	R4.__z_ = R8.zxyy, R8.zxyy
11: 58430404 00b0b0c6 a1850184	      ALU:	MULv	R4.xy__ = abs(R5).xyyy, C257.xyyy
                          						    	RECIPSQ_IEEE	R4.__z_ = abs(R4).zzzz
      05006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8070405 00c0c600 e1080400	      ALU:	MULv	R5.xyz_ = R8.xyzz, R4.zzzz
13: c80f0405 00a6cd00 f2050500	      ALU:	CUBEv	R5 = R5.zzxy, R5.yxzz
14: 4c440408 001b1bc6 e2050585	      ALU:	MAXv	R8.__z_ = R5.wwww, R5.wwww
                          						    	RECIP_IEEE	R4.__z_ = abs(R5).zzzz
15: c8030408 006dc6c6 cb0504fe	      ALU:	MULADDv	R8.xy__ = C510.zzzz, R5.yxxx, R4.zzzz
16: b8185061 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 90388101 1f1ff688 0000c000	      FETCH:	SAMPLE	R8.xyzw = R8.xyz CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 10083061 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 10280081 1f1fffdf 00004000	      FETCH:	SAMPLE	R0._w__ = R4.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 14020404 001bc61b a0020900	   (S)ALU:	ADDv	R4._y__ = R2.wwww, C265.zzzz
1b: 0443040d 04b1b06c 80040809	      ALU:	ADDv	R13.xy__ = -R4.yyyy, C264.xyyy
                          						    	ADD_PREVs	R4.__z_ = C265.xxxx
1c: b4180400 00b11b83 45fd0809	      ALU:	SETGTv	R0.___w = C509.yyyy, R8.wwww
                          						    	ADD_CONST_1	R4.x___ = C265.y, R1.w
1d: b8460d0b 046cbc46 80040706	      ALU:	ADDv	R11._yz_ = -R4.xxxx, C263.xxyy
                          						    	SUB_CONST_0	R13.__z_ = C262.x, R4.z
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: b8820d04 001b1b86 8108ff06	      ALU:	MULv	R4._y__ = R8.wwww, C511.wwww
                          						    	SUB_CONST_0	R13.___w = C262.y, R4.z
1f: b0150406 00c5c545 c10b0bfe	      ALU:	MULv	R6.x_z_ = R11.yzzz, R11.yzzz
                          						    	ADD_CONST_0	R4.x___ = C510.x, R4.y
20: c8080405 00b3b3c6 f10d0d06	      ALU:	DOT2ADDv	R5.___w = R6.zzzz, R13.wyyy, R13.wyyy
21: c8040406 006e6e6c f10d0d06	      ALU:	DOT2ADDv	R6.__z_ = R6.xxxx, R13.zxxx, R13.zxxx
22: 40410a04 006c00c6 e8040086	      ALU:	FRACv	R4.x___ = R4.xxxx
                          						    	LOG_IEEE	R10.__z_ = abs(R6).zzzz
23: 58110a0c 04b1c6c6 e1070086	      ALU:	MULv	R12.x___ = -R7.yyyy, R0.zzzz
                          						    	RECIPSQ_IEEE	R10.x___ = abs(R6).zzzz
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 58210a0b 04b1c61b e1060185	      ALU:	MULv	R11.x___ = -R6.yyyy, R1.zzzz
                          						    	RECIPSQ_IEEE	R10._y__ = abs(R5).wwww
25: c8070401 00c06c00 a1050000	      ALU:	MULv	R1.xyz_ = R5.xyzz, C256.xxxx
26: c8070407 0015c000 e10c0300	      ALU:	MULv	R7.xyz_ = R12.yzww, R3.xyzz
27: c8070401 00c0c000 e1010300	      ALU:	MULv	R1.xyz_ = R1.xyzz, R3.xyzz
28: c8010400 00bec000 b007ff00	      ALU:	DOT3v	R0.x___ = R7.zxyy, C511.xyzz
29: a8810100 006c1b41 8200fdfe	      ALU:	MAXv	R0.x___ = R0.xxxx, C509.wwww
                          						    	MUL_CONST_0	R1.___w = C510.x, R0.y
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 14070406 00b4c9b1 e1010c04	      ALU:	MULv	R6.xyz_ = R1.xzyy, R12.ywzz
2b: 04110400 016cb16c a300fd04	      ALU:	MINv	R0.x___ = R0.xxxx, C509.yyyy
                          						    	ADD_PREVs	R4.x___ = -R4.xxxx
2c: 40860a00 00c1bc1b e10b0a85	      ALU:	MULv	R0._yz_ = R11.yyzz, R10.xxyy
                          						    	LOG_IEEE	R10.___w = abs(R5).wwww
2d: b0130403 001ac4c4 810a02fd	      ALU:	MULv	R3.xy__ = R10.zwww, C258.xzzz
                          						    	ADD_CONST_0	R4.x___ = C509.z, R4.x
2e: 382f040a 000dad6c e10d0a04	      ALU:	MULv	R10 = R13.yxzw, R10.yxxy
                          						    	EXP_IEEE	R4._y__ = R4.xxxx
2f: 3816040c 00161b6c e10a0703	      ALU:	MULv	R12._yz_ = R10.zzww, R7.wwww
                          						    	EXP_IEEE	R4.x___ = R3.xxxx
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: 38270401 00b1c0b1 e1040803	      ALU:	MULv	R1.xyz_ = R4.yyyy, R8.xyzz
                          						    	EXP_IEEE	R4._y__ = R3.yyyy
31: c8070408 001bc0c0 ee000108	      ALU:	CNDGTv	R8.xyz_ = R8.xyzz, R0.wwww, R1.xyzz
32: aa26010b 00c11b84 c1000602	      ALU:	MULv	R11._yz_ = R0.yyzz, R6.wwww
                          						    	MUL_CONST_0	R1._y__ = C258.y, R4.x CLAMP
33: aa4e0100 00414105 c00c0b02	      ALU:	ADDv	R0._yzw = R12.yyzx, R11.yyzx
                          						    	MUL_CONST_0	R1.__z_ = C258.w, R4.y CLAMP
34: c9060400 00616cc1 eb0a0900	      ALU:	MULADDv	R0._yz_ = R0.yyzz, R10.yyxx, R9.xxxx CLAMP
35: c8010401 04c6c61b eb090200	      ALU:	MULADDv	R1.x___ = R0.wwww, -R9.zzzz, R2.zzzz
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: 140f0401 0500b16c 8001fd0b	      ALU:	ADDv	R1 = -R1, C509.yyyy
37: 04860002 00c1bc6c 810105fd	      ALU:	MULv	R2._yz_ = R1.yyzz, C261.xxyy
                          						    	ADD_PREVs	R0.___w = C509.xxxx
38: 08130204 00b2b26c e1000101	      ALU:	MULv	R4.xy__ = R0.zyyy, R1.zyyy
                          						    	MULs	R2.x___ = R1.xxxx
39: c8040400 00c5c51b d10200fe	      ALU:	DOT2ADDv	R0.__z_ = C510.wwww, R2.yzzz, R0.yzzz
3a: a8170801 006cc045 c1000803	      ALU:	MULv	R1.xyz_ = R0.xxxx, R8.xyzz
                          						    	MUL_CONST_0	R8.x___ = C259.x, R4.y
3b: a82c0808 0071ac84 81040403	      ALU:	MULv	R8.__zw = R4.yyyx, C260.xxxy
                          						    	MUL_CONST_0	R8._y__ = C259.y, R4.x
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: 08830700 00c4196c e0080802	      ALU:	ADDv	R0.xy__ = R8.xzzz, R8.ywww
                          						    	MULs	R7.___w = R2.xxxx
3d: c80f0400 00000000 e1070000	      ALU:	MULv	R0 = R7, R0
3e: c8070400 00b41bc0 eb060100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R6.xzyy, R1.wwww
3f: b2800004 00000043 c204040b	      ALU:	ADD_CONST_0	R0.___w = C267.x, R0.w CLAMP
40: c8070401 00c01b00 e1010000	      ALU:	MULv	R1.xyz_ = R1.xyzz, R0.wwww
41: c8070401 00c0b100 a101fe00	      ALU:	MULv	R1.xyz_ = R1.xyzz, C510.yyyy
      00003042 00002200     	EXEC_END ADDR(0x42) CNT(0x3) BOOL_ADDR(0x80)
42: 14070401 00c0c61b a1010a03	      ALU:	MULv	R1.xyz_ = R1.xyzz, C266.zzzz
43: c8070400 00c0c0c0 eb010500	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R5.xyzz
44: 0c878000 00c06c1b a1000c04	      ALU:	MULv	export0.xyz_ = R0.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R4.wwww	; COLOR
