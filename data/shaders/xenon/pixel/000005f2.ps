//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spotlightmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $apptime       c14      1
//   $compressedhdr c15      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $screenshadmap s3       1
//   $spotlightmap  s4       1
//   $envmap        s5       1
//   $frametexture  s6       1
//   $noisetex      s7       1
//   $bump          s8       1
//   $diff          s9       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c14
defconst $bump, sampler2d, object, [1, 1], s8
defconst $compressedhdr, float, vector, [1, 2], c15
defconst $diff, sampler2d, object, [1, 1], s9
defconst $envmap, samplercube, object, [1, 1], s5
defconst $frametexture, sampler2d, object, [1, 1], s6
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $noisetex, sampler3d, object, [1, 1], s7
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spotlightmap, sampler2d, object, [1, 1], s4
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=17
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 29
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4
dcl_texcoord5 r5
dcl_texcoord6 r6.xy
dcl_color_centroid r7

def c252, 2, 10, 0.200000003, 0.150000006
def c253, 0.5, 0.0529999994, 1.5, -1
def c254, -127.5, 1, 255, 3.29999995
def c255, 0.298999995, 0.587000012, 0.143999994, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mov r9.xy, r5.xy
/*    9   */     mul r9.z, c14.x, c253.x
/*   10   */     tfetch2D r13._yw_, r5.xy, tf8, FetchValidOnly=false
/*   11   */     tfetch3D r13.___x, r9.xyz, tf7, FetchValidOnly=false
/*   12   */     serialize
                 add r3.w, r1.w, c11.y
               + movs r7._, r0.w
/*   13   */     add r4.z, r2.w, c11.z
               + adds_prev r6.z, c11.x
/*    1.0 */     exec
/*   14   */     add r13.x, r13.w, -c254.y
               + rcp r6.w, r4.w
/*   15   */     mul r9.xyz, r2.zwz, r2.zw
               + subsc r15.x, c10.x, r4.z
/*   16   */     mul r11.xz, r6.w, r4.xy
               + subsc r15.y, c10.y, r4.z
/*   17   */     add r14.xy, -r6.z, c8.xy
               + subsc r15.z, c9.x, r3.w
/*   18   */     mad r4.xyz, r1.zwz, r1.zw, r9.xyz
/*   19   */     mad r4.xyz, r0.zwz, r0.zw, r4.xyz
/*    1.1 */     exec
/*   20   */     mul r6.zw, r14.xxxy, r14.xxxy
               + subsc r15.w, c9.y, r3.w
/*   21   */     dp2add r4.w, r15.wy, r15.wy, r6.w
/*   22   */     dp2add r6.w, r15.zx, r15.zx, r6.z
/*   23   */     add r11.y, -r11.z, c254.y
               + rsq r10.y, r4_abs.y
/*   24   */     add r10.x, r4.z, r4.z
               + rsq r10.z, r4_abs.x
/*   25   */     mul r9.xyw, r10.xyz, r0.zwz
               + adds r1.x, r13.xw
/*    2.0 */     exec
/*   26   */     mul r11.w, -r9.y, r0.z
               + adds r0.y, r13.yy
/*   27   */     mul r12.xyz, r10.xyz, r1.zwz
               + adds r0.x, r13.zz
/*   28   */     mul r4.x, -r12.y, r1.z
               + rcp r3.w, r3.z
/*   29   */     mul r17.zw, r8_abs.xxxy, c3.xxxy
               + mulsc r14.z, c255.w, r1.x
/*   30   */     mul r17.xy, r3.w, r3.xy
               + addsc r13.z, c253.w, r0.y
/*   31   */     mul r10.xyz, r10.yzx, r2.wz
               + addsc r13.w, c253.w, r0.x
/*    2.1 */     exec
/*   32   */     add r0.y, -r9.x, r0.w
               + rsq r13.x, r6_abs.w
/*   33   */     add r0.z, -r12.x, r1.w
               + rsq r13.y, r4_abs.w
/*   34   */     mul r14, r14.xyz, r13
               + movs r7._, -r10.z
/*   35   */     mul r4.yz, r14.zzw, c253.y
               + adds_prev r0.w, r2.w
/*   36   */     dp3 r0.x, r0.wyz, r0.wyz
/*   37   */     add r8.xyz, r11.wxy, r4.xyz
               + rsq r0.x, r0_abs.x
/*    3.0 */     exec
/*   38   */     mul r0.xyz, r0.yzw, r0.x
/*   39   */     cube r0, r0.zzxy, r0.yxz
/*   40   */     mov r1.z, r0.w
               + rcp r1.x, r0_abs.z
/*   41   */     mad r1.xy, r0.yx, r1.x, c253.z
/*   42   */     tfetch2D r4.xyz_, r6.xy, tf1
/*   43   */     tfetch2D r6.xyz_, r5.xy, tf2
/*    3.1 */     exec
/*   44   */     tfetch2D r0.x___, r5.zw, tf0
/*   45   */     tfetch2D r16.xyz_, r8.yz, tf6
/*   46   */     tfetchCube r11, r1.xyz, tf5
/*   47   */     tfetch2D r1.yzxw, r5.xy, tf9
/*   48   */     tfetch2D r0._w__, r17.zw, tf3
/*   49   */     tfetch2D r12.xw__, r17.xy, tf4
/*    4.0 */     exec
/*   50   */     serialize
                 add r8.w, -c13.x, c252.x
/*   51   */     add r5.xzw, r7.xyyz, r7.xyyz
               + movs r7._, c1.x
/*   52   */     sgt r8.z, r3.z, c252.z
               + muls_prev r5.y, c252.y
/*   53   */     mul r0.w, r11.w, c254.z
               + mulsc r0.z, c253.x, r0.y
/*   54   */     mul r3.yzw, r16.xxyz, c15.y
               + movs r7.y, r1.z
/*   55   */     mul r9.xyz, r5.xzw, r1.zxy
               + mulsc r16.x, c255.x, r7.y
/*    4.1 */     exec
/*   56   */     sgt r3.x, c254.y, r11.w
               + mulsc r16.y, c255.y, r1.x
/*   57   */     add r7.x, r0.w, c253.x
               + mulsc r16.z, c255.z, r1.y
/*   58   */     dp3 r7.y, r16.zxy, r5.wxz
               + frcs r7.x, r7.x
/*   59   */     max r7.z, r7.y, c252.w
               + log r7.y, r6_abs.w
/*   60   */     add r5.x, r0.w, -r7.x
               + log r7.x, r4_abs.w
/*   61   */     min r4.w, r7.z, c254.y
               + mulsc r0.y, c4.x, r7.y
/*    5.0 */     exec
/*   62   */     add r7.yz, r5.xxy, c254.xxy
               + mulsc r0.w, c4.z, r7.x
/*   63   */     mul r13, r15.yxzw, r13.yxxy
               + mulsc r5.w, c2.x, r7.z
/*   64   */     mul r12.zw, r13.zzzw, r12.z
               + exp r5.x, r7.y
/*   65   */     mul r5.xyz, r5.x, r11.xyz
               + exp r0.y, r0.y
/*   66   */     mad r12.zw, r14.xxxy, r9.w, r12.zzzw
/*   67   */     mul r6.xyz, r5.w, r6.xyz
               + exp r0.w, r0.w
/*    5.1 */     exec
/*   68   */     mad r6.xyz, r4.xyz, c0.x, r6.xyz
/*   69   */     mad_sat r10.yz, r13.xxy, r10.y, r12.wwz
/*   70   */     mul_sat r0.yw, r0.yyw, c4.yyw
               + muls r8.y, r12.xy
/*   71   */     cndgt r5.xyz, r3.x, r5.xyz, r11.xyz
/*   72   */     add r0.yw, -r0.wwy, c254.y
               + subsc r3.x, c254.y, r0.x
/*   73   */     mad r2.x, -r10.x, r2.z, r8.x
/*    6.0 */     exec
/*   74   */     add r8.x, -r2.x, c254.y
               + subsc r2.z, c254.y, r0.z
/*   75   */     mul r2.xw, r8.yx, r8.zx
               + movs r7._, r4.w
/*   76   */     mul r10.x, r2.x, r10.z
               + muls_prev r2.x, r5.x
/*   77   */     mul r0.xz, r10.yx, r0.yw
               + movs r7._, r4.w
/*   78   */     mul r11.zw, r0.zzzx, c6.xxxy
               + muls_prev r2.y, r5.y
/*   79   */     mul r6.xyz, r9.xzy, r6.xzy
               + mulsc r11.x, c5.x, r0.z
/*    6.1 */     exec
/*   80   */     mul r5.xy, r0.zy, c7.xy
               + mulsc r11.y, c5.y, r0.x
/*   81   */     add r8.xz, r11.xz, r11.yw
               + muls r9.w, r2.ww
/*   82   */     mad r8.y, r5.y, r10.y, r5.x
/*   83   */     mul r0, r9.xzyw, r8
               + movs r7._, r4.w
/*   84   */     mad r0.xyz, r6.xyz, r2.z, r0.xyz
/*   85   */     add_sat r0.w, r0.w, c13.x
               + muls_prev r2.z, r5.z
/*    7.0 */     exec
/*   86   */     mul r2.xyz, r2.xyz, r0.w
/*   87   */     mul r2.xyz, r2.xyz, c254.w
               + movs r7._, r1.w
/*   88   */     mul r1.xyz, r2.xyz, c12.z
               + muls_prev r7.w, r7.w
/*   89   */     mad r7.xyz, r1.xzy, r4.xzy, r0.xyz
/*   90   */     add r7.xyz, r7.xyz, -r3.ywz
               + movs r7._, r7.w
/*   91   */     mad r7.xyz, r7.xzy, c14.x, r3.yzw
/*    7.1 */     exece
/*   92   */     mul oC0.xyz, r7.xyz, c15.x
               + muls_prev oC0.w, r3.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xy
// [7] color0 r7.xyzw

