      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096003 00001200     	EXEC ADDR(0x3) CNT(0x6) BOOL_ADDR(0x80)
03: 10003081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R3.___x = R4.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
04: c8040500 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
05: 58480000 00b1b1c6 2100ff80	      ALU:	MULv	R0.___w = C256.yyyy, C511.yyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
06: c8080503 011bb11b ab030000	      ALU:	MULADDv	R3.___w = -R0.wwww, R3.wwww, C256.yyyy
07: a8830007 046cb002 80030500	      ALU:	ADDv	R7.xy__ = -R3.xxxx, C261.xyyy
                          						    	MUL_CONST_0	R0.___w = C256.w, R0.z
08: c8030500 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
      00946009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: c8030500 00b01bb0 eb000304	      ALU:	MULADDv	R0.xy__ = R4.xyyy, R0.xyyy, R3.wwww
0a: b8284081 1f1ffe88 00004000	      FETCH:	SAMPLE	R4.xyz_ = R4.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 10180001 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: c8030506 04c6b000 a0030700	   (S)ALU:	ADDv	R6.xy__ = -R3.zzzz, C263.xyyy
0d: c80c0506 04b1ac00 a0030600	      ALU:	ADDv	R6.__zw = -R3.yyyy, C262.xxxy
0e: c8030503 00b0b000 e1070700	      ALU:	MULv	R3.xy__ = R7.xyyy, R7.xyyy
      0000600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: c8020503 00b3b3b1 f1060603	      ALU:	DOT2ADDv	R3._y__ = R3.yyyy, R6.wyyy, R6.wyyy
10: c8010503 006e6e6c f1060603	      ALU:	DOT2ADDv	R3.x___ = R3.xxxx, R6.zxxx, R6.zxxx
11: 40100305 0000006c e2050583	      ALU:	LOG_IEEE	R3.x___ = abs(R3).xxxx
12: 40200305 000000b1 e2050583	      ALU:	LOG_IEEE	R3._y__ = abs(R3).yyyy
13: c8090503 00b0c400 a1030800	      ALU:	MULv	R3.x__w = R3.xyyy, C264.xzzz
14: 38100605 0000006c e2050503	      ALU:	EXP_IEEE	R6.x___ = R3.xxxx
      00006015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: 38270603 00c0c01b e0050503	      ALU:	ADDv	R3.xyz_ = R5.xyzz, R5.xyzz
                          						    	EXP_IEEE	R6._y__ = R3.wwww
16: c9030505 00b01900 a1060800	      ALU:	MULv	R5.xy__ = R6.xyyy, C264.ywww CLAMP
17: c8030505 046d6c00 a005ff00	      ALU:	ADDv	R5.xy__ = -R5.yxxx, C511.xxxx
18: ac270704 00c06c45 81040103	      ALU:	MULv	R4.xyz_ = R4.xyzz, C257.xxxx
                          						    	MUL_CONST_1	R7._y__ = C259.x, R5.y
19: ac170706 00c0c045 c1030002	      ALU:	MULv	R6.xyz_ = R3.xyzz, R0.xyzz
                          						    	MUL_CONST_1	R7.x___ = C258.x, R5.y
1a: ac170804 00c0c084 c1040002	      ALU:	MULv	R4.xyz_ = R4.xyzz, R0.xyzz
                          						    	MUL_CONST_1	R8.x___ = C258.y, R5.x
      0000601b 00002200     	EXEC_END ADDR(0x1b) CNT(0x6) BOOL_ADDR(0x80)
1b: ac240808 006cb184 81050403	      ALU:	MULv	R8.__z_ = R5.xxxx, C260.yyyy
                          						    	MUL_CONST_1	R8._y__ = C259.y, R5.x
1c: ac470702 00c01b45 c1080204	      ALU:	MULv	R2.xyz_ = R8.xyzz, R2.wwww
                          						    	MUL_CONST_1	R7.__z_ = C260.x, R5.y
1d: c8070501 00c01bc0 eb070102	      ALU:	MULADDv	R1.xyz_ = R2.xyzz, R7.xyzz, R1.wwww
1e: 14070500 00c0c01b e1060100	      ALU:	MULv	R0.xyz_ = R6.xyzz, R1.xyzz
1f: c8070500 00c0c0c0 eb040300	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R4.xyzz, R3.xyzz
20: 0c878000 00c06c1b a1000905	      ALU:	MULv	export0.xyz_ = R0.xyzz, C265.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
