//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $avgsampleoffsetsbloom00;
//   float2 $avgsampleoffsetsbloom01;
//   float2 $avgsampleoffsetsbloom02;
//   float2 $avgsampleoffsetsbloom03;
//   float2 $avgsampleoffsetsbloom04;
//   float2 $avgsampleoffsetsbloom05;
//   float2 $avgsampleoffsetsbloom06;
//   float2 $avgsampleoffsetsbloom07;
//   float2 $avgsampleoffsetsbloom08;
//   float2 $avgsampleoffsetsbloom09;
//   float2 $avgsampleoffsetsbloom10;
//   float2 $avgsampleoffsetsbloom11;
//   sampler2D $inputtex;
//   sampler2D $lastbloom;
//   float4 $motionbloom;
//   float4 $sampleweights00;
//   float4 $sampleweights01;
//   float4 $sampleweights02;
//   float4 $sampleweights03;
//   float4 $sampleweights04;
//   float4 $sampleweights05;
//   float4 $sampleweights06;
//   float4 $sampleweights07;
//   float4 $sampleweights08;
//   float4 $sampleweights09;
//   float4 $sampleweights10;
//   float4 $sampleweights11;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   $motionbloom             c0       1
//   $avgsampleoffsetsbloom00 c1       1
//   $avgsampleoffsetsbloom01 c2       1
//   $avgsampleoffsetsbloom02 c3       1
//   $avgsampleoffsetsbloom03 c4       1
//   $avgsampleoffsetsbloom04 c5       1
//   $avgsampleoffsetsbloom05 c6       1
//   $avgsampleoffsetsbloom06 c7       1
//   $avgsampleoffsetsbloom07 c8       1
//   $avgsampleoffsetsbloom08 c9       1
//   $avgsampleoffsetsbloom09 c10      1
//   $avgsampleoffsetsbloom10 c11      1
//   $avgsampleoffsetsbloom11 c12      1
//   $sampleweights00         c13      1
//   $sampleweights01         c14      1
//   $sampleweights02         c15      1
//   $sampleweights03         c16      1
//   $sampleweights04         c17      1
//   $sampleweights05         c18      1
//   $sampleweights06         c19      1
//   $sampleweights07         c20      1
//   $sampleweights08         c21      1
//   $sampleweights09         c22      1
//   $sampleweights10         c23      1
//   $sampleweights11         c24      1
//   $inputtex                s0       1
//   $lastbloom               s1       1
//

// Shader type: pixel 

xps_3_0
defconst $avgsampleoffsetsbloom00, float, vector, [1, 2], c1
defconst $avgsampleoffsetsbloom01, float, vector, [1, 2], c2
defconst $avgsampleoffsetsbloom02, float, vector, [1, 2], c3
defconst $avgsampleoffsetsbloom03, float, vector, [1, 2], c4
defconst $avgsampleoffsetsbloom04, float, vector, [1, 2], c5
defconst $avgsampleoffsetsbloom05, float, vector, [1, 2], c6
defconst $avgsampleoffsetsbloom06, float, vector, [1, 2], c7
defconst $avgsampleoffsetsbloom07, float, vector, [1, 2], c8
defconst $avgsampleoffsetsbloom08, float, vector, [1, 2], c9
defconst $avgsampleoffsetsbloom09, float, vector, [1, 2], c10
defconst $avgsampleoffsetsbloom10, float, vector, [1, 2], c11
defconst $avgsampleoffsetsbloom11, float, vector, [1, 2], c12
defconst $inputtex, sampler2d, object, [1, 1], s0
defconst $lastbloom, sampler2d, object, [1, 1], s1
defconst $motionbloom, float, vector, [1, 4], c0
defconst $sampleweights00, float, vector, [1, 4], c13
defconst $sampleweights01, float, vector, [1, 4], c14
defconst $sampleweights02, float, vector, [1, 4], c15
defconst $sampleweights03, float, vector, [1, 4], c16
defconst $sampleweights04, float, vector, [1, 4], c17
defconst $sampleweights05, float, vector, [1, 4], c18
defconst $sampleweights06, float, vector, [1, 4], c19
defconst $sampleweights07, float, vector, [1, 4], c20
defconst $sampleweights08, float, vector, [1, 4], c21
defconst $sampleweights09, float, vector, [1, 4], c22
defconst $sampleweights10, float, vector, [1, 4], c23
defconst $sampleweights11, float, vector, [1, 4], c24
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=13
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 2 interpolants: 2, components: 6
// UsesMemexport: false
dcl_texcoord r0.xy
dcl_color_centroid r1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.00999999978, 0.25, 0.99000001, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    5   */     add r6.xy, r0.xy, c11.xy
/*    6   */     add r5.xy, r0.xy, c9.xy
/*    7   */     add r5.zw, r0.xxxy, c10.xxxy
               + movs r0._, r0.x
/*    8   */     add r4.xy, r0.xy, c6.xy
               + adds_prev r6.z, c12.x
/*    9   */     add r1.xy, r0.xy, c7.xy
               + movs r0._, r0.x
/*   10   */     add r1.zw, r0.xxxy, c4.xxxy
               + adds_prev r4.z, c5.x
/*    1.0 */     exec
/*   11   */     add r3.xy, r0.xy, c3.xy
               + movs r0._, r0.x
/*   12   */     add r2.xy, r0.xy, c8.xy
               + adds_prev r3.z, c2.x
/*   13   */     add r2.zw, r0.xxxy, c1.xxxy
               + movs r0._, r0.y
/*   14   */     max r2, r2, c255.x
               + adds_prev r3.w, c2.y
/*   15   */     max r3, r3, c255.x
               + movs r0._, r0.y
/*   16   */     max r1, r1, c255.x
               + adds_prev r4.w, c5.y
/*    1.1 */     exec
/*   17   */     max r4, r4, c255.x
               + movs r0._, r0.y
/*   18   */     max r5, r5, c255.x
               + adds_prev r6.w, c12.y
/*   19   */     max r6, r6, c255.x
/*   20   */     min r13, r6, c255.z
/*   21   */     min r11, r5, c255.z
/*   22   */     min r7, r4, c255.z
               + movs r0._, r0.x
/*    2.0 */     exec
/*   23   */     min r8, r1, c255.z
               + muls_prev r1.x, c255.y
/*   24   */     min r4, r3, c255.z
               + movs r0._, r0.y
/*   25   */     min r0, r2.zwxy, c255.z
               + muls_prev r1.y, c255.y
/*   26   */     tfetch2D r1.xyz_, r1.xy, tf1
/*   27   */     tfetch2D r2.xyz_, r0.xy, tf0
/*   28   */     tfetch2D r3.xyz_, r4.zw, tf0
/*    2.1 */     exec
/*   29   */     tfetch2D r4.xyz_, r4.xy, tf0
/*   30   */     tfetch2D r5.xyz_, r8.zw, tf0
/*   31   */     tfetch2D r6.xyz_, r7.zw, tf0
/*   32   */     tfetch2D r7.xyz_, r7.xy, tf0
/*   33   */     tfetch2D r8.xyz_, r8.xy, tf0
/*   34   */     tfetch2D r9.xyz_, r0.zw, tf0
/*    3.0 */     exec
/*   35   */     tfetch2D r10.xyz_, r11.xy, tf0
/*   36   */     tfetch2D r11.xyz_, r11.zw, tf0
/*   37   */     tfetch2D r12.xyz_, r13.xy, tf0
/*   38   */     tfetch2D r0.xyz_, r13.zw, tf0
/*   39   */     serialize
                 mul r0.xyz, r0.xzy, c24.xzy
/*   40   */     mad r0.xyz, r12.xyz, c23.xyz, r0.xzy
/*    3.1 */     exec
/*   41   */     mad r0.xyz, r11.xzy, c22.xzy, r0.xzy
/*   42   */     mad r0.xyz, r10.xyz, c21.xyz, r0.xzy
/*   43   */     mad r0.xyz, r9.xzy, c20.xzy, r0.xzy
/*   44   */     mad r0.xyz, r8.xyz, c19.xyz, r0.xzy
/*   45   */     mad r0.xyz, r7.xzy, c18.xzy, r0.xzy
/*   46   */     mad r0.xyz, r6.xyz, c17.xyz, r0.xzy
/*    4.0 */     exece
/*   47   */     mad r0.xyz, r5.xzy, c16.xzy, r0.xzy
/*   48   */     mad r0.xyz, r4.xyz, c15.xyz, r0.xzy
/*   49   */     mad r0.xyz, r3.xzy, c14.xzy, r0.xzy
/*   50   */     mad r0.xyz, r2.xyz, c13.xyz, r0.xzy
/*   51   */     add r1.xyz, -r0.xzy, r1.xzy
/*   52   */     mad oC0.xyz1, r1.xzy, c0.xyz, r0.xyz
/*    4.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x0003 SamplingPattern 0x0001
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xy
// [1] color0 r1.xyzw

