      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096008 00001200     	EXEC ADDR(0x8) CNT(0x6) BOOL_ADDR(0x80)
08: 10207081 1f1ffecf 00004000	      FETCH:	SAMPLE	R7._yw_ = R4.xyx CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 08880703 001b1b1b e1010102	   (S)ALU:	MULv	R3.___w = R1.wwww, R1.wwww
                          						    	MULs	R7.___w = R2.wwww
0a: c8010507 001b1b1b eb000003	      ALU:	MULADDv	R7.x___ = R3.wwww, R0.wwww, R0.wwww
0b: c8070507 00c0c300 e0070700	      ALU:	ADDv	R7.xyz_ = R7.xyzz, R7.wyzz
0c: c8030508 00c56c00 a007fc00	      ALU:	ADDv	R8.xy__ = R7.yzzz, C508.xxxx
0d: c8080503 046d6db1 d10808fe	      ALU:	DOT2ADDv	R3.___w = C510.yyyy, -R8.yxxx, R8.yxxx
      0000600e 00001200     	EXEC ADDR(0xe) CNT(0x6) BOOL_ADDR(0x80)
0e: a0420807 001b6c1b a0000983	      ALU:	ADDv	R7._y__ = R0.wwww, C265.xxxx
                          						    	SQRT_IEEE	R8.__z_ = abs(R3).wwww
0f: c801050c 00bebe00 f0080000	      ALU:	DOT3v	R12.x___ = R8.zxyy, R0.zxyy
10: c802050c 00bebe00 f0080100	      ALU:	DOT3v	R12._y__ = R8.zxyy, R1.zxyy
11: 58840c0c 00bebe6c f0080287	      ALU:	DOT3v	R12.__z_ = R8.zxyy, R2.zxyy
                          						    	RECIPSQ_IEEE	R12.___w = abs(R7).xxxx
12: c803050d 001a1b00 e10c0200	      ALU:	MULv	R13.xy__ = R12.zwww, R2.wwww
13: c8090507 00181b00 e10c0000	      ALU:	MULv	R7.x__w = R12.xwww, R0.wwww
      00006014 00001200     	EXEC ADDR(0x14) CNT(0x6) BOOL_ADDR(0x80)
14: c80c050d 00311b00 e10c0100	      ALU:	MULv	R13.__zw = R12.yyyw, R1.wwww
15: c8080503 006cc600 e0070d00	      ALU:	ADDv	R3.___w = R7.xxxx, R13.zzzz
16: c8040507 001b6c00 e0030d00	      ALU:	ADDv	R7.__z_ = R3.wwww, R13.xxxx
17: 00480703 001bb1c6 a0010907	      ALU:	ADDv	R3.___w = R1.wwww, C265.yyyy
                          						    	ADDs	R7.__z_ = R7.zzzz
18: c8070508 00c6b400 e1070c00	      ALU:	MULv	R8.xyz_ = R7.zzzz, R12.xzyy
19: c8020501 04c61b00 e0080100	      ALU:	ADDv	R1._y__ = -R8.zzzz, R1.wwww
      0000601a 00001200     	EXEC ADDR(0x1a) CNT(0x6) BOOL_ADDR(0x80)
1a: 140c0506 01acac6c a1860108	      ALU:	MULv	R6.__zw = abs(R6).xxxy, C257.xxxy
1b: 04140101 04b11b1b e0080200	      ALU:	ADDv	R1.__z_ = -R8.yyyy, R2.wwww
                          						    	ADD_PREVs	R1.x___ = R0.wwww
1c: 4c210000 00bebec6 f0010103	      ALU:	DOT3v	R0.x___ = R1.zxyy, R1.zxyy
                          						    	RECIP_IEEE	R0._y__ = R3.zzzz
1d: 58130006 00b1b06c e1000380	      ALU:	MULv	R6.xy__ = R0.yyyy, R3.xyyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
1e: c8070500 00c06c00 e1010000	      ALU:	MULv	R0.xyz_ = R1.xyzz, R0.xxxx
1f: c80f0500 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
      05506020 00001200     	EXEC ADDR(0x20) CNT(0x6) BOOL_ADDR(0x80)
20: 4c140108 001b1bc6 e2000080	      ALU:	MAXv	R8.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
21: c8030508 006d6c1b cb0001fe	      ALU:	MULADDv	R8.xy__ = C510.wwww, R0.yxxx, R1.xxxx
22: 10381081 1f1ff478 00004000	      FETCH:	SAMPLE	R1.x_yz = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
23: b8180081 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R4.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
24: 9068b101 1f1ff688 0000c000	      FETCH:	SAMPLE	R11.xyzw = R8.xyz CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
25: 10084081 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256026 00001200     	EXEC ADDR(0x26) CNT(0x6) BOOL_ADDR(0x80)
26: b84810c1 1f1fffdf 00004000	      FETCH:	SAMPLE	R1._w__ = R6.zwz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
27: 105880c1 1f1ffef8 00004000	      FETCH:	SAMPLE	R8.x_w_ = R6.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
28: 140b0506 00c0c01b e0050502	   (S)ALU:	ADDv	R6.xy_w = R5.xyzz, R5.xyzz
29: 044c050a 04b1acc6 80070609	      ALU:	ADDv	R10.__zw = -R7.yyyy, C262.xxxy
                          						    	ADD_PREVs	R5.__z_ = C265.zzzz
2a: bc140a06 00c6c646 8503fd08	      ALU:	SETGTv	R6.__z_ = R3.zzzz, C509.zzzz
                          						    	SUB_CONST_1	R10.x___ = C264.x, R5.z
2b: bc230a03 041bb086 80030708	      ALU:	ADDv	R3.xy__ = -R3.wwww, C263.xyyy
                          						    	SUB_CONST_1	R10._y__ = C264.y, R5.z
      0000602c 00001200     	EXEC ADDR(0x2c) CNT(0x6) BOOL_ADDR(0x80)
2c: a8170e02 00146c41 8101fd00	      ALU:	MULv	R2.xyz_ = R1.xzww, C509.xxxx
                          						    	MUL_CONST_0	R14.x___ = C256.x, R0.y
2d: a8280e01 00b11b42 45fe0b00	      ALU:	SETGTv	R1.___w = C510.yyyy, R11.wwww
                          						    	MUL_CONST_0	R14._y__ = C256.x, R0.z
2e: a8470e09 0010c043 c1060400	      ALU:	MULv	R9.xyz_ = R6.xyww, R4.xyzz
                          						    	MUL_CONST_0	R14.__z_ = C256.x, R0.w
2f: 1417050e 00c0c01b e10e040b	      ALU:	MULv	R14.xyz_ = R14.xyzz, R4.xyzz
                          						    	MAXs	R5.x___ = R11.wwww
30: ac210500 00bec004 9009ffff	      ALU:	DOT3v	R0.x___ = R9.zxyy, C511.xyzz
                          						    	MUL_CONST_1	R5._y__ = C511.w, R5.x
31: b4150501 00b0b045 c10303fd	      ALU:	MULv	R1.x_z_ = R3.xyyy, R3.xyyy
                          						    	ADD_CONST_1	R5.x___ = C509.x, R5.y
      00006032 00001200     	EXEC ADDR(0x32) CNT(0x6) BOOL_ADDR(0x80)
32: c8080502 00b3b3c6 f10a0a01	      ALU:	DOT2ADDv	R2.___w = R1.zzzz, R10.wyyy, R10.wyyy
33: c8040503 006e6e6c f10a0a01	      ALU:	DOT2ADDv	R3.__z_ = R1.xxxx, R10.zxxx, R10.zxxx
34: 58110105 006c00c6 e8050083	      ALU:	FRACv	R5.x___ = R5.xxxx
                          						    	RECIPSQ_IEEE	R1.x___ = abs(R3).zzzz
35: 58410100 006c1b1b a200fd82	      ALU:	MAXv	R0.x___ = R0.xxxx, C509.wwww
                          						    	RECIPSQ_IEEE	R1.__z_ = abs(R2).wwww
36: 40470307 00b4b8c6 e10e0683	      ALU:	MULv	R7.xyz_ = R14.xzyy, R6.xwyy
                          						    	LOG_IEEE	R3.__z_ = abs(R3).zzzz
37: 40810305 02b16c1b e0050582	      ALU:	ADDv	R5.x___ = R5.yyyy, -R5.xxxx
                          						    	LOG_IEEE	R3.___w = abs(R2).wwww
      00006038 00001200     	EXEC ADDR(0x38) CNT(0x6) BOOL_ADDR(0x80)
38: b4810200 006cb184 8300fefd	      ALU:	MINv	R0.x___ = R0.xxxx, C510.yyyy
                          						    	ADD_CONST_1	R2.___w = C509.y, R5.x
39: 38830205 001ac41b a1030202	      ALU:	MULv	R5.xy__ = R3.zwww, C258.xzzz
                          						    	EXP_IEEE	R2.___w = R2.wwww
3a: 38160503 00bccc6c e1030105	      ALU:	MULv	R3._yz_ = R3.xxyy, R1.xxzz
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
3b: 382b0506 001bc0b1 e1020b05	      ALU:	MULv	R6.xy_w = R2.wwww, R11.xyzz
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
3c: c807050b 001b10c0 ee01060b	      ALU:	CNDGTv	R11.xyz_ = R11.xyzz, R1.wwww, R6.xyww
3d: ae4f010a 000dee84 c10a0102	      ALU:	MULv	R10 = R10.yxzw, R1.zxxz
                          						    	MUL_CONST_1	R1.__z_ = C258.y, R5.x CLAMP
      0000603e 00001200     	EXEC ADDR(0x3e) CNT(0x6) BOOL_ADDR(0x80)
3e: ae810101 00bebe05 d00c0c02	      ALU:	DOT3v	R1.x___ = R12.zxyy, R12.zxyy
                          						    	MUL_CONST_1	R1.___w = C258.w, R5.y CLAMP
3f: 581c0101 04dbb16c a001fe81	      ALU:	ADDv	R1.__zw = -R1.wwwz, C510.yyyy
                          						    	RECIPSQ_IEEE	R1.x___ = abs(R1).xxxx
40: c8070504 00656c00 e10c0100	      ALU:	MULv	R4.xyz_ = R12.yzxx, R1.xxxx
41: c80b0506 03b01b11 6cfe070d	      ALU:	CNDEv	R6.xy_w = -R13.yyww, C510.xyyy, -R7.wwww
42: c8010503 00696200 f0060c00	      ALU:	DOT3v	R3.x___ = R6.ywxx, R12.zyxx
43: ac2c0303 00f16c41 c10304fd	      ALU:	MULv	R3.__zw = R3.yyyz, R4.xxxx
                          						    	MUL_CONST_1	R3._y__ = C509.x, R1.y
      00006044 00001200     	EXEC ADDR(0x44) CNT(0x6) BOOL_ADDR(0x80)
44: c9020508 006fb21b f10a0403	      ALU:	DOT2ADDv	R8._y__ = R3.wwww, R10.wxxx, R4.zyyy CLAMP
45: c9010501 00b2b2c6 f10a0403	      ALU:	DOT2ADDv	R1.x___ = R3.zzzz, R10.zyyy, R4.zyyy CLAMP
46: 08290606 04b0b166 a003fe08	      ALU:	ADDv	R6.x__w = -R3.xyyy, C510.yyyy
                          						    	MULs	R6._y__ = R8.zzxx
47: c8090503 006d6e00 e1060600	      ALU:	MULv	R3.x__w = R6.yxxx, R6.zxxx
48: c8010508 006c6c00 e1030100	      ALU:	MULv	R8.x___ = R3.xxxx, R1.xxxx
49: 14030501 016d1a6c c108010b	      ALU:	MULv	R1.xy__ = R8.yxxx, R1.zwww
      0000604a 00001200     	EXEC ADDR(0x4a) CNT(0x6) BOOL_ADDR(0x80)
4a: 048c080a 0071acb1 810104fc	      ALU:	MULv	R10.__zw = R1.yyyx, C260.xxxy
                          						    	ADD_PREVs	R8.___w = C508.yyyy
4b: ac170a03 006cc041 c1000b03	      ALU:	MULv	R3.xyz_ = R0.xxxx, R11.xyzz
                          						    	MUL_CONST_1	R10.x___ = C259.x, R1.y
4c: ac230a04 00c5b080 81010503	      ALU:	MULv	R4.xy__ = R1.yzzz, C261.xyyy
                          						    	MUL_CONST_1	R10._y__ = C259.y, R1.x
4d: c8040508 00b1b16c eb040804	      ALU:	MULADDv	R8.__z_ = R4.xxxx, R4.yyyy, R8.yyyy
4e: 08830908 00c4191b e00a0a03	      ALU:	ADDv	R8.xy__ = R10.xzzz, R10.ywww
                          						    	MULs	R9.___w = R3.wwww
4f: c80f0501 00000000 e1090800	      ALU:	MULv	R1 = R9, R8
      00006050 00001200     	EXEC ADDR(0x50) CNT(0x6) BOOL_ADDR(0x80)
50: c8070501 00b41bc0 eb070601	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R7.xzyy, R6.wwww
51: b6100005 00000043 c205050b	      ALU:	ADD_CONST_1	R0.x___ = C267.x, R1.w CLAMP
52: c8070503 00c06c00 e1030000	      ALU:	MULv	R3.xyz_ = R3.xyzz, R0.xxxx
53: c8070502 00c0c000 e1030200	      ALU:	MULv	R2.xyz_ = R3.xyzz, R2.xyzz
54: c8070502 00c0c600 a102fe00	      ALU:	MULv	R2.xyz_ = R2.xyzz, C510.zzzz
55: 14070502 00c0c61b a1020a04	      ALU:	MULv	R2.xyz_ = R2.xyzz, C266.zzzz
      00002056 00002200     	EXEC_END ADDR(0x56) CNT(0x2) BOOL_ADDR(0x80)
56: c8070500 00c015c0 eb020001	      ALU:	MULADDv	R0.xyz_ = R1.xyzz, R2.xyzz, R0.yzww
57: 0c878000 00c06c1b a1000c05	      ALU:	MULv	export0.xyz_ = R0.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
      00000000 00000000     	NOP
