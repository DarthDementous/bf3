//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $frametexture;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   float2 $powoffset;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   float4x4 $wlightpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $matvalue      c3       1
//   $suncolour     c4       1
//   $sunintensity  c5       1
//   $invscreensize c6       1
//   $lcol          c7       3
//   $wlightpos     c10      3
//   $latten0       c13      1
//   $powoffset     c14      1
//   $apptime       c15      1
//   $compressedhdr c16      1
//   $lmap          s0       1
//   $incan         s1       1
//   $spec          s2       1
//   $screenshadmap s3       1
//   $frametexture  s4       1
//   $noisetex      s5       1
//   $bump          s6       1
//   $diff          s7       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c15
defconst $bump, sampler2d, object, [1, 1], s6
defconst $compressedhdr, float, vector, [1, 2], c16
defconst $diff, sampler2d, object, [1, 1], s7
defconst $frametexture, sampler2d, object, [1, 1], s4
defconst $incan, sampler2d, object, [1, 1], s1
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c6
defconst $latten0, float, vector, [1, 4], c13
defconst $lcol, float, matrix_columns, [4, 4], c7-9
defconst $lmap, sampler2d, object, [1, 1], s0
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c3
defconst $noisetex, sampler3d, object, [1, 1], s5
defconst $powoffset, float, vector, [1, 2], c14
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spec, sampler2d, object, [1, 1], s2
defconst $suncolour, float, vector, [1, 3], c4
defconst $sunintensity, float, scalar, [1, 1], c5
defconst $wlightpos, float, matrix_columns, [4, 4], c10-12
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=15
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 29
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1.xyz
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_color_centroid r7

def c252, 0, 0, 0, 0
def c253, 0, -1, 4, 0
def c254, 5, 0.5, 1, 10
def c255, 0.0599999987, 0.150000006, 0.289999992, 0.0529999994


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    6   */     mul r1.z, c15.x, c254.y
               + movs r1.x, r6.x
/*    7   */     mul r8.xy, r8_abs.xy, c6.xy
               + movs r1.y, r6.y
/*    8   */     tfetch2D r1.___w, r8.xy, tf3, FetchValidOnly=false
/*    9   */     tfetch2D r10.xyz_, r6.xy, tf2, FetchValidOnly=false
/*   10   */     tfetch2D r8.__yw, r6.xy, tf6, FetchValidOnly=false
/*   11   */     tfetch3D r8.x___, r1.xyz, tf5, FetchValidOnly=false
/*    1.0 */     exec
/*   12   */     serialize
                 mul r9.z, c3.x, c254.w
               + rcp r0.w, r5.w
/*   13   */     mul r5.xy, r0.w, r5.yx
               + subsc r8.y, -c254.z, -r8.x
/*   14   */     add r1.xyz, r8.zyw, r8.zxw
/*   15   */     dp3 r8.z, r10.zxy, c255.xyz
               + addsc r8.x, c253.y, r1.x
/*   16   */     mul r9.xy, r1.yw, c254.xy
               + addsc r8.y, c253.y, r1.z
/*   17   */     mul r15.xzw, r9.zx, r8.zxxy
               + subsc r5.z, c254.z, r5.x
/*    1.1 */     exec
/*   18   */     mad r1.xy, r15.zw, c255.w, r5.yz
/*   19   */     tfetch2D r14.xyz_, r6.xy, tf1
/*   20   */     tfetch2D r12.xyz_, r6.zw, tf0
/*   21   */     tfetch2D r1.x_yz, r1.xy, tf4
/*   22   */     tfetch2D r5, r6.xy, tf7
/*   23   */     serialize
                 mul r15.y, c1.x, c254.w
/*    2.0 */     exec
/*   24   */     add r6.xyz, r7.xyz, r7.xyz
/*   25   */     add r11.xy, -r4.x, c10.xy
/*   26   */     add r11.zw, -r4.y, c11.xxxy
               + movs r7._, -r4.z
/*   27   */     dp3 r1.y, r2.zxy, r2.zxy
               + adds_prev r13.z, c12.x
/*   28   */     dp3 r0.y, r0.zxy, r0.zxy
               + movs r7._, -r4.z
/*   29   */     dp3 r0.x, r3.zxy, r3.zxy
               + adds_prev r13.w, c12.y
/*    2.1 */     exec
/*   30   */     mul r4.xyz, r10.xyz, c254.y
               + rsq r0.x, r0_abs.x
/*   31   */     mul r6.xyz, r6.xyz, r5.xyz
               + rsq r0.y, r0_abs.y
/*   32   */     mul_sat r0.w, r0.x, r3.z
               + rsq r0.x, r1_abs.y
/*   33   */     mul r10.xyz, r10.xyz, r7.xyz
               + movs r7._, r0.x
/*   34   */     mul r8.xyz, r4.xyz, r12.xyz
               + muls_prev_sat r0.x, r2.z
/*   35   */     mad_sat r13.xy, r0.xw, c14.x, c14.y
/*    3.0 */     exec
/*   36   */     mul r4, r13, r13
               + snes r13.x, r2.w
/*   37   */     dp2add r1.y, r11.yw, r11.yw, r4.w
/*   38   */     dp2add r0.x, r11.xz, r11.xz, r4.z
/*   39   */     mul r11.xw, r4.xy, r4.xy
               + log r4.x, r0_abs.x
/*   40   */     add r0.xw, r15.yx, c254.z
               + log r4.y, r1_abs.y
/*   41   */     mul r4.xw, r4.xy, c13.xz
               + snes r13.y, r3.w
/*    3.1 */     exec
/*   42   */     mul r1.y, r0.x, c2.x
               + exp r11.y, r4.x
/*   43   */     mul r4.xyz, r1.y, r14.xyz
               + exp r11.z, r4.w
/*   44   */     mad r4.xyz, r12.xyz, c0.x, r4.xyz
/*   45   */     mul_sat r11.yz, r11.yyz, c13.yyw
               + movs r7._, r0.y
/*   46   */     add r0.xy, -r11.zy, c254.z
               + muls_prev_sat r1.y, r0.z
/*   47   */     mul r8.xyz, r8.xyz, c253.z
               + mulsc r11.z, c8.x, r0.y
/*    4.0 */     exec
/*   48   */     max r10.w, r0.w, c253.x
               + mulsc r11.y, c9.x, r0.y
/*   49   */     mul r0.zw, r11.xxxw, r0.yyyx
               + mulsc r12.y, c9.y, r0.x
/*   50   */     mul r14.xy, r0.zw, c9.xy
               + mulsc r12.z, c8.y, r0.x
/*   51   */     mul r11.xw, r0.yz, c7.x
               + mulsc r14.z, c8.x, r0.z
/*   52   */     mul r12.xw, r0.xw, c7.y
               + mulsc r14.w, c8.y, r0.w
/*   53   */     mul r0, r14.yxzw, r13.yxxy
               + movs r7._, r12.w
/*    4.1 */     exec
/*   54   */     add r0.yz, r0.yyz, r0.xxw
               + muls_prev r0.x, r13.y
/*   55   */     mad r0.x, r11.w, r13.x, r0.x
/*   56   */     mul r3.xyz, r12.xyz, r3.w
               + log r0.w, r1.y
/*   57   */     mad r2.xyz, r11.xzy, r2.w, r3.xzy
/*   58   */     mul r0, r10.wzyx, r0.wyzx
/*   59   */     mad r2.xyz, r6.xzy, r2.xzy, r0.wyz
/*    5.0 */     exec
/*   60   */     add r0.w, -r9.y, c254.z
               + exp r0.x, r0.x
/*   61   */     mul r3.xyz, r8.xyz, r0.x
               + mulsc r0.x, c16.y, r1.x
/*   62   */     mul r3.xyz, r3.xyz, c4.xyz
               + mulsc r0.y, c16.y, r1.z
/*   63   */     mul r3.xyz, r3.xyz, c5.x
               + mulsc r0.z, c16.y, r1.w
/*   64   */     mad r1.xyz, r6.xzy, r4.xzy, r3.xzy
/*   65   */     mad r1.xyz, r0.w, r1.xzy, r2.xzy
/*    5.1 */     exece
/*   66   */     add r1.xyz, r1.xzy, -r0.xzy
               + movs r7._, r5.w
/*   67   */     mad r0.xyz, r1.xzy, c15.x, r0.xyz
/*   68   */     mul oC0.xyz, r0.xyz, c16.x
               + muls_prev oC0.w, r7.w

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyz
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] color0 r7.xyzw

