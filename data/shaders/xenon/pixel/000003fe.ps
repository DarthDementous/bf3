//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   sampler2D $tranpcy;
//   float $usendotl;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $suncolour     c3       1
//   $sunintensity  c4       1
//   $usendotl      c5       1
//   $invscreensize c6       1
//   $latten0       c7       1
//   $lcol          c8       3
//   $wlightpos     c11      3
//   $worldviewpos  c14      1
//   $matvalue      c15      1
//   $fresnelterm   c16      1
//   $apptime       c17      1
//   $compressedhdr c18      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $spec          s3       1
//   $screenshadmap s4       1
//   $envmap        s5       1
//   $frametexture  s6       1
//   $noisetex      s7       1
//   $bump          s8       1
//   $diff          s9       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c17
defconst $bump, sampler2d, object, [1, 1], s8
defconst $compressedhdr, float, vector, [1, 2], c18
defconst $diff, sampler2d, object, [1, 1], s9
defconst $envmap, samplercube, object, [1, 1], s5
defconst $frametexture, sampler2d, object, [1, 1], s6
defconst $fresnelterm, float, scalar, [1, 1], c16
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c6
defconst $latten0, float, vector, [1, 4], c7
defconst $lcol, float, matrix_columns, [4, 4], c8-10
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c15
defconst $noisetex, sampler3d, object, [1, 1], s7
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $spec, sampler2d, object, [1, 1], s3
defconst $suncolour, float, vector, [1, 3], c3
defconst $sunintensity, float, scalar, [1, 1], c4
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $usendotl, float, scalar, [1, 1], c5
defconst $wlightpos, float, matrix_columns, [4, 4], c11-13
defconst $worldviewpos, float, vector, [1, 3], c14
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=17
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=9

// interpolators: 9 interpolants: 9, components: 32
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_texcoord7 r7.xy
dcl_color_centroid r8

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 4, -127.5, 0.0529999994, 10
def c251, 2, -1, 0.300000012, 1.5
def c252, 0, 1, 0.5, 5
def c253, 0.0599999987, 0.150000006, 0.289999992, 3.29999995
def c254, 0.298999995, 0.587000012, 0.143999994, 255
def c255, 0.25, 0, 0, 0


/*    0.0 */     exec
/*   11   */     tfetch2D r15.xyz_, r6.xy, tf2
/*   12   */     tfetch2D r12.x___, r6.zw, tf0, FetchValidOnly=false
/*   13   */     tfetch2D r14.xzy_, r7.xy, tf1
/*   14   */     tfetch2D r10.xyz_, r6.xy, tf3
/*   15   */     tfetch2D r7.yw__, r6.xy, tf8, FetchValidOnly=false
/*   16   */     tfetch2D r11.wxzy, r6.xy, tf9, FetchValidOnly=false
/*    0.1 */     exec
/*   17   */     serialize
                 mul r6.w, c1.x, c250.w
/*   18   */     mul r7.w, c15.x, c250.w
/*   19   */     mul r4.w, r11.x, r8.w
               + adds r3.w, r8.xx
/*   20   */     mul r11.x, r3.w, r11.y
               + movs_sat r8.w, r4.z
/*   21   */     dp3 r7.z, r3.zxy, r3.zxy
               + adds r12.w, r8.zz
/*   22   */     mad r7.xy, r7.xy, c251.x, c251.y
/*    1.0 */     exec
/*   23   */     dp3 r6.z, r10.zxy, c253.xyz
               + adds r13.w, r8.yy
/*   24   */     mul r6.z, r7.w, r6.z
               + rsq r8.x, r7_abs.z
/*   25   */     mul r10.xyz, r10.xyz, c252.z
               + movs r8.y, r11.y
/*   26   */     mul r16.xyz, r8.x, r3.xyz
               + muls r12.y, r7.xx
/*   27   */     mul r13.xyz, r10.zyx, r14.yzx
               + muls r12.z, r7.yy
/*   28   */     add r3.xz, -r12.yx, c252.y
               + mulsc r3.y, c254.x, r8.y
/*    1.1 */     exec
/*   29   */     mul r17.xyz, r13.xyz, c250.x
               + addsc r8.x, c252.y, r6.z
/*   30   */     add r8.z, r3.x, -r12.z
               + addsc r8.y, c252.y, r6.w
/*   31   */     max r12.z, r8.x, c252.x
               + sqrt r7.z, r8_abs.z
/*   32   */     dp3 r12.x, r7.zxy, r2.zxy
               + movs r8.x, r11.w
/*   33   */     dp3 r3.x, r7.zxy, r0.zxy
               + mulsc r13.z, c254.y, r8.x
/*   34   */     dp3_sat r8.z, r16.zxy, r7.zxy
               + movs r8.x, r11.z
/*    2.0 */     exec
/*   35   */     dp3 r13.x, r7.zxy, r1.zxy
               + mulsc r12.y, c2.x, r8.y
/*   36   */     mul r8.y, r13.x, r1.w
               + log r15.w, r8.z
/*   37   */     mad r8.y, r3.x, r0.w, r8.y
/*   38   */     mad r8.y, r12.x, r2.w, r8.y
/*   39   */     mul r15, r12.yyyz, r15
               + mulsc r12.z, c254.z, r8.x
/*   40   */     mad r16.xyz, r14.xzy, c0.x, r15.xyz
/*    2.1 */     exec
/*   41   */     add r8.y, r8.y, r8.y
               + exp r8.x, r15.w
/*   42   */     mad r15.x, -r8.y, r12.x, r2.w
/*   43   */     mad r15.y, -r8.y, r13.x, r1.w
/*   44   */     mad r15.z, -r8.y, r3.x, r0.w
/*   45   */     mul r8.xyz, r17.xyz, r8.x
               + movs r8._, r13.w
/*   46   */     mul r2.xyz, r8.xyz, c3.zyx
               + muls_prev r11.y, r11.w
/*    3.0 */     exec    // PredicateClean=false
/*   47   */     dp3 r8.x, r15.xzy, r15.xzy
               + movs r8._, r12.w
/*   48   */     mul r2.xyz, r2.xyz, c4.x
               + muls_prev r11.z, r11.z
/*   49   */     mad r2.xyz, r11.xyz, r16.xyz, r2.zyx
/*   50   */     mul r1.x, r4.w, r3.z
               + rsq r8.x, r8_abs.x
/*   51   */     mul r8.xyz, r15.zyx, r8.x
               + setp_ne r8._, c5.x
/*    3.1 */ (p0) exec
/*   52   */     (p0) mul r3.z, c4.x, c3.x
/*   53   */     (p0) cndeq r15.xyz, c252.xxy, -r4.zx, r4.y
/*   54   */     (p0) dp3_sat r4.w, r7.zxy, r4.zxy
               + (p0) movs_sat r4.x, -r4.z
/*   55   */     (p0) dp3_sat r4.y, r7.zxy, r15.xyz
               + (p0) movs r8._, r4.w
/*   56   */     (p0) add r4.x, r4.y, -r4.x
               + (p0) adds_prev r8.w, -r8.w
/*   57   */     (p0) mad r4.x, r4.x, c255.x, r8.w
/*    4.0 */ (p0) exec
/*   58   */     (p0) mul r4.y, r3.z, r4.x
/*   59   */     (p0) mul r4.xw, r4.yx, c251.z
/*   60   */     (p0) mul r4.yz, r4.w, c3.yyz
/*   61   */     (p0) mul r4.yz, r4.zzy, c4.x
/*   62   */     (p0) add r2.xyz, r2.xyz, r4.xzy
/*    4.1 */     alloc colors
/*    5.0 */     exec
/*   63   */     mul r6.z, c17.x, c252.z
               + addsc r8.w, c14.x, r0.w
/*   64   */     mul r0.xy, r9_abs.xy, c6.xy
               + movs r12.y, r2.w
/*   65   */     tfetch2D r4.w___, r0.xy, tf4, FetchValidOnly=false
/*   66   */     tfetch3D r0.x___, r6.xyz, tf7, FetchValidOnly=false
/*   67   */     serialize
                 add r16.z, -c16.x, c251.x
               + addsc r0.y, c14.y, r1.w
/*   68   */     add r6.xy, -r0.y, c12.xy
               + addsc r0.y, c14.z, r2.w
/*    5.1 */     exec
/*   69   */     add r6.zw, -r0.y, c13.xxxy
               + rcp r0.y, r5.w
/*   70   */     mul r15.xz, r0.y, r5.xy
               + muls r4.y, r12.xx
/*   71   */     add r17.xy, -r8.w, c11.xy
               + muls r4.z, r12.yy
/*   72   */     cube r8, r8.zzxy, r8.yxz
               + muls r4.w, r12.zw
/*   73   */     mov r3.z, r0.w
               + movs r13.y, r1.w
/*   74   */     mad r4.yzw, r13.xxyz, r13.xxyw, r4.yyzw
/*    6.0 */     exec
/*   75   */     mul r0.yz, r17.xxy, r17.xxy
               + rcp r1.y, r8_abs.z
/*   76   */     mad r9.xy, r8.yx, r1.y, c251.w
/*   77   */     dp2add r1.y, r6.yw, r6.yw, r0.z
/*   78   */     dp2add r8.y, r6.xz, r6.xz, r0.y
/*   79   */     mad r5.xyw, r3.xzy, r3.xzw, r4.yzw
/*   80   */     add r15.y, -r15.z, c252.y
               + rsq r0.y, r5_abs.x
/*    6.1 */     exec
/*   81   */     mul r4.y, r12.x, r0.y
               + rsq r8.x, r5_abs.y
/*   82   */     mul r0.z, r8.x, r3.z
               + rsq r16.x, r8_abs.y
/*   83   */     mul r0.w, r8.x, r13.y
               + log r8.y, r8_abs.y
/*   84   */     mul r8.x, r8.x, r12.y
               + log r8.z, r1_abs.y
/*   85   */     mul r8.yz, r8.yyz, c7.xxz
               + rsq r16.y, r1_abs.y
/*   86   */     mul r8.x, -r8.x, r12.x
               + exp r8.y, r8.y
/*    7.0 */     exec
/*   87   */     mul r6, r6.xywz, r16.xyyx
               + exp r8.z, r8.z
/*   88   */     mad r8.x, -r0.w, r13.x, r8.x
/*   89   */     mad r8.x, -r0.z, r3.x, r8.x
/*   90   */     mul_sat r8.yz, r8.yyz, c7.yyw
               + movs r8._, r13.x
/*   91   */     add r8.xyz, -r8.xyz, c252.y
               + muls_prev r4.z, r0.y
/*   92   */     mul r0.z, r8.x, r8.x
               + movs r8._, r3.x
/*    7.1 */     exec
/*   93   */     mul r17.z, r0.z, r0.z
               + muls_prev r0.z, r0.y
/*   94   */     mul r5.xyz, r17.xyz, r16.xyz
               + mulsc r0.y, c10.x, r8.y
/*   95   */     mul r1.yz, r5.xxy, r0.z
               + mulsc r0.z, c10.y, r8.z
/*   96   */     dp2add_sat r6.x, r6.xw, r4.zy, r1.y
/*   97   */     dp2add_sat r6.y, r6.yz, r4.zy, r1.z
/*   98   */     mul r0.yz, r0.yyz, r6.xxy
               + subsc r0.w, -c252.y, -r0.x
/*    8.0 */     exec
/*   99   */     add r4.yz, r0.wwy, r0.xxz
/*  100   */     mul r0.xy, r4.xy, c252.zw
/*  101   */     mul r0.zw, r0.y, r7.xxxy
               + movs r9.z, r8.w
/*  102   */     mad r8.xw, r0.zw, c250.z, r15.xy
/*  103   */     tfetch2D r1._xyz, r8.xw, tf6
/*  104   */     tfetchCube r3, r9.xyz, tf5
/*    8.1 */     exec
/*  105   */     serialize
                 mul r8.x, r3.w, c254.w
/*  106   */     mul r8.yz, r6.xxy, r8.yyz
               + addsc r8.w, c252.z, r8.x
/*  107   */     mul r1.yzw, r1.yyzw, c18.y
               + frcs r8.w, r8.w
/*  108   */     sgt r0.z, c252.y, r3.w
               + movs r8._, r8.x
/*  109   */     max r2.w, r5.w, c253.y
               + adds_prev r8.x, -r8.w
/*  110   */     add_sat r8.w, r5.z, c16.x
               + addsc r0.w, c250.y, r8.x
/*    9.0 */     exec
/*  111   */     min r8.x, r2.w, c252.y
               + exp r0.w, r0.w
/*  112   */     mul r5.xyz, r0.w, r3.xyz
/*  113   */     cndgt r3.xyz, r0.z, r5.xyz, r3.xyz
/*  114   */     mul r3.xyz, r8.x, r3.xyz
/*  115   */     mul r3.xyz, r3.xyz, r8.w
/*  116   */     mul r3.xyz, r3.xyz, r10.xyz
/*    9.1 */     exec
/*  117   */     mul r3.xyz, r3.xyz, c253.w
               + mulsc r5.x, c8.x, r8.y
/*  118   */     mul r5.zw, r8.yyyz, c9.xxxy
               + mulsc r5.y, c8.y, r8.z
/*  119   */     mul r3.xyz, r3.xyz, c15.z
               + movs r8._, r11.z
/*  120   */     add r8.xz, r5.xz, r5.yw
               + muls_prev r8.y, r4.z
/*  121   */     mul r8.xz, r11.xy, r8.xz
               + subsc r8.w, c252.y, r0.x
/*  122   */     mad r8.xyz, r8.w, r2.xzy, r8.xyz
/*   10.0 */     exece
/*  123   */     mad r8.xyz, r3.xyz, r14.xzy, r8.xzy
/*  124   */     add r8.xyz, r8.xzy, -r1.ywz
/*  125   */     mad r8.xyz, r8.xzy, c17.x, r1.yzw
/*  126   */     mul r1.yzw, r8.xxyz, c18.x
/*  127   */     mov oC0, r1.yzwx
/*   10.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x01ff SamplingPattern 0x00ff
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] texcoord7 r7.xy
// [8] color0 r8.xyzw

