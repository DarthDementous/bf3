//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $ambientcolour;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4x4 $lcol;
//   float $lightningintensity;
//   float3 $rimlightcolour;
//   float $rimlightfade;
//   float $rimlightwidth;
//   sampler2D $screenshadmap;
//   float4 $shadowmask;
//   sampler2D $spotlightmap;
//   float3 $sundir;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   $lightningintensity c0       1
//   $incanglow          c1       1
//   $incanflag          c2       1
//   $lcol               c3       3
//   $wlightpos          c6       3
//   $invscreensize      c9       1
//   $shadowmask         c10      1
//   $worldviewpos       c11      1
//   $sundir             c12      1
//   $rimlightwidth      c13      1
//   $rimlightfade       c14      1
//   $rimlightcolour     c15      1
//   $compressedhdr      c16      1
//   $ambientcolour      c17      1
//   $diff               s0       1
//   $tranpcy            s1       1
//   $incan              s2       1
//   $bump               s3       1
//   $spotlightmap       s4       1
//   $screenshadmap      s5       1
//

// Shader type: pixel 

xps_3_0
defconst $ambientcolour, float, vector, [1, 4], c17
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c16
defconst $diff, sampler2d, object, [1, 1], s0
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c9
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lightningintensity, float, scalar, [1, 1], c0
defconst $rimlightcolour, float, vector, [1, 3], c15
defconst $rimlightfade, float, scalar, [1, 1], c14
defconst $rimlightwidth, float, scalar, [1, 1], c13
defconst $screenshadmap, sampler2d, object, [1, 1], s5
defconst $shadowmask, float, vector, [1, 4], c10
defconst $spotlightmap, sampler2d, object, [1, 1], s4
defconst $sundir, float, vector, [1, 3], c12
defconst $tranpcy, sampler2d, object, [1, 1], s1
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=15
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=9

// interpolators: 9 interpolants: 9, components: 34
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_color_centroid r7
dcl_color1_centroid r8.xyz

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.200000003, 10, 0, 0
def c255, 3, 1, -1, 0


/*    0.0 */     exec
/*    7   */     mul r10.xy, r9_abs.xy, c9.xy
               + rcp r8.w, r4.z
/*    8   */     mul r9.xy, r8.w, r4.xy
/*    9   */     tfetch2D r12._x__, r6.zw, tf1
/*   10   */     tfetch2D r15.xyz_, r6.xy, tf2
/*   11   */     tfetch2D r14.__xw, r9.xy, tf4
/*   12   */     tfetch2D r11.y__w, r6.xy, tf3
/*    0.1 */     exec
/*   13   */     tfetch2D r9, r6.xy, tf0
/*   14   */     tfetch2D r6.xy__, r10.xy, tf5
/*   15   */     serialize
                 mul r12.x, c1.x, c254.y
               + addsc r4.w, c11.y, r1.w
/*   16   */     mad r11.yz, -r6.yyx, c10.yyx, c255.y
/*   17   */     mul r7.w, r9.w, r7.w
               + movs r7._, r0.w
/*   18   */     add r10.xyz, c17.zyx, c0.x
               + adds_prev r8.w, c11.x
/*    1.0 */     exec
/*   19   */     add r13.zw, -r8.w, c6.xxxy
               + addsc r1.w, c11.z, r2.w
/*   20   */     sgt r8.w, r4.z, c254.x
               + subsc r13.x, c8.x, r1.w
/*   21   */     add r14.xy, -r4.w, c7.xy
               + adds r12.z, r11.xx
/*   22   */     mul r6.xyw, r14.xyz, r14.xyw
               + adds r12.w, r11.ww
/*   23   */     add r4.xyz, r12.zxw, c255.zyz
               + subsc r13.y, c8.y, r1.w
/*   24   */     dp2add r1.w, r13.zx, r13.zx, r6.x
/*    1.1 */     exec
/*   25   */     dp2add r4.w, r13.wy, r13.wy, r6.y
/*   26   */     mul r12.zw, r4.xxxz, r4.xxxz
               + mulsc r6.z, c2.x, r4.y
/*   27   */     mad r6.xyz, r6.z, r15.xyz, r10.zyx
/*   28   */     add r10.xw, -r12.yz, c255.y
/*   29   */     mul r7.w, r7.w, r10.x
               + rsq r12.x, r4_abs.w
/*   30   */     add r10.xyz, r7.zyx, r7.zyx
/*    2.0 */     exec
/*   31   */     add r7.x, r10.w, -r12.w
               + rsq r12.y, r1_abs.w
/*   32   */     mul r11.xw, r14.yx, r12.xy
               + sqrt r4.w, r7_abs.x
/*   33   */     dp3 r1.w, r4.wxz, r2.zxy
/*   34   */     dp3 r1.y, r4.wxz, r1.zxy
/*   35   */     dp3 r1.x, r4.wxz, r0.zxy
/*   36   */     dp3 r7.x, r1.wxy, r1.wxy
/*    2.1 */     exec
/*   37   */     mul r0, r13.xywz, r12.yxxy
               + rsq r7.x, r7_abs.x
/*   38   */     mul r7.xyz, r1.ywx, r7.x
/*   39   */     mul r0, r0.yzwx, r7.yzzy
               + movs r7._, r6.w
/*   40   */     mad r7.xz, r11.xw, r7.x, r0.yz
/*   41   */     add_sat r11.w, r7.x, r0.x
               + muls_prev r11.x, r8.w
/*   42   */     mul r7.xy, r11.xy, r3.xy
               + movs r7._, r7.z
/*    3.0 */     exec
/*   43   */     mul r7.xz, r7.yx, r11.wz
               + adds_prev_sat r7.y, r0.w
/*   44   */     mul r7.y, r7.z, r7.y
/*   45   */     dp2add r0.w, r7.yx, c5.xy, c255.w
/*   46   */     mul r2.xyz, r10.zyx, r9.xyz
               + mulsc r3.x, c4.x, r7.y
/*   47   */     mul r3.zw, r7.yyyx, c3.xxxy
               + mulsc r3.y, c4.y, r7.x
/*   48   */     add r0.xyz, r6.xyz, r8.xyz
               + adds r7.x, r3.xy
/*    3.1 */     exec    // PredicateClean=false
/*   49   */     mul r0, r2.xyz, r0
               + adds r7.y, r3.zw
/*   50   */     add r7.z, r0.z, r0.w
               + setp_gt r7._, c13.x
/*   51   */     mad r7.xy, r2.xy, r7.yx, r0.xy
/*    4.0 */ (!p0) jmp L12
/*    4.1 */     exec
/*   52   */     add r2.xyz, -r5.zyx, c11.zyx
/*   53   */     dp3 r0.x, r2.xzy, r2.xzy
/*   54   */     dp3_sat r0.w, r1.wxy, c12.zxy
               + rsq r0.x, r0_abs.x
/*   55   */     mul r0.xyz, r2.xyz, r0.x
/*   56   */     dp3 r0.x, r0.xzy, r1.wxy
               + movs r7._, -c13.x
/*   57   */     max r1.x, r0.x, c255.w
               + adds_prev r1.y, c255.y
/*    5.0 */     exec
/*   58   */     add r0.xy, -r1.yx, c255.y
/*   59   */     add r0.y, r0.y, -r1.y
               + rcp r0.x, r0.x
/*   60   */     mul_sat r0.z, r0.y, r0.x
/*   61   */     add r0.xy, -r0.wz, c255.yx
/*   62   */     mad r0.x, r0.x, c14.x, r0.w
/*   63   */     add r0.y, r0.y, -r0.z
               + muls r0.z, r0.zz
/*    5.1 */     exec
/*   64   */     mul r0.y, r0.z, r0.y
/*   65   */     dp2add r0.x, r0.y, r0.x, c255.w
/*   66   */     mad r0.xyz, r0.x, c15.zyx, c255.y
/*   67   */     mul r7.xyz, r7.xyz, r0.zyx
       label L12
/*    6.0 */     alloc colors
/*    6.1 */     exece
/*   68   */     mul r7.xyz, r7.xyz, c16.x
/*   69   */     mov oC0, r7

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x01ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] color0 r7.xyzw
// [8] color1 r8.xyz

