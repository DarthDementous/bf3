//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $apptime       c14      1
//   $compressedhdr c15      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $screenshadmap s3       1
//   $envmap        s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c14
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c15
defconst $diff, sampler2d, object, [1, 1], s8
defconst $envmap, samplercube, object, [1, 1], s4
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=16
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=7

// interpolators: 7 interpolants: 7, components: 26
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4
dcl_texcoord5 r5.xy
dcl_color_centroid r6

def c252, 0.0529999994, 10, 0.150000006, 2
def c253, 0.5, 1.5, 0, -1
def c254, -127.5, 1, 255, 3.29999995
def c255, 0.298999995, 0.587000012, 0.143999994, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     mul r9.z, c14.x, c253.x
/*    8   */     mov r9.xy, r4.xy
               + addsc r5.z, c11.y, r1.w
/*    9   */     tfetch2D r8.__yw, r4.xy, tf7, FetchValidOnly=false
/*   10   */     tfetch3D r8.x___, r9.xyz, tf6, FetchValidOnly=false
/*   11   */     serialize
                 add r5.w, r2.w, c11.z
               + movs r6._, r0.w
/*   12   */     mul r9.xyz, r2.zwz, r2.zw
               + adds_prev r3.z, c11.x
/*    1.0 */     exec
/*   13   */     add r16.xy, -r5.w, c10.xy
               + subsc r8.y, -c254.y, -r8.x
/*   14   */     add r10.xy, -r5.z, c9.xy
               + rcp r5.z, r3.w
/*   15   */     mad r11.xyz, r1.zwz, r1.zw, r9.xyz
/*   16   */     mul r9.xy, r5.z, r3.yx
               + subsc r16.z, c8.x, r3.z
/*   17   */     mad r11.xyz, r0.zwz, r0.zw, r11.xyz
/*   18   */     mul r3.xw, r10.xy, r10.xy
               + subsc r16.w, c8.y, r3.z
/*    1.1 */     exec
/*   19   */     dp2add r3.w, r16.wy, r16.wy, r3.w
/*   20   */     dp2add r5.w, r16.zx, r16.zx, r3.x
/*   21   */     add r12.x, r11.z, r11.z
               + rsq r12.y, r11_abs.y
/*   22   */     add r3.xyz, r8.yzw, r8.xzw
               + rsq r12.w, r11_abs.x
/*   23   */     mul r13.xyz, r12.wxy, r0.zzw
               + subsc r9.z, c254.y, r9.x
/*   24   */     mul r11.xyz, r12.wxy, r2.zzw
               + mulsc r10.z, c255.w, r3.x
/*    2.0 */     exec
/*   25   */     add r8.x, -r13.y, r0.w
               + addsc r12.z, c253.w, r3.y
/*   26   */     mul r14.xyz, r12.wxy, r1.zzw
               + addsc r12.w, c253.w, r3.z
/*   27   */     add r8.y, -r14.y, r1.w
               + rsq r12.x, r5_abs.w
/*   28   */     add r8.z, -r11.y, r2.w
               + rsq r12.y, r3_abs.w
/*   29   */     mul r7.xy, r7_abs.xy, c3.xy
               + movs r6._, -r14.z
/*   30   */     mul r15, r10.xyz, r12
               + muls_prev r1.x, r1.z
/*    2.1 */     exec
/*   31   */     mad r9.w, -r13.z, r0.z, r1.x
/*   32   */     mul r0.zw, r15.zzzw, c252.x
               + movs r6._, -r11.z
/*   33   */     dp3 r0.x, r8.zxy, r8.zxy
               + muls_prev r0.y, r2.z
/*   34   */     add r10.xzw, r9.wyyz, r0.yzzw
               + rsq r0.x, r0_abs.x
/*   35   */     mul r0.xyz, r8.xyz, r0.x
/*   36   */     cube r0, r0.zzxy, r0.yxz
/*    3.0 */     exec
/*   37   */     mov r1.z, r0.w
               + rcp r1.x, r0_abs.z
/*   38   */     mad r1.xy, r0.yx, r1.x, c253.y
/*   39   */     tfetch2D r9.x___, r4.zw, tf0
/*   40   */     tfetch2D r3.xyz_, r5.xy, tf1
/*   41   */     tfetch2D r5.xyz_, r4.xy, tf2
/*   42   */     tfetch2D r0.x_yz, r10.zw, tf5
/*    3.1 */     exec
/*   43   */     tfetchCube r8, r1.xyz, tf4
/*   44   */     tfetch2D r1, r4.xy, tf8
/*   45   */     tfetch2D r0._w__, r7.xy, tf3
/*   46   */     serialize
                 add r2.w, -c13.x, c252.w
/*   47   */     add r4.xyz, r6.xyz, r6.xyz
/*   48   */     mul r9.yzw, r1.xxyz, c255.xxyz
               + movs r6._, c1.x
/*    4.0 */     exec
/*   49   */     mul r7.xyz, r4.xyz, r1.xyz
               + muls_prev r2.y, c252.y
/*   50   */     sgt r2.z, c254.y, r8.w
               + movs r6.x, r8.w
/*   51   */     dp3 r6.z, r9.wyz, r4.zxy
               + mulsc r2.x, c254.z, r6.x
/*   52   */     add r6.x, r2.x, c253.x
               + mulsc r10.y, c253.x, r0.y
/*   53   */     frc r6.x, r6.x
               + log r6.y, r5_abs.w
/*   54   */     add r2.x, r2.x, -r6.x
               + log r6.x, r3_abs.w
/*    4.1 */     exec
/*   55   */     max r0.y, r6.z, c252.z
               + mulsc r5.w, c4.x, r6.y
/*   56   */     add r6.yz, r2.xxy, c254.xxy
               + mulsc r3.w, c4.z, r6.x
/*   57   */     mul r12, r16.yxzw, r12.yxxy
               + mulsc r4.w, c2.x, r6.z
/*   58   */     mul r2.xy, r15.xy, r14.x
               + exp r6.x, r6.y
/*   59   */     mul r4.xyz, r6.x, r8.xyz
               + exp r6.x, r5.w
/*   60   */     mad r2.xy, r12.zw, r13.x, r2.xy
/*    5.0 */     exec
/*   61   */     mul r5.xyz, r4.w, r5.xyz
               + exp r6.y, r3.w
/*   62   */     mad r5.xyz, r3.xyz, c0.x, r5.xyz
/*   63   */     mad_sat r2.xy, r12.yx, r11.x, r2.xy
/*   64   */     cndgt r8.xyz, r2.z, r4.xyz, r8.xyz
/*   65   */     min r2.z, r0.y, c254.y
               + mulsc_sat r9.y, c4.y, r6.x
/*   66   */     add r4.xw, -r10.xy, c254.y
               + mulsc_sat r9.z, c4.w, r6.y
/*    5.1 */     exec
/*   67   */     add r1.xyz, -r9.xyz, c254.y
               + muls r0.y, r4.xx
/*   68   */     mul r4.xyz, r2.z, r8.xyz
               + mulsc r8.y, c7.x, r1.y
/*   69   */     mul r6.xy, r2.yx, r1.zy
               + mulsc r8.z, c7.y, r1.z
/*   70   */     dp2add r2.z, r6.yx, c6.xy, c253.z
/*   71   */     mul r5.xyz, r7.xzy, r5.xzy
               + mulsc r8.x, c5.x, r6.y
/*   72   */     mul r8.zw, r8.yyyz, r2.xxxy
               + mulsc r8.y, c5.y, r6.x
/*    6.0 */     exec
/*   73   */     add r2.xy, r8.xz, r8.yw
               + muls r7.w, r0.yy
/*   74   */     mul r2, r7.xzyw, r2
               + movs r6._, r1.w
/*   75   */     mad r2.xyz, r5.xyz, r4.w, r2.xyz
/*   76   */     add_sat r0.y, r2.w, c13.x
               + muls_prev r6.w, r6.w
/*   77   */     mul r4.xyz, r4.xyz, r0.y
               + mulsc r6.x, c15.y, r0.x
/*   78   */     mul r4.xyz, r4.xyz, c254.w
               + mulsc r6.y, c15.y, r0.z
/*    6.1 */     exece
/*   79   */     mul r4.xyz, r4.xyz, c12.z
               + mulsc r6.z, c15.y, r0.w
/*   80   */     mad r0.xyz, r4.xzy, r3.xzy, r2.xyz
/*   81   */     add r0.xyz, r0.xyz, -r6.xzy
               + movs r6._, r6.w
/*   82   */     mad r6.xyz, r0.xzy, c14.x, r6.xyz
/*   83   */     mul oC0.xyz, r6.xyz, c15.x
               + muls_prev oC0.w, r1.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x007f SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xy
// [6] color0 r6.xyzw

