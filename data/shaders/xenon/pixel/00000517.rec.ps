      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      06546005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 4c830308 00b0b0c6 a1860103	      ALU:	MULv	R8.xy__ = abs(R6).xyyy, C257.xyyy
                          						    	RECIP_IEEE	R3.___w = R3.zzzz
06: 10286081 1f1fffd9 00004000	      FETCH:	SAMPLE	R6.yw__ = R4.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: b8187081 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R4.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 10084081 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: b08c0306 001bac43 c1030309	   (S)ALU:	MULv	R6.__zw = R3.wwww, R3.xxxy
                          						    	ADD_CONST_0	R3.___w = C265.x, R0.w
0a: 10383101 1f1ffffb 00004000	      FETCH:	SAMPLE	R3.w___ = R8.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0009600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: b84860c1 1f1ff63f 00004000	      FETCH:	SAMPLE	R6.__xw = R6.zwz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: b0800005 000000c3 e2050509	   (S)ALU:	ADD_CONST_0	R0.___w = C265.z, R2.w
0d: 14070508 00c0c01b e0050501	      ALU:	ADDv	R8.xyz_ = R5.xyzz, R5.xyzz
0e: 0412050a 00c61bb1 8503ff09	      ALU:	SETGTv	R10._y__ = R3.zzzz, C511.wwww
                          						    	ADD_PREVs	R5.x___ = C265.yyyy
0f: 08870b09 00c06ccb a1070006	      ALU:	MULv	R9.xyz_ = R7.xyzz, C256.xxxx
                          						    	MULs	R11.___w = R6.wwzz
10: c805050a 00b06cc6 8b06ffff	      ALU:	MULADDv	R10.x_z_ = C511.zzzz, R6.xyyy, C511.xxxx
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: ac130b0c 046cb080 a00507ff	      ALU:	ADDv	R12.xy__ = -R5.xxxx, C263.xyyy
                          						    	MUL_CONST_1	R11.x___ = C511.y, R3.x
12: b84c0c03 041bac43 80030608	      ALU:	ADDv	R3.__zw = -R3.wwww, C262.xxxy
                          						    	SUB_CONST_0	R12.__z_ = C264.x, R0.w
13: b8830c05 00c7c783 c1030308	      ALU:	MULv	R5.xy__ = R3.wzzz, R3.wzzz
                          						    	SUB_CONST_0	R12.___w = C264.y, R0.w
14: c8010505 0019196c f10c0c05	      ALU:	DOT2ADDv	R5.x___ = R5.xxxx, R12.ywww, R12.ywww
15: c8020505 00c4c4b1 f10c0c05	      ALU:	DOT2ADDv	R5._y__ = R5.yyyy, R12.xzzz, R12.xzzz
16: 58170706 00c0c0b1 e1080485	      ALU:	MULv	R6.xyz_ = R8.xyzz, R4.xyzz
                          						    	RECIPSQ_IEEE	R7.x___ = abs(R5).yyyy
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 5826070b 00cccc6c e10a0a85	      ALU:	MULv	R11._yz_ = R10.xxzz, R10.xxzz
                          						    	RECIPSQ_IEEE	R7._y__ = abs(R5).xxxx
18: 40230503 04b06cb1 a00bfe85	      ALU:	ADDv	R3.xy__ = -R11.xyyy, C510.xxxx
                          						    	LOG_IEEE	R5._y__ = abs(R5).yyyy
19: 40180508 02b1c66c e0030b85	      ALU:	ADDv	R8.___w = R3.yyyy, -R11.zzzz
                          						    	LOG_IEEE	R5.x___ = abs(R5).xxxx
1a: ac870609 00c0c045 c1090402	      ALU:	MULv	R9.xyz_ = R9.xyzz, R4.xyzz
                          						    	MUL_CONST_1	R6.___w = C258.x, R5.y
1b: ac2c0503 0006acc4 c1030702	      ALU:	MULv	R3.__zw = R3.zzzw, R7.xxxy
                          						    	MUL_CONST_1	R5._y__ = C258.z, R5.x
1c: a08f0a07 0000a01b e10c0788	      ALU:	MULv	R7 = R12, R7.xyxy
                          						    	SQRT_IEEE	R10.___w = abs(R8).wwww
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 3811050b 00cfbe1b f00a0006	      ALU:	DOT3v	R11.x___ = R10.wxzz, R0.zxyy
                          						    	EXP_IEEE	R5.x___ = R6.wwww
1e: 3822050b 00cfbeb1 f00a0105	      ALU:	DOT3v	R11._y__ = R10.wxzz, R1.zxyy
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
1f: ae24000b 00cfbe84 d00a0202	      ALU:	DOT3v	R11.__z_ = R10.wxzz, R2.zxyy
                          						    	MUL_CONST_1	R0._y__ = C258.y, R5.x CLAMP
20: ae410000 00bebe05 d00b0b02	      ALU:	DOT3v	R0.x___ = R11.zxyy, R11.zxyy
                          						    	MUL_CONST_1	R0.__z_ = C258.w, R5.y CLAMP
21: 581c0a00 04f16c6c a000fe80	      ALU:	ADDv	R0.__zw = -R0.yyyz, C510.xxxx
                          						    	RECIPSQ_IEEE	R10.x___ = abs(R0).xxxx
22: c80f0501 0034ac00 e10b0a00	      ALU:	MULv	R1 = R11.xzyw, R10.xxxy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c8030500 001a6c00 e1030100	      ALU:	MULv	R0.xy__ = R3.zwww, R1.xxxx
24: c9020507 0019b2b1 f1070100	      ALU:	DOT2ADDv	R7._y__ = R0.yyyy, R7.ywww, R1.zyyy CLAMP
25: c9010500 00c4b26c f1070100	      ALU:	DOT2ADDv	R0.x___ = R0.xxxx, R7.xzzz, R1.zyyy CLAMP
26: c8010507 001b6c00 e1010000	      ALU:	MULv	R7.x___ = R1.wwww, R0.xxxx
27: c8030500 006dc700 e1070000	      ALU:	MULv	R0.xy__ = R7.yxxx, R0.wzzz
28: c80c0502 0071ac00 a1000400	      ALU:	MULv	R2.__zw = R0.yyyx, C260.xxxy
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: a8170201 00c0c041 c1090803	      ALU:	MULv	R1.xyz_ = R9.xyzz, R8.xyzz
                          						    	MUL_CONST_0	R2.x___ = C259.x, R0.y
2a: a8260203 0011bc80 81000503	      ALU:	MULv	R3._yz_ = R0.yyww, C261.xxyy
                          						    	MUL_CONST_0	R2._y__ = C259.y, R0.x
2b: c8040500 00c6b1b1 eb030703	      ALU:	MULADDv	R0.__z_ = R3.yyyy, R3.zzzz, R7.yyyy
2c: c8030500 00c41900 e0020200	      ALU:	ADDv	R0.xy__ = R2.xzzz, R2.ywww
2d: 14070500 00c0c01b e1060004	      ALU:	MULv	R0.xyz_ = R6.xyzz, R0.xyzz
2e: c8070500 00c06cc0 eb010300	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R3.xxxx
      0000102f 00002200     	EXEC_END ADDR(0x2f) CNT(0x1) BOOL_ADDR(0x80)
2f: 0c878000 00c06c1b a1000a05	      ALU:	MULv	export0.xyz_ = R0.xyzz, C266.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
      00000000 00000000     	NOP
