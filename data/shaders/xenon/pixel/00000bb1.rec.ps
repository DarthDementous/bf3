      00096007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: 10203001 1f1ffff8 00004000	      FETCH:	SAMPLE	R3.x___ = R0.xyx CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: bc800000 01000000 e20000ff	   (S)ALU:	SUB_CONST_1	R0.___w = -C511.w, -R3.x
09: b0800000 00000043 c2000000	      ALU:	ADD_CONST_0	R0.___w = C256.x, R0.w
0a: c8080000 001b6c00 a200ff00	      ALU:	MAXv	R0.___w = R0.wwww, C511.xxxx
0b: c8080000 021b6c00 a1000400	      ALU:	MULv	R0.___w = R0.wwww, -C260.xxxx
0c: c8070004 0410c000 a0000b00	      ALU:	ADDv	R4.xyz_ = -R0.xyww, C267.xyzz
      0000500d 00001200     	EXEC ADDR(0xd) CNT(0x5) BOOL_ADDR(0x80)
0d: c8020003 00bebe00 f0040400	      ALU:	DOT3v	R3._y__ = R4.zxyy, R4.zxyy
0e: 58240303 046c6cb1 a580ff83	      ALU:	SETGTv	R3.__z_ = -abs(R0).xxxx, C511.xxxx
                          						    	RECIPSQ_IEEE	R3._y__ = abs(R3).yyyy
0f: c8070004 00c0b100 e1040300	      ALU:	MULv	R4.xyz_ = R4.xyzz, R3.yyyy
10: 4c270304 00626c6c 81040c03	      ALU:	MULv	R4.xyz_ = R4.zyxx, C268.xxxx
                          						    	RECIP_IEEE	R3._y__ = C259.xxxx
11: c8070004 0062b100 e1040300	      ALU:	MULv	R4.xyz_ = R4.zyxx, R3.yyyy
      001f0006 00007000     	LOOP_START ADDR(0x6) LOOP_ID(31)
      00246012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c80b0000 00c01000 e0040000	      ALU:	ADDv	R0.xy_w = R4.xyzz, R0.xyww
13: 10283001 1f1fffc7 00004000	      FETCH:	SAMPLE	R3._x__ = R0.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: c8080003 026c1b00 2000ff00	   (S)ALU:	ADDv	R3.___w = C256.xxxx, -C511.wwww
15: c8020003 001bb100 e0030300	      ALU:	ADDv	R3._y__ = R3.wwww, R3.yyyy
16: c8020003 00b16c00 a203ff00	      ALU:	MAXv	R3._y__ = R3.yyyy, C511.xxxx
17: ac200300 00000041 e2000004	      ALU:	MUL_CONST_1	R3._y__ = C260.x, R3.y
      00003018 00001200     	EXEC ADDR(0x18) CNT(0x3) BOOL_ADDR(0x80)
18: 08280303 00b1b11b e1030300	      ALU:	MULv	R3.___w = R3.yyyy, R3.yyyy
                          						    	MULs	R3._y__ = R0.wwww
19: c8020003 001bb100 e6030300	      ALU:	SETGTEv	R3._y__ = R3.wwww, R3.yyyy
1a: c8040003 00b16cc6 ab030c03	      ALU:	MULADDv	R3.__z_ = R3.zzzz, R3.yyyy, C268.xxxx
      001f0003 00008400     	LOOP_END ADDR(0x3) LOOP_ID(31)
      0555601b 00001200     	EXEC ADDR(0x1b) CNT(0x6) BOOL_ADDR(0x80)
1b: b8185041 1f1ffffb 00004000	      FETCH:	SAMPLE	R5.w___ = R2.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1c: 10185041 1f1fffdf 00004000	      FETCH:	SAMPLE	R5._w__ = R2.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1d: b8185021 1f1ffeff 00004000	      FETCH:	SAMPLE	R5.__w_ = R1.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1e: 10185021 1f1ff7ff 00004000	      FETCH:	SAMPLE	R5.___w = R1.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1f: 10084021 1f1ffffb 00004000	      FETCH:	SAMPLE	R4.w___ = R1.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
20: 10084041 1f1fffdf 00004000	      FETCH:	SAMPLE	R4._w__ = R2.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256021 00001200     	EXEC ADDR(0x21) CNT(0x6) BOOL_ADDR(0x80)
21: b8084041 1f1ffeff 00004000	      FETCH:	SAMPLE	R4.__w_ = R2.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: b8084021 1f1ff7ff 00004000	      FETCH:	SAMPLE	R4.___w = R1.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
23: c8080000 006cc6c6 8b03feff	   (S)ALU:	MULADDv	R0.___w = C511.zzzz, R3.xxxx, C510.zzzz
24: c8020000 006cb100 2106fe00	      ALU:	MULv	R0._y__ = C262.xxxx, C510.yyyy
25: 14070001 0262626c 00070809	      ALU:	ADDv	R1.xyz_ = C263.zyxx, -C264.zyxx
26: 04820100 03b1c66c c100030a	      ALU:	MULv	R0._y__ = R0.yyyy, -R3.zzzz
                          						    	ADD_PREVs	R1.___w = -C266.xxxx
      00006027 00001200     	EXEC ADDR(0x27) CNT(0x6) BOOL_ADDR(0x80)
27: 382f0002 020052b1 e0050400	      ALU:	ADDv	R2 = R5, -R4.zywx
                          						    	EXP_IEEE	R0._y__ = R0.yyyy
28: c80f0002 00e39400 ab020204	      ALU:	MULADDv	R2 = R4, R2.wyxz, C258.xzwy
29: c8020000 001bb16c cb01000a	      ALU:	MULADDv	R0._y__ = C266.xxxx, R1.wwww, R0.yyyy
2a: c8070001 0062b1c0 cb010008	      ALU:	MULADDv	R1.xyz_ = C264.xyzz, R1.zyxx, R0.yyyy
2b: c80f0002 009ec6c6 8b02feff	      ALU:	MULADDv	R2 = C511.zzzz, R2.zxwy, C510.zzzz
2c: 14020000 00f8a76c 8f020100	      ALU:	DOT4v	R0._y__ = R2.xwyz, C257.wzxy
      0000302d 00001000     	EXEC ADDR(0x2d) CNT(0x3)
2d: 04280000 011bb16c c00000fe	      ALU:	ADDv	R0.___w = R0.wwww, R0.yyyy
                          						    	ADD_PREVs	R0._y__ = -C510.xxxx
2e: c8020000 001b6cb1 ab00fe00	      ALU:	MULADDv	R0._y__ = R0.yyyy, R0.wwww, C510.xxxx
2f: 70020000 00b16c6c 8200ff0d	      ALU:	MAXv	R0._y__ = R0.yyyy, C511.xxxx
      00005030 00005600     	COND_PRED_EXEC ADDR(0x30) CNT(0x5) BOOL_ADDR(0x80) COND(1)
30: 40100080 1800006c c2000005	      ALU:	LOG_IEEE	R0.x___ = |C261|.xxxx
31: a8100000 18000080 c20000ff	      ALU:	MUL_CONST_0	R0.x___ = C511.y, R0.x
32: c8010000 186cb100 e1000000	      ALU:	MULv	R0.x___ = R0.xxxx, R0.yyyy COND(1)
33: 38100000 1800006c e2000000	      ALU:	EXP_IEEE	R0.x___ = R0.xxxx
34: b8100000 18000000 c20000ff	      ALU:	SUB_CONST_0	R0.x___ = C511.w, R0.x
      00001035 00005200     	COND_PRED_EXEC ADDR(0x35) CNT(0x1) BOOL_ADDR(0x80) COND(0)
35: 14100000 1000001b c20000ff	      ALU:	MAXs	R0.x___ = C511.wwww
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00002036 00002200     	EXEC_END ADDR(0x36) CNT(0x2) BOOL_ADDR(0x80)
36: c8080001 006cc600 e1000000	      ALU:	MULv	R1.___w = R0.xxxx, R0.zzzz
37: c80f8000 00000000 e2010100	      ALU:	MAXv	export0 = R1, R1	; COLOR
