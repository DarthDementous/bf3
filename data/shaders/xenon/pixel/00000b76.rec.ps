      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      04006005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: c80f0506 006c34a0 2b01ff00	      ALU:	MULADDv	R6 = R0.xyxy, C257.xxxx, C511.xzyw
06: 4c8f0209 001b00c6 a1000004	      ALU:	MULv	R9 = R0.wwww, C256
                          						    	RECIP_IEEE	R2.___w = R4.zzzz
07: c80f0506 0000a000 e2060900	      ALU:	MAXv	R6 = R6, R9.xyxy
08: 4c4f0706 000a001b e3090600	      ALU:	MINv	R6 = R9.zwzw, R6
                          						    	RECIP_IEEE	R7.__z_ = R0.wwww
09: c80f0506 00aac600 e1060700	      ALU:	MULv	R6 = R6.zwxy, R7.zzzz
0a: 500070d3 1f1d5fc8 00004000	      FETCH:	?	R7.xy__ = R6.xyy CONST(0) MAG(LINEAR) MIN(LINEAR) MIP(LINEAR) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0255600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 5000a0c1 1f1c0ff8 03e14000	      FETCH:	SAMPLE	R10.x___ = R6.xyy CONST(0) MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(1,31,0)
0c: 5000a0c1 1f1c0fc7 00214000	      FETCH:	SAMPLE	R10._x__ = R6.xyy CONST(0) MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(1,1,0)
0d: 5000a0c1 1f1c0e3f 03ff4000	      FETCH:	SAMPLE	R10.__x_ = R6.xyy CONST(0) MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(31,31,0)
0e: 5000a0c1 1f1c01ff 003f4000	      FETCH:	SAMPLE	R10.___x = R6.xyy CONST(0) MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(31,1,0)
0f: c803050b 006c6db0 2b01fe00	   (S)ALU:	MULADDv	R11.xy__ = R0.xyyy, C257.xxxx, C510.yxxx
10: 4c830208 001bb0c6 e1020403	      ALU:	MULv	R8.xy__ = R2.wwww, R4.xyyy
                          						    	RECIP_IEEE	R2.___w = R3.zzzz
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 140c0508 001bacc6 e1020307	      ALU:	MULv	R8.__zw = R2.wwww, R3.xxxy
12: 0e830209 00b0b0c6 e20b0900	      ALU:	MAXv	R9.xy__ = R11.xyyy, R9.xyyy
                          						    	MUL_PREVs	R2.___w = R0.zzzz CLAMP
13: c80f0500 00001b00 e60a0200	      ALU:	SETGTEv	R0 = R10, R2.wwww
14: c803050a 02b01a00 e0000000	      ALU:	ADDv	R10.xy__ = R0.xyyy, -R0.zwww
15: c8060500 00616ccb eb0a0700	      ALU:	MULADDv	R0._yz_ = R0.wwzz, R10.yyxx, R7.xxxx
16: 64160909 0016bcb6 e3090900	      ALU:	MINv	R9._yz_ = R9.zzww, R9.xxyy
                          						    	SUBs	R9.x___ = R0.zzyy
      05546017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: c8070507 00c0c500 e1090700	      ALU:	MULv	R7.xyz_ = R9.xyzz, R7.yzzz
18: b8186101 1f1ffff8 00004000	      FETCH:	SAMPLE	R6.x___ = R8.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 10186101 1f1fffc7 00004000	      FETCH:	SAMPLE	R6._x__ = R8.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: f80880d3 1f1d5fc8 00004000	      FETCH:	?	R8.xy__ = R6.zww CONST(0) VALID_ONLY MAG(LINEAR) MIN(LINEAR) MIP(LINEAR) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: a40880f3 1f1d523f 00004000	      FETCH:	?	R8.__xy = R7.yzz CONST(0) VALID_ONLY MAG(LINEAR) MIN(LINEAR) MIP(LINEAR) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1c: f808a0c1 1f1c0ff8 03ff4000	      FETCH:	SAMPLE	R10.x___ = R6.zww CONST(0) VALID_ONLY MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(31,31,0)
      0555601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: a408a0e1 1f1c0fc7 03ff4000	      FETCH:	SAMPLE	R10._x__ = R7.yzz CONST(0) VALID_ONLY MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(31,31,0)
1e: f808a0c1 1f1c0e3f 003f4000	      FETCH:	SAMPLE	R10.__x_ = R6.zww CONST(0) VALID_ONLY MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(31,1,0)
1f: a408a0e1 1f1c01ff 003f4000	      FETCH:	SAMPLE	R10.___x = R7.yzz CONST(0) VALID_ONLY MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(31,1,0)
20: f808b0c1 1f1c0ff8 03e14000	      FETCH:	SAMPLE	R11.x___ = R6.zww CONST(0) VALID_ONLY MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(1,31,0)
21: a408b0e1 1f1c0fc7 03e14000	      FETCH:	SAMPLE	R11._x__ = R7.yzz CONST(0) VALID_ONLY MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(1,31,0)
22: f808b0c1 1f1c0e3f 00214000	      FETCH:	SAMPLE	R11.__x_ = R6.zww CONST(0) VALID_ONLY MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(1,1,0)
      00096023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: a408b0e1 1f1c01ff 00214000	      FETCH:	SAMPLE	R11.___x = R7.yzz CONST(0) VALID_ONLY MAG(POINT) MIN(POINT) MIP(POINT) ARBITRARY(2x4_SYM) LOCATION(CENTROID) OFFSET(1,1,0)
24: c8040506 001b6c00 a5010200	   (S)ALU:	SETGTv	R6.__z_ = R1.wwww, C258.xxxx
25: 20110009 00c6b1c6 a503fd01	      ALU:	SETGTv	R9.x___ = R3.zzzz, C509.yyyy
                          						    	SETGTs	R0.x___ = R1.zzzz
26: 14020509 01c6b11b a504fd01	      ALU:	SETGTv	R9._y__ = R4.zzzz, C509.yyyy
27: 04180100 00bebeb1 d0020202	      ALU:	DOT3v	R0.___w = R2.zxyy, R2.zxyy
                          						    	ADD_PREVs	R1.x___ = C258.yyyy
28: a0240009 006cc61b a201fe80	      ALU:	MAXv	R9.__z_ = R1.xxxx, C510.zzzz
                          						    	SQRT_IEEE	R0._y__ = abs(R0).wwww
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: 648f0003 00001bbc c60b0202	      ALU:	SETGTEv	R3 = R11, R2.wwww
                          						    	SUBs	R0.___w = C258.xxyy
2a: 4c8f0001 00001b1b e60a0200	      ALU:	SETGTEv	R1 = R10, R2.wwww
                          						    	RECIP_IEEE	R0.___w = R0.wwww
2b: c80b0502 00c01c00 e1090000	      ALU:	MULv	R2.xy_w = R9.xyzz, R0.xxww
2c: c80f0503 02000000 e0030100	      ALU:	ADDv	R3 = R3, -R1
2d: c8040506 00c61b1b ce0602fe	      ALU:	CNDGTv	R6.__z_ = C510.wwww, R6.zzzz, R2.wwww
2e: c80f0501 0000e400 eb030801	      ALU:	MULADDv	R1 = R1, R3, R8.xzxz
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: c8030503 021ab000 e0010100	      ALU:	ADDv	R3.xy__ = R1.zwww, -R1.xyyy
30: c8030501 00b019b0 eb030801	      ALU:	MULADDv	R1.xy__ = R1.xyyy, R3.xyyy, R8.ywww
31: 00140100 00c66c61 e0000701	      ALU:	ADDv	R0.__z_ = R0.zzzz, R7.xxxx
                          						    	ADDs	R1.x___ = R1.yyxx
32: c8040500 006cc600 e0010000	      ALU:	ADDv	R0.__z_ = R1.xxxx, R0.zzzz
33: a8800605 00000042 c20505fd	      ALU:	MUL_CONST_0	R6.___w = C509.x, R0.z
34: c8030501 041a1b00 a006fe00	      ALU:	ADDv	R1.xy__ = -R6.zwww, C510.wwww
      00006035 00002200     	EXEC_END ADDR(0x35) CNT(0x6) BOOL_ADDR(0x80)
35: c8040502 046cc6b1 ad80fe01	      ALU:	CNDGTEv	R2.__z_ = R1.yyyy, -abs(R0).xxxx, C510.zzzz
36: b82d0000 01848441 c1020604	      ALU:	MULv	R0.x_zw = R2.xzzy, R6.xzzy
                          						    	SUB_CONST_0	R0._y__ = -C260.x, -R0.y
37: aa140001 006c1b41 c0000003	      ALU:	ADDv	R1.__z_ = R0.xxxx, R0.wwww
                          						    	MUL_CONST_0	R0.x___ = C259.x, R0.y CLAMP
38: c8020500 00c66cc6 eb010100	      ALU:	MULADDv	R0._y__ = R0.zzzz, R1.zzzz, R1.xxxx
39: b81f0501 00b10000 c10005fe	      ALU:	MULv	R1 = R0.yyyy, R5
                          						    	SUB_CONST_0	R5.x___ = C510.w, R0.x
3a: c80f8000 00006c00 e1010500	      ALU:	MULv	export0 = R1, R5.xxxx	; COLOR
