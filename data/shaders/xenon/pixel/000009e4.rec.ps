      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 100080a1 1f1fffc7 00004000	      FETCH:	SAMPLE	R8._x__ = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 14080704 00bebe1b f0000003	   (S)ALU:	DOT3v	R4.___w = R0.zxyy, R0.zxyy
07: 04810608 00b1c6c6 0103fe0b	      ALU:	MULv	R8.x___ = C259.yyyy, C510.zzzz
                          						    	ADD_PREVs	R6.___w = C267.zzzz
08: c804070b 01b1b16c ab080308	      ALU:	MULADDv	R11.__z_ = -R8.xxxx, R8.yyyy, C259.yyyy
09: 4c8c060c 041bacc6 a0060a04	      ALU:	ADDv	R12.__zw = -R6.wwww, C266.xxxy
                          						    	RECIP_IEEE	R6.___w = R4.zzzz
0a: b4480600 001bb143 80020b0b	      ALU:	ADDv	R0.___w = R2.wwww, C267.yyyy
                          						    	ADD_CONST_1	R6.__z_ = C267.x, R1.w
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: b8130c08 001bb043 c1060409	      ALU:	MULv	R8.xy__ = R6.wwww, R4.xyyy
                          						    	SUB_CONST_0	R12.x___ = C265.x, R0.w
0c: b8230c09 04c6b083 80060809	      ALU:	ADDv	R9.xy__ = -R6.zzzz, C264.xyyy
                          						    	SUB_CONST_0	R12._y__ = C265.y, R0.w
0d: 588c0608 00acac1b e1090984	      ALU:	MULv	R8.__zw = R9.xxxy, R9.xxxy
                          						    	RECIPSQ_IEEE	R6.___w = abs(R4).wwww
0e: c8080700 0019191b f10c0c08	      ALU:	DOT2ADDv	R0.___w = R8.wwww, R12.ywww, R12.ywww
0f: c8080704 00c4c4c6 f10c0c08	      ALU:	DOT2ADDv	R4.___w = R8.zzzz, R12.xzzz, R12.xzzz
10: 58140b06 001b1b1b a1060384	      ALU:	MULv	R6.__z_ = R6.wwww, C259.wwww
                          						    	RECIPSQ_IEEE	R11.x___ = abs(R4).wwww
      05406011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 582c0b09 0006ac1b e1060080	      ALU:	MULv	R9.__zw = R6.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R11._y__ = abs(R0).wwww
12: c80f0709 003efe00 e1090b00	      ALU:	MULv	R9 = R9.zxyw, R11.zxyz
13: c8030700 0018b000 e0090500	      ALU:	ADDv	R0.xy__ = R9.xwww, R5.xyyy
14: b82800a1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R0.__x_ = R5.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: 1038a0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R6.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 104850a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R5.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 10588001 1f1ff67f 00004000	      FETCH:	SAMPLE	R8.__yw = R0.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: 10186001 1f1ff688 00004000	      FETCH:	SAMPLE	R6.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 10688101 1f1fffd8 00004000	      FETCH:	SAMPLE	R8.xw__ = R8.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 14080705 001b1b6c c1060701	   (S)ALU:	MULv	R5.___w = R6.wwww, R7.wwww
1b: 0c110400 00c61b6c 8504feff	      ALU:	SETGTv	R0.x___ = R4.zzzz, C510.wwww
                          						    	MUL_PREVs	R4.x___ = C511.xxxx
1c: 08260004 00161661 e0080808	      ALU:	ADDv	R4._yz_ = R8.zzww, R8.zzww
                          						    	MULs	R0._y__ = R8.yyxx
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 40210009 00b16c1b e1000084	      ALU:	MULv	R9.x___ = R0.yyyy, R0.xxxx
                          						    	LOG_IEEE	R0._y__ = abs(R4).wwww
1e: 40170004 00cdbd1b a004fe80	      ALU:	ADDv	R4.xyz_ = R4.yxzz, C510.yxyy
                          						    	LOG_IEEE	R0.x___ = abs(R0).wwww
1f: a8170708 00c0c045 c0070702	      ALU:	ADDv	R8.xyz_ = R7.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R7.x___ = C258.x, R4.y
20: c8080707 046e6e6c d10404fe	      ALU:	DOT2ADDv	R7.___w = C510.xxxx, -R4.zxxx, R4.zxxx
21: a0870407 006cc01b e1070587	      ALU:	MULv	R7.xyz_ = R7.xxxx, R5.xyzz
                          						    	SQRT_IEEE	R4.___w = abs(R7).wwww
22: c8070705 00c06cc0 ab0a0007	      ALU:	MULADDv	R5.xyz_ = R7.xyzz, R10.xyzz, C256.xxxx
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: a811070a 00cfbe41 d0040104	      ALU:	DOT3v	R10.x___ = R4.wxzz, R1.zxyy
                          						    	MUL_CONST_0	R7.x___ = C260.x, R0.y
24: a842070a 00cfbec0 d0040204	      ALU:	DOT3v	R10._y__ = R4.wxzz, R2.zxyy
                          						    	MUL_CONST_0	R7.__z_ = C260.z, R0.x
25: 3824070a 00cfbe6c f0040307	      ALU:	DOT3v	R10.__z_ = R4.wxzz, R3.zxyy
                          						    	EXP_IEEE	R7._y__ = R7.xxxx
26: 38410707 00bebec6 f00a0a07	      ALU:	DOT3v	R7.x___ = R10.zxyy, R10.zxyy
                          						    	EXP_IEEE	R7.__z_ = R7.zzzz
27: 591a0700 00c1116c a1070487	      ALU:	MULv	R0._y_w = R7.yyzz, C260.yyww CLAMP
                          						    	RECIPSQ_IEEE	R7.x___ = abs(R7).xxxx
28: b82f0701 000dad41 c10c0bfe	      ALU:	MULv	R1 = R12.yxzw, R11.yxxy
                          						    	SUB_CONST_0	R7._y__ = C510.x, R0.y
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: b8170702 00b46c43 c10a07fe	      ALU:	MULv	R2.xyz_ = R10.xzyy, R7.xxxx
                          						    	SUB_CONST_0	R7.x___ = C510.x, R0.w
2a: b84f0701 0052f542 c10102fe	      ALU:	MULv	R1 = R1.zywx, R2.yzyz
                          						    	SUB_CONST_0	R7.__z_ = C510.x, R0.z
2b: c8030700 00c56c19 eb090201	      ALU:	MULADDv	R0.xy__ = R1.ywww, R9.yzzz, R2.xxxx
2c: ad260900 00616684 e0000107	      ALU:	ADDv	R0._yz_ = R0.yyxx, R1.zzxx CLAMP
                          						    	MUL_CONST_1	R9._y__ = C263.y, R7.x
2d: c8090700 00b0b200 e1090000	      ALU:	MULv	R0.x__w = R9.xyyy, R0.zyyy
2e: c8030707 006db000 e1000700	      ALU:	MULv	R7.xy__ = R0.yxxx, R7.xyyy
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: c8040700 00b16c1b ab070700	      ALU:	MULADDv	R0.__z_ = R0.wwww, R7.yyyy, C263.xxxx
30: ac170201 00c0c045 e1080605	      ALU:	MULv	R1.xyz_ = R8.xyzz, R6.xyzz
                          						    	MUL_CONST_1	R2.x___ = C261.x, R7.y
31: ac2c0202 0071ac84 a1070605	      ALU:	MULv	R2.__zw = R7.yyyx, C262.xxxy
                          						    	MUL_CONST_1	R2._y__ = C261.y, R7.x
32: c8030700 00c41900 e0020200	      ALU:	ADDv	R0.xy__ = R2.xzzz, R2.ywww
33: 14070700 00c0c01b e1010005	      ALU:	MULv	R0.xyz_ = R1.xyzz, R0.xyzz
34: c8070700 00c0c0c0 eb010500	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R5.xyzz
      00001035 00002200     	EXEC_END ADDR(0x35) CNT(0x1) BOOL_ADDR(0x80)
35: 0c878000 00c06cc6 a1000c07	      ALU:	MULv	export0.xyz_ = R0.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R7.zzzz	; COLOR
