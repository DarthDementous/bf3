      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05406009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: 14280808 006cc66c 210efe05	      ALU:	MULv	R8.___w = C270.xxxx, C510.zzzz
                          						    	MAXs	R8._y__ = R5.xxxx
0a: 4c830307 00b0b0c6 a1870303	      ALU:	MULv	R7.xy__ = abs(R7).xyyy, C259.xyyy
                          						    	RECIP_IEEE	R3.___w = R3.zzzz
0b: 14430803 001bb0b1 e1030305	      ALU:	MULv	R3.xy__ = R3.wwww, R3.xyyy
                          						    	MAXs	R8.__z_ = R5.yyyy
0c: 103080e1 1f1ffffb 00004000	      FETCH:	SAMPLE	R8.w___ = R7.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 1080b0a1 1f1ffecf 00004000	      FETCH:	SAMPLE	R11._yw_ = R5.xyx CONST(8) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: 10407061 1f1ffef8 00004000	      FETCH:	SAMPLE	R7.x_w_ = R3.xyx CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0009600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: e4709101 1f1ff1ff 00008000	      FETCH:	SAMPLE	R9.___x = R8.yzw CONST(7) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 0821070b 001b1b1b e1000002	   (S)ALU:	MULv	R11.x___ = R0.wwww, R0.wwww
                          						    	MULs	R7._y__ = R2.wwww
11: 08880b03 001bc61b a0020b01	      ALU:	ADDv	R3.___w = R2.wwww, C267.zzzz
                          						    	MULs	R11.___w = R1.wwww
12: 14040604 001b6c1b a0000b01	      ALU:	ADDv	R4.__z_ = R0.wwww, C267.xxxx
13: 0411030a 021bb1b1 8009fe0b	      ALU:	ADDv	R10.x___ = R9.wwww, -C510.yyyy
                          						    	ADD_PREVs	R3.x___ = C267.yyyy
14: 4c1c030f 046cac1b a0030904	      ALU:	ADDv	R15.__zw = -R3.xxxx, C265.xxxy
                          						    	RECIP_IEEE	R3.x___ = R4.wwww
      00006015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: 08831003 006c6d66 e1030407	      ALU:	MULv	R3.xy__ = R3.xxxx, R4.yxxx
                          						    	MULs	R16.___w = R7.zzxx
16: b82e100c 00fcfb46 c00b0b08	      ALU:	ADDv	R12._yzw = R11.xxyz, R11.wwyz
                          						    	SUB_CONST_0	R16._y__ = C264.x, R4.z
17: b8461008 00166c86 800cfc08	      ALU:	ADDv	R8._yz_ = R12.zzww, C508.xxxx
                          						    	SUB_CONST_0	R16.__z_ = C264.y, R4.z
18: c8010604 04b2b2b1 d10808fe	      ALU:	DOT2ADDv	R4.x___ = C510.yyyy, -R8.zyyy, R8.zyyy
19: a0860809 0016166c e10f0f84	      ALU:	MULv	R9._yz_ = R15.zzww, R15.zzww
                          						    	SQRT_IEEE	R8.___w = abs(R4).xxxx
1a: bc110f10 00c3be43 f008000a	      ALU:	DOT3v	R16.x___ = R8.wyzz, R0.zxyy
                          						    	SUB_CONST_1	R15.x___ = C266.x, R3.w
      0000601b 00001200     	EXEC ADDR(0x1b) CNT(0x6) BOOL_ADDR(0x80)
1b: bc220f0b 00c3be83 f008010a	      ALU:	DOT3v	R11._y__ = R8.wyzz, R1.zxyy
                          						    	SUB_CONST_1	R15._y__ = C266.y, R3.w
1c: 0821040b 00c3be6c f008020f	      ALU:	DOT3v	R11.x___ = R8.wyzz, R2.zxyy
                          						    	MULs	R4._y__ = R15.xxxx
1d: 14010607 00b11b6c e10b0110	      ALU:	MULv	R7.x___ = R11.yyyy, R1.wwww
1e: 0c1e0c0a 00fcfc1b e1101000	      ALU:	MULv	R10._yzw = R16.xxyz, R16.xxyz
                          						    	MUL_PREVs	R12.x___ = R0.wwww
1f: 08190907 00b0b0b1 e00c070b	      ALU:	ADDv	R7.x__w = R12.xyyy, R7.xyyy
                          						    	MULs	R9.x___ = R11.yyyy
20: 084f0409 0000ffb1 e00a090f	      ALU:	ADDv	R9 = R10, R9.wxyz
                          						    	MULs	R4.__z_ = R15.yyyy
      00006021 00001200     	EXEC ADDR(0x21) CNT(0x6) BOOL_ADDR(0x80)
21: c8020601 006c1b6c eb0b0207	      ALU:	MULADDv	R1._y__ = R7.xxxx, R11.xxxx, R2.wwww
22: 08110401 006c1b6c a109ff0b	      ALU:	MULv	R1.x___ = R9.xxxx, C511.wwww
                          						    	MULs	R4.x___ = R11.xxxx
23: 00470b11 0015c0b1 e0090401	      ALU:	ADDv	R17.xyz_ = R9.yzww, R4.xyzz
                          						    	ADDs	R11.__z_ = R1.yyyy
24: c8010604 04c66c1b eb0b1000	      ALU:	MULADDv	R4.x___ = R0.wwww, -R11.zzzz, R16.xxxx
25: 58860b08 006cc16c e1010891	      ALU:	MULv	R8._yz_ = R1.xxxx, R8.yyzz
                          						    	RECIPSQ_IEEE	R11.___w = abs(R17).xxxx
26: c80f060d 00a61000 e10b0b00	      ALU:	MULv	R13 = R11.zzxy, R11.xyww
      00006027 00001200     	EXEC ADDR(0x27) CNT(0x6) BOOL_ADDR(0x80)
27: 14070601 01c01ab1 a108fe0d	      ALU:	MULv	R1.xyz_ = R8.xyzz, C510.zwww
28: 04240404 046c1b1b e00d0201	      ALU:	ADDv	R4.__z_ = -R13.xxxx, R2.wwww
                          						    	ADD_PREVs	R4._y__ = R1.wwww
29: bc880304 00bebe80 f00404fe	      ALU:	DOT3v	R4.___w = R4.zxyy, R4.zxyy
                          						    	SUB_CONST_1	R3.___w = C510.y, R3.x
2a: 5813030a 0019c51b e0030184	      ALU:	ADDv	R10.xy__ = R3.ywww, R1.yzzz
                          						    	RECIPSQ_IEEE	R3.x___ = abs(R4).wwww
2b: c80b0603 00c06c00 e1040300	      ALU:	MULv	R3.xy_w = R4.xyzz, R3.xxxx
2c: c80f0604 00ab1d00 f2030300	      ALU:	CUBEv	R4 = R3.wwxy, R3.yxww
      0550602d 00001200     	EXEC ADDR(0x2d) CNT(0x6) BOOL_ADDR(0x80)
2d: 4c140309 001b1bc6 e2040484	      ALU:	MAXv	R9.__z_ = R4.wwww, R4.wwww
                          						    	RECIP_IEEE	R3.x___ = abs(R4).zzzz
2e: c8030609 006d6cc6 cb0403fc	      ALU:	MULADDv	R9.xy__ = C508.zzzz, R4.yxxx, R3.xxxx
2f: b80870a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R5.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
30: 101880a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R5.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
31: 102830a1 1f1ff5c8 00004000	      FETCH:	SAMPLE	R3.xy_z = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
32: 10684141 1f1ff478 00004000	      FETCH:	SAMPLE	R4.x_yz = R10.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256033 00001200     	EXEC ADDR(0x33) CNT(0x6) BOOL_ADDR(0x80)
33: 90589121 1f1ff688 0000c000	      FETCH:	SAMPLE	R9.xyzw = R9.xyz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
34: 109850a1 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R5.xyx CONST(9) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
35: c807060c 00c0c000 e0060600	   (S)ALU:	ADDv	R12.xyz_ = R6.xyzz, R6.xyzz
36: c807060e 00c0c000 a105ff00	      ALU:	MULv	R14.xyz_ = R5.xyzz, C511.xyzz
37: c807060a 00c0c000 e10c0500	      ALU:	MULv	R10.xyz_ = R12.xyzz, R5.xyzz
38: 14120604 00b11b1b 65fe0909	      ALU:	SETGTv	R4._y__ = C510.yyyy, R9.wwww
                          						    	MAXs	R6.x___ = R9.wwww
      00006039 00001200     	EXEC ADDR(0x39) CNT(0x6) BOOL_ADDR(0x80)
39: a8120606 00bebec4 f00e0cfd	      ALU:	DOT3v	R6._y__ = R14.zxyy, R12.zxyy
                          						    	MUL_CONST_0	R6.x___ = C509.z, R6.x
3a: b044030e 00c6b1c4 a503fbfe	      ALU:	SETGTv	R14.__z_ = R3.zzzz, C507.yyyy
                          						    	ADD_CONST_0	R3.__z_ = C510.z, R6.x
3b: 14040603 00c6006c c8030001	      ALU:	FRACv	R3.__z_ = R3.zzzz
3c: 0c210c0c 026cc61b c00603fc	      ALU:	ADDv	R12.x___ = R6.xxxx, -R3.zzzz
                          						    	MUL_PREVs	R12._y__ = C508.wwww
3d: c8030605 00b0b000 a00cfe00	      ALU:	ADDv	R5.xy__ = R12.xyyy, C510.xyyy
3e: 38410306 00b16c6c a1050205	      ALU:	MULv	R6.x___ = R5.yyyy, C258.xxxx
                          						    	EXP_IEEE	R3.__z_ = R5.xxxx
      0000603f 00001200     	EXEC ADDR(0x3f) CNT(0x6) BOOL_ADDR(0x80)
3f: 1407060c 01c6c06c c103090d	      ALU:	MULv	R12.xyz_ = R3.zzzz, R9.xyzz
40: 04870908 006cc0b1 c10608fc	      ALU:	MULv	R8.xyz_ = R6.xxxx, R8.xyzz
                          						    	ADD_PREVs	R9.___w = C508.yyyy
41: c8070608 00c06cc0 ab070008	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R7.xyzz, C256.xxxx
42: c8070609 00b1c0c0 ee040c09	      ALU:	CNDGTv	R9.xyz_ = R9.xyzz, R4.yyyy, R12.xyzz
43: 58140603 00b16c1b a206fb87	      ALU:	MAXv	R3.__z_ = R6.yyyy, C507.xxxx
                          						    	RECIPSQ_IEEE	R6.x___ = abs(R7).wwww
44: 58110e0c 006c1bb1 e1060291	      ALU:	MULv	R12.x___ = R6.xxxx, R2.wwww
                          						    	RECIPSQ_IEEE	R14.x___ = abs(R17).yyyy
      00006045 00001200     	EXEC ADDR(0x45) CNT(0x6) BOOL_ADDR(0x80)
45: 58220e0c 006c1bc6 e1060191	      ALU:	MULv	R12._y__ = R6.xxxx, R1.wwww
                          						    	RECIPSQ_IEEE	R14._y__ = abs(R17).zzzz
46: 4024060c 006c1bb1 e1060091	      ALU:	MULv	R12.__z_ = R6.xxxx, R0.wwww
                          						    	LOG_IEEE	R6._y__ = abs(R17).yyyy
47: 40120600 006c1bc6 e1100b91	      ALU:	MULv	R0._y__ = R16.xxxx, R11.wwww
                          						    	LOG_IEEE	R6.x___ = abs(R17).zzzz
48: c80d060b 00b06cac 6cfd100b	      ALU:	CNDEv	R11.x_zw = R11.xxxy, C509.xyyy, R16.xxxx
49: a8140000 00c6b145 a303fe04	      ALU:	MINv	R0.__z_ = R3.zzzz, C510.yyyy
                          						    	MUL_CONST_0	R0.x___ = C260.x, R6.y
4a: a8170602 0015c0c4 e1100e04	      ALU:	MULv	R2.xyz_ = R16.yzww, R14.xyzz
                          						    	MUL_CONST_0	R6.x___ = C260.z, R6.x
      0000604b 00001200     	EXEC ADDR(0x4b) CNT(0x6) BOOL_ADDR(0x80)
4b: 381f000e 000dad6c e10f0e00	      ALU:	MULv	R14 = R15.yxzw, R14.yxxy
                          						    	EXP_IEEE	R0.x___ = R0.xxxx
4c: 38230002 00b0b16c e1020006	      ALU:	MULv	R2.xy__ = R2.xyyy, R0.yyyy
                          						    	EXP_IEEE	R0._y__ = R6.xxxx
4d: c902060b 006fc7b1 f10e0d02	      ALU:	DOT2ADDv	R11._y__ = R2.yyyy, R14.wxxx, R13.wzzz CLAMP
4e: c9010606 00b2c76c f10e0d02	      ALU:	DOT2ADDv	R6.x___ = R2.xxxx, R14.zyyy, R13.wzzz CLAMP
4f: 14080601 04c06ac6 f00c0b02	      ALU:	DOT3v	R1.___w = -R12.xyzz, R11.zwxx
50: 0d130b00 00b0196c a1000406	      ALU:	MULv	R0.xy__ = R0.xyyy, C260.ywww CLAMP
                          						    	MUL_PREVs	R11.x___ = R6.xxxx
      00006051 00001200     	EXEC ADDR(0x51) CNT(0x6) BOOL_ADDR(0x80)
51: 14170602 00c6c01b e1000901	      ALU:	MULv	R2.xyz_ = R0.zzzz, R9.xyzz
                          						    	MAXs	R6.x___ = R1.wwww
52: b84c0300 0471b184 a000fefe	      ALU:	ADDv	R0.__zw = -R0.yyyx, C510.yyyy
                          						    	SUB_CONST_0	R3.__z_ = C510.y, R6.x
53: bc830200 006d1a80 c10b00fe	      ALU:	MULv	R0.xy__ = R11.yxxx, R0.zwww
                          						    	SUB_CONST_1	R2.___w = C510.y, R1.x
54: 084c010c 0071acc6 a1000603	      ALU:	MULv	R12.__zw = R0.yyyx, C262.xxxy
                          						    	MULs	R1.__z_ = R3.zzzz
55: a8170c08 00b4b441 c10a0805	      ALU:	MULv	R8.xyz_ = R10.xzyy, R8.xzyy
                          						    	MUL_CONST_0	R12.x___ = C261.x, R0.y
56: a8230c01 00c5b080 81000705	      ALU:	MULv	R1.xy__ = R0.yzzz, C263.xyyy
                          						    	MUL_CONST_0	R12._y__ = C261.y, R0.x
      00006057 00001200     	EXEC ADDR(0x57) CNT(0x6) BOOL_ADDR(0x80)
57: 08850a09 00c419c6 e00c0c01	      ALU:	ADDv	R9.x_z_ = R12.xzzz, R12.ywww
                          						    	MULs	R10.___w = R1.zzzz
58: c8020609 00b1b16c eb010b01	      ALU:	MULADDv	R9._y__ = R1.xxxx, R1.yyyy, R11.yyyy
59: ac1f0001 003400c0 e10a09fe	      ALU:	MULv	R1 = R10.xzyw, R9
                          						    	MUL_CONST_1	R0.x___ = C510.z, R3.x
5a: c8070601 00c01bc0 eb080201	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R8.xyzz, R2.wwww
5b: ad240000 001b6cc1 a0010dfe	      ALU:	ADDv	R0.__z_ = R1.wwww, C269.xxxx CLAMP
                          						    	MUL_CONST_1	R0._y__ = C510.z, R3.y
5c: ac470002 00c0c6c3 e10200fe	      ALU:	MULv	R2.xyz_ = R2.xyzz, R0.zzzz
                          						    	MUL_CONST_1	R0.__z_ = C510.z, R3.w
      0000605d 00001200     	EXEC ADDR(0x5d) CNT(0x6) BOOL_ADDR(0x80)
5d: a81e0000 00fcfc84 c102000f	      ALU:	MULv	R0._yzw = R2.xxyz, R0.xxyz
                          						    	MUL_CONST_0	R0.x___ = C271.y, R4.x
5e: a8270002 00151b86 8100fd0f	      ALU:	MULv	R2.xyz_ = R0.yzww, C509.wwww
                          						    	MUL_CONST_0	R0._y__ = C271.y, R4.z
5f: a8470002 00c0c687 81020c0f	      ALU:	MULv	R2.xyz_ = R2.xyzz, C268.zzzz
                          						    	MUL_CONST_0	R0.__z_ = C271.y, R4.w
60: c8070601 00b4b4c0 eb020701	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R2.xzyy, R7.xzyy
61: 14070601 02c0b41b e0010005	      ALU:	ADDv	R1.xyz_ = R1.xyzz, -R0.xzyy
62: c8070600 00b46cc0 ab010e00	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xzyy, C270.xxxx
      00001063 00002200     	EXEC_END ADDR(0x63) CNT(0x1) BOOL_ADDR(0x80)
63: 0c878000 00c06c1b a1000f06	      ALU:	MULv	export0.xyz_ = R0.xyzz, C271.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.wwww	; COLOR
      00000000 00000000     	NOP
