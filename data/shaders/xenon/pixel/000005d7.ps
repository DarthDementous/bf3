//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   sampler2D $spotlightmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $latten0       c2       1
//   $lcol          c3       3
//   $wlightpos     c6       3
//   $worldviewpos  c9       1
//   $matvalue      c10      1
//   $fresnelterm   c11      1
//   $apptime       c12      1
//   $compressedhdr c13      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $spec          s2       1
//   $screenshadmap s3       1
//   $spotlightmap  s4       1
//   $envmap        s5       1
//   $frametexture  s6       1
//   $noisetex      s7       1
//   $bump          s8       1
//   $diff          s9       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c12
defconst $bump, sampler2d, object, [1, 1], s8
defconst $compressedhdr, float, vector, [1, 2], c13
defconst $diff, sampler2d, object, [1, 1], s9
defconst $envmap, samplercube, object, [1, 1], s5
defconst $frametexture, sampler2d, object, [1, 1], s6
defconst $fresnelterm, float, scalar, [1, 1], c11
defconst $invscreensize, float, vector, [1, 2], c1
defconst $latten0, float, vector, [1, 4], c2
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c10
defconst $noisetex, sampler3d, object, [1, 1], s7
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spec, sampler2d, object, [1, 1], s2
defconst $spotlightmap, sampler2d, object, [1, 1], s4
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c9
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=16
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 29
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4
dcl_texcoord5 r5
dcl_texcoord6 r6.xy
dcl_color_centroid r7

def c252, -1, 0.150000006, 2, 0
def c253, 0.5, 1, -127.5, 0.200000003
def c254, 0.0529999994, 255, 3.29999995, 1.5
def c255, 0.143999994, 0.298999995, 0.587000012, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mul r10.z, c12.x, c253.x
/*    9   */     mov r10.xy, r5.xy
               + addsc r6.z, c9.y, r1.w
/*   10   */     tfetch2D r9.__yw, r5.xy, tf8, FetchValidOnly=false
/*   11   */     tfetch3D r9.x___, r10.xyz, tf7, FetchValidOnly=false
/*   12   */     serialize
                 add r6.w, r2.w, c9.z
               + movs r7._, r0.w
/*   13   */     mul r10.xyz, r2.zwz, r2.zw
               + adds_prev r3.w, c9.x
/*    1.0 */     exec
/*   14   */     add r16.xy, -r6.w, c8.xy
               + subsc r9.y, -c253.y, -r9.x
/*   15   */     add r14.xy, -r6.z, c7.xy
               + rcp r6.z, r4.w
/*   16   */     mad r11.xyz, r1.zwz, r1.zw, r10.xyz
/*   17   */     mul r10.xy, r6.z, r4.yx
               + subsc r16.z, c6.x, r3.w
/*   18   */     mad r11.xyz, r0.zwz, r0.zw, r11.xyz
/*   19   */     mul r4.xy, r14.xy, r14.xy
               + subsc r16.w, c6.y, r3.w
/*    1.1 */     exec
/*   20   */     dp2add r3.w, r16.wy, r16.wy, r4.y
/*   21   */     dp2add r4.w, r16.zx, r16.zx, r4.x
/*   22   */     add r13.x, r11.z, r11.z
               + rsq r13.y, r11_abs.y
/*   23   */     add r4.xyz, r9.yzw, r9.xzw
               + rsq r13.z, r11_abs.x
/*   24   */     mul r11.xyz, r13.zxy, r0.zzw
               + subsc r10.z, c253.y, r10.x
/*   25   */     mul r9.xyw, r13.xyz, r2.zwz
               + mulsc r14.z, c255.w, r4.x
/*    2.0 */     exec
/*   26   */     add r12.x, -r11.y, r0.w
               + rcp r6.z, r3.z
/*   27   */     add r12.z, -r9.x, r2.w
               + rsq r15.x, r4_abs.w
/*   28   */     mul r13.xyz, r13.zxy, r1.zzw
               + addsc r15.z, c252.x, r4.y
/*   29   */     add r12.y, -r13.y, r1.w
               + rsq r15.y, r3_abs.w
/*   30   */     mul r8.xy, r8_abs.xy, c1.xy
               + addsc r15.w, c252.x, r4.z
/*   31   */     mul r6.zw, r6.z, r3.xxxy
               + movs r7._, -r13.z
/*    2.1 */     exec
/*   32   */     mul r14, r14.xyz, r15
               + muls_prev r1.x, r1.z
/*   33   */     mad r10.w, -r11.z, r0.z, r1.x
/*   34   */     mul r0.zw, r14.zzzw, c254.x
               + movs r7._, -r9.y
/*   35   */     dp3 r0.x, r12.zxy, r12.zxy
               + muls_prev r0.y, r2.z
/*   36   */     add r1.yzw, r10.yyzw, r0.zzwy
               + rsq r0.x, r0_abs.x
/*   37   */     mul r0.xyz, r12.xyz, r0.x
/*    3.0 */     exec
/*   38   */     cube r0, r0.zzxy, r0.yxz
/*   39   */     mov r10.z, r0.w
               + rcp r1.x, r0_abs.z
/*   40   */     mad r10.xy, r0.yx, r1.x, c254.w
/*   41   */     tfetch2D r1.x___, r5.zw, tf0
/*   42   */     tfetch2D r4.xyz_, r5.xy, tf2
/*   43   */     tfetch2D r0._xyz, r6.xy, tf1
/*    3.1 */     exec
/*   44   */     tfetch2D r2.x_yz, r1.yz, tf6
/*   45   */     tfetchCube r12, r10.xyz, tf5
/*   46   */     tfetch2D r5, r5.xy, tf9
/*   47   */     tfetch2D r1._w__, r8.xy, tf3
/*   48   */     tfetch2D r8.xw__, r6.zw, tf4
/*   49   */     serialize
                 add r6.xyz, r7.xyz, r7.xyz
/*    4.0 */     exec
/*   50   */     sgt r8.z, r3.z, c253.w
               + mulsc r1.z, c253.x, r1.y
/*   51   */     mul r4.xyz, r4.xyz, c253.x
               + mulsc r3.x, c0.x, r0.y
/*   52   */     sgt r0.x, c253.y, r12.w
               + mulsc r3.y, c0.x, r0.z
/*   53   */     mul r9.xyz, r6.xyz, r5.xyz
               + mulsc r3.z, c0.x, r0.w
/*   54   */     mul r3.xyz, r3.xyz, r5.xyz
               + movs r7.x, r12.w
/*   55   */     dp3 r2.y, r9.zxy, c255.xyz
               + mulsc r7.y, c254.y, r7.x
/*    4.1 */     exec
/*   56   */     max r2.y, r2.y, c252.y
               + addsc r7.x, c253.x, r7.y
/*   57   */     mul r6.xyz, r3.xzy, r6.xzy
               + frcs r7.x, r7.x
/*   58   */     add r7.x, r7.y, -r7.x
               + log r3.x, r4_abs.w
/*   59   */     min r2.y, r2.y, c253.y
               + addsc r3.z, c253.z, r7.x
/*   60   */     mul r10, r16.yxzw, r15.yxxy
               + log r3.y, r3_abs.w
/*   61   */     mul r3.xy, r3.xy, c2.xz
               + exp r4.w, r3.z
/*    5.0 */     exec
/*   62   */     mul r3.zw, r14.xxxy, r13.x
               + exp r3.x, r3.x
/*   63   */     mul r13.xyz, r4.w, r12.xyz
               + exp r3.y, r3.y
/*   64   */     cndgt r12.xyz, r0.x, r13.xyz, r12.xyz
/*   65   */     mad r3.zw, r10.zzzw, r11.x, r3.zzzw
/*   66   */     mad_sat r10.yz, r10.xxy, r9.w, r3.wwz
/*   67   */     mul_sat r3.xy, r3.xy, c2.yw
               + muls r8.x, r8.xy
/*    5.1 */     exec
/*   68   */     add r3.zw, -r3.yyyx, c253.y
               + subsc r8.y, c253.y, r1.w
/*   69   */     mul r8.xy, r8.xy, r8.zy
/*   70   */     mul r10.x, r8.x, r10.z
               + movs r7._, -c11.x
/*   71   */     mul r3.xy, r10.yx, r3.zw
               + adds_prev r8.w, c252.z
/*   72   */     mul r11.zw, r3.yyyx, c4.xxxy
               + subsc r0.x, c253.y, r1.x
/*   73   */     mul r5.xyz, r2.y, r12.xyz
               + mulsc r11.x, c3.x, r3.y
/*    6.0 */     exec
/*   74   */     mul r1.yw, r3.yyz, c5.xxy
               + mulsc r11.y, c3.y, r3.x
/*   75   */     add r8.xz, r11.xz, r11.yw
               + muls r9.w, r8.yy
/*   76   */     mad r8.y, r1.w, r10.y, r1.y
/*   77   */     mul r3, r9.xzyw, r8
               + subsc r1.x, c253.y, r1.z
/*   78   */     mad r1.xyz, r6.xyz, r1.x, r3.xyz
/*   79   */     add_sat r1.w, r3.w, c11.x
               + movs r7._, r5.w
/*    6.1 */     exec
/*   80   */     mul r3.xyz, r5.xyz, r1.w
               + muls_prev r7.w, r7.w
/*   81   */     mul r3.xyz, r3.xyz, r4.xyz
               + mulsc r7.x, c13.y, r2.x
/*   82   */     mul r3.xyz, r3.xyz, c254.z
               + mulsc r7.y, c13.y, r2.z
/*   83   */     mul r3.xyz, r3.xyz, c10.z
               + mulsc r7.z, c13.y, r2.w
/*   84   */     mad r0.yzw, r3.xxzy, r0.yywz, r1.xxyz
/*   85   */     add r0.yzw, r0.yyzw, -r7.xxzy
               + movs r7._, r7.w
/*    7.0 */     exece
/*   86   */     mad r7.xyz, r0.ywz, c12.x, r7.xyz
/*   87   */     mul oC0.xyz, r7.xyz, c13.x
               + muls_prev oC0.w, r0.x
/*    7.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xy
// [7] color0 r7.xyzw

