      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096008 00001200     	EXEC ADDR(0x8) CNT(0x6) BOOL_ADDR(0x80)
08: 100000a1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 08440900 00bebecb f0000003	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
                          						    	MULs	R9.__z_ = R3.wwzz
0a: 08830909 006d1ac6 210cfe03	      ALU:	MULv	R9.xy__ = C268.yxxx, C510.zwww
                          						    	MULs	R9.___w = R3.zzzz
0b: c8040605 011bb16c ab000c09	      ALU:	MULADDv	R5.__z_ = -R9.xxxx, R0.wwww, C268.yyyy
0c: c80c0609 00c6db06 eb020209	      ALU:	MULADDv	R9.__zw = R9.zzzw, R2.zzzz, R2.wwwz
0d: 5848000a 061b1bc6 e1020280	      ALU:	MULv	R10.___w = -R2.wwww, -R2.wwww
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
      0000600e 00001200     	EXEC ADDR(0xe) CNT(0x6) BOOL_ADDR(0x80)
0e: c803060a 00c6c71a eb010109	      ALU:	MULADDv	R10.xy__ = R9.zwww, R1.zzzz, R1.wzzz
0f: 08480a07 011bb11b a0020901	      ALU:	ADDv	R7.___w = R2.wwww, C265.yyyy
                          						    	MULs	R10.__z_ = -R1.wwww
10: a885000f 00c41802 c00a0a0c	      ALU:	ADDv	R15.x_z_ = R10.xzzz, R10.xwww
                          						    	MUL_CONST_0	R0.___w = C268.w, R0.z
11: 58230f00 00c7b0b1 e100008a	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
                          						    	RECIPSQ_IEEE	R15._y__ = abs(R10).yyyy
12: c80c0605 00acc6ac eb000505	      ALU:	MULADDv	R5.__zw = R5.xxxy, R0.xxxy, R5.zzzz
13: c803060c 00b0c600 e10f0100	      ALU:	MULv	R12.xy__ = R15.xyyy, R1.zzzz
      00006014 00001200     	EXEC ADDR(0x14) CNT(0x6) BOOL_ADDR(0x80)
14: c8050609 006dc600 e10f0200	      ALU:	MULv	R9.x_z_ = R15.yxxx, R2.zzzz
15: c8040600 04c61b00 e0090200	      ALU:	ADDv	R0.__z_ = -R9.zzzz, R2.wwww
16: 140c060c 01acc66c e10f030c	      ALU:	MULv	R12.__zw = R15.xxxy, R3.zzzz
17: 04280000 04c61b1b e00c0301	      ALU:	ADDv	R0.___w = -R12.zzzz, R3.wwww
                          						    	ADD_PREVs	R0._y__ = R1.wwww
18: c8010600 00151500 f0000000	      ALU:	DOT3v	R0.x___ = R0.yzww, R0.yzww
19: 5813000d 00b0b06c a1880a80	      ALU:	MULv	R13.xy__ = abs(R8).xyyy, C266.xyyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
      0500601a 00001200     	EXEC ADDR(0x1a) CNT(0x6) BOOL_ADDR(0x80)
1a: c8070600 00156c00 e1000000	      ALU:	MULv	R0.xyz_ = R0.yzww, R0.xxxx
1b: c80f0600 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
1c: 4c140808 001b1bc6 e2000080	      ALU:	MAXv	R8.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R8.x___ = abs(R0).zzzz
1d: c8030608 006d6c6c cb0008fd	      ALU:	MULADDv	R8.xy__ = C509.xxxx, R0.yxxx, R8.xxxx
1e: 90488101 1f1ffe88 0000c000	      FETCH:	SAMPLE	R8.xyz_ = R8.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1f: 1028b0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R11.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956020 00001200     	EXEC ADDR(0x20) CNT(0x6) BOOL_ADDR(0x80)
20: b838a0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R5.zwz CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
21: 105801a1 1f1ffe47 00004000	      FETCH:	SAMPLE	R0._xy_ = R13.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: b81850a1 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R5.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
23: 14010600 001b6c1b a0010903	   (S)ALU:	ADDv	R0.x___ = R1.wwww, C265.xxxx
24: c80c0609 04f1acb1 8b000bfe	      ALU:	MULADDv	R9.__zw = C510.yyyy, -R0.yyyz, C267.xxxy
25: 0443000e 046cb0c6 80000609	      ALU:	ADDv	R14.xy__ = -R0.xxxx, C262.xyyy
                          						    	ADD_PREVs	R0.__z_ = C265.zzzz
      00006026 00001200     	EXEC ADDR(0x26) CNT(0x6) BOOL_ADDR(0x80)
26: b84c0e0d 041bac42 80070708	      ALU:	ADDv	R13.__zw = -R7.wwww, C263.xxxy
                          						    	SUB_CONST_0	R14.__z_ = C264.x, R0.z
27: b8830e00 00c7c782 c10d0d08	      ALU:	MULv	R0.xy__ = R13.wzzz, R13.wzzz
                          						    	SUB_CONST_0	R14.___w = C264.y, R0.z
28: c8010600 0019196c f10e0e00	      ALU:	DOT2ADDv	R0.x___ = R0.xxxx, R14.ywww, R14.ywww
29: c8020600 00c4c4b1 f10e0e00	      ALU:	DOT2ADDv	R0._y__ = R0.yyyy, R14.xzzz, R14.xzzz
2a: 58100d06 000000b1 e2060680	      ALU:	RECIPSQ_IEEE	R13.x___ = abs(R0).yyyy
2b: 58200d06 0000006c e2060680	      ALU:	RECIPSQ_IEEE	R13._y__ = abs(R0).xxxx
      0000602c 00001200     	EXEC ADDR(0x2c) CNT(0x6) BOOL_ADDR(0x80)
2c: c8010600 061b1bc6 eb03030f	      ALU:	MULADDv	R0.x___ = R15.zzzz, -R3.wwww, -R3.wwww
2d: 58180000 006cb16c 2101fd80	      ALU:	MULv	R0.___w = C257.xxxx, C509.yyyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
2e: 140c060d 0006ac6c e10d0d00	      ALU:	MULv	R13.__zw = R13.zzzw, R13.xxxy
2f: 0c240000 036c1b1b e1000301	      ALU:	MULv	R0.__z_ = R0.xxxx, -R3.wwww
                          						    	MUL_PREVs	R0._y__ = -R1.wwww
30: c8030603 026c1b1a eb00020d	      ALU:	MULADDv	R3.xy__ = R13.zwww, R0.xxxx, -R2.wwww
31: 081f0002 0000a0b1 e10e0d03	      ALU:	MULv	R2 = R14, R13.xyxy
                          						    	MULs	R0.x___ = R3.yyyy
      00006032 00001200     	EXEC ADDR(0x32) CNT(0x6) BOOL_ADDR(0x80)
32: 082f0001 0000c16c e0020003	      ALU:	ADDv	R1 = R2, R0.yyzz
                          						    	MULs	R0._y__ = R3.xxxx
33: c8040600 00c4c4b1 f1010100	      ALU:	DOT2ADDv	R0.__z_ = R0.yyyy, R1.xzzz, R1.xzzz
34: c8020600 0019196c f1010100	      ALU:	DOT2ADDv	R0._y__ = R0.xxxx, R1.ywww, R1.ywww
35: 58210000 00bec0b1 b00aff80	      ALU:	DOT3v	R0.x___ = R10.zxyy, C511.xyzz
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R0).yyyy
36: 58410000 00b16cc6 e1090080	      ALU:	MULv	R0.x___ = R9.yyyy, R0.xxxx
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
37: c803060d 006dc500 e1030000	      ALU:	MULv	R13.xy__ = R3.yxxx, R0.yzzz
      00006038 00001200     	EXEC ADDR(0x38) CNT(0x6) BOOL_ADDR(0x80)
38: c80f0603 0049c100 e1010000	      ALU:	MULv	R3 = R1.ywzx, R0.yyzz
39: c80f0601 00006c00 e10d0900	      ALU:	MULv	R1 = R13, R9.xxxx
3a: c9020600 00b0196c f1030c01	      ALU:	DOT2ADDv	R0._y__ = R1.xxxx, R3.xyyy, R12.ywww CLAMP
3b: c9040600 00c719b1 f1030c01	      ALU:	DOT2ADDv	R0.__z_ = R1.yyyy, R3.wzzz, R12.ywww CLAMP
3c: c9020603 0019191b f1020c01	      ALU:	DOT2ADDv	R3._y__ = R1.wwww, R2.ywww, R12.ywww CLAMP
3d: c9010603 00c419c6 f1020c01	      ALU:	DOT2ADDv	R3.x___ = R1.zzzz, R2.xzzz, R12.ywww CLAMP
      0000603e 00001200     	EXEC ADDR(0x3e) CNT(0x6) BOOL_ADDR(0x80)
3e: c8030601 00b01b00 a703ff00	      ALU:	SETNEv	R1.xy__ = R3.xyyy, C511.wwww
3f: c80f0600 00aa7000 a000fe00	      ALU:	ADDv	R0 = R0.zwxy, C510.xyyx
40: 14270002 00c06cb1 200e0000	      ALU:	ADDv	R2.xyz_ = C270.xyzz, C256.xxxx
                          						    	MAXs	R0._y__ = R0.yyyy
41: a8430101 0018b041 c1000102	      ALU:	MULv	R1.xy__ = R0.xwww, R1.xyyy
                          						    	MUL_CONST_0	R1.__z_ = C258.x, R0.y
42: c80b0600 00c6c0c0 eb010b02	      ALU:	MULADDv	R0.xy_w = R2.xyzz, R1.zzzz, R11.xyzz
43: 40100106 0000006c e2060681	      ALU:	LOG_IEEE	R1.x___ = abs(R1).xxxx
      00006044 00001200     	EXEC ADDR(0x44) CNT(0x6) BOOL_ADDR(0x80)
44: 40200106 000000b1 e2060681	      ALU:	LOG_IEEE	R1._y__ = abs(R1).yyyy
45: c8030601 00c6b000 e1000100	      ALU:	MULv	R1.xy__ = R0.zzzz, R1.xyyy
46: 38170902 00c0c06c e0060601	      ALU:	ADDv	R2.xyz_ = R6.xyzz, R6.xyzz
                          						    	EXP_IEEE	R9.x___ = R1.xxxx
47: 38270902 00c0c0b1 e1020501	      ALU:	MULv	R2.xyz_ = R2.xyzz, R5.xyzz
                          						    	EXP_IEEE	R9._y__ = R1.yyyy
48: c80f0601 0000a000 e1090400	      ALU:	MULv	R1 = R9, R4.xyxy
49: c80c0603 0006ac00 e1010300	      ALU:	MULv	R3.__zw = R1.zzzw, R3.xxxy
      0000604a 00001200     	EXEC ADDR(0x4a) CNT(0x6) BOOL_ADDR(0x80)
4a: c8030601 00b01a00 e1010900	      ALU:	MULv	R1.xy__ = R1.xyyy, R9.zwww
4b: c8030603 00b0b000 e0010100	      ALU:	ADDv	R3.xy__ = R1.xyyy, R1.xyyy
4c: c80f0604 0000a000 a1030500	      ALU:	MULv	R4 = R3, C261.xyxy
4d: c80f0601 0000a000 a1030300	      ALU:	MULv	R1 = R3, C259.xyxy
4e: 001f0903 0000a061 a1030401	      ALU:	MULv	R3 = R3, C260.xyxy
                          						    	ADDs	R9.x___ = R1.yyxx
4f: 00230901 00c419cb e0040401	      ALU:	ADDv	R1.xy__ = R4.xzzz, R4.ywww
                          						    	ADDs	R9._y__ = R1.wwzz
      00006050 00001200     	EXEC ADDR(0x50) CNT(0x6) BOOL_ADDR(0x80)
50: 00440900 00c6b161 e1020103	      ALU:	MULv	R0.__z_ = R2.zzzz, R1.yyyy
                          						    	ADDs	R9.__z_ = R3.yyxx
51: 00870904 00c0c6cb a10afe03	      ALU:	MULv	R4.xyz_ = R10.xyzz, C510.zzzz
                          						    	ADDs	R9.___w = R3.wwzz
52: 00470803 00b4b46c e1040801	      ALU:	MULv	R3.xyz_ = R4.xzyy, R8.xzyy
                          						    	ADDs	R8.__z_ = R1.xxxx
53: 00170801 0010c06c e0000709	      ALU:	ADDv	R1.xyz_ = R0.xyww, R7.xyzz
                          						    	ADDs	R8.x___ = R9.xxxx
54: 00230800 00b019c6 e1020909	      ALU:	MULv	R0.xy__ = R2.xyyy, R9.ywww
                          						    	ADDs	R8._y__ = R9.zzzz
55: 14070607 00c0c01b e1080605	      ALU:	MULv	R7.xyz_ = R8.xyzz, R6.xyzz
      00004056 00002200     	EXEC_END ADDR(0x56) CNT(0x4) BOOL_ADDR(0x80)
56: c8070600 00c0c0c0 eb070400	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R7.xyzz, R4.xyzz
57: c8070600 00b4c6c0 ab030c00	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R3.xzyy, C268.zzzz
58: c8070600 00c0c0c0 eb020100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R2.xyzz, R1.xyzz
59: 0c878000 00c06c1b a1000d06	      ALU:	MULv	export0.xyz_ = R0.xyzz, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.wwww	; COLOR
      00000000 00000000     	NOP
