      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: 100080a1 1f1ffff8 00004000	      FETCH:	SAMPLE	R8.x___ = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 14030609 00b0b01b a1870101	   (S)ALU:	MULv	R9.xy__ = abs(R7).xyyy, C257.xyyy
09: 04480700 001bb16c 80020a0a	      ALU:	ADDv	R0.___w = R2.wwww, C266.yyyy
                          						    	ADD_PREVs	R7.__z_ = C266.xxxx
0a: 14080604 00bebe1b f0000003	      ALU:	DOT3v	R4.___w = R0.zxyy, R0.zxyy
0b: 04120707 00b16cc6 0102ff0a	      ALU:	MULv	R7._y__ = C258.yyyy, C511.xxxx
                          						    	ADD_PREVs	R7.x___ = C266.zzzz
0c: c804060a 016cb1b1 ab080207	      ALU:	MULADDv	R10.__z_ = -R7.yyyy, R8.xxxx, C258.yyyy
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: 4c1c070c 046cacc6 a0070904	      ALU:	ADDv	R12.__zw = -R7.xxxx, C265.xxxy
                          						    	RECIP_IEEE	R7.x___ = R4.zzzz
0e: b8130c07 006cb043 c1070408	      ALU:	MULv	R7.xy__ = R7.xxxx, R4.xyyy
                          						    	SUB_CONST_0	R12.x___ = C264.x, R0.w
0f: b8230c08 04c6b083 80070708	      ALU:	ADDv	R8.xy__ = -R7.zzzz, C263.xyyy
                          						    	SUB_CONST_0	R12._y__ = C264.y, R0.w
10: 588c0708 00acac1b e1080884	      ALU:	MULv	R8.__zw = R8.xxxy, R8.xxxy
                          						    	RECIPSQ_IEEE	R7.___w = abs(R4).wwww
11: c8080600 0019191b f10c0c08	      ALU:	DOT2ADDv	R0.___w = R8.wwww, R12.ywww, R12.ywww
12: c8080604 00c4c4c6 f10c0c08	      ALU:	DOT2ADDv	R4.___w = R8.zzzz, R12.xzzz, R12.xzzz
      05006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: 58140a07 001b1b1b a1070284	      ALU:	MULv	R7.__z_ = R7.wwww, C258.wwww
                          						    	RECIPSQ_IEEE	R10.x___ = abs(R4).wwww
14: 582c0a08 0006ac1b e1070080	      ALU:	MULv	R8.__zw = R7.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R10._y__ = abs(R0).wwww
15: c80f0608 0000c000 e1080a00	      ALU:	MULv	R8 = R8, R10.xyzz
16: c80c0607 0006ac00 e0080500	      ALU:	ADDv	R7.__zw = R8.zzzw, R5.xxxy
17: b83000e1 1f1ffef9 00004000	      FETCH:	SAMPLE	R0.y_w_ = R7.zwz CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: 10600121 1f1fffdf 00004000	      FETCH:	SAMPLE	R0._w__ = R9.xyx CONST(6) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 1070b0e1 1f1fffd8 00004000	      FETCH:	SAMPLE	R11.xw__ = R7.xyx CONST(7) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: a8400d06 00000041 c20606ff	   (S)ALU:	MUL_CONST_0	R13.__z_ = C511.x, R0.y
1b: c8030609 00c46cb1 8b00feff	      ALU:	MULADDv	R9.xy__ = C511.yyyy, R0.xzzz, C510.xxxx
1c: 4013000d 00b0b01b e1090984	      ALU:	MULv	R13.xy__ = R9.xyyy, R9.xyyy
                          						    	LOG_IEEE	R0.x___ = abs(R4).wwww
1d: 40230007 04c4b11b a00dfe80	      ALU:	ADDv	R7.xy__ = -R13.xzzz, C510.yyyy
                          						    	LOG_IEEE	R0._y__ = abs(R0).wwww
1e: 14020604 00c61b6c a504ff07	      ALU:	SETGTv	R4._y__ = R4.zzzz, C511.wwww
      0000601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 041a0000 01bcccb1 a100030d	      ALU:	MULv	R0._y_w = R0.xxyy, C259.xxzz
                          						    	ADD_PREVs	R0.x___ = -R13.yyyy
20: a04f090a 000dad6c e10c0a80	      ALU:	MULv	R10 = R12.yxzw, R10.yxxy
                          						    	SQRT_IEEE	R9.__z_ = abs(R0).xxxx
21: 38210000 00bebeb1 f0090100	      ALU:	DOT3v	R0.x___ = R9.zxyy, R1.zxyy
                          						    	EXP_IEEE	R0._y__ = R0.yyyy
22: 38840000 00bebe1b f0090300	      ALU:	DOT3v	R0.__z_ = R9.zxyy, R3.zxyy
                          						    	EXP_IEEE	R0.___w = R0.wwww
23: 098c0004 00313161 a100030b	      ALU:	MULv	R4.__zw = R0.yyyw, C259.yyyw CLAMP
                          						    	MULs	R0.___w = R11.yyxx
24: 14020600 00bebec6 f0090200	      ALU:	DOT3v	R0._y__ = R9.zxyy, R2.zxyy
      00006025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: 0c110904 00bebe1b f0000003	      ALU:	DOT3v	R4.x___ = R0.zxyy, R0.zxyy
                          						    	MUL_PREVs	R9.x___ = R3.wwww
26: c8010609 00b11b6c eb000209	      ALU:	MULADDv	R9.x___ = R9.xxxx, R0.yyyy, R2.wwww
27: c8040608 006c1b6c eb000109	      ALU:	MULADDv	R8.__z_ = R9.xxxx, R0.xxxx, R1.wwww
28: 581c0404 04dbb16c a004fe84	      ALU:	ADDv	R4.__zw = -R4.wwwz, C510.yyyy
                          						    	RECIPSQ_IEEE	R4.x___ = abs(R4).xxxx
29: c80f0609 003eac00 e1000400	      ALU:	MULv	R9 = R0.zxyw, R4.xxxy
2a: c8030604 00b0b100 e1080900	      ALU:	MULv	R4.xy__ = R8.xyyy, R9.yyyy
      0000602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: c9020609 00186eb1 f10a0904	      ALU:	DOT2ADDv	R9._y__ = R4.yyyy, R10.xwww, R9.zxxx CLAMP
2c: c9010604 00c56e6c f10a0904	      ALU:	DOT2ADDv	R4.x___ = R4.xxxx, R10.yzzz, R9.zxxx CLAMP
2d: c8010609 001b6c00 e1090400	      ALU:	MULv	R9.x___ = R9.wwww, R4.xxxx
2e: c8030604 006d1a00 e1090400	      ALU:	MULv	R4.xy__ = R9.yxxx, R4.zwww
2f: c8030608 00c5b000 a1040600	      ALU:	MULv	R8.xy__ = R4.yzzz, C262.xyyy
30: c8080608 00b1b100 e1080900	      ALU:	MULv	R8.___w = R8.yyyy, R9.yyyy
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: c80c0608 00ecdb00 e0080800	      ALU:	ADDv	R8.__zw = R8.xxxz, R8.wwwz
32: c8070600 001bb400 e1080000	      ALU:	MULv	R0.xyz_ = R8.wwww, R0.xzyy
33: 14040600 05c61b6c e0000200	      ALU:	ADDv	R0.__z_ = -R0.zzzz, R2.wwww
34: 04280000 04b11b1b e0000301	      ALU:	ADDv	R0.___w = -R0.yyyy, R3.wwww
                          						    	ADD_PREVs	R0._y__ = R1.wwww
35: c8010600 00c3c300 f0000000	      ALU:	DOT3v	R0.x___ = R0.wyzz, R0.wyzz
36: 58100006 0000006c e2060680	      ALU:	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
      05006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: c8070600 00156c00 e1000000	      ALU:	MULv	R0.xyz_ = R0.yzww, R0.xxxx
38: c80f0600 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
39: 4c140101 001b1bc6 e2000080	      ALU:	MAXv	R1.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
3a: c8030601 006d6cc6 cb0001ff	      ALU:	MULADDv	R1.xy__ = C511.zzzz, R0.yxxx, R1.xxxx
3b: 90589021 1f1ffe88 0000c000	      FETCH:	SAMPLE	R9.xyz_ = R1.xyz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
3c: b82810a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R1.xyz_ = R5.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0025603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: b84800e1 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R7.zwz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
3e: b81820e1 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R7.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
3f: a8170503 00c0c041 c00606ff	   (S)ALU:	ADDv	R3.xyz_ = R6.xyzz, R6.xyzz
                          						    	MUL_CONST_0	R5.x___ = C511.x, R0.y
40: a8270501 00c06c42 810100ff	      ALU:	MULv	R1.xyz_ = R1.xyzz, C256.xxxx
                          						    	MUL_CONST_0	R5._y__ = C511.x, R0.z
41: a8470501 00c0c043 c10102ff	      ALU:	MULv	R1.xyz_ = R1.xyzz, R2.xyzz
                          						    	MUL_CONST_0	R5.__z_ = C511.x, R0.w
42: c8070600 00c0c000 e1050900	      ALU:	MULv	R0.xyz_ = R5.xyzz, R9.xyzz
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: c8070600 00c0c600 a1000200	      ALU:	MULv	R0.xyz_ = R0.xyzz, C258.zzzz
44: c8070601 00c0c0c0 eb010300	      ALU:	MULADDv	R1.xyz_ = R0.xyzz, R1.xyzz, R3.xyzz
45: a8170300 00c0c045 c1030204	      ALU:	MULv	R0.xyz_ = R3.xyzz, R2.xyzz
                          						    	MUL_CONST_0	R3.x___ = C260.x, R4.y
46: a82c0303 0071ac84 81040504	      ALU:	MULv	R3.__zw = R4.yyyx, C261.xxxy
                          						    	MUL_CONST_0	R3._y__ = C260.y, R4.x
47: c8030608 00c41900 e0030300	      ALU:	ADDv	R8.xy__ = R3.xzzz, R3.ywww
48: 14070600 00c0c01b e1000802	      ALU:	MULv	R0.xyz_ = R0.xyzz, R8.xyzz
      00002049 00002200     	EXEC_END ADDR(0x49) CNT(0x2) BOOL_ADDR(0x80)
49: c8070600 00c0b1c0 eb010700	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R7.yyyy
4a: 0c878000 00c06c1b a1000b06	      ALU:	MULv	export0.xyz_ = R0.xyzz, C267.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.wwww	; COLOR
      00000000 00000000     	NOP
