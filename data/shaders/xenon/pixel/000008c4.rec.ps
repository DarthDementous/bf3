      00096007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: 100000c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: c8040800 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
09: 584c0007 0071acc6 2104fe80	      ALU:	MULv	R7.__zw = C260.yyyx, C510.xxxy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0a: c8080804 011bb1c6 ab000407	      ALU:	MULADDv	R4.___w = -R7.zzzz, R0.wwww, C260.yyyy
0b: a8880005 00bebe02 d0040404	      ALU:	DOT3v	R5.___w = R4.zxyy, R4.zxyy
                          						    	MUL_CONST_0	R0.___w = C260.w, R0.z
0c: c8030800 001a6d00 e1000000	      ALU:	MULv	R0.xy__ = R0.zwww, R0.yxxx
      0554600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: c803080a 006d1bb0 eb000406	      ALU:	MULADDv	R10.xy__ = R6.xyyy, R0.yxxx, R4.wwww
0e: b828c0c1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R12.__x_ = R6.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: 103890e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R7.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 10487141 1f1fffd9 00004000	      FETCH:	SAMPLE	R7.yw__ = R10.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: 10580141 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R10.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: 1018b141 1f1ff688 00004000	      FETCH:	SAMPLE	R11.xyzw = R10.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c8080804 001b1b00 e10b0800	   (S)ALU:	MULv	R4.___w = R11.wwww, R8.wwww
14: a817080a 00626243 c00808fe	      ALU:	ADDv	R10.xyz_ = R8.zyxx, R8.zyxx
                          						    	MUL_CONST_0	R8.x___ = C510.x, R0.w
15: a8270806 0065cd42 c10a0bfe	      ALU:	MULv	R6.xyz_ = R10.yzxx, R11.yxzz
                          						    	MUL_CONST_0	R8._y__ = C510.x, R0.z
16: a8480808 00b7c041 9000fffe	      ALU:	DOT3v	R8.___w = R0.wzyy, C511.xyzz
                          						    	MUL_CONST_0	R8.__z_ = C510.x, R0.y
17: c8030807 00b01bb1 8b07fdfd	      ALU:	MULADDv	R7.xy__ = C509.yyyy, R7.xyyy, C509.wwww
18: 08170c00 00c06c6c a1090007	      ALU:	MULv	R0.xyz_ = R9.xyzz, C256.xxxx
                          						    	MULs	R12.x___ = R7.xxxx
      00006019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 08270c0b 00c0c0b1 e1000b07	      ALU:	MULv	R11.xyz_ = R0.xyzz, R11.xyzz
                          						    	MULs	R12._y__ = R7.yyyy
1a: c8040800 001b1b1b cb0708fe	      ALU:	MULADDv	R0.__z_ = C510.wwww, R7.wwww, R8.wwww
1b: 581e0808 00fc761b e1080985	      ALU:	MULv	R8._yzw = R8.xxyz, R9.zzyx
                          						    	RECIPSQ_IEEE	R8.x___ = abs(R5).wwww
1c: a8170904 006cc049 c10804fd	      ALU:	MULv	R4.xyz_ = R8.xxxx, R4.xyzz
                          						    	MUL_CONST_0	R9.x___ = C509.x, R8.y
1d: a8230900 046e1b4a 800cfefd	      ALU:	ADDv	R0.xy__ = -R12.zxxx, C510.wwww
                          						    	MUL_CONST_0	R9._y__ = C509.x, R8.z
1e: 14210008 02b1b1c6 e0000c00	      ALU:	ADDv	R8.x___ = R0.yyyy, -R12.yyyy
                          						    	MAXs	R0._y__ = R0.zzzz
      0000601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: a0480700 001b6c6c e1040088	      ALU:	MULv	R0.___w = R4.wwww, R0.xxxx
                          						    	SQRT_IEEE	R7.__z_ = abs(R8).xxxx
20: 14410000 00bebec6 d00701fe	      ALU:	DOT3v	R0.x___ = R7.zxyy, R1.zxyy
                          						    	MAXs	R0.__z_ = C510.zzzz
21: 15810b08 00bebeb6 f0040700	      ALU:	DOT3v	R8.x___ = R4.zxyy, R7.zxyy CLAMP
                          						    	MAXs	R11.___w = R0.zzyy
22: 40820a00 00bebe6c f0070208	      ALU:	DOT3v	R0._y__ = R7.zxyy, R2.zxyy
                          						    	LOG_IEEE	R10.___w = R8.xxxx
23: a84f0904 0022004b c10b0afd	      ALU:	MULv	R4 = R11.zyxw, R10
                          						    	MUL_CONST_0	R9.__z_ = C509.x, R8.w
24: 38140800 00bebe1b f0070304	      ALU:	DOT3v	R0.__z_ = R7.zxyy, R3.zxyy
                          						    	EXP_IEEE	R8.x___ = R4.wwww
      00003025 00001000     	EXEC ADDR(0x25) CNT(0x3)
25: 161e0808 00fc6cc6 e1090805	      ALU:	MULv	R8._yzw = R9.xxyz, R8.xxxx
                          						    	MAXs	R8.x___ = R5.zzzz CLAMP
26: 700e0808 0001766c 81080103	      ALU:	MULv	R8._yzw = R8.yyzw, C257.zzyx
27: c8070801 00ba6c65 ab080204	      ALU:	MULADDv	R1.xyz_ = R4.yzxx, R8.zwyy, C258.xxxx
      00006028 00005600     	COND_PRED_EXEC ADDR(0x28) CNT(0x6) BOOL_ADDR(0x80) COND(1)
28: c8020808 186c6c00 21020100	      ALU:	MULv	R8._y__ = C258.xxxx, C257.xxxx COND(1)
29: c80e0804 1a0666b1 6cfe0505	      ALU:	CNDEv	R4._yzw = R5.yyyy, C510.zzzw, -R5.zzxx COND(1)
2a: 17410804 19bebec6 f0070505	      ALU:	DOT3v	R4.x___ = R7.zxyy, R5.zxyy CLAMP COND(1)
                          						    	MAXs	R8.__z_ = -R5.zzzz CLAMP
2b: 15080808 18be156c f0070404	      ALU:	DOT3v	R8.___w = R7.zxyy, R4.yzww CLAMP COND(1)
2c: 04140808 1b1bc66c e0080808	      ALU:	ADDv	R8.__z_ = R8.wwww, -R8.zzzz COND(1)
                          						    	ADD_PREVs	R8.x___ = -R8.xxxx
2d: c8010808 18c6c66c ab08fd08	      ALU:	MULADDv	R8.x___ = R8.xxxx, R8.zzzz, C509.zzzz COND(1)
      0000502e 00005600     	COND_PRED_EXEC ADDR(0x2e) CNT(0x5) BOOL_ADDR(0x80) COND(1)
2e: c8020808 18b16c00 e1080800	      ALU:	MULv	R8._y__ = R8.yyyy, R8.xxxx COND(1)
2f: c8090808 186d1b00 a108ff00	      ALU:	MULv	R8.x__w = R8.yxxx, C511.wwww COND(1)
30: c8060808 181bc100 a1080100	      ALU:	MULv	R8._yz_ = R8.wwww, C257.yyzz COND(1)
31: c8060808 18b66c00 a1080200	      ALU:	MULv	R8._yz_ = R8.zzyy, C258.xxxx COND(1)
32: c8070801 18c0be00 e0010800	      ALU:	ADDv	R1.xyz_ = R1.xyzz, R8.zxyy COND(1)
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006033 00001200     	EXEC ADDR(0x33) CNT(0x6) BOOL_ADDR(0x80)
33: b4120808 001bb143 80020c0c	      ALU:	ADDv	R8._y__ = R2.wwww, C268.yyyy
                          						    	ADD_CONST_1	R8.x___ = C268.x, R1.w
34: b4430804 04b1b0c3 a0080a0c	      ALU:	ADDv	R4.xy__ = -R8.yyyy, C266.xyyy
                          						    	ADD_CONST_1	R8.__z_ = C268.z, R3.w
35: b84c0402 046cac4a 8008090b	      ALU:	ADDv	R2.__zw = -R8.xxxx, C265.xxxy
                          						    	SUB_CONST_0	R4.__z_ = C267.x, R8.z
36: b8880408 00bebe8a d000000b	      ALU:	DOT3v	R8.___w = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R4.___w = C267.y, R8.z
37: 58430808 00c7c71b e1020288	      ALU:	MULv	R8.xy__ = R2.wzzz, R2.wzzz
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R8).wwww
38: c8010808 0019196c f1040408	      ALU:	DOT2ADDv	R8.x___ = R8.xxxx, R4.ywww, R4.ywww
      00006039 00001200     	EXEC ADDR(0x39) CNT(0x6) BOOL_ADDR(0x80)
39: c8020808 00c4c4b1 f1040408	      ALU:	DOT2ADDv	R8._y__ = R8.yyyy, R4.xzzz, R4.xzzz
3a: 58100208 000000b1 e2080888	      ALU:	RECIPSQ_IEEE	R2.x___ = abs(R8).yyyy
3b: 58200208 0000006c e2080888	      ALU:	RECIPSQ_IEEE	R2._y__ = abs(R8).xxxx
3c: 40200808 000000b1 e2080888	      ALU:	LOG_IEEE	R8._y__ = abs(R8).yyyy
3d: 40100808 0000006c e2080888	      ALU:	LOG_IEEE	R8.x___ = abs(R8).xxxx
3e: a8870100 0062c649 c1000805	      ALU:	MULv	R0.xyz_ = R0.zyxx, R8.zzzz
                          						    	MUL_CONST_0	R1.___w = C261.x, R8.y
      0000603f 00001200     	EXEC ADDR(0x3f) CNT(0x6) BOOL_ADDR(0x80)
3f: a82c0808 0006acc8 c1020205	      ALU:	MULv	R8.__zw = R2.zzzw, R2.xxxy
                          						    	MUL_CONST_0	R8._y__ = C261.z, R8.x
40: 381f0802 000dad1b e1040201	      ALU:	MULv	R2 = R4.yxzw, R2.yxxy
                          						    	EXP_IEEE	R8.x___ = R1.wwww
41: 382c0808 0006c6b1 e1080008	      ALU:	MULv	R8.__zw = R8.zzzw, R0.zzzz
                          						    	EXP_IEEE	R8._y__ = R8.yyyy
42: c9080808 00186d1b f1020008	      ALU:	DOT2ADDv	R8.___w = R8.wwww, R2.xwww, R0.yxxx CLAMP
43: c9040808 00c56dc6 f1020008	      ALU:	DOT2ADDv	R8.__z_ = R8.zzzz, R2.yzzz, R0.yxxx CLAMP
44: c9030808 00b01900 a1080500	      ALU:	MULv	R8.xy__ = R8.xyyy, C261.ywww CLAMP
      00006045 00001200     	EXEC ADDR(0x45) CNT(0x6) BOOL_ADDR(0x80)
45: c8030808 04b01b00 a008fe00	      ALU:	ADDv	R8.xy__ = -R8.xyyy, C510.wwww
46: c8030800 00b0b000 a1080800	      ALU:	MULv	R0.xy__ = R8.xyyy, C264.xyyy
47: c8030808 001ab000 e1080800	      ALU:	MULv	R8.xy__ = R8.zwww, R8.xyyy
48: c8040808 00b01ac6 d10008fe	      ALU:	DOT2ADDv	R8.__z_ = C510.zzzz, R0.xyyy, R8.zwww
49: c8030802 00b0b000 a1080700	      ALU:	MULv	R2.xy__ = R8.xyyy, C263.xyyy
4a: c80c0802 00acac00 a1080600	      ALU:	MULv	R2.__zw = R8.xxxy, C262.xxxy
      0000404b 00002200     	EXEC_END ADDR(0x4b) CNT(0x4) BOOL_ADDR(0x80)
4b: c8030808 00c41900 e0020200	      ALU:	ADDv	R8.xy__ = R2.xzzz, R2.ywww
4c: c8070808 00bebebe eb060801	      ALU:	MULADDv	R8.xyz_ = R1.zxyy, R6.zxyy, R8.zxyy
4d: c8070800 00626c00 a1080d00	      ALU:	MULv	R0.xyz_ = R8.zyxx, C269.xxxx
4e: c80f8000 00000000 e2000000	      ALU:	MAXv	export0 = R0, R0	; COLOR
