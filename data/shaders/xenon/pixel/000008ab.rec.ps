      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 100080a1 1f1ffff8 00004000	      FETCH:	SAMPLE	R8.x___ = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: b4800006 00000043 c2060608	   (S)ALU:	ADD_CONST_1	R0.___w = C264.x, R1.w
06: 14080607 00b1b11b 2101ff02	      ALU:	MULv	R7.___w = C257.yyyy, C511.yyyy
07: c804060a 016cb11b ab080107	      ALU:	MULADDv	R10.__z_ = -R7.wwww, R8.xxxx, C257.yyyy
08: 048c000b 041bacb1 80000508	      ALU:	ADDv	R11.__zw = -R0.wwww, C261.xxxy
                          						    	ADD_PREVs	R0.___w = C264.yyyy
09: b8140b08 00bebe43 d0000006	      ALU:	DOT3v	R8.__z_ = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R11.x___ = C262.x, R0.w
      0000600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: 08810708 001bc6c6 a0030803	      ALU:	ADDv	R8.x___ = R3.wwww, C264.zzzz
                          						    	MULs	R7.___w = R3.zzzz
0b: b8230b08 046cb083 80080706	      ALU:	ADDv	R8.xy__ = -R8.xxxx, C263.xyyy
                          						    	SUB_CONST_0	R11._y__ = C262.y, R0.w
0c: 58830809 00b0b0c6 e1080888	      ALU:	MULv	R9.xy__ = R8.xyyy, R8.xyyy
                          						    	RECIPSQ_IEEE	R8.___w = abs(R8).zzzz
0d: c8080600 00b3b3b1 f10b0b09	      ALU:	DOT2ADDv	R0.___w = R9.yyyy, R11.wyyy, R11.wyyy
0e: c8010609 006e6e6c f10b0b09	      ALU:	DOT2ADDv	R9.x___ = R9.xxxx, R11.zxxx, R11.zxxx
0f: 58140a08 001b1b6c a1080189	      ALU:	MULv	R8.__z_ = R8.wwww, C257.wwww
                          						    	RECIPSQ_IEEE	R10.x___ = abs(R9).xxxx
      09406010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: 582c0a08 0006ac1b e1080080	      ALU:	MULv	R8.__zw = R8.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R10._y__ = abs(R0).wwww
11: c80f0609 0000c000 e1080a00	      ALU:	MULv	R9 = R8, R10.xyzz
12: c8030600 001ab000 e0090500	      ALU:	ADDv	R0.xy__ = R9.zwww, R5.xyyy
13: 10188001 1f1ff688 00004000	      FETCH:	SAMPLE	R8.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: b82800a1 1f1fffc7 00004000	      FETCH:	SAMPLE	R0._x__ = R5.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: c8010600 00c6c61b eb020207	   (S)ALU:	MULADDv	R0.x___ = R7.wwww, R2.zzzz, R2.zzzz
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: c8010600 00c6c66c eb010100	      ALU:	MULADDv	R0.x___ = R0.xxxx, R1.zzzz, R1.zzzz
17: 58880700 001b1b6c e1080680	      ALU:	MULv	R0.___w = R8.wwww, R6.wwww
                          						    	RECIPSQ_IEEE	R7.___w = abs(R0).xxxx
18: c8010600 001bc600 e1070100	      ALU:	MULv	R0.x___ = R7.wwww, R1.zzzz
19: c8040600 001bc600 e1070200	      ALU:	MULv	R0.__z_ = R7.wwww, R2.zzzz
1a: 14070601 00c0c01b e0060607	      ALU:	ADDv	R1.xyz_ = R6.xyzz, R6.xyzz
1b: 0c1f0602 000dadc6 e10b0a03	      ALU:	MULv	R2 = R11.yxzw, R10.yxxy
                          						    	MUL_PREVs	R6.x___ = R3.zzzz
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: b8430606 006d6c41 c10906ff	      ALU:	MULv	R6.xy__ = R9.yxxx, R6.xxxx
                          						    	SUB_CONST_0	R6.__z_ = C511.x, R0.y
1d: c9010606 006fc46c f1020006	      ALU:	DOT2ADDv	R6.x___ = R6.xxxx, R2.wxxx, R0.xzzz CLAMP
1e: c9020606 00b2c4b1 f1020006	      ALU:	DOT2ADDv	R6._y__ = R6.yyyy, R2.zyyy, R0.xzzz CLAMP
1f: a8270300 00c06c45 200a0003	      ALU:	ADDv	R0.xyz_ = C266.xyzz, C256.xxxx
                          						    	MUL_CONST_0	R3._y__ = C259.x, R6.y
20: a8170300 00c0c045 e0000702	      ALU:	ADDv	R0.xyz_ = R0.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R3.x___ = C258.x, R6.y
21: a8170201 00c0c084 e1010802	      ALU:	MULv	R1.xyz_ = R1.xyzz, R8.xyzz
                          						    	MUL_CONST_0	R2.x___ = C258.y, R6.x
      00006022 00002200     	EXEC_END ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: a8240202 006cb184 a1060403	      ALU:	MULv	R2.__z_ = R6.xxxx, C260.yyyy
                          						    	MUL_CONST_0	R2._y__ = C259.y, R6.x
23: a8470302 00c0b145 e1020404	      ALU:	MULv	R2.xyz_ = R2.xyzz, R4.yyyy
                          						    	MUL_CONST_0	R3.__z_ = C260.x, R6.y
24: c80b0606 00c06cc0 eb030402	      ALU:	MULADDv	R6.xy_w = R2.xyzz, R3.xyzz, R4.xxxx
25: 140b0606 00c0101b e1010600	      ALU:	MULv	R6.xy_w = R1.xyzz, R6.xyww
26: c80b0606 00c0c010 eb010006	      ALU:	MULADDv	R6.xy_w = R6.xyww, R1.xyzz, R0.xyzz
27: 0c878000 00106cc6 a1060906	      ALU:	MULv	export0.xyz_ = R6.xyww, C265.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.zzzz	; COLOR
      00000000 00000000     	NOP
