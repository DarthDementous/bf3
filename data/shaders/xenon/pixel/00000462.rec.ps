      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: c8070608 00ca1a00 e1020200	      ALU:	MULv	R8.xyz_ = R2.zwzz, R2.zwww
07: c8070608 00ca1ac0 eb010108	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R1.zwzz, R1.zwww
08: c80b0608 00cacb62 eb000008	      ALU:	MULADDv	R8.xy_w = R8.zyxx, R0.zwzz, R0.wwzz
09: 58810808 006c6c1b e0080888	      ALU:	ADDv	R8.x___ = R8.xxxx, R8.xxxx
                          						    	RECIPSQ_IEEE	R8.___w = abs(R8).wwww
0a: 58480807 001bc6b1 a0020988	      ALU:	ADDv	R7.___w = R2.wwww, C265.zzzz
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R8).yyyy
0b: c807060e 00cf1600 e1080000	      ALU:	MULv	R14.xyz_ = R8.wxzz, R0.zzww
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c8070609 00c81600 e1080100	      ALU:	MULv	R9.xyz_ = R8.xwzz, R1.zzww
0d: c8020608 046c1b00 e0090100	      ALU:	ADDv	R8._y__ = -R9.xxxx, R1.wwww
0e: 1407060a 01cf16b1 e108020e	      ALU:	MULv	R10.xyz_ = R8.wxzz, R2.zzww
0f: 04140808 04b11b1b e00a0200	      ALU:	ADDv	R8.__z_ = -R10.yyyy, R2.wwww
                          						    	ADD_PREVs	R8.x___ = R0.wwww
10: 4c110001 00bebec6 f0080804	      ALU:	DOT3v	R1.x___ = R8.zxyy, R8.zxyy
                          						    	RECIP_IEEE	R0.x___ = R4.zzzz
11: 58130100 006cb06c e1000481	      ALU:	MULv	R0.xy__ = R0.xxxx, R4.xyyy
                          						    	RECIPSQ_IEEE	R1.x___ = abs(R1).xxxx
      05006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8070608 00c06c00 e1080100	      ALU:	MULv	R8.xyz_ = R8.xyzz, R1.xxxx
13: c80f0608 00a6cd00 f2080800	      ALU:	CUBEv	R8 = R8.zzxy, R8.yxzz
14: 4c14010b 001b1bc6 e2080888	      ALU:	MAXv	R11.__z_ = R8.wwww, R8.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R8).zzzz
15: c803060b 006d6cb1 cb0801fc	      ALU:	MULADDv	R11.xy__ = C508.yyyy, R8.yxxx, R1.xxxx
16: b81890a1 1f1ffff8 00004000	      FETCH:	SAMPLE	R9.x___ = R5.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 102900a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R16.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 1038c001 1f1ff63f 00004000	      FETCH:	SAMPLE	R12.__xw = R0.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 9048b161 1f1ff688 0000c000	      FETCH:	SAMPLE	R11.xyzw = R11.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 100850a1 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: c8080608 046c1b00 200bfc00	   (S)ALU:	ADDv	R8.___w = -C267.xxxx, C508.wwww
1c: c8010600 006c6c00 2101ff00	      ALU:	MULv	R0.x___ = C257.xxxx, C511.xxxx
1d: bc110c01 00c66c47 a504fc08	      ALU:	SETGTv	R1.x___ = R4.zzzz, C508.xxxx
                          						    	SUB_CONST_1	R12.x___ = C264.x, R7.w
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: bc220c00 001b1b87 a10bfe08	      ALU:	MULv	R0._y__ = R11.wwww, C510.wwww
                          						    	SUB_CONST_1	R12._y__ = C264.y, R7.w
1f: 14070608 00bebf1b e10c0c00	      ALU:	MULv	R8.xyz_ = R12.zxyy, R12.wxyy
20: 04810001 006c6c6c c1080109	      ALU:	MULv	R1.x___ = R8.xxxx, R1.xxxx
                          						    	ADD_PREVs	R0.___w = C265.xxxx
21: 14070611 00c0c01b e0060601	      ALU:	ADDv	R17.xyz_ = R6.xyzz, R6.xyzz
22: 0447060f 00c06cb1 000d0009	      ALU:	ADDv	R15.xyz_ = C269.xyzz, C256.xxxx
                          						    	ADD_PREVs	R6.__z_ = C265.yyyy
23: b8170d12 00c0c046 a105fe07	      ALU:	MULv	R18.xyz_ = R5.xyzz, C510.xyzz
                          						    	SUB_CONST_0	R13.x___ = C263.x, R6.z
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: b8270d04 00c0c086 e1110507	      ALU:	MULv	R4.xyz_ = R17.xyzz, R5.xyzz
                          						    	SUB_CONST_0	R13._y__ = C263.y, R6.z
25: b8480d07 00b11b43 45fd0b06	      ALU:	SETGTv	R7.___w = C509.yyyy, R11.wwww
                          						    	SUB_CONST_0	R13.__z_ = C262.x, R0.w
26: b8810d06 00bebe83 d0121106	      ALU:	DOT3v	R6.x___ = R18.zxyy, R17.zxyy
                          						    	SUB_CONST_0	R13.___w = C262.y, R0.w
27: b0120606 006c1b41 8206fdfd	      ALU:	MAXv	R6._y__ = R6.xxxx, C509.wwww
                          						    	ADD_CONST_0	R6.x___ = C509.x, R0.y
28: b0120806 00b1b180 8306fdfd	      ALU:	MINv	R6._y__ = R6.yyyy, C509.yyyy
                          						    	ADD_CONST_0	R8.x___ = C509.y, R0.x
29: c8080604 00b3b3c6 f10d0d08	      ALU:	DOT2ADDv	R4.___w = R8.zzzz, R13.wyyy, R13.wyyy
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: c8020608 006e6eb1 f10d0d08	      ALU:	DOT2ADDv	R8._y__ = R8.yyyy, R13.zxxx, R13.zxxx
2b: 2c110608 006c6c6c a1080206	      ALU:	MULv	R8.x___ = R8.xxxx, C258.xxxx
                          						    	FRACs	R6.x___ = R6.xxxx
2c: c807060f 006cc0c0 eb08100f	      ALU:	MULADDv	R15.xyz_ = R15.xyzz, R8.xxxx, R16.xyzz
2d: c8010606 02b16c00 e0000600	      ALU:	ADDv	R6.x___ = R0.yyyy, -R6.xxxx
2e: b0110208 04c6c6c4 e10a02fc	      ALU:	MULv	R8.x___ = -R10.zzzz, R2.zzzz
                          						    	ADD_CONST_0	R2.x___ = C508.z, R6.x
2f: 58280101 04c6c6b1 e1090188	      ALU:	MULv	R1.___w = -R9.zzzz, R1.zzzz
                          						    	RECIPSQ_IEEE	R1._y__ = abs(R8).yyyy
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: 58470107 00c0c01b e00f0784	      ALU:	ADDv	R7.xyz_ = R15.xyzz, R7.xyzz
                          						    	RECIPSQ_IEEE	R1.__z_ = abs(R4).wwww
31: c8020600 04c6c61b eb0e0001	      ALU:	MULADDv	R0._y__ = R1.wwww, -R14.zzzz, R0.zzzz
32: 140f060d 000df26c e10d010c	      ALU:	MULv	R13 = R13.yxzw, R1.zyyz
33: 0c1c0000 00066cb1 e10d0e01	      ALU:	MULv	R0.__zw = R13.zzzw, R14.xxxx
                          						    	MUL_PREVs	R0.x___ = R1.yyyy
34: 38860108 0061b16c e10d0902	      ALU:	MULv	R8._yz_ = R13.yyxx, R9.yyyy
                          						    	EXP_IEEE	R1.___w = R2.xxxx
35: 14070602 001bc0b1 e1010b0c	      ALU:	MULv	R2.xyz_ = R1.wwww, R11.xyzz
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: c8070602 001bc0c0 ee07020b	      ALU:	CNDGTv	R2.xyz_ = R11.xyzz, R7.wwww, R2.xyzz
37: 0c2e0009 0001fcc6 e0000801	      ALU:	ADDv	R9._yzw = R0.yyzw, R8.xxyz
                          						    	MUL_PREVs	R0._y__ = R1.zzzz
38: c90c0601 00716cdb eb000a09	      ALU:	MULADDv	R1.__zw = R9.wwwz, R0.yyyx, R10.xxxx CLAMP
39: ac120801 006c1b82 c1010104	      ALU:	MULv	R1._y__ = R1.xxxx, R1.wwww
                          						    	MUL_CONST_1	R8.x___ = C260.y, R1.z
3a: ac230900 04b0b141 8009fd04	      ALU:	ADDv	R0.xy__ = -R9.xyyy, C509.yyyy
                          						    	MUL_CONST_1	R9._y__ = C260.x, R1.y
3b: 14270602 00b1c0b1 e1060201	      ALU:	MULv	R2.xyz_ = R6.yyyy, R2.xyzz
                          						    	MAXs	R6._y__ = R1.yyyy
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: a8160908 00666145 a1010503	      ALU:	MULv	R8._yz_ = R1.zzxx, C261.yyxx
                          						    	MUL_CONST_0	R9.x___ = C259.x, R6.y
3d: ac840909 00c61b82 c1080103	      ALU:	MULv	R9.__z_ = R8.zzzz, R1.wwww
                          						    	MUL_CONST_1	R9.___w = C259.y, R1.z
3e: 084f0001 0000acb1 e1090300	      ALU:	MULv	R1 = R9, R3.xxxy
                          						    	MULs	R0.__z_ = R0.yyyy
3f: c8060608 00bcb1c1 eb080301	      ALU:	MULADDv	R8._yz_ = R1.yyzz, R8.xxyy, R3.yyyy
40: 08810408 006c1bc6 e0010100	      ALU:	ADDv	R8.x___ = R1.xxxx, R1.wwww
                          						    	MULs	R4.___w = R0.zzzz
41: c80f0601 00000000 e1040800	      ALU:	MULv	R1 = R4, R8
      00006042 00002200     	EXEC_END ADDR(0x42) CNT(0x6) BOOL_ADDR(0x80)
42: c8070601 00c0c0c0 eb040701	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R4.xyzz, R7.xyzz
43: 15040600 001b6c1b a0010b05	      ALU:	ADDv	R0.__z_ = R1.wwww, C267.xxxx CLAMP
44: 0c870602 00c0c61b e1020006	      ALU:	MULv	R2.xyz_ = R2.xyzz, R0.zzzz
                          						    	MUL_PREVs	R6.___w = R6.wwww
45: 14070606 00b4c61b a102fd06	      ALU:	MULv	R6.xyz_ = R2.xzyy, C509.zzzz
46: c8070606 00b4c6c0 ab060a01	      ALU:	MULADDv	R6.xyz_ = R1.xyzz, R6.xzyy, C266.zzzz
47: 0c878000 00c06c6c a1060c00	      ALU:	MULv	export0.xyz_ = R6.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
