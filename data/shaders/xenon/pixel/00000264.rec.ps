      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      02556004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 10387061 1f1ff478 00004000	      FETCH:	SAMPLE	R7.x_yz = R3.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: 10289061 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R3.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 10086061 1f1ff688 00004000	      FETCH:	SAMPLE	R6.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: b8185061 1f1ff1ff 00004000	      FETCH:	SAMPLE	R5.___x = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 2881030a 006c6c1b a1000301	   (S)ALU:	MULv	R10.x___ = R0.xxxx, C259.xxxx
                          						    	SETNEs	R3.___w = R1.wwww
09: 1404040a 006c6c6c a1000500	      ALU:	MULv	R10.__z_ = R0.xxxx, C261.xxxx
      0000600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: 0c210a03 00b1b16c 81000304	      ALU:	MULv	R3.x___ = R0.yyyy, C259.yyyy
                          						    	MUL_PREVs	R10._y__ = C260.xxxx
0b: 14040403 00b1b1b1 a1000500	      ALU:	MULv	R3.__z_ = R0.yyyy, C261.yyyy
0c: c8040400 006cb16c 0b01ffff	      ALU:	MULADDv	R0.__z_ = C511.xxxx, C257.xxxx, C511.yyyy
0d: 0c280300 00bebeb1 d0020204	      ALU:	DOT3v	R0.___w = R2.zxyy, R2.zxyy
                          						    	MUL_PREVs	R3._y__ = C260.yyyy
0e: 58820007 00bebe1b f0010180	      ALU:	DOT3v	R7._y__ = R1.zxyy, R1.zxyy
                          						    	RECIPSQ_IEEE	R0.___w = abs(R0).wwww
0f: a8470008 00c06c42 00080002	      ALU:	ADDv	R8.xyz_ = C264.xyzz, C256.xxxx
                          						    	MUL_CONST_0	R0.__z_ = C258.x, R0.z
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: c8070408 00c6c0c0 eb000908	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R0.zzzz, R9.xyzz
11: 59480000 001bc6b1 e1000287	      ALU:	MULv	R0.___w = R0.wwww, R2.zzzz CLAMP
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R7).yyyy
12: 14070409 00c0c0c6 e0040400	      ALU:	ADDv	R9.xyz_ = R4.xyzz, R4.xyzz
13: 0e470003 00c01bc6 e1030201	      ALU:	MULv	R3.xyz_ = R3.xyzz, R2.wwww
                          						    	MUL_PREVs	R0.__z_ = R1.zzzz CLAMP
14: c8070403 00b41bb4 eb0a0103	      ALU:	MULADDv	R3.xyz_ = R3.xzyy, R10.xzyy, R1.wwww
15: c90c0400 00066cb1 8b000606	      ALU:	MULADDv	R0.__zw = C262.yyyy, R0.zzzw, C262.xxxx CLAMP
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: 288c0100 0006061b e1000002	      ALU:	MULv	R0.__zw = R0.zzzw, R0.zzzw
                          						    	SETNEs	R1.___w = R2.wwww
17: bc8c0500 00060647 c10000ff	      ALU:	MULv	R0.__zw = R0.zzzw, R0.zzzw
                          						    	SUB_CONST_1	R5.___w = C511.x, R5.w
18: a8270701 00c0c083 c1090604	      ALU:	MULv	R1.xyz_ = R9.xyzz, R6.xyzz
                          						    	MUL_CONST_0	R7._y__ = C260.y, R0.w
19: a8170702 0014c083 c1070403	      ALU:	MULv	R2.xyz_ = R7.xzww, R4.xyzz
                          						    	MUL_CONST_0	R7.x___ = C259.y, R0.w
1a: a8170805 00c0c042 c0080503	      ALU:	ADDv	R5.xyz_ = R8.xyzz, R5.xyzz
                          						    	MUL_CONST_0	R8.x___ = C259.x, R0.z
1b: a8240808 00c66c42 81000504	      ALU:	MULv	R8.__z_ = R0.zzzz, C261.xxxx
                          						    	MUL_CONST_0	R8._y__ = C260.x, R0.z
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: a8470706 00c06c83 c1080005	      ALU:	MULv	R6.xyz_ = R8.xyzz, R0.xxxx
                          						    	MUL_CONST_0	R7.__z_ = C261.y, R0.w
1d: 14070400 00c0b11b e1070006	      ALU:	MULv	R0.xyz_ = R7.xyzz, R0.yyyy
1e: 0c870400 00c01b1b e1000104	      ALU:	MULv	R0.xyz_ = R0.xyzz, R1.wwww
                          						    	MUL_PREVs	R4.___w = R4.wwww
1f: c8070404 00b41bb4 eb060300	      ALU:	MULADDv	R4.xyz_ = R0.xzyy, R6.xzyy, R3.wwww
20: 14070404 00b4c01b e1020404	      ALU:	MULv	R4.xyz_ = R2.xzyy, R4.xyzz
21: c8070404 00c0b4b4 eb010304	      ALU:	MULADDv	R4.xyz_ = R4.xzyy, R1.xyzz, R3.xzyy
      00002022 00002200     	EXEC_END ADDR(0x22) CNT(0x2) BOOL_ADDR(0x80)
22: c8070404 00c0c0c0 eb010504	      ALU:	MULADDv	R4.xyz_ = R4.xyzz, R1.xyzz, R5.xyzz
23: 0c878000 00c06c1b a1040705	      ALU:	MULv	export0.xyz_ = R4.xyzz, C263.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
      00000000 00000000     	NOP
