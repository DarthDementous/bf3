      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: 14180a0a 006cb16c 210dfe06	      ALU:	MULv	R10.___w = C269.xxxx, C510.yyyy
                          						    	MAXs	R10.x___ = R6.xxxx
07: 14430a01 00b0b0b1 a1890406	      ALU:	MULv	R1.xy__ = abs(R9).xyyy, C260.xyyy
                          						    	MAXs	R10.__z_ = R6.yyyy
08: b800a0c1 1f1fffc7 00004000	      FETCH:	SAMPLE	R10._x__ = R6.zwz CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 10305021 1f1ffeff 00004000	      FETCH:	SAMPLE	R5.__w_ = R1.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 102010c1 1f1ff478 00004000	      FETCH:	SAMPLE	R1.x_yz = R6.xyx CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 1060b0c1 1f1ff67f 00004000	      FETCH:	SAMPLE	R11.__yw = R6.xyx CONST(6) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0009600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: e050b141 1f1ffff8 00008000	      FETCH:	SAMPLE	R11.x___ = R10.xzw CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 4c88000a 006c1b1b 2101fe05	   (S)ALU:	MULv	R10.___w = C257.xxxx, C510.wwww
                          						    	RECIP_IEEE	R0.___w = R5.wwww
0e: bc230b09 011b6dc8 e10005fe	      ALU:	MULv	R9.xy__ = R0.wwww, R5.yxxx
                          						    	SUB_CONST_1	R11._y__ = -C510.z, -R11.x
0f: 281b0d05 00121e1b e00b0b02	      ALU:	ADDv	R5.xy_w = R11.zyww, R11.zxww
                          						    	SETNEs	R13.x___ = R2.wwww
10: b4140b0b 00cfc084 9001fffd	      ALU:	DOT3v	R11.__z_ = R1.wxzz, C511.xyzz
                          						    	ADD_CONST_1	R11.x___ = C509.y, R5.x
11: b4250b0a 00b26d87 8105fefd	      ALU:	MULv	R10.x_z_ = R5.zyyy, C510.yxxx
                          						    	ADD_CONST_1	R11._y__ = C509.y, R5.w
      09506012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: bc470905 00cab4c8 c10a0bfe	      ALU:	MULv	R5.xyz_ = R10.zwzz, R11.xzyy
                          						    	SUB_CONST_1	R9.__z_ = C510.z, R9.x
13: c80c0807 00ec1bf1 ab05ff09	      ALU:	MULADDv	R7.__zw = R9.yyyz, R5.xxxz, C511.wwww
14: 1078e0c1 1f1ff688 00004000	      FETCH:	SAMPLE	R14.xyzw = R6.xyx CONST(7) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: 1018c0e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R7.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: b84850e1 1f1ff478 00004000	      FETCH:	SAMPLE	R5.x_yz = R7.zwz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 28230d0f 046cb01b a0040803	   (S)ALU:	ADDv	R15.xy__ = -R4.xxxx, C264.xyyy
                          						    	SETNEs	R13._y__ = R3.wwww
      00006018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 14020801 01bebeb1 f0000004	      ALU:	DOT3v	R1._y__ = R0.zxyy, R0.zxyy
19: 044c0f10 04c6ac6c 80040a09	      ALU:	ADDv	R16.__zw = -R4.zzzz, C266.xxxy
                          						    	ADD_PREVs	R15.__z_ = C265.xxxx
1a: 14080804 01bebeb1 f0020204	      ALU:	DOT3v	R4.___w = R2.zxyy, R2.zxyy
1b: 04870f06 00c0c0b1 c0080809	      ALU:	ADDv	R6.xyz_ = R8.xyzz, R8.xyzz
                          						    	ADD_PREVs	R15.___w = C265.yyyy
1c: ac180400 00bebe84 d003030e	      ALU:	DOT3v	R0.___w = R3.zxyy, R3.zxyy
                          						    	MUL_CONST_1	R4.x___ = C270.y, R5.x
1d: ac270407 00c06c86 810c000e	      ALU:	MULv	R7.xyz_ = R12.xyzz, C256.xxxx
                          						    	MUL_CONST_1	R4._y__ = C270.y, R5.z
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: 58470409 00c0c01b e1060e80	      ALU:	MULv	R9.xyz_ = R6.xyzz, R14.xyzz
                          						    	RECIPSQ_IEEE	R4.__z_ = abs(R0).wwww
1f: 58880400 001b1b1b e10e0884	      ALU:	MULv	R0.___w = R14.wwww, R8.wwww
                          						    	RECIPSQ_IEEE	R4.___w = abs(R4).wwww
20: 1407080b 0014c01b e1010804	      ALU:	MULv	R11.xyz_ = R1.xzww, R8.xyzz
21: 0f120808 00c6c6c6 e1040302	      ALU:	MULv	R8._y__ = R4.zzzz, R3.zzzz CLAMP
                          						    	MUL_PREVs	R8.x___ = R2.zzzz CLAMP
22: c9030810 00b06cb1 8b080c0c	      ALU:	MULADDv	R16.xy__ = C268.yyyy, R8.xyyy, C268.xxxx CLAMP
23: 584f0408 00aaaab1 e1101081	      ALU:	MULv	R8 = R16.zwxy, R16.zwxy
                          						    	RECIPSQ_IEEE	R4.__z_ = abs(R1).yyyy
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: c8020801 001919b1 f10f0f08	      ALU:	DOT2ADDv	R1._y__ = R8.yyyy, R15.ywww, R15.ywww
25: c8080804 00c4c46c f10f0f08	      ALU:	DOT2ADDv	R4.___w = R8.xxxx, R15.xzzz, R15.xzzz
26: 41140004 00c6c61b e1040084	      ALU:	MULv	R4.__z_ = R4.zzzz, R0.zzzz CLAMP
                          						    	LOG_IEEE	R0.x___ = abs(R4).wwww
27: 40270007 00c0c0b1 e1070e81	      ALU:	MULv	R7.xyz_ = R7.xyzz, R14.xyzz
                          						    	LOG_IEEE	R0._y__ = abs(R1).yyyy
28: ac130008 00b0c480 81000bfe	      ALU:	MULv	R8.xy__ = R0.xyyy, C267.xzzz
                          						    	MUL_CONST_1	R0.x___ = C510.y, R1.x
29: 381c0808 0006066c e1080808	      ALU:	MULv	R8.__zw = R8.zzzw, R8.zzzw
                          						    	EXP_IEEE	R8.x___ = R8.xxxx
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 38220801 00b1c6b1 a005fe08	      ALU:	ADDv	R1._y__ = R5.yyyy, C510.zzzz
                          						    	EXP_IEEE	R8._y__ = R8.yyyy
2b: ad230008 00b01982 81080bfe	      ALU:	MULv	R8.xy__ = R8.xyyy, C267.ywww CLAMP
                          						    	MUL_CONST_1	R0._y__ = C510.y, R1.z
2c: ac430008 046dc683 8008fefe	      ALU:	ADDv	R8.xy__ = -R8.yxxx, C510.zzzz
                          						    	MUL_CONST_1	R0.__z_ = C510.y, R1.w
2d: a8470c00 00c0c049 c1000c06	      ALU:	MULv	R0.xyz_ = R0.xyzz, R12.xyzz
                          						    	MUL_CONST_0	R12.__z_ = C262.x, R8.y
2e: a8280c0b 00b16c49 8201fd07	      ALU:	MAXv	R11.___w = R1.yyyy, C509.xxxx
                          						    	MUL_CONST_0	R12._y__ = C263.x, R8.y
2f: a82c0108 00067188 c1080807	      ALU:	MULv	R8.__zw = R8.zzzw, R8.yyyx
                          						    	MUL_CONST_0	R1._y__ = C263.y, R8.x
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: a843010e 001ab088 81080706	      ALU:	MULv	R14.xy__ = R8.zwww, C263.xyyy
                          						    	MUL_CONST_0	R1.__z_ = C262.y, R8.x
31: a8490e0c 00c56c4a 81080506	      ALU:	MULv	R12.x__w = R8.yzzz, C261.xxxx
                          						    	MUL_CONST_0	R14.__z_ = C262.x, R8.z
32: a8890e01 0018b18b 81080506	      ALU:	MULv	R1.x__w = R8.xwww, C261.yyyy
                          						    	MUL_CONST_0	R14.___w = C262.y, R8.w
33: 140f0808 000dad1b e10e0d01	      ALU:	MULv	R8 = R14.yxzw, R13.yxxy
34: 0c160808 00c11cb1 e008080d	      ALU:	ADDv	R8._yz_ = R8.yyzz, R8.xxww
                          						    	MUL_PREVs	R8.x___ = R13.yyyy
35: c8010808 001b6c6c eb0c0d08	      ALU:	MULADDv	R8.x___ = R8.xxxx, R12.wwww, R13.xxxx
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: 40870801 00c01bc6 e1010304	      ALU:	MULv	R1.xyz_ = R1.xyzz, R3.wwww
                          						    	LOG_IEEE	R8.___w = R4.zzzz
37: c8070801 00b41bb4 eb0c0201	      ALU:	MULADDv	R1.xyz_ = R1.xzyy, R12.xzyy, R2.wwww
38: ac4f0408 008fff87 c10b080e	      ALU:	MULv	R8 = R11.wxzy, R8.wxyz
                          						    	MUL_CONST_1	R4.__z_ = C270.y, R5.w
39: c80e0808 008c8c01 eb090108	      ALU:	MULADDv	R8._yzw = R8.yyzw, R9.xxzy, R1.xxzy
3a: 38170800 00c0c66c a100fd08	      ALU:	MULv	R0.xyz_ = R0.xyzz, C509.zzzz
                          						    	EXP_IEEE	R8.x___ = R8.xxxx
3b: 14170800 00c06cb1 e100080a	      ALU:	MULv	R0.xyz_ = R0.xyzz, R8.xxxx
                          						    	MAXs	R8.x___ = R10.yyyy
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: b8170800 00c0c0c8 810002fe	      ALU:	MULv	R0.xyz_ = R0.xyzz, C258.xyzz
                          						    	SUB_CONST_0	R8.x___ = C510.z, R8.x
3d: b8170100 00c06cc8 a10003fe	      ALU:	MULv	R0.xyz_ = R0.xyzz, C259.xxxx
                          						    	SUB_CONST_0	R1.x___ = C510.z, R10.x
3e: c8070800 00b4b4b4 eb070600	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R7.xzyy, R6.xzyy
3f: c80e0808 006c8cd1 eb010008	      ALU:	MULADDv	R8._yzw = R8.yywz, R1.xxxx, R0.xxzy
40: 140e0808 02d18c1b e0080400	      ALU:	ADDv	R8._yzw = R8.yywz, -R4.xxzy
41: c80e0808 00d16cfc ab080d04	      ALU:	MULADDv	R8._yzw = R4.xxyz, R8.yywz, C269.xxxx
      00001042 00002200     	EXEC_END ADDR(0x42) CNT(0x1) BOOL_ADDR(0x80)
42: 0c878000 00156c6c a1080e08	      ALU:	MULv	export0.xyz_ = R8.yzww, C270.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R8.xxxx	; COLOR
