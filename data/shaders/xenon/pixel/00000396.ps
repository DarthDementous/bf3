//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $suncolour     c1       1
//   $sunintensity  c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $apptime       c14      1
//   $compressedhdr c15      1
//   $lmap          s0       1
//   $spec          s1       1
//   $screenshadmap s2       1
//   $envmap        s3       1
//   $frametexture  s4       1
//   $noisetex      s5       1
//   $bump          s6       1
//   $diff          s7       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c14
defconst $bump, sampler2d, object, [1, 1], s6
defconst $compressedhdr, float, vector, [1, 2], c15
defconst $diff, sampler2d, object, [1, 1], s7
defconst $envmap, samplercube, object, [1, 1], s3
defconst $frametexture, sampler2d, object, [1, 1], s4
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s0
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $noisetex, sampler3d, object, [1, 1], s5
defconst $screenshadmap, sampler2d, object, [1, 1], s2
defconst $spec, sampler2d, object, [1, 1], s1
defconst $suncolour, float, vector, [1, 3], c1
defconst $sunintensity, float, scalar, [1, 1], c2
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=13
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 30
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_color_centroid r7

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 0, 0, 0, 0
def c251, 2, 10, 4, 0
def c252, 0, 1.5, 1, -127.5
def c253, 0.5, 3.29999995, 0.0529999994, -1
def c254, 0.143999994, 0.298999995, 0.587000012, 255
def c255, 0.0599999987, 0.150000006, 0.289999992, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mul r9.z, c14.x, c253.x
               + movs r9.x, r6.x
/*    9   */     mul r4.yz, r8_abs.xxy, c3.xxy
               + movs r9.y, r6.y
/*   10   */     tfetch2D r10.xyz_, r6.xy, tf1, FetchValidOnly=false
/*   11   */     tfetch3D r4.x___, r9.xyz, tf5, FetchValidOnly=false
/*   12   */     tfetch2D r8.__yw, r6.xy, tf6, FetchValidOnly=false
/*   13   */     tfetch2D r1._w__, r4.yz, tf2, FetchValidOnly=false
/*    1.0 */     exec
/*   14   */     serialize
                 mul r13.z, c12.x, c251.y
/*   15   */     dp3 r8.x, r3.zxy, r3.zxy
               + addsc r8.y, c11.y, r1.w
/*   16   */     mul r4.yzw, r2.zzzw, r2.zzw
               + movs r7._, r0.w
/*   17   */     add r9.x, r2.w, c11.z
               + adds_prev r3.w, c11.x
/*   18   */     mad r8.zw, r8.zzzw, c251.x, c253.w
/*   19   */     add r11.xy, -r9.x, c10.xy
               + rcp r9.x, r5.w
/*    1.1 */     exec
/*   20   */     mul r12.xz, r9.x, r5.xy
               + subsc r11.z, c8.x, r3.w
/*   21   */     add r13.xy, -r8.y, c9.xy
               + subsc r11.w, c8.y, r3.w
/*   22   */     mad r4.yzw, r1.zzwz, r1.zzw, r4.yywz
/*   23   */     mad r4.yzw, r0.zzwz, r0.zzw, r4.yyzw
/*   24   */     mul r5.xz, r13.xy, r13.xy
               + rsq r0.y, r8_abs.x
/*   25   */     dp2add r5.z, r11.wy, r11.wy, r5.z
/*    2.0 */     exec
/*   26   */     add r12.y, -r12.z, c252.z
               + rsq r9.y, r4_abs.z
/*   27   */     mul_sat r3.w, r0.y, r3.z
               + rsq r9.z, r4_abs.y
/*   28   */     dp2add r0.y, r11.zx, r11.zx, r5.x
/*   29   */     add r9.x, r4.w, r4.w
               + rsq r5.x, r0_abs.y
/*   30   */     mul r3.xyz, r9.zyx, r1.zwz
               + rsq r5.y, r5_abs.z
/*   31   */     add r8.y, -r3.z, r1.w
               + log r0.y, r0_abs.y
/*    2.1 */     exec
/*   32   */     mul r4.yzw, r9.yyxz, r0.wwz
/*   33   */     add r8.x, -r4.z, r0.w
               + log r0.x, r5_abs.z
/*   34   */     mul r9.xyz, r9.zxy, r2.zzw
               + mulsc r3.z, c253.x, r1.y
/*   35   */     dp3 r5.z, r10.zxy, c255.xyz
               + mulsc r2.x, c4.x, r0.y
/*   36   */     mul r1.xyw, r13.xyz, r5.xyz
               + mulsc r2.y, c4.z, r0.x
/*   37   */     mul r5, r11.zwyx, r5.xyyx
               + exp r2.x, r2.x
/*    3.0 */     exec
/*   38   */     mul r11.xy, r1.xy, r3.x
               + exp r2.y, r2.y
/*   39   */     mad r5.xy, r5.xy, r4.w, r11.xy
/*   40   */     mad_sat r11.yz, r5.wwz, r9.x, r5.xxy
/*   41   */     mul_sat r2.xy, r2.xy, c4.yw
               + subsc r4.w, -c252.z, -r4.x
/*   42   */     add r11.xw, -r2.xy, c252.z
               + movs r7._, -r4.y
/*   43   */     mul r2.xy, r11.zy, r11.wx
               + muls_prev r12.w, r0.z
/*    3.1 */     exec
/*   44   */     mul r4.yz, r2.yyx, c6.xxy
               + movs r7._, -r3.y
/*   45   */     add r4.zw, r4.yyyw, r4.zzzx
               + muls_prev r5.x, r1.z
/*   46   */     mul r0.y, r4.w, c255.w
               + addsc r0.x, c252.z, r1.w
/*   47   */     mul r0.yz, r0.y, r8.zzw
               + movs r0.x, r0.x
/*   48   */     mul r5.yz, r0.yyz, c253.z
               + movs r0.y, c252.x
/*   49   */     add r5.xyz, r12.wxy, r5.xyz
               + maxs r3.x, r0.xy
/*    4.0 */     exec
/*   50   */     mad r3.y, -r9.z, r2.z, r5.x
/*   51   */     add r3.yz, -r3.yyz, c252.z
               + log r3.w, r3.w
/*   52   */     mul r5.xw, r3.yx, r3.yw
               + movs r7._, -r9.y
/*   53   */     mul r8.w, r5.x, r5.x
               + adds_prev r8.z, r2.w
/*   54   */     dp3 r0.y, r8.zxy, r8.zxy
/*   55   */     add r0.x, -c13.x, c251.x
               + rsq r0.y, r0_abs.y
/*    4.1 */     exec
/*   56   */     mul r1, r8.wxyz, r0.xy
/*   57   */     cube r0, r1.wwyz, r1.zyw
/*   58   */     mov r8.z, r0.w
               + rcp r2.z, r0_abs.z
/*   59   */     mad r8.xy, r0.yx, r2.z, c252.y
/*   60   */     tfetch2D r1._xyz, r6.zw, tf0
/*   61   */     tfetch2D r0.x_yz, r5.yz, tf4
/*    5.0 */     exec
/*   62   */     tfetchCube r12, r8.xyz, tf3
/*   63   */     tfetch2D r9, r6.xy, tf7
/*   64   */     serialize
                 mul oC0.w, r9.w, r7.w
/*   65   */     add r8.xyz, r7.xyz, r7.xyz
               + movs r7.x, r12.w
/*   66   */     mul r6.xyz, r10.xyz, c253.x
               + mulsc r7.y, c0.x, r1.y
/*   67   */     mul r5.xyz, r8.xyz, r9.xyz
               + mulsc r7.z, c0.x, r1.z
/*    5.1 */     exec
/*   68   */     sgt r0.y, c252.z, r12.w
               + mulsc r7.w, c0.x, r1.w
/*   69   */     mul r9.xyz, r7.yzw, r9.xyz
               + mulsc r7.y, c254.w, r7.x
/*   70   */     mul r10.xyz, r6.xyz, r1.yzw
               + addsc r7.x, c253.x, r7.y
/*   71   */     dp3 r7.z, r5.zxy, c254.xyz
               + frcs r7.x, r7.x
/*   72   */     mul r10.xyz, r10.xyz, c251.z
               + movs r7.z, r7.z
/*   73   */     add r7.x, r7.y, -r7.x
               + movs r7.w, c255.y
/*    6.0 */     exec
/*   74   */     add r7.x, r7.x, c252.w
               + maxs r7.y, r7.zw
/*   75   */     min r7.w, r7.y, c252.z
               + exp r7.x, r7.x
/*   76   */     mul r7.xyz, r7.x, r12.xyz
/*   77   */     cndgt r7.xyz, r0.y, r7.xyz, r12.xyz
/*   78   */     mul r2.zw, r11.xxxw, c7.xxxy
/*   79   */     mul r7.yzw, r7.w, r7.xxyz
               + mulsc r11.x, c5.x, r2.y
/*    6.1 */     exec
/*   80   */     mul r11.zw, r2.zzzw, r11.yyyz
               + mulsc r11.y, c5.y, r2.x
/*   81   */     add r4.xy, r11.xz, r11.yw
               + exp r7.x, r5.w
/*   82   */     mul r2.xyz, r10.xyz, r7.x
/*   83   */     mul r2.xyz, r2.xyz, c1.xyz
/*   84   */     mul r2.xyz, r2.xyz, c2.x
/*   85   */     mad r2.xyz, r9.xzy, r8.xzy, r2.xzy
/*    7.0 */     exec
/*   86   */     add_sat r7.x, r1.x, c13.x
/*   87   */     mul r7.xyz, r7.yzw, r7.x
/*   88   */     mul r7.yzw, r7.xxyz, r6.xxyz
               + mulsc r7.x, c15.y, r0.x
/*   89   */     mul r6.xyz, r7.yzw, c253.y
               + mulsc r7.y, c15.y, r0.z
/*   90   */     mul r6.xyz, r6.xyz, c12.z
               + mulsc r7.z, c15.y, r0.w
/*   91   */     mad r0.xyz, r6.xzy, r1.ywz, -r7.xzy
/*    7.1 */     exece
/*   92   */     mad r0.xyz, r5.xzy, r4.xyz, r0.xyz
/*   93   */     mad r0.xyz, r3.z, r2.xyz, r0.xyz
/*   94   */     mad r7.xyz, r0.xzy, c14.x, r7.xyz
/*   95   */     mul oC0.xyz, r7.xyz, c15.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] color0 r7.xyzw

