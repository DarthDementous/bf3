      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 10003081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R3.___x = R4.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: c8040500 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
06: c8080500 00b1b100 2100ff00	      ALU:	MULv	R0.___w = C256.yyyy, C511.yyyy
07: c8080503 011bb11b ab030000	      ALU:	MULADDv	R3.___w = -R0.wwww, R3.wwww, C256.yyyy
08: 58430006 00b0b0c6 a1860480	      ALU:	MULv	R6.xy__ = abs(R6).xyyy, C260.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
09: a8830009 04c6b002 80030a00	      ALU:	ADDv	R9.xy__ = -R3.zzzz, C266.xyyy
                          						    	MUL_CONST_0	R0.___w = C256.w, R0.z
      0550600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: c8030500 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
0b: c8030500 00b01bb0 eb000304	      ALU:	MULADDv	R0.xy__ = R4.xyyy, R0.xyyy, R3.wwww
0c: 104800c1 1f1ff7ff 00004000	      FETCH:	SAMPLE	R0.___w = R6.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: b8286081 1f1ffe88 00004000	      FETCH:	SAMPLE	R6.xyz_ = R4.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: 10387081 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: 10184001 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: c8030508 046cb000 a0030800	   (S)ALU:	ADDv	R8.xy__ = -R3.xxxx, C264.xyyy
11: c80c0508 04b1ac00 a0030900	      ALU:	ADDv	R8.__zw = -R3.yyyy, C265.xxxy
12: c8020500 006c6cc6 0b02ffff	      ALU:	MULADDv	R0._y__ = C511.zzzz, C258.xxxx, C511.xxxx
13: a8430003 00b0b041 c1090903	      ALU:	MULv	R3.xy__ = R9.xyyy, R9.xyyy
                          						    	MUL_CONST_0	R0.__z_ = C259.x, R0.y
14: c8020500 001919b1 f1080803	      ALU:	DOT2ADDv	R0._y__ = R3.yyyy, R8.ywww, R8.ywww
15: c8010500 00c4c46c f1080803	      ALU:	DOT2ADDv	R0.x___ = R3.xxxx, R8.xzzz, R8.xzzz
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: 40270003 00c6c0b1 e1000780	      ALU:	MULv	R3.xyz_ = R0.zzzz, R7.xyzz
                          						    	LOG_IEEE	R0._y__ = abs(R0).yyyy
17: c8070503 00c06cc0 ab060103	      ALU:	MULADDv	R3.xyz_ = R3.xyzz, R6.xyzz, C257.xxxx
18: 40100005 0000006c e2050580	      ALU:	LOG_IEEE	R0.x___ = abs(R0).xxxx
19: c8050500 00b0c400 a1000b00	      ALU:	MULv	R0.x_z_ = R0.xyyy, C267.xzzz
1a: 38200005 0000006c e2050500	      ALU:	EXP_IEEE	R0._y__ = R0.xxxx
1b: 38410000 001bb1c6 a100ff00	      ALU:	MULv	R0.x___ = R0.wwww, C511.yyyy
                          						    	EXP_IEEE	R0.__z_ = R0.zzzz
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: c9060500 00c11100 a1000b00	      ALU:	MULv	R0._yz_ = R0.yyzz, C267.yyww CLAMP
1d: c8070500 04c0c600 a000ff00	      ALU:	ADDv	R0.xyz_ = -R0.xyzz, C511.zzzz
1e: a8270706 00c0c041 c0050506	      ALU:	ADDv	R6.xyz_ = R5.xyzz, R5.xyzz
                          						    	MUL_CONST_0	R7._y__ = C262.x, R0.y
1f: a8170706 00c0c041 c1060405	      ALU:	MULv	R6.xyz_ = R6.xyzz, R4.xyzz
                          						    	MUL_CONST_0	R7.x___ = C261.x, R0.y
20: a8170803 00c0c082 c1060305	      ALU:	MULv	R3.xyz_ = R6.xyzz, R3.xyzz
                          						    	MUL_CONST_0	R8.x___ = C261.y, R0.z
21: a8240808 00c6b182 81000706	      ALU:	MULv	R8.__z_ = R0.zzzz, C263.yyyy
                          						    	MUL_CONST_0	R8._y__ = C262.y, R0.z
      00005022 00002200     	EXEC_END ADDR(0x22) CNT(0x5) BOOL_ADDR(0x80)
22: a8470702 00c01b41 c1080207	      ALU:	MULv	R2.xyz_ = R8.xyzz, R2.wwww
                          						    	MUL_CONST_0	R7.__z_ = C263.x, R0.y
23: c8070501 00c01bc0 eb070102	      ALU:	MULADDv	R1.xyz_ = R2.xyzz, R7.xyzz, R1.wwww
24: 14070501 00c0c01b e1060104	      ALU:	MULv	R1.xyz_ = R6.xyzz, R1.xyzz
25: c8070500 00c06cc0 eb030001	      ALU:	MULADDv	R0.xyz_ = R1.xyzz, R3.xyzz, R0.xxxx
26: 0c878000 00c06c1b a1000c05	      ALU:	MULv	export0.xyz_ = R0.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
      00000000 00000000     	NOP
