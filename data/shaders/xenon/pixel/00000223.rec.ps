      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: c8070507 00ca1a00 e1020200	      ALU:	MULv	R7.xyz_ = R2.zwzz, R2.zwww
07: c8070507 00ca1ac0 eb010107	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R1.zwzz, R1.zwww
08: c8070507 001617be eb000007	      ALU:	MULADDv	R7.xyz_ = R7.zxyy, R0.zzww, R0.wzww
09: 58400705 000000c6 e2050587	      ALU:	RECIPSQ_IEEE	R7.__z_ = abs(R7).zzzz
0a: 58810707 006c6cb1 e0070787	      ALU:	ADDv	R7.x___ = R7.xxxx, R7.xxxx
                          						    	RECIPSQ_IEEE	R7.___w = abs(R7).yyyy
0b: c80d050a 00d80600 e1070000	      ALU:	MULv	R10.x_zw = R7.xwwz, R0.zzzw
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c807050d 00cf1600 e1070100	      ALU:	MULv	R13.xyz_ = R7.wxzz, R1.zzww
0d: c8020507 04b11b00 e00d0100	      ALU:	ADDv	R7._y__ = -R13.yyyy, R1.wwww
0e: 14070508 01cf166c e107020a	      ALU:	MULv	R8.xyz_ = R7.wxzz, R2.zzww
0f: 04140707 04b11b1b e0080200	      ALU:	ADDv	R7.__z_ = -R8.yyyy, R2.wwww
                          						    	ADD_PREVs	R7.x___ = R0.wwww
10: c8010500 00bebe00 f0070700	      ALU:	DOT3v	R0.x___ = R7.zxyy, R7.zxyy
11: 58100005 0000006c e2050580	      ALU:	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
      05006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8070507 00c06c00 e1070000	      ALU:	MULv	R7.xyz_ = R7.xyzz, R0.xxxx
13: c80f0507 00a6cd00 f2070700	      ALU:	CUBEv	R7 = R7.zzxy, R7.yxzz
14: 4c140009 001b1bc6 e2070787	      ALU:	MAXv	R9.__z_ = R7.wwww, R7.wwww
                          						    	RECIP_IEEE	R0.x___ = abs(R7).zzzz
15: c8030509 006d6c1b cb0700fe	      ALU:	MULADDv	R9.xy__ = C510.wwww, R7.yxxx, R0.xxxx
16: 1018e081 1f1ffe88 00004000	      FETCH:	SAMPLE	R14.xyz_ = R4.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 9028b121 1f1ff688 0000c000	      FETCH:	SAMPLE	R11.xyzw = R9.xyz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 10090081 1f1ff688 00004000	      FETCH:	SAMPLE	R16.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 14080506 001bc66c 80020901	   (S)ALU:	ADDv	R6.___w = R2.wwww, C265.zzzz
1a: 0c110004 001bb16c 800109fd	      ALU:	ADDv	R4.x___ = R1.wwww, C265.yyyy
                          						    	MUL_PREVs	R0.x___ = C509.xxxx
1b: c8088000 001b1b00 e1100500	      ALU:	MULv	export0.___w = R16.wwww, R5.wwww	; COLOR
1c: 14020500 001b1b1b a10bff00	      ALU:	MULv	R0._y__ = R11.wwww, C511.wwww
1d: 04830507 046cb06c 80040709	      ALU:	ADDv	R7.xy__ = -R4.xxxx, C263.xyyy
                          						    	ADD_PREVs	R5.___w = C265.xxxx
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: bc43070a 041bb047 80060806	      ALU:	ADDv	R10.xy__ = -R6.wwww, C264.xyyy
                          						    	SUB_CONST_1	R7.__z_ = C262.x, R5.w
1f: bc830704 00b0b087 c10a0a06	      ALU:	MULv	R4.xy__ = R10.xyyy, R10.xyyy
                          						    	SUB_CONST_1	R7.___w = C262.y, R5.w
20: c8080506 00b3b3b1 f1070704	      ALU:	DOT2ADDv	R6.___w = R4.yyyy, R7.wyyy, R7.wyyy
21: c8010504 006e6e6c f1070704	      ALU:	DOT2ADDv	R4.x___ = R4.xxxx, R7.zxxx, R7.zxxx
22: 5811090c 041bc66c e10a0084	      ALU:	MULv	R12.x___ = -R10.wwww, R0.zzzz
                          						    	RECIPSQ_IEEE	R9.x___ = abs(R4).xxxx
23: 58210904 04c6c61b e10d0186	      ALU:	MULv	R4.x___ = -R13.zzzz, R1.zzzz
                          						    	RECIPSQ_IEEE	R9._y__ = abs(R6).wwww
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 140e0504 01fcfc6c c005050b	      ALU:	ADDv	R4._yzw = R5.xxyz, R5.xxyz
25: 044e090c 00fc6cb1 000d00fd	      ALU:	ADDv	R12._yzw = C269.xxyz, C256.xxxx
                          						    	ADD_PREVs	R9.__z_ = C509.yyyy
26: b017050f 00c0c041 8110fffe	      ALU:	MULv	R15.xyz_ = R16.xyzz, C511.xyzz
                          						    	ADD_CONST_0	R5.x___ = C510.x, R0.y
27: b0270501 0015c080 c10410fe	      ALU:	MULv	R1.xyz_ = R4.yzww, R16.xyzz
                          						    	ADD_CONST_0	R5._y__ = C510.y, R0.x
28: ac280501 00b11b45 45fe0b02	      ALU:	SETGTv	R1.___w = C510.yyyy, R11.wwww
                          						    	MUL_CONST_1	R5._y__ = C258.x, R5.y
29: 2c140505 00bec36c f00f0405	      ALU:	DOT3v	R5.__z_ = R15.zxyy, R4.wyzz
                          						    	FRACs	R5.x___ = R5.xxxx
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 14080505 00c6c6b1 a205fd00	      ALU:	MAXv	R5.___w = R5.zzzz, C509.zzzz
2b: 041e0504 01b1fc6c e1050e05	      ALU:	MULv	R4._yzw = R5.yyyy, R14.xxyz
                          						    	ADD_PREVs	R5.x___ = -R5.xxxx
2c: b41f0500 000dad04 c10709fd	      ALU:	MULv	R0 = R7.yxzw, R9.yxxy
                          						    	ADD_CONST_1	R5.x___ = C509.w, R5.x
2d: 38160505 00616c6c e1000d05	      ALU:	MULv	R5._yz_ = R0.yyxx, R13.xxxx
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
2e: c8030507 001ac6c5 eb000a05	      ALU:	MULADDv	R7.xy__ = R5.yzzz, R0.zwww, R10.zzzz
2f: c8070505 006cc000 e1050b00	      ALU:	MULv	R5.xyz_ = R5.xxxx, R11.xyzz
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: c80f0500 00555500 e00c0400	      ALU:	ADDv	R0 = R12.yzwx, R4.yzwx
31: c80d0504 001bf0f0 ee01050b	      ALU:	CNDGTv	R4.x_zw = R11.xyyz, R1.wwww, R5.xyyz
32: c8010505 04c6c61b eb080200	      ALU:	MULADDv	R5.x___ = R0.wwww, -R8.zzzz, R2.zzzz
33: bc100505 00000084 c20505fe	      ALU:	SUB_CONST_1	R5.x___ = C510.y, R5.x
34: 08100505 0000006c e2050505	      ALU:	MULs	R5.x___ = R5.xxxx
35: 08400a05 0000006c e2050505	      ALU:	MULs	R10.__z_ = R5.xxxx
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: c8070505 00b4b400 e10a0900	      ALU:	MULv	R5.xyz_ = R10.xzyy, R9.xzyy
37: b6880500 001bb145 8305fe0b	      ALU:	MINv	R0.___w = R5.wwww, C510.yyyy
                          						    	ADD_CONST_1	R5.___w = C267.x, R5.y CLAMP
38: c9030505 006e6c6d eb050807	      ALU:	MULADDv	R5.xy__ = R7.yxxx, R5.zxxx, R8.xxxx CLAMP
39: ac270400 00c0c045 c0000604	      ALU:	ADDv	R0.xyz_ = R0.xyzz, R6.xyzz
                          						    	MUL_CONST_1	R4._y__ = C260.x, R5.y
3a: ac170402 001b1445 c1000403	      ALU:	MULv	R2.xyz_ = R0.wwww, R4.xzww
                          						    	MUL_CONST_1	R4.x___ = C259.x, R5.y
3b: ac170602 00c01b84 c1020503	      ALU:	MULv	R2.xyz_ = R2.xyzz, R5.wwww
                          						    	MUL_CONST_1	R6.x___ = C259.y, R5.x
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: ac270602 00b4c684 8102fe04	      ALU:	MULv	R2.xyz_ = R2.xzyy, C510.zzzz
                          						    	MUL_CONST_1	R6._y__ = C260.y, R5.x
3d: ac470602 00b4c684 81020a05	      ALU:	MULv	R2.xyz_ = R2.xzyy, C266.zzzz
                          						    	MUL_CONST_1	R6.__z_ = C261.y, R5.x
3e: ac470406 00c0b145 c1060305	      ALU:	MULv	R6.xyz_ = R6.xyzz, R3.yyyy
                          						    	MUL_CONST_1	R4.__z_ = C261.x, R5.y
3f: c8070505 00b46cb4 eb040306	      ALU:	MULADDv	R5.xyz_ = R6.xzyy, R4.xzyy, R3.xxxx
40: c8070505 00b4c0b4 eb010502	      ALU:	MULADDv	R5.xyz_ = R2.xzyy, R1.xzyy, R5.xyzz
41: c8070505 00c0c0b4 eb010005	      ALU:	MULADDv	R5.xyz_ = R5.xzyy, R1.xyzz, R0.xyzz
      00001042 00002200     	EXEC_END ADDR(0x42) CNT(0x1) BOOL_ADDR(0x80)
42: c8078000 00c06c00 a1050c00	      ALU:	MULv	export0.xyz_ = R5.xyzz, C268.xxxx	; COLOR
