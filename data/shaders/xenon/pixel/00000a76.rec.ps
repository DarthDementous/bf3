      00006009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: c80c0403 00060600 e1010100	      ALU:	MULv	R3.__zw = R1.zzzw, R1.zzzw
0a: c80c0403 00060606 eb000003	      ALU:	MULADDv	R3.__zw = R3.zzzw, R0.zzzw, R0.zzzw
0b: c80c0403 00060606 eb020203	      ALU:	MULADDv	R3.__zw = R3.zzzw, R2.zzzw, R2.zzzw
0c: 5817080a 00626cc6 200b0083	      ALU:	ADDv	R10.xyz_ = C267.zyxx, C256.xxxx
                          						    	RECIPSQ_IEEE	R8.x___ = abs(R3).zzzz
0d: 58470709 0062621b e0040483	      ALU:	ADDv	R9.xyz_ = R4.zyxx, R4.zyxx
                          						    	RECIPSQ_IEEE	R7.__z_ = abs(R3).wwww
0e: 140e0408 006cfcc6 a1080407	      ALU:	MULv	R8._yzw = R8.xxxx, C260.xxyz
      0000600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: 0c130407 00b0c61b e1080001	      ALU:	MULv	R7.xy__ = R8.xyyy, R0.zzzz
                          						    	MUL_PREVs	R4.x___ = R1.wwww
10: 14030406 00c4c6c6 e1080107	      ALU:	MULv	R6.xy__ = R8.xzzz, R1.zzzz
11: 0c2c0406 002cc61b e1080202	      ALU:	MULv	R6.__zw = R8.xxxw, R2.zzzz
                          						    	MUL_PREVs	R4._y__ = R2.wwww
12: c80c0408 04acec00 e1040600	      ALU:	MULv	R8.__zw = -R4.xxxy, R6.xxxz
13: c8030404 00c41b00 e1070000	      ALU:	MULv	R4.xy__ = R7.xzzz, R0.wwww
14: c8010408 04b16c00 e1040700	      ALU:	MULv	R8.x___ = -R4.yyyy, R7.xxxx
      00006015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: c8010404 006c1b6c eb060104	      ALU:	MULADDv	R4.x___ = R4.xxxx, R6.xxxx, R1.wwww
16: c8020408 00c61b6c eb060204	      ALU:	MULADDv	R8._y__ = R4.xxxx, R6.zzzz, R2.wwww
17: c8030404 00b0b200 e0080800	      ALU:	ADDv	R4.xy__ = R8.xyyy, R8.zyyy
18: c8040400 046cb11b eb070400	      ALU:	MULADDv	R0.__z_ = R0.wwww, -R7.xxxx, R4.yyyy
19: c8010404 006c1b00 e0040800	      ALU:	ADDv	R4.x___ = R4.xxxx, R8.wwww
1a: c8060404 00ccb100 e1060400	      ALU:	MULv	R4._yz_ = R6.xxzz, R4.yyyy
      0000601b 00001200     	EXEC ADDR(0x1b) CNT(0x6) BOOL_ADDR(0x80)
1b: b8110400 04c61b04 c00402fd	      ALU:	ADDv	R0.x___ = -R4.zzzz, R2.wwww
                          						    	SUB_CONST_0	R4.x___ = C509.w, R4.x
1c: 14010404 016c6cb1 e1040404	      ALU:	MULv	R4.x___ = R4.xxxx, R4.xxxx
1d: 04280000 006c6c1b e1040401	      ALU:	MULv	R0.___w = R4.xxxx, R4.xxxx
                          						    	ADD_PREVs	R0._y__ = R1.wwww
1e: c8020404 00b4b400 f0000000	      ALU:	DOT3v	R4._y__ = R0.xzyy, R0.xzyy
1f: 58210404 046c1bb1 2003fc84	      ALU:	ADDv	R4.x___ = -C259.xxxx, C508.wwww
                          						    	RECIPSQ_IEEE	R4._y__ = abs(R4).yyyy
20: c80f0400 00007100 e1000400	      ALU:	MULv	R0 = R0, R4.yyyx
      05406021 00001200     	EXEC ADDR(0x21) CNT(0x6) BOOL_ADDR(0x80)
21: c80f0404 008c6500 f2000000	      ALU:	CUBEv	R4 = R0.xxzy, R0.yzxx
22: 4c140101 001b1bc6 e2040484	      ALU:	MAXv	R1.__z_ = R4.wwww, R4.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R4).zzzz
23: c8030401 006d6cc6 cb0401fd	      ALU:	MULADDv	R1.xy__ = C509.zzzz, R4.yxxx, R1.xxxx
24: 10080061 1f1ffe42 00004000	      FETCH:	SAMPLE	R0.zxy_ = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
25: 10184061 1f1ff447 00004000	      FETCH:	SAMPLE	R4._xyz = R3.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
26: 90282021 1f1ff688 0000c000	      FETCH:	SAMPLE	R2.xyzw = R1.xyz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026027 00001200     	EXEC ADDR(0x27) CNT(0x6) BOOL_ADDR(0x80)
27: c8020401 001b1b00 a102fe00	   (S)ALU:	MULv	R1._y__ = R2.wwww, C510.wwww
28: a8170108 00626547 c10900fd	      ALU:	MULv	R8.xyz_ = R9.zyxx, R0.yzxx
                          						    	MUL_CONST_0	R1.x___ = C509.x, R4.w
29: a8170a05 00c06241 c00a05fe	      ALU:	ADDv	R5.xyz_ = R10.xyzz, R5.zyxx
                          						    	MUL_CONST_0	R10.x___ = C510.x, R0.y
2a: a8240a01 001b1b82 45fd02fe	      ALU:	SETGTv	R1.__z_ = C509.wwww, R2.wwww
                          						    	MUL_CONST_0	R10._y__ = C510.y, R0.z
2b: a8410a04 00b16cc0 8001fdfe	      ALU:	ADDv	R4.x___ = R1.yyyy, C509.xxxx
                          						    	MUL_CONST_0	R10.__z_ = C510.z, R0.x
2c: 2c180401 00beb46c f00a0904	      ALU:	DOT3v	R1.___w = R10.zxyy, R9.xzyy
                          						    	FRACs	R4.x___ = R4.xxxx
      0000602d 00001200     	EXEC ADDR(0x2d) CNT(0x6) BOOL_ADDR(0x80)
2d: 14170500 0062c01b e1080501	      ALU:	MULv	R0.xyz_ = R8.zyxx, R5.xyzz
                          						    	MAXs	R5.x___ = R1.wwww
2e: 14210504 02b16cc6 c00104fc	      ALU:	ADDv	R4.x___ = R1.yyyy, -R4.xxxx
                          						    	MAXs	R5._y__ = C508.zzzz
2f: 14120401 006cb161 a004fc05	      ALU:	ADDv	R1._y__ = R4.xxxx, C508.yyyy
                          						    	MAXs	R4.x___ = R5.yyxx
30: 38210104 006c1bb1 a304fd01	      ALU:	MINv	R4.x___ = R4.xxxx, C509.wwww
                          						    	EXP_IEEE	R1._y__ = R1.yyyy
31: a8270105 00b16246 c10102fd	      ALU:	MULv	R5.xyz_ = R1.yyyy, R2.zyxx
                          						    	MUL_CONST_0	R1._y__ = C509.x, R4.z
32: c8070402 00c662c0 ee010502	      ALU:	CNDGTv	R2.xyz_ = R2.xyzz, R1.zzzz, R5.zyxx
      00006033 00001000     	EXEC ADDR(0x33) CNT(0x6)
33: a8470102 006cc045 c10402fd	      ALU:	MULv	R2.xyz_ = R4.xxxx, R2.xyzz
                          						    	MUL_CONST_0	R1.__z_ = C509.x, R4.y
34: 15010404 001b6cb1 a0000307	      ALU:	ADDv	R4.x___ = R0.wwww, C259.xxxx CLAMP
35: 04870404 00c06cb1 e1020406	      ALU:	MULv	R4.xyz_ = R2.xyzz, R4.xxxx
                          						    	ADD_PREVs	R4.___w = R6.yyyy
36: 14070404 00c0621b e1040104	      ALU:	MULv	R4.xyz_ = R4.xyzz, R1.zyxx
37: 042d0404 00f0b11b a104fd06	      ALU:	MULv	R4.x_zw = R4.xyyz, C509.yyyy
                          						    	ADD_PREVs	R4._y__ = R6.wwww
38: 6c0d0404 0047c66c 81040205	      ALU:	MULv	R4.x_zw = R4.wzzx, C258.zzzz
      00001039 00001200     	EXEC ADDR(0x39) CNT(0x1) BOOL_ADDR(0x80)
39: c8070400 00be6ccf ab000104	      ALU:	MULADDv	R0.xyz_ = R4.wxzz, R0.zxyy, C257.xxxx
      0000400c 0000b000     	COND_JMP ADDR(0xc) DIR(0) COND(0)
      0000103a 00001200     	EXEC ADDR(0x3a) CNT(0x1) BOOL_ADDR(0x80)
3a: 20800004 0100006c e2040484	      ALU:	SETGTs	R0.___w = -abs(R4).xxxx
      0000200f 0000b000     	COND_JMP ADDR(0xf) DIR(0) FORCE_CALL
      0400603b 00001200     	EXEC ADDR(0x3b) CNT(0x6) BOOL_ADDR(0x80)
3b: 4c1c0404 00ac6c6c 8003fc0a	      ALU:	ADDv	R4.__zw = R3.xxxy, C508.xxxx
                          						    	RECIP_IEEE	R4.x___ = C266.xxxx
3c: c9050404 00c76c6c cb0404fd	      ALU:	MULADDv	R4.x_z_ = C509.xxxx, R4.wzzz, R4.xxxx CLAMP
3d: b0800004 00000046 c2040407	      ALU:	ADD_CONST_0	R0.___w = C263.x, R4.z
3e: 34800404 0000001b e2040400	      ALU:	FLOORs	R4.___w = R0.wwww
3f: 14210101 021b1b6c e0000404	      ALU:	ADDv	R1.x___ = R0.wwww, -R4.wwww
                          						    	MAXs	R1._y__ = R4.xxxx
40: 10382021 1f1ffe88 00004000	      FETCH:	SAMPLE	R2.xyz_ = R1.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096041 00001200     	EXEC ADDR(0x41) CNT(0x6) BOOL_ADDR(0x80)
41: 10485021 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R1.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
42: b8240101 056c1b45 0006fd09	   (S)ALU:	ADDv	R1.__z_ = -C262.xxxx, C509.wwww
                          						    	SUB_CONST_0	R1._y__ = -C265.x, -R4.y
43: 14080400 006cb16c 45080408	      ALU:	SETGTv	R0.___w = C264.xxxx, R4.yyyy
44: 04110401 01b16c6c 85040909	      ALU:	SETGTv	R1.x___ = R4.yyyy, C265.xxxx
                          						    	ADD_PREVs	R4.x___ = -C265.xxxx
45: 4c1e0404 00766c6c a1050604	      ALU:	MULv	R4._yzw = R5.zzyx, C262.xxxx
                          						    	RECIP_IEEE	R4.x___ = R4.xxxx
46: c80e0404 00c67601 eb010204	      ALU:	MULADDv	R4._yzw = R4.yyzw, R1.zzzz, R2.zzyx
      00005047 00001200     	EXEC ADDR(0x47) CNT(0x5) BOOL_ADDR(0x80)
47: c8010404 00b16c00 e1010400	      ALU:	MULv	R4.x___ = R1.yyyy, R4.xxxx
48: c8010404 006c6c6c ac01ff04	      ALU:	CNDEv	R4.x___ = R4.xxxx, R1.xxxx, C511.xxxx
49: c80e0404 006cfcfb ec010004	      ALU:	CNDEv	R4._yzw = R4.wwyz, R1.xxxx, R0.xxyz
4a: c8070400 001bc015 ec000004	      ALU:	CNDEv	R0.xyz_ = R4.yzww, R0.wwww, R0.xyzz
4b: c8080400 001b6c6c ac00ff04	      ALU:	CNDEv	R0.___w = R4.xxxx, R0.wwww, C511.xxxx
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      0000104c 00002200     	EXEC_END ADDR(0x4c) CNT(0x1) BOOL_ADDR(0x80)
4c: c80f8000 00343400 e2000000	      ALU:	MAXv	export0 = R0.xzyw, R0.xzyw	; COLOR
      00000000 00000000     	NOP
