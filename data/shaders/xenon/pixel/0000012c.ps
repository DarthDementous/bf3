//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   sampler2D $tranpcy;
//   float $usendotl;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $matvalue      c1       1
//   $suncolour     c2       1
//   $sunintensity  c3       1
//   $usendotl      c4       1
//   $invscreensize c5       1
//   $compressedhdr c6       1
//   $diff          s0       1
//   $tranpcy       s1       1
//   $lmap          s2       1
//   $bump          s3       1
//   $spec          s4       1
//   $screenshadmap s5       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c6
defconst $diff, sampler2d, object, [1, 1], s0
defconst $invscreensize, float, vector, [1, 2], c5
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c1
defconst $screenshadmap, sampler2d, object, [1, 1], s5
defconst $spec, sampler2d, object, [1, 1], s4
defconst $suncolour, float, vector, [1, 3], c2
defconst $sunintensity, float, scalar, [1, 1], c3
defconst $tranpcy, sampler2d, object, [1, 1], s1
defconst $usendotl, float, scalar, [1, 1], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=9
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=5

// interpolators: 5 interpolants: 5, components: 16
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1.xyz
dcl_texcoord2 r2
dcl_texcoord3 r3.xy
dcl_color_centroid r4

def c252, 0, 0, 0, 0
def c253, 2, 10, 0.25, 0.300000012
def c254, 0, 1, -1, 4
def c255, 0.0599999987, 0.289999992, 0.150000006, 0.5


/*    0.0 */     exec
/*    5   */     tfetch2D r0.___x, r2.zw, tf1
/*    6   */     tfetch2D r6.yw__, r2.xy, tf3
/*    7   */     tfetch2D r3.xyz_, r3.xy, tf2
/*    8   */     tfetch2D r7.xyz_, r2.xy, tf4
/*    9   */     tfetch2D r9, r2.xy, tf0
/*   10   */     serialize
                 mul r7.w, c1.x, c253.y
/*    0.1 */     exec
/*   11   */     mul r1.w, r9.w, r4.w
/*   12   */     add r4.xyz, r4.zyx, r4.zyx
/*   13   */     dp3 r2.x, r0.zxy, r0.zxy
/*   14   */     dp3 r4.w, r7.zyx, c255.xyz
/*   15   */     mul r8.xyz, r7.zyx, c255.w
/*   16   */     mul r7.xyz, r3.xyz, c0.x
               + rsq r2.z, r2_abs.x
/*    1.0 */     exec
/*   17   */     mad r2.xy, r6.xy, c253.x, c254.z
/*   18   */     mul r6.xyz, r2.z, r0.xyz
/*   19   */     mul r7.xyz, r7.xyz, r9.xyz
               + muls r0.x, r2.xx
/*   20   */     mul r3.xyz, r8.xyz, r3.zyx
               + muls r0.y, r2.yy
/*   21   */     mul r3.xyz, r3.xyz, c254.w
               + subsc r0.z, c254.y, r0.w
/*   22   */     mul r4, r7.zyxw, r4
               + subsc r2.z, c254.y, r0.x
/*    1.1 */     exec
/*   23   */     add r0.x, r2.z, -r0.y
/*   24   */     add r0.y, r4.w, c254.y
               + sqrt r2.z, r0_abs.x
/*   25   */     dp3_sat r0.x, r6.zxy, r2.zxy
/*   26   */     max r0.y, r0.y, c254.x
               + log r0.x, r0.x
/*   27   */     mul r0.x, r0.y, r0.x
/*   28   */     mul r0.w, r1.w, r0.z
               + exp r0.x, r0.x
/*    2.0 */     exec    // PredicateClean=false
/*   29   */     mul r0.xyz, r3.xyz, r0.x
               + movs_sat r4.w, r1.z
/*   30   */     mul r0.xyz, r0.xyz, c2.zyx
               + setp_ne r4._, c4.x
/*   31   */     mad r4.xyz, r0.zxy, c3.x, r4.zxy
/*    2.1 */ (p0) exec
/*   32   */     (p0) mul r0.x, c3.x, c2.x
/*   33   */     (p0) cndeq r3.xyz, c254.xxy, -r1.zx, r1.y
/*   34   */     (p0) dp3_sat r1.w, r2.zxy, r1.zxy
               + (p0) movs_sat r0.y, -r1.z
/*   35   */     (p0) dp3_sat r0.z, r2.zxy, r3.xyz
               + (p0) movs r4._, r1.w
/*   36   */     (p0) add r0.y, r0.z, -r0.y
               + (p0) adds_prev r4.w, -r4.w
/*   37   */     (p0) mad r0.y, r0.y, c253.z, r4.w
/*    3.0 */ (p0) exec
/*   38   */     (p0) mul r0.x, r0.x, r0.y
/*   39   */     (p0) mul r1.xw, r0.xy, c253.w
/*   40   */     (p0) mul r0.xy, r1.w, c2.yz
/*   41   */     (p0) mul r1.yz, r0.yyx, c3.x
/*   42   */     (p0) add r4.xyz, r4.xyz, r1.xyz
/*    3.1 */     alloc colors
/*    4.0 */     exece
/*   43   */     mul r0.xy, r5_abs.xy, c5.xy
               + mulsc r4.w, c6.x, r4.y
/*   44   */     tfetch2D r4._w__, r0.xy, tf5
/*   45   */     serialize
                 mad r4.y, -r4.y, c255.w, c254.y
/*   46   */     mul r0.z, r4.w, r4.y
               + mulsc r4.y, c6.x, r4.y
/*   47   */     mul r0.xy, r4.y, r4.xz
/*   48   */     mov oC0, r0
/*    4.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x001f SamplingPattern 0x000f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyz
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xy
// [4] color0 r4.xyzw

