      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096003 00001200     	EXEC ADDR(0x3) CNT(0x6) BOOL_ADDR(0x80)
03: 10000061 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R3.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
04: c8040500 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
05: 58430006 006db0c6 2103fd80	      ALU:	MULv	R6.xy__ = C259.yxxx, C509.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
06: c8080501 011bb16c ab000306	      ALU:	MULADDv	R1.___w = -R6.xxxx, R0.wwww, C259.yyyy
07: a8870008 00c0c002 c0050503	      ALU:	ADDv	R8.xyz_ = R5.xyzz, R5.xyzz
                          						    	MUL_CONST_0	R0.___w = C259.w, R0.z
08: c8030505 00c7b000 e1000000	      ALU:	MULv	R5.xy__ = R0.wzzz, R0.xyyy
      05546009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: c8060505 00bc1bbc eb050103	      ALU:	MULADDv	R5._yz_ = R3.xxyy, R5.xxyy, R1.wwww
0a: 10384081 1f1ff447 00004000	      FETCH:	SAMPLE	R4._xyz = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 10480061 1f1ffe88 00004000	      FETCH:	SAMPLE	R0.xyz_ = R3.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: b8285061 1f1ffff8 00004000	      FETCH:	SAMPLE	R5.x___ = R3.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 641820a1 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R5.yzy CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: 645870a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R5.yzy CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0002600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: c8080500 00bebe00 f0010100	   (S)ALU:	DOT3v	R0.___w = R1.zxyy, R1.zxyy
10: 140e0503 00fc1b6c 8107fe01	      ALU:	MULv	R3._yzw = R7.xxyz, C510.wwww
11: 0c470502 00c0c0b1 c10802fd	      ALU:	MULv	R2.xyz_ = R8.xyzz, R2.xyzz
                          						    	MUL_PREVs	R5.__z_ = C509.yyyy
12: 58820005 00bec01b b007fe80	      ALU:	DOT3v	R5._y__ = R7.zxyy, C510.xyzz
                          						    	RECIPSQ_IEEE	R0.___w = abs(R0).wwww
13: 14020505 00b1b11b e1060500	      ALU:	MULv	R5._y__ = R6.yyyy, R5.yyyy
14: 0e860005 00c11bc6 a005fd01	      ALU:	ADDv	R5._yz_ = R5.yyzz, C509.wwww
                          						    	MUL_PREVs	R0.___w = R1.zzzz CLAMP
      00006015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: ac110103 00b1c646 8205fd02	      ALU:	MAXv	R3.x___ = R5.yyyy, C509.zzzz
                          						    	MUL_CONST_1	R1.x___ = C258.x, R5.z
16: 40170400 006cc01b e1010000	      ALU:	MULv	R0.xyz_ = R1.xxxx, R0.xyzz
                          						    	LOG_IEEE	R4.x___ = R0.wwww
17: c80e0500 00016cfc ab040000	      ALU:	MULADDv	R0._yzw = R0.xxyz, R4.yyzw, C256.xxxx
18: bc1f0001 00000004 c10304fd	      ALU:	MULv	R1 = R3, R4
                          						    	SUB_CONST_1	R0.x___ = C509.w, R5.x
19: 381e0101 00016c6c a101ff01	      ALU:	MULv	R1._yzw = R1.yyzw, C511.xxxx
                          						    	EXP_IEEE	R1.x___ = R1.xxxx
1a: 14070501 00156c1b e1010102	      ALU:	MULv	R1.xyz_ = R1.yzww, R1.xxxx
      0000401b 00002200     	EXEC_END ADDR(0x1b) CNT(0x4) BOOL_ADDR(0x80)
1b: 0c870501 00c0c01b a1010405	      ALU:	MULv	R1.xyz_ = R1.xyzz, C260.xyzz
                          						    	MUL_PREVs	R5.___w = R5.wwww
1c: 14070505 00c06c1b a1010505	      ALU:	MULv	R5.xyz_ = R1.xyzz, C261.xxxx
1d: c8070505 00c015c0 eb020005	      ALU:	MULADDv	R5.xyz_ = R5.xyzz, R2.xyzz, R0.yzww
1e: 0c878000 00c06c6c a1050600	      ALU:	MULv	export0.xyz_ = R5.xyzz, C262.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
