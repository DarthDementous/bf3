      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 10006081 1f1ffe3f 00004000	      FETCH:	SAMPLE	R6.__x_ = R4.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: b4180600 001bc643 80030b0b	   (S)ALU:	ADDv	R0.___w = R3.wwww, C267.zzzz
                          						    	ADD_CONST_1	R6.x___ = C267.x, R1.w
07: 14020506 00b16c1b 2103ff02	      ALU:	MULv	R6._y__ = C259.yyyy, C511.xxxx
08: c8040508 01c6b1b1 ab060306	      ALU:	MULADDv	R8.__z_ = -R6.yyyy, R6.zzzz, C259.yyyy
09: 048c0009 041bacb1 80000a0b	      ALU:	ADDv	R9.__zw = -R0.wwww, C266.xxxy
                          						    	ADD_PREVs	R0.___w = C267.yyyy
0a: b8140906 00bebe43 d0000009	      ALU:	DOT3v	R6.__z_ = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R9.x___ = C265.x, R0.w
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: b8230906 046cb083 80060809	      ALU:	ADDv	R6.xy__ = -R6.xxxx, C264.xyyy
                          						    	SUB_CONST_0	R9._y__ = C265.y, R0.w
0c: 58830607 00b0b0c6 e1060686	      ALU:	MULv	R7.xy__ = R6.xyyy, R6.xyyy
                          						    	RECIPSQ_IEEE	R6.___w = abs(R6).zzzz
0d: c8080500 001919b1 f1090907	      ALU:	DOT2ADDv	R0.___w = R7.yyyy, R9.ywww, R9.ywww
0e: c8080508 00c4c46c f1090907	      ALU:	DOT2ADDv	R8.___w = R7.xxxx, R9.xzzz, R9.xzzz
0f: 58140806 001b1b1b a1060388	      ALU:	MULv	R6.__z_ = R6.wwww, C259.wwww
                          						    	RECIPSQ_IEEE	R8.x___ = abs(R8).wwww
10: 582c0806 0006ac1b e1060080	      ALU:	MULv	R6.__zw = R6.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R8._y__ = abs(R0).wwww
      09506011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: c80f0507 0000c000 e1060800	      ALU:	MULv	R7 = R6, R8.xyzz
12: c8030500 001ab000 e0070400	      ALU:	ADDv	R0.xy__ = R7.zwww, R4.xyyy
13: 1038b081 1f1ffe88 00004000	      FETCH:	SAMPLE	R11.xyz_ = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: b8284081 1f1ffe88 00004000	      FETCH:	SAMPLE	R4.xyz_ = R4.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: 10186001 1f1ff688 00004000	      FETCH:	SAMPLE	R6.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: c8020500 006c1bc6 0b01ffff	   (S)ALU:	MULADDv	R0._y__ = C511.zzzz, C257.xxxx, C511.wwww
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 081e000a 00fc6cc6 a1040002	      ALU:	MULv	R10._yzw = R4.xxyz, C256.xxxx
                          						    	MULs	R0.x___ = R2.zzzz
18: c801050a 00c6c66c eb010100	      ALU:	MULADDv	R10.x___ = R0.xxxx, R1.zzzz, R1.zzzz
19: a8100005 00000041 c2050502	      ALU:	MUL_CONST_0	R0.x___ = C258.x, R0.y
1a: 081e0404 006cfcc6 e1000b03	      ALU:	MULv	R4._yzw = R0.xxxx, R11.xxyz
                          						    	MULs	R4.x___ = R3.zzzz
1b: c80f0504 00000000 e00a0400	      ALU:	ADDv	R4 = R10, R4
1c: 58200005 0000006c e2050584	      ALU:	RECIPSQ_IEEE	R0._y__ = abs(R4).xxxx
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: c8010503 00b1c600 e1000300	      ALU:	MULv	R3.x___ = R0.yyyy, R3.zzzz
1e: 40120003 00b1c61b e1000288	      ALU:	MULv	R3._y__ = R0.yyyy, R2.zzzz
                          						    	LOG_IEEE	R0.x___ = abs(R8).wwww
1f: 40240000 00b1c61b e1000180	      ALU:	MULv	R0.__z_ = R0.yyyy, R1.zzzz
                          						    	LOG_IEEE	R0._y__ = abs(R0).wwww
20: c8030500 00b0c400 a1000400	      ALU:	MULv	R0.xy__ = R0.xyyy, C260.xzzz
21: 381f0001 000dad6c e1090800	      ALU:	MULv	R1 = R9.yxzw, R8.yxxy
                          						    	EXP_IEEE	R0.x___ = R0.xxxx
22: 382c0000 00acc6b1 e1070000	      ALU:	MULv	R0.__zw = R7.xxxy, R0.zzzz
                          						    	EXP_IEEE	R0._y__ = R0.yyyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c9080500 00186d1b f1010300	      ALU:	DOT2ADDv	R0.___w = R0.wwww, R1.xwww, R3.yxxx CLAMP
24: c9040500 00c56dc6 f1010300	      ALU:	DOT2ADDv	R0.__z_ = R0.zzzz, R1.yzzz, R3.yxxx CLAMP
25: c9030500 00b01900 a1000400	      ALU:	MULv	R0.xy__ = R0.xyyy, C260.ywww CLAMP
26: c8030500 046dc600 a000ff00	      ALU:	ADDv	R0.xy__ = -R0.yxxx, C511.zzzz
27: a8170201 00c0c041 c0050507	      ALU:	ADDv	R1.xyz_ = R5.xyzz, R5.xyzz
                          						    	MUL_CONST_0	R2.x___ = C263.x, R0.y
28: a8230205 00c7b080 c1000007	      ALU:	MULv	R5.xy__ = R0.wzzz, R0.xyyy
                          						    	MUL_CONST_0	R2._y__ = C263.y, R0.x
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c8040500 00b01ab1 d10200ff	      ALU:	DOT2ADDv	R0.__z_ = C511.yyyy, R2.xyyy, R0.zwww
2a: ac170201 00c0c045 c1010605	      ALU:	MULv	R1.xyz_ = R1.xyzz, R6.xyzz
                          						    	MUL_CONST_1	R2.x___ = C261.x, R5.y
2b: ac2c0202 0071ac84 81050605	      ALU:	MULv	R2.__zw = R5.yyyx, C262.xxxy
                          						    	MUL_CONST_1	R2._y__ = C261.y, R5.x
2c: c8030500 00c41900 e0020200	      ALU:	ADDv	R0.xy__ = R2.xzzz, R2.ywww
2d: 14070500 00c0c01b e1010006	      ALU:	MULv	R0.xyz_ = R1.xyzz, R0.xyzz
2e: c8070500 00c015c0 eb010400	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R4.yzww
      0000102f 00002200     	EXEC_END ADDR(0x2f) CNT(0x1) BOOL_ADDR(0x80)
2f: 0c878000 00c06c1b a1000c05	      ALU:	MULv	export0.xyz_ = R0.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
      00000000 00000000     	NOP
