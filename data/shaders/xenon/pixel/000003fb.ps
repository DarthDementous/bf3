//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $apptime       c14      1
//   $compressedhdr c15      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $screenshadmap s3       1
//   $envmap        s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c14
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c15
defconst $diff, sampler2d, object, [1, 1], s8
defconst $envmap, samplercube, object, [1, 1], s4
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=7

// interpolators: 7 interpolants: 7, components: 26
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4
dcl_texcoord5 r5.xy
dcl_color_centroid r6

def c252, 0.5, 0.150000006, 2, -1
def c253, 0.0529999994, 0, 1.5, 10
def c254, -127.5, 1, 255, 3.29999995
def c255, 0.298999995, 0.587000012, 0.143999994, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mul r9.z, c14.x, c252.x
               + movs r9.x, r4.x
/*    9   */     mul r5.zw, r7_abs.xxxy, c3.xxxy
               + movs r9.y, r4.y
/*   10   */     tfetch2D r11.___x, r4.zw, tf0, FetchValidOnly=false
/*   11   */     tfetch2D r8.__yw, r4.xy, tf7, FetchValidOnly=false
/*   12   */     tfetch3D r8.x___, r9.xyz, tf6, FetchValidOnly=false
/*   13   */     tfetch2D r3.__w_, r5.zw, tf3, FetchValidOnly=false
/*    1.0 */     exec
/*   14   */     serialize
                 mul r9.x, r1.w, r1.w
               + rcp r5.z, r3.w
/*   15   */     mul r7.xy, r5.z, r3.yx
               + subsc r8.y, -c254.y, -r8.x
/*   16   */     add r3.xyw, r8.yzw, r8.xzw
               + muls r7.w, r0.ww
/*   17   */     add r10.xy, r3.yw, c252.w
               + mulsc r11.x, c252.x, r3.z
/*   18   */     mul r11.yz, r10.xxy, r10.xxy
               + mulsc r3.x, c255.w, r3.x
/*   19   */     mul r3.yz, r3.x, r10.xxy
               + subsc r7.z, c254.y, r7.x
/*    1.1 */     exec
/*   20   */     add r8.xyz, -r11.wxy, c254.y
               + mulsc r9.y, c253.x, r3.y
/*   21   */     add r3.x, r8.z, -r11.z
               + mulsc r9.z, c253.x, r3.z
/*   22   */     add r9.xyz, r7.wyz, r9.xyz
               + sqrt r10.z, r3_abs.x
/*   23   */     mad r3.x, r2.w, r2.w, r9.x
/*   24   */     dp3 r12.x, r10.zxy, r0.zxy
/*   25   */     dp3 r12.y, r10.zxy, r1.zxy
/*    2.0 */     exec
/*   26   */     dp3 r12.z, r10.zxy, r2.zxy
               + rsq r12.w, r3_abs.x
/*   27   */     mul r7.zw, r12.xxxw, r0.w
/*   28   */     mul r7.xy, r12.yw, r1.w
/*   29   */     mul r3.xy, r12.zw, r2.w
/*   30   */     add r3.z, r7.z, r7.x
               + movs r6._, -r3.y
/*   31   */     add r3.y, r3.z, r3.x
               + muls_prev r3.z, r12.z
/*    2.1 */     exec
/*   32   */     dp2add r3.x, -r7.wy, r12.xy, c253.y
/*   33   */     add r5.zw, r3.yyyx, r3.yyyz
/*   34   */     mul r3.xyz, r5.z, r12.xzy
/*   35   */     add r3.z, -r3.z, r1.w
               + movs r6._, -r3.x
/*   36   */     add r3.w, -r3.y, r2.w
               + adds_prev r3.y, r0.w
/*   37   */     dp3 r3.x, r3.wyz, r3.wyz
/*    3.0 */     exec
/*   38   */     add r7.w, -c13.x, c252.z
               + rsq r3.x, r3_abs.x
/*   39   */     mul r3.xyz, r3.yzw, r3.x
/*   40   */     cube r3, r3.zzxy, r3.yxz
/*   41   */     mov r7.z, r3.w
               + rcp r7.x, r3_abs.z
/*   42   */     mad r7.xy, r3.yx, r7.x, c253.z
/*   43   */     tfetch2D r5.xyz_, r5.xy, tf1
/*    3.1 */     exec
/*   44   */     tfetch2D r14.xyz_, r4.xy, tf2
/*   45   */     tfetch2D r3.x_yz, r9.yz, tf5
/*   46   */     tfetchCube r13.wxyz, r7.xyz, tf4
/*   47   */     tfetch2D r4.yzxw, r4.xy, tf8
/*   48   */     serialize
                 add r0.z, r0.w, c11.x
               + movs r6._, c1.x
/*   49   */     add r0.x, r1.w, c11.y
               + muls_prev r0.y, c253.w
/*    4.0 */     exec
/*   50   */     add r10.xyz, r6.xyz, r6.xyz
               + movs r6._, r2.w
/*   51   */     add r11.xy, -r0.x, c9.xy
               + adds_prev r6.z, c11.z
/*   52   */     mul r9.xyz, r10.xyz, r4.zxy
               + movs r6.x, r13.x
/*   53   */     sgt r0.w, c254.y, r13.x
               + mulsc r6.y, c254.z, r6.x
/*   54   */     add r6.x, r6.y, c252.x
               + subsc r11.z, c10.x, r6.z
/*   55   */     frc r6.x, r6.x
               + subsc r11.w, c10.y, r6.z
/*    4.1 */     exec
/*   56   */     add r0.x, r6.y, -r6.x
               + subsc r7.x, c8.x, r0.z
/*   57   */     add r6.xy, r0.yx, c254.yx
               + subsc r7.y, c8.y, r0.z
/*   58   */     mul r6.x, r6.x, c2.x
               + exp r6.y, r6.y
/*   59   */     mul r0.xyz, r6.y, r13.yzw
               + movs r6.y, r4.z
/*   60   */     mul r1.xyz, r6.x, r14.xyz
               + mulsc r13.x, c255.x, r6.y
/*   61   */     mad r2.xyz, r5.xyz, c0.x, r1.xyz
/*    5.0 */     exec
/*   62   */     cndgt r1.xyz, r0.w, r0.xyz, r13.yzw
/*   63   */     dp3 r6.x, r12.zxy, r12.zxy
               + mulsc r13.y, c255.y, r4.x
/*   64   */     add r7.z, -r5.w, c254.y
               + mulsc r13.z, c255.z, r4.y
/*   65   */     mul r0.yzw, r7.xxyz, r7.xxyz
               + rsq r0.x, r6_abs.x
/*   66   */     dp2add r6.x, r11.yw, r11.yw, r0.z
/*   67   */     dp2add r6.y, r11.xz, r11.xz, r0.y
/*    5.1 */     exec
/*   68   */     dp3 r6.z, r13.zxy, r10.zxy
               + rsq r10.x, r6_abs.y
/*   69   */     max r6.z, r6.z, c252.y
               + rsq r10.y, r6_abs.x
/*   70   */     min r6.z, r6.z, c254.y
               + log r6.y, r6_abs.y
/*   71   */     mul r9.w, r0.w, r0.w
               + log r6.x, r6_abs.x
/*   72   */     mul r0.xyw, r12.xzy, r0.x
               + mulsc r0.z, c4.x, r6.y
/*   73   */     mul r7.xy, r7.xy, r10.xy
               + mulsc r6.y, c4.z, r6.x
/*    6.0 */     exec
/*   74   */     mul r10, r11.yxzw, r10.yxxy
               + exp r6.x, r0.z
/*   75   */     mul r0.xz, r7.xy, r0.x
               + exp r6.y, r6.y
/*   76   */     dp2add_sat r0.z, r10.xw, r0.wy, r0.z
/*   77   */     dp2add_sat r0.y, r10.yz, r0.wy, r0.x
/*   78   */     mul_sat r6.xy, r6.xy, c4.yw
/*   79   */     add r6.xy, -r6.yx, c254.y
/*    6.1 */     exec
/*   80   */     mul r1.xyz, r6.z, r1.xyz
               + mulsc r7.x, c7.x, r6.y
/*   81   */     mul r6.yz, r0.yyz, r6.yyx
               + mulsc r7.y, c7.y, r6.x
/*   82   */     dp2add r7.z, r6.yz, c6.xy, c253.y
/*   83   */     mul r2.xyz, r9.xzy, r2.xzy
               + mulsc r0.x, c5.x, r6.y
/*   84   */     mul r0.zw, r7.xxxy, r0.yyyz
               + mulsc r0.y, c5.y, r6.z
/*   85   */     add r7.xy, r0.xz, r0.yw
/*    7.0 */     exec
/*   86   */     mul r0, r9.xzyw, r7
               + movs r6._, r4.w
/*   87   */     mad r0.xyz, r2.xyz, r8.y, r0.xyz
/*   88   */     add_sat r0.w, r0.w, c13.x
               + muls_prev r6.w, r6.w
/*   89   */     mul r1.xyz, r1.xyz, r0.w
               + mulsc r6.x, c15.y, r3.x
/*   90   */     mul r1.xyz, r1.xyz, c254.w
               + mulsc r6.y, c15.y, r3.z
/*   91   */     mul r1.xyz, r1.xyz, c12.z
               + mulsc r6.z, c15.y, r3.w
/*    7.1 */     exece
/*   92   */     mad r0.xyz, r1.xzy, r5.xzy, r0.xyz
/*   93   */     add r0.xyz, r0.xyz, -r6.xzy
               + movs r6._, r6.w
/*   94   */     mad r6.xyz, r0.xzy, c14.x, r6.xyz
/*   95   */     mul oC0.xyz, r6.xyz, c15.x
               + muls_prev oC0.w, r8.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x007f SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xy
// [6] color0 r6.xyzw

