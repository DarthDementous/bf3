      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00946007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: c8040605 006cb100 210cfe00	      ALU:	MULv	R5.__z_ = C268.xxxx, C510.yyyy
08: 104090a1 1f1ff67f 00004000	      FETCH:	SAMPLE	R9.__yw = R5.xyx CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 903090a1 1f1fffc7 00008000	      FETCH:	SAMPLE	R9._x__ = R5.xyz CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 14080607 001bb11b a0010902	   (S)ALU:	ADDv	R7.___w = R1.wwww, C265.yyyy
0b: 04810508 001b6cc6 80000909	      ALU:	ADDv	R8.x___ = R0.wwww, C265.xxxx
                          						    	ADD_PREVs	R5.___w = C265.zzzz
0c: bc1c090e 056cac49 800806fe	      ALU:	ADDv	R14.__zw = -R8.xxxx, C262.xxxy
                          						    	SUB_CONST_1	R9.x___ = -C510.x, -R9.y
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: bc170e08 00ca1a47 e1020207	      ALU:	MULv	R8.xyz_ = R2.zwzz, R2.zwww
                          						    	SUB_CONST_1	R14.x___ = C263.x, R7.w
0e: 4c83050b 041bb01b a0050804	      ALU:	ADDv	R11.xy__ = -R5.wwww, C264.xyyy
                          						    	RECIP_IEEE	R5.___w = R4.wwww
0f: c807060a 00ca1ac0 eb010108	      ALU:	MULADDv	R10.xyz_ = R8.xyzz, R1.zwzz, R1.zwww
10: bc230e08 001bb087 e1050407	      ALU:	MULv	R8.xy__ = R5.wwww, R4.xyyy
                          						    	SUB_CONST_1	R14._y__ = C263.y, R7.w
11: c807060a 00ca1ac0 eb00000a	      ALU:	MULADDv	R10.xyz_ = R10.xyzz, R0.zwzz, R0.zwww
12: b8430804 00b0b049 c10b0bfe	      ALU:	MULv	R4.xy__ = R11.xyyy, R11.xyyy
                          						    	SUB_CONST_0	R8.__z_ = C510.x, R8.y
      00006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c8080607 00b3b3b1 f10e0e04	      ALU:	DOT2ADDv	R7.___w = R4.yyyy, R14.wyyy, R14.wyyy
14: c8020604 006e6e6c f10e0e04	      ALU:	DOT2ADDv	R4._y__ = R4.xxxx, R14.zxxx, R14.zxxx
15: 58210c0c 00c6c6b1 e00a0a8a	      ALU:	ADDv	R12.x___ = R10.zzzz, R10.zzzz
                          						    	RECIPSQ_IEEE	R12._y__ = abs(R10).yyyy
16: 588d0c04 0004056c e009098a	      ALU:	ADDv	R4.x_zw = R9.xzzw, R9.yzzw
                          						    	RECIPSQ_IEEE	R12.___w = abs(R10).xxxx
17: a8470b0a 00bf1604 c10c02ff	      ALU:	MULv	R10.xyz_ = R12.wxyy, R2.zzww
                          						    	MUL_CONST_0	R11.__z_ = C511.w, R4.x
18: b0470c0d 00bf1686 c10c01fc	      ALU:	MULv	R13.xyz_ = R12.wxyy, R1.zzww
                          						    	ADD_CONST_0	R12.__z_ = C508.y, R4.z
      00006019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: b0870c09 0010ca87 c10c00fc	      ALU:	MULv	R9.xyz_ = R12.xyww, R0.zwzz
                          						    	ADD_CONST_0	R12.___w = C508.y, R4.w
1a: 58110c0f 046c1bb1 e0090084	      ALU:	ADDv	R15.x___ = -R9.xxxx, R0.wwww
                          						    	RECIPSQ_IEEE	R12.x___ = abs(R4).yyyy
1b: 58280c08 04b1c61b e1090087	      ALU:	MULv	R8.___w = -R9.yyyy, R0.zzzz
                          						    	RECIPSQ_IEEE	R12._y__ = abs(R7).wwww
1c: 140f060b 01c000c6 e10b0c0d	      ALU:	MULv	R11 = R11.xyzz, R12
1d: 0c160000 0016c6c6 a10bfd01	      ALU:	MULv	R0._yz_ = R11.zzww, C509.zzzz
                          						    	MUL_PREVs	R0.x___ = R1.zzzz
1e: 14070604 01cfc0b1 e008000d	      ALU:	ADDv	R4.xyz_ = R8.wxzz, R0.xyzz
      0000601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: c8010600 04c6c66c eb0a0204	      ALU:	MULADDv	R0.x___ = R4.xxxx, -R10.zzzz, R2.zzzz
20: 04210f00 046c6c1b a000fe01	      ALU:	ADDv	R0.x___ = -R0.xxxx, C510.xxxx
                          						    	ADD_PREVs	R15._y__ = R1.wwww
21: 14010600 016c6cb1 e100000a	      ALU:	MULv	R0.x___ = R0.xxxx, R0.xxxx
22: 04480f0f 006c6c1b e1000002	      ALU:	MULv	R15.___w = R0.xxxx, R0.xxxx
                          						    	ADD_PREVs	R15.__z_ = R2.wwww
23: c8010600 00bebe00 f00f0f00	      ALU:	DOT3v	R0.x___ = R15.zxyy, R15.zxyy
24: 58120000 046c6c6c 200bfd80	      ALU:	ADDv	R0._y__ = -C267.xxxx, C509.xxxx
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
      05006025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: c80f0602 0000ac00 e10f0000	      ALU:	MULv	R2 = R15, R0.xxxy
26: c80f0600 00a6cd00 f2020200	      ALU:	CUBEv	R0 = R2.zzxy, R2.yxzz
27: 4c140101 001b1bc6 e2000080	      ALU:	MAXv	R1.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
28: c8030601 006d6cb1 cb0001fd	      ALU:	MULADDv	R1.xy__ = C509.yyyy, R0.yxxx, R1.xxxx
29: 100900a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R16.xyz_ = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2a: 64280081 1f1ff478 00004000	      FETCH:	SAMPLE	R0.x_yz = R4.yzy CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0025602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: 90184021 1f1ff688 0000c000	      FETCH:	SAMPLE	R4.xyzw = R1.xyz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2c: 105810a1 1f1ff611 00004000	      FETCH:	SAMPLE	R1.yzxw = R5.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2d: c801060f 006cc600 2101fc00	   (S)ALU:	MULv	R15.x___ = C257.xxxx, C508.zzzz
2e: c8088000 001b1b00 e1010600	      ALU:	MULv	export0.___w = R1.wwww, R6.wwww	; COLOR
2f: c8070605 00c0c000 e0060600	      ALU:	ADDv	R5.xyz_ = R6.xyzz, R6.xyzz
30: 14170608 00c06c1b 200e0004	      ALU:	ADDv	R8.xyz_ = C270.xyzz, C256.xxxx
                          						    	MAXs	R6.x___ = R4.wwww
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: a8270f02 00c0bec4 e10501fe	      ALU:	MULv	R2.xyz_ = R5.xyzz, R1.zxyy
                          						    	MUL_CONST_0	R15._y__ = C510.z, R6.x
32: 14240606 006c1bc6 65fe0401	      ALU:	SETGTv	R6.__z_ = C510.xxxx, R4.wwww
                          						    	MAXs	R6._y__ = R1.zzzz
33: a8190906 00b0b045 a00ffeff	      ALU:	ADDv	R6.x__w = R15.xyyy, C510.xyyy
                          						    	MUL_CONST_0	R9.x___ = C511.x, R6.y
34: 2c120606 006c6c1b a1060206	      ALU:	MULv	R6._y__ = R6.xxxx, C258.xxxx
                          						    	FRACs	R6.x___ = R6.wwww
35: c80d0608 00b1f0f0 eb061008	      ALU:	MULADDv	R8.x_zw = R8.xyyz, R6.yyyy, R16.xyyz
36: ac210906 02b16c80 c00f06ff	      ALU:	ADDv	R6.x___ = R15.yyyy, -R6.xxxx
                          						    	MUL_CONST_1	R9._y__ = C511.y, R1.x
      00006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: b08f060c 000dad04 e10e0cfd	      ALU:	MULv	R12 = R14.yxzw, R12.yxxy
                          						    	ADD_CONST_0	R6.___w = C509.w, R6.x
38: 38830606 006d6c1b e10c0d06	      ALU:	MULv	R6.xy__ = R12.yxxx, R13.xxxx
                          						    	EXP_IEEE	R6.___w = R6.wwww
39: c8030606 001ac6b0 eb0c0906	      ALU:	MULADDv	R6.xy__ = R6.xyyy, R12.zwww, R9.zzzz
3a: ac47090c 001bc0c1 c10604ff	      ALU:	MULv	R12.xyz_ = R6.wwww, R4.xyzz
                          						    	MUL_CONST_1	R9.__z_ = C511.z, R1.y
3b: c8070604 00c6c0c0 ee060c04	      ALU:	CNDGTv	R4.xyz_ = R4.xyzz, R6.zzzz, R12.xyzz
3c: c9030606 006d6c6d eb0b0a06	      ALU:	MULADDv	R6.xy__ = R6.yxxx, R11.yxxx, R10.xxxx CLAMP
      0000603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: a8240506 00bebe45 f0090504	      ALU:	DOT3v	R6.__z_ = R9.zxyy, R5.zxyy
                          						    	MUL_CONST_0	R5._y__ = C260.x, R6.y
3e: a8140506 00c66c45 a206fc03	      ALU:	MAXv	R6.__z_ = R6.zzzz, C508.xxxx
                          						    	MUL_CONST_0	R5.x___ = C259.x, R6.y
3f: a8240806 00c66c84 a306fe04	      ALU:	MINv	R6.__z_ = R6.zzzz, C510.xxxx
                          						    	MUL_CONST_0	R8._y__ = C260.y, R6.x
40: a8170801 0014c084 e0080703	      ALU:	ADDv	R1.xyz_ = R8.xzww, R7.xyzz
                          						    	MUL_CONST_0	R8.x___ = C259.y, R6.x
41: a8470804 00c6c084 e1060405	      ALU:	MULv	R4.xyz_ = R6.zzzz, R4.xyzz
                          						    	MUL_CONST_0	R8.__z_ = C261.y, R6.x
42: a8470507 00c0b145 e1080305	      ALU:	MULv	R7.xyz_ = R8.xyzz, R3.yyyy
                          						    	MUL_CONST_0	R5.__z_ = C261.x, R6.y
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: c8070607 00b46cb4 eb050307	      ALU:	MULADDv	R7.xyz_ = R7.xzyy, R5.xzyy, R3.xxxx
44: a9120606 001b6c80 80020b0d	      ALU:	ADDv	R6._y__ = R2.wwww, C267.xxxx CLAMP
                          						    	MUL_CONST_0	R6.x___ = C269.y, R0.x
45: a8270603 00c0b182 c104060d	      ALU:	MULv	R3.xyz_ = R4.xyzz, R6.yyyy
                          						    	MUL_CONST_0	R6._y__ = C269.y, R0.z
46: a8470603 00b41b83 8103fe0d	      ALU:	MULv	R3.xyz_ = R3.xzyy, C510.wwww
                          						    	MUL_CONST_0	R6.__z_ = C269.y, R0.w
47: c8070600 01b4c6c0 ab030a06	      ALU:	MULADDv	R0.xyz_ = -R6.xyzz, R3.xzyy, C266.zzzz
48: c8070600 00b4c0b4 eb020700	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R2.xzyy, R7.xyzz
      00003049 00002200     	EXEC_END ADDR(0x49) CNT(0x3) BOOL_ADDR(0x80)
49: c8070600 00c0c0b4 eb020100	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R2.xyzz, R1.xyzz
4a: c8070606 00c06cc0 ab000c06	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R0.xyzz, C268.xxxx
4b: c8078000 00c06c00 a1060d00	      ALU:	MULv	export0.xyz_ = R6.xyzz, C269.xxxx	; COLOR
      00000000 00000000     	NOP
