      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      02506006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: c8030609 00b0b000 e2050500	      ALU:	MAXv	R9.xy__ = R5.xyyy, R5.xyyy
07: c8040609 006cb100 210cfe00	      ALU:	MULv	R9.__z_ = C268.xxxx, C510.yyyy
08: 106080a1 1f1ff67f 00004000	      FETCH:	SAMPLE	R8.__yw = R5.xyx CONST(6) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 90508121 1f1fffc7 00008000	      FETCH:	SAMPLE	R8._x__ = R9.xyz CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: c8040604 006cc600 2101fe00	   (S)ALU:	MULv	R4.__z_ = C257.xxxx, C510.zzzz
0b: 4c8c0307 00acacc6 a1870303	      ALU:	MULv	R7.__zw = abs(R7).xxxy, C259.xxxy
                          						    	RECIP_IEEE	R3.___w = R3.zzzz
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: 4c130307 001bb01b e1030304	      ALU:	MULv	R7.xy__ = R3.wwww, R3.xyyy
                          						    	RECIP_IEEE	R3.x___ = R4.wwww
0d: b8130803 016cb049 c10304ff	      ALU:	MULv	R3.xy__ = R3.xxxx, R4.xyyy
                          						    	SUB_CONST_0	R8.x___ = -C511.x, -R8.y
0e: c80b0604 00141500 e0080800	      ALU:	ADDv	R4.xy_w = R8.xzww, R8.yzww
0f: a88e0304 00d171c4 8004ffff	      ALU:	ADDv	R4._yzw = R4.yywz, C511.yyyx
                          						    	MUL_CONST_0	R3.___w = C511.z, R4.x
10: bc830308 001bc541 e10304ff	      ALU:	MULv	R8.xy__ = R3.wwww, R4.yzzz
                          						    	SUB_CONST_1	R3.___w = C511.x, R3.y
11: c8030609 00b01b18 ab08ff03	      ALU:	MULADDv	R9.xy__ = R3.xwww, R8.xyyy, C511.wwww
      05556012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: b808d0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R13.xyz_ = R5.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
13: 101880a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R5.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: 1048a121 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R9.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: b82830e1 1f1ff7ff 00004000	      FETCH:	SAMPLE	R3.___w = R7.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 107850a1 1f1ff4c8 00004000	      FETCH:	SAMPLE	R5.xywz = R5.xyx CONST(7) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 103890e1 1f1fffd8 00004000	      FETCH:	SAMPLE	R9.xw__ = R7.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: b0180400 001bb143 80010b0b	   (S)ALU:	ADDv	R0.___w = R1.wwww, C267.yyyy
                          						    	ADD_CONST_0	R4.x___ = C267.x, R0.w
19: 14070607 00c0c01b e0060602	      ALU:	ADDv	R7.xyz_ = R6.xyzz, R6.xyzz
1a: 0412030c 00c66cc6 8503fe0b	      ALU:	SETGTv	R12._y__ = R3.zzzz, C510.xxxx
                          						    	ADD_PREVs	R3.x___ = C267.zzzz
1b: 08830d0b 046cb061 a0030a09	      ALU:	ADDv	R11.xy__ = -R3.xxxx, C266.xyyy
                          						    	MULs	R13.___w = R9.yyxx
1c: b8490b09 046cb043 80040809	      ALU:	ADDv	R9.x__w = -R4.xxxx, C264.xyyy
                          						    	SUB_CONST_0	R11.__z_ = C265.x, R0.w
1d: b8830b03 00181883 c1090909	      ALU:	MULv	R3.xy__ = R9.xwww, R9.xwww
                          						    	SUB_CONST_0	R11.___w = C265.y, R0.w
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: c8010604 00b3b3b1 f10b0b03	      ALU:	DOT2ADDv	R4.x___ = R3.yyyy, R11.wyyy, R11.wyyy
1f: c8080607 006e6e6c f10b0b03	      ALU:	DOT2ADDv	R7.___w = R3.xxxx, R11.zxxx, R11.zxxx
20: 4021090c 001bb11b a103fe87	      ALU:	MULv	R12.x___ = R3.wwww, C510.yyyy
                          						    	LOG_IEEE	R9._y__ = abs(R7).wwww
21: 40470903 00c0b16c a10a0d84	      ALU:	MULv	R3.xyz_ = R10.xyzz, C269.yyyy
                          						    	LOG_IEEE	R9.__z_ = abs(R4).xxxx
22: a8870307 00c01047 c1070502	      ALU:	MULv	R7.xyz_ = R7.xyzz, R5.xyww
                          						    	MUL_CONST_0	R3.___w = C258.x, R4.w
23: 58160a09 00c1cc1b a1090487	      ALU:	MULv	R9._yz_ = R9.yyzz, C260.xxzz
                          						    	RECIPSQ_IEEE	R10.x___ = abs(R7).wwww
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 582c0a0c 00f1f16c e1040484	      ALU:	MULv	R12.__zw = R4.yyyz, R4.yyyz
                          						    	RECIPSQ_IEEE	R10._y__ = abs(R4).xxxx
25: 140c060a 002cacb1 e1090a0b	      ALU:	MULv	R10.__zw = R9.xxxw, R10.xxxy
26: 0c170908 001bc0b1 e103080a	      ALU:	MULv	R8.xyz_ = R3.wwww, R8.xyzz
                          						    	MUL_PREVs	R9.x___ = R10.yyyy
27: c8070608 00c06cc0 ab0d0008	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R13.xyzz, C256.xxxx
28: 38230905 04c46cb1 a00cff09	      ALU:	ADDv	R5.xy__ = -R12.xzzz, C511.xxxx
                          						    	EXP_IEEE	R9._y__ = R9.yyyy
29: 38480903 02b11bc6 e0050c09	      ALU:	ADDv	R3.___w = R5.yyyy, -R12.wwww
                          						    	EXP_IEEE	R9.__z_ = R9.zzzz
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: a115040c 00c5191b a1090483	      ALU:	MULv	R12.x_z_ = R9.yzzz, C260.ywww CLAMP
                          						    	SQRT_IEEE	R4.x___ = abs(R3).wwww
2b: 1401060d 00c0be6c f004020b	      ALU:	DOT3v	R13.x___ = R4.xyzz, R2.zxyy
2c: 0c22090d 00c0be6c f004010a	      ALU:	DOT3v	R13._y__ = R4.xyzz, R1.zxyy
                          						    	MUL_PREVs	R9._y__ = R10.xxxx
2d: 1404060d 00c0bec6 f004000b	      ALU:	DOT3v	R13.__z_ = R4.xyzz, R0.zxyy
2e: 0c410900 00b4b46c f00d0d0a	      ALU:	DOT3v	R0.x___ = R13.xzyy, R13.xzyy
                          						    	MUL_PREVs	R9.__z_ = R10.xxxx
2f: 581c0c00 04ec6c6c a00cff80	      ALU:	ADDv	R0.__zw = -R12.xxxz, C511.xxxx
                          						    	RECIPSQ_IEEE	R12.x___ = abs(R0).xxxx
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: 140f0601 0000ac1b e10d0c0b	      ALU:	MULv	R1 = R13, R12.xxxy
31: 0c830900 001ac6b1 e10a010a	      ALU:	MULv	R0.xy__ = R10.zwww, R1.zzzz
                          						    	MUL_PREVs	R9.___w = R10.yyyy
32: c9080602 006f6db1 f1090100	      ALU:	DOT2ADDv	R2.___w = R0.yyyy, R9.wxxx, R1.yxxx CLAMP
33: c9010600 00b26d6c f1090100	      ALU:	DOT2ADDv	R0.x___ = R0.xxxx, R9.zyyy, R1.yxxx CLAMP
34: c8040602 001b6c00 e1010000	      ALU:	MULv	R2.__z_ = R1.wwww, R0.xxxx
35: c8030600 00c7c700 e1020000	      ALU:	MULv	R0.xy__ = R2.wzzz, R0.wzzz
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: c80c0604 0071ac00 a1000600	      ALU:	MULv	R4.__zw = R0.yyyx, C262.xxxy
37: a8170401 00b4b441 c1070805	      ALU:	MULv	R1.xyz_ = R7.xzyy, R8.xzyy
                          						    	MUL_CONST_0	R4.x___ = C261.x, R0.y
38: a8230402 0019b080 81000705	      ALU:	MULv	R2.xy__ = R0.ywww, C263.xyyy
                          						    	MUL_CONST_0	R4._y__ = C261.y, R0.x
39: 14050600 00c419c6 e0040405	      ALU:	ADDv	R0.x_z_ = R4.xzzz, R4.ywww
3a: c8020600 00b11b6c eb020202	      ALU:	MULADDv	R0._y__ = R2.xxxx, R2.yyyy, R2.wwww
3b: c8070600 01b4c0b4 eb070003	      ALU:	MULADDv	R0.xyz_ = -R3.xzyy, R7.xzyy, R0.xyzz
      0000303c 00002200     	EXEC_END ADDR(0x3c) CNT(0x3) BOOL_ADDR(0x80)
3c: c8070600 00c06cc0 eb010500	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R5.xxxx
3d: c8070600 00b46cc0 ab000c03	      ALU:	MULADDv	R0.xyz_ = R3.xyzz, R0.xzyy, C268.xxxx
3e: 0c878000 00c06c1b a1000d06	      ALU:	MULv	export0.xyz_ = R0.xyzz, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.wwww	; COLOR
      00000000 00000000     	NOP
