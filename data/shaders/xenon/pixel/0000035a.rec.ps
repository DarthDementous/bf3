      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: 10307061 1f1ffecf 00004000	      FETCH:	SAMPLE	R7._yw_ = R3.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 08180707 001b1b1b e1010100	   (S)ALU:	MULv	R7.___w = R1.wwww, R1.wwww
                          						    	MULs	R7.x___ = R0.wwww
09: c8070507 00c0c300 e0070700	      ALU:	ADDv	R7.xyz_ = R7.xyzz, R7.wyzz
0a: c8080504 001b1b6c eb020207	      ALU:	MULADDv	R4.___w = R7.xxxx, R2.wwww, R2.wwww
0b: c8030507 00c56c00 a007ff00	      ALU:	ADDv	R7.xy__ = R7.yzzz, C511.xxxx
0c: c8040507 046d6d1b d10707fd	      ALU:	DOT2ADDv	R7.__z_ = C509.wwww, -R7.yxxx, R7.yxxx
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: a0440704 001b6cc6 a0000987	      ALU:	ADDv	R4.__z_ = R0.wwww, C265.xxxx
                          						    	SQRT_IEEE	R7.__z_ = abs(R7).zzzz
0e: c801050b 00bebe00 f0070000	      ALU:	DOT3v	R11.x___ = R7.zxyy, R0.zxyy
0f: c802050b 00bebe00 f0070100	      ALU:	DOT3v	R11._y__ = R7.zxyy, R1.zxyy
10: 58840b0b 00bebe1b f0070284	      ALU:	DOT3v	R11.__z_ = R7.zxyy, R2.zxyy
                          						    	RECIPSQ_IEEE	R11.___w = abs(R4).wwww
11: c80c0508 002c1b00 e10b0000	      ALU:	MULv	R8.__zw = R11.xxxw, R0.wwww
12: c8030508 00191b00 e10b0100	      ALU:	MULv	R8.xy__ = R11.ywww, R1.wwww
      00006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c8030507 001a1b00 e10b0200	      ALU:	MULv	R7.xy__ = R11.zwww, R2.wwww
14: 14080504 01c66cb1 e0080807	      ALU:	ADDv	R4.___w = R8.zzzz, R8.xxxx
15: 0c410707 001b6cc6 e004070b	      ALU:	ADDv	R7.x___ = R4.wwww, R7.xxxx
                          						    	MUL_PREVs	R7.__z_ = R11.zzzz
16: c8020507 04b3b06c d1080bfd	      ALU:	DOT2ADDv	R7._y__ = C509.xxxx, -R8.wyyy, R11.xyyy
17: c80a0509 00616600 e0070700	      ALU:	ADDv	R9._y_w = R7.yyxx, R7.zzxx
18: c8070507 001bb400 e1090b00	      ALU:	MULv	R7.xyz_ = R9.wwww, R11.xzyy
      00006019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 14020508 05c61b6c e0070107	      ALU:	ADDv	R8._y__ = -R7.zzzz, R1.wwww
1a: 04140808 04b11b1b e0070200	      ALU:	ADDv	R8.__z_ = -R7.yyyy, R2.wwww
                          						    	ADD_PREVs	R8.x___ = R0.wwww
1b: c8010500 00bebe00 f0080800	      ALU:	DOT3v	R0.x___ = R8.zxyy, R8.zxyy
1c: 58130007 00b0b06c a1860180	      ALU:	MULv	R7.xy__ = abs(R6).xyyy, C257.xyyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
1d: c8070500 00c06c00 e1080000	      ALU:	MULv	R0.xyz_ = R8.xyzz, R0.xxxx
1e: c80f0500 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
      0550601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 4c240106 001b1bc6 e2000080	      ALU:	MAXv	R6.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1._y__ = abs(R0).zzzz
20: c8030506 006db1c6 cb0001fd	      ALU:	MULADDv	R6.xy__ = C509.zzzz, R0.yxxx, R1.yyyy
21: b8189061 1f1ffff8 00004000	      FETCH:	SAMPLE	R9.x___ = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: 10280081 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R4.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
23: 905860c1 1f1ff688 0000c000	      FETCH:	SAMPLE	R6.xyzw = R6.xyz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
24: 10083061 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: 104810e1 1f1fffdf 00004000	      FETCH:	SAMPLE	R1._w__ = R7.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
26: c8080508 046c1b00 200bfc00	   (S)ALU:	ADDv	R8.___w = -C267.xxxx, C508.wwww
27: 14010500 001bb11b a0010902	      ALU:	ADDv	R0.x___ = R1.wwww, C265.yyyy
28: 04470507 00c0c0c6 c0050509	      ALU:	ADDv	R7.xyz_ = R5.xyzz, R5.xyzz
                          						    	ADD_PREVs	R5.__z_ = C265.zzzz
29: ac43090a 046cb041 800007fc	      ALU:	ADDv	R10.xy__ = -R0.xxxx, C263.xyyy
                          						    	MUL_CONST_1	R9.__z_ = C508.x, R1.y
2a: 14170502 00c0c01b e1070306	      ALU:	MULv	R2.xyz_ = R7.xyzz, R3.xyzz
                          						    	MAXs	R5.x___ = R6.wwww
      0000602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: ac120005 001b1b04 45fd06fe	      ALU:	SETGTv	R5._y__ = C509.wwww, R6.wwww
                          						    	MUL_CONST_1	R0.x___ = C510.w, R5.x
2c: bc410a05 006c6c46 8000fc08	      ALU:	ADDv	R5.x___ = R0.xxxx, C508.xxxx
                          						    	SUB_CONST_1	R10.__z_ = C264.x, R5.z
2d: a8110105 006c0041 c8050000	      ALU:	FRACv	R5.x___ = R5.xxxx
                          						    	MUL_CONST_0	R1.x___ = C256.x, R0.y
2e: a8210105 026c6c42 c0000500	      ALU:	ADDv	R5.x___ = R0.xxxx, -R5.xxxx
                          						    	MUL_CONST_0	R1._y__ = C256.x, R0.z
2f: a8410105 006cb143 8005fc00	      ALU:	ADDv	R5.x___ = R5.xxxx, C508.yyyy
                          						    	MUL_CONST_0	R1.__z_ = C256.x, R0.w
30: 38170508 00c0c06c e1010305	      ALU:	MULv	R8.xyz_ = R1.xyzz, R3.xyzz
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: bc870a01 006cc086 c1050608	      ALU:	MULv	R1.xyz_ = R5.xxxx, R6.xyzz
                          						    	SUB_CONST_1	R10.___w = C264.y, R5.z
32: c80b0504 00b1c0c0 ee050106	      ALU:	CNDGTv	R4.xy_w = R6.xyzz, R5.yyyy, R1.xyzz
33: b8410605 00bebe46 d00b0b06	      ALU:	DOT3v	R5.x___ = R11.zxyy, R11.zxyy
                          						    	SUB_CONST_0	R6.__z_ = C262.x, R4.z
34: b8830606 04c51b86 8009fd06	      ALU:	ADDv	R6.xy__ = -R9.yzzz, C509.wwww
                          						    	SUB_CONST_0	R6.___w = C262.y, R4.z
35: 581e0101 000c0c6c e1060685	      ALU:	MULv	R1._yzw = R6.xxzw, R6.xxzw
                          						    	RECIPSQ_IEEE	R1.x___ = abs(R5).xxxx
36: c8010505 0019191b f10a0a01	      ALU:	DOT2ADDv	R5.x___ = R1.wwww, R10.ywww, R10.ywww
      00006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: c8020505 00c4c4c6 f10a0a01	      ALU:	DOT2ADDv	R5._y__ = R1.zzzz, R10.xzzz, R10.xzzz
38: 58210900 00bec0b1 b002fe85	      ALU:	DOT3v	R0.x___ = R2.zxyy, C510.xyzz
                          						    	RECIPSQ_IEEE	R9._y__ = abs(R5).yyyy
39: 58410900 006cc66c a200fc85	      ALU:	MAXv	R0.x___ = R0.xxxx, C508.zzzz
                          						    	RECIPSQ_IEEE	R9.__z_ = abs(R5).xxxx
3a: 40270507 00b4b4b1 e1080785	      ALU:	MULv	R7.xyz_ = R8.xzyy, R7.xzyy
                          						    	LOG_IEEE	R5._y__ = abs(R5).yyyy
3b: 40180502 00b1b16c e1010185	      ALU:	MULv	R2.___w = R1.yyyy, R1.yyyy
                          						    	LOG_IEEE	R5.x___ = abs(R5).xxxx
3c: ac2d0101 00846c45 c10b0102	      ALU:	MULv	R1.x_zw = R11.xzzy, R1.xxxx
                          						    	MUL_CONST_1	R1._y__ = C258.x, R5.y
      0000603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: ac230508 001ac5c4 c1060902	      ALU:	MULv	R8.xy__ = R6.zwww, R9.yzzz
                          						    	MUL_CONST_1	R5._y__ = C258.z, R5.x
3e: 381f050a 000df2b1 e10a0901	      ALU:	MULv	R10 = R10.yxzw, R9.zyyz
                          						    	EXP_IEEE	R5.x___ = R1.yyyy
3f: 38230501 00b06cb1 e1080105	      ALU:	MULv	R1.xy__ = R8.xyyy, R1.xxxx
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
40: c9020508 0018c7b1 f10a0101	      ALU:	DOT2ADDv	R8._y__ = R1.yyyy, R10.xwww, R1.wzzz CLAMP
41: c9010508 00c5c76c f10a0101	      ALU:	DOT2ADDv	R8.x___ = R1.xxxx, R10.yzzz, R1.wzzz CLAMP
42: c9060509 00bc1100 a1050200	      ALU:	MULv	R9._yz_ = R5.xxyy, C258.yyww CLAMP
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: c8070501 04c01b00 a009fd00	      ALU:	ADDv	R1.xyz_ = -R9.xyzz, C509.wwww
44: ac110900 006c1b41 8300fd05	      ALU:	MINv	R0.x___ = R0.xxxx, C509.wwww
                          						    	MUL_CONST_1	R9.x___ = C261.x, R1.y
45: ac230905 006db282 c1080105	      ALU:	MULv	R5.xy__ = R8.yxxx, R1.zyyy
                          						    	MUL_CONST_1	R9._y__ = C261.y, R1.z
46: c8040508 00b0b06c d10908fd	      ALU:	DOT2ADDv	R8.__z_ = C509.xxxx, R9.xyyy, R8.xyyy
47: ac170904 006c1045 c1000403	      ALU:	MULv	R4.xyz_ = R0.xxxx, R4.xyww
                          						    	MUL_CONST_1	R9.x___ = C259.x, R5.y
48: ac2c0909 0071ac84 81050403	      ALU:	MULv	R9.__zw = R5.yyyx, C260.xxxy
                          						    	MUL_CONST_1	R9._y__ = C259.y, R5.x
      00006049 00001200     	EXEC ADDR(0x49) CNT(0x6) BOOL_ADDR(0x80)
49: c8030508 00c41900 e0090900	      ALU:	ADDv	R8.xy__ = R9.xzzz, R9.ywww
4a: c80f0502 00000000 e1020800	      ALU:	MULv	R2 = R2, R8
4b: c8070502 00b4b1c0 eb070602	      ALU:	MULADDv	R2.xyz_ = R2.xyzz, R7.xzyy, R6.yyyy
4c: b2100005 00000043 e205050b	      ALU:	ADD_CONST_0	R0.x___ = C267.x, R2.w CLAMP
4d: 14070503 00c06c1b e1040003	      ALU:	MULv	R3.xyz_ = R4.xyzz, R0.xxxx
4e: 0c870503 00c0b11b a103fd05	      ALU:	MULv	R3.xyz_ = R3.xyzz, C509.yyyy
                          						    	MUL_PREVs	R5.___w = R5.wwww
      0000304f 00002200     	EXEC_END ADDR(0x4f) CNT(0x3) BOOL_ADDR(0x80)
4f: 14070505 00c0c61b a1030a05	      ALU:	MULv	R5.xyz_ = R3.xyzz, C266.zzzz
50: c8070505 00c015c0 eb050002	      ALU:	MULADDv	R5.xyz_ = R2.xyzz, R5.xyzz, R0.yzww
51: 0c878000 00c06c6c a1050c01	      ALU:	MULv	export0.xyz_ = R5.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R1.xxxx	; COLOR
