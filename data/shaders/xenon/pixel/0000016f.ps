//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   sampler2D $tranpcy;
//   float $usendotl;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $suncolour     c1       1
//   $sunintensity  c2       1
//   $usendotl      c3       1
//   $invscreensize c4       1
//   $matvalue      c5       1
//   $fresnelterm   c6       1
//   $apptime       c7       1
//   $compressedhdr c8       1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $spec          s2       1
//   $screenshadmap s3       1
//   $envmap        s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c7
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c8
defconst $diff, sampler2d, object, [1, 1], s8
defconst $envmap, samplercube, object, [1, 1], s4
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c6
defconst $invscreensize, float, vector, [1, 2], c4
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c5
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spec, sampler2d, object, [1, 1], s2
defconst $suncolour, float, vector, [1, 3], c1
defconst $sunintensity, float, scalar, [1, 1], c2
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $usendotl, float, scalar, [1, 1], c3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=16
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=9

// interpolators: 9 interpolants: 9, components: 32
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_texcoord7 r7.xy
dcl_color_centroid r8

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 2, 0.25, 0, 0
def c251, 4, 0.0529999994, -127.5, 10
def c252, 5, 0.5, 0.300000012, 1.5
def c253, -1, 0.5, 0, 1
def c254, 0.143999994, 0.298999995, 0.587000012, 3.29999995
def c255, 0.0599999987, 0.150000006, 0.289999992, 255


/*    0.0 */     exec
/*    9   */     tfetch2D r16.x___, r6.zw, tf0, FetchValidOnly=false
/*   10   */     tfetch2D r7.__yw, r6.xy, tf7, FetchValidOnly=false
/*   11   */     tfetch2D r11.xzy_, r7.xy, tf1
/*   12   */     tfetch2D r10.xyz_, r6.xy, tf2
/*   13   */     tfetch2D r13, r6.xy, tf8
/*   14   */     serialize
                 mul r15.w, c5.x, c251.w
/*    0.1 */     exec
/*   15   */     mul r3.w, r13.w, r8.w
/*   16   */     add r14.xyz, r8.zyx, r8.zyx
/*   17   */     dp3 r8.w, r3.zxy, r3.zxy
/*   18   */     dp3 r14.w, r10.zxy, c255.xyz
/*   19   */     mul r10.xyz, r10.xyz, c253.y
/*   20   */     mul r8.xyz, r11.xzy, c0.x
               + rsq r8.w, r8_abs.w
/*    1.0 */     exec
/*   21   */     mad r12.xy, r7.zw, c250.x, c253.x
/*   22   */     mul r3.xyz, r8.w, r3.xyz
/*   23   */     mul r15.xyz, r8.xyz, r13.xyz
               + muls r16.y, r12.xx
/*   24   */     mul r8.yzw, r10.zzyx, r11.yyzx
               + muls r16.z, r12.yy
/*   25   */     add r7.xw, -r16.yx, c253.w
/*   26   */     mul r15, r15.zyxw, r14
               + movs r8._, r7.x
/*    1.1 */     exec
/*   27   */     add r4.w, r15.w, c253.w
               + adds_prev r8.x, -r16.z
/*   28   */     max r4.w, r4.w, c253.z
               + sqrt r12.z, r8_abs.x
/*   29   */     dp3 r7.z, r12.zxy, r0.zxy
/*   30   */     dp3_sat r3.z, r3.zxy, r12.zxy
               + mulsc r3.x, c251.x, r8.y
/*   31   */     dp3 r7.y, r12.zxy, r1.zxy
               + mulsc r3.y, c251.x, r8.z
/*   32   */     mul r8.x, r7.y, r1.w
               + log r3.z, r3.z
/*    2.0 */     exec
/*   33   */     mad r8.x, r7.z, r0.w, r8.x
/*   34   */     mul r0.x, r4.w, r3.z
               + mulsc r3.z, c251.x, r8.w
/*   35   */     dp3 r7.x, r12.zxy, r2.zxy
               + exp r8.y, r0.x
/*   36   */     mad r8.x, r7.x, r2.w, r8.x
/*   37   */     mul r8.yzw, r3.xxyz, r8.y
/*   38   */     mul r0.xyz, r8.yzw, c1.zyx
               + adds r8.x, r8.xx
/*    2.1 */     exec
/*   39   */     mul r8.xyz, r8.x, r7.zxy
/*   40   */     mad r0.xyz, r0.zyx, c2.x, r15.zyx
/*   41   */     add r3.y, -r8.z, r1.w
/*   42   */     mul r1.xyz, r14.yzx, r13.yxz
               + movs r8._, -r8.y
/*   43   */     add r3.z, -r8.x, r0.w
               + adds_prev r3.x, r2.w
/*   44   */     dp3 r8.x, r3.xzy, r3.xzy
               + movs_sat r8.w, r4.z
/*    3.0 */     exec    // PredicateClean=false
/*   45   */     mul r2.x, r3.w, r7.w
               + rsq r8.x, r8_abs.x
/*   46   */     mul r8.xyz, r3.zyx, r8.x
               + setp_ne r8._, c3.x
/*    3.1 */ (p0) exec
/*   47   */     (p0) mul r3.y, c2.x, c1.x
/*   48   */     (p0) cndeq r13.xyz, c253.zzw, -r4.zx, r4.y
/*   49   */     (p0) dp3_sat r3.w, r12.zxy, r4.zxy
               + (p0) movs_sat r3.x, -r4.z
/*   50   */     (p0) dp3_sat r3.z, r12.zxy, r13.xyz
               + (p0) movs r8._, r3.w
/*   51   */     (p0) add r3.x, r3.z, -r3.x
               + (p0) adds_prev r8.w, -r8.w
/*   52   */     (p0) mad r3.x, r3.x, c250.y, r8.w
/*    4.0 */ (p0) exec
/*   53   */     (p0) mul r3.y, r3.y, r3.x
/*   54   */     (p0) mul r3.xw, r3.yx, c252.z
/*   55   */     (p0) mul r3.yz, r3.w, c1.yyz
/*   56   */     (p0) mul r3.yz, r3.zzy, c2.x
/*   57   */     (p0) add r0.xyz, r0.xyz, r3.xzy
/*    4.1 */     alloc colors
/*    5.0 */     exec
/*   58   */     mul r2.yz, r9_abs.xxy, c4.xxy
               + movs r8._, c7.x
/*   59   */     cube r8, r8.zzxy, r8.yxz
               + muls_prev r6.z, c253.y
/*   60   */     mov r3.z, r8.w
               + rcp r3.x, r8_abs.z
/*   61   */     mad r3.xy, r8.yx, r3.x, c252.w
/*   62   */     tfetch2D r2.__w_, r2.yz, tf3, FetchValidOnly=false
/*   63   */     tfetch3D r6.x___, r6.xyz, tf6, FetchValidOnly=false
/*    5.1 */     exec
/*   64   */     tfetchCube r4, r3.xyz, tf4, FetchValidOnly=false
/*   65   */     serialize
                 mul r9.x, r1.w, r1.w
               + muls r8.w, r0.ww
/*   66   */     mul r6.y, r4.w, c255.w
               + rcp r8.x, r5.w
/*   67   */     add r3.xw, r6.xy, c253.xy
               + movs r8._, r8.x
/*   68   */     add r2.y, r3.x, r6.x
               + muls_prev r8.y, r5.x
/*   69   */     mul r2.yz, r2.yyz, c252.xxy
               + movs r8._, r8.x
/*    6.0 */     exec
/*   70   */     mul r3.yz, r2.y, r12.xxy
               + muls_prev r8.x, r5.y
/*   71   */     mul r9.yz, r3.yyz, c251.y
               + subsc r8.z, c253.w, r8.x
/*   72   */     add r3.xyz, r8.ywz, r9.yxz
               + frcs r8.x, r3.w
/*   73   */     tfetch2D r3.x_yz, r3.xz, tf5
/*   74   */     serialize
                 add r8.x, r6.y, -r8.x
/*   75   */     dp3 r8.w, r1.zyx, c254.xyz
               + addsc r8.x, c251.z, r8.x
/*    6.1 */     exec
/*   76   */     sgt r1.x, c253.w, r4.w
               + exp r8.x, r8.x
/*   77   */     mul r8.xyz, r8.x, r4.xyz
/*   78   */     cndgt r8.xyz, r1.x, r8.xyz, r4.xyz
/*   79   */     mad r1.x, r2.w, r2.w, r3.y
/*   80   */     add r2.y, -r2.z, c253.w
               + rsq r2.z, r1_abs.x
/*   81   */     mul r1.z, r2.z, r1.w
/*    7.0 */     exec
/*   82   */     max r1.x, r8.w, c255.y
               + movs r8._, r2.z
/*   83   */     mul r0, r2.yyyz, r0
               + muls_prev r1.y, r2.w
/*   84   */     cndeq r1.yzw, c253.zzw, -r0.w, -r1.yyyz
/*   85   */     dp3 r8.w, r1.zwy, r7.xyz
/*   86   */     add r8.w, -r8.w, c253.w
               + movs r8._, -c6.x
/*   87   */     mul r1.y, r8.w, r8.w
               + adds_prev r8.w, c250.x
/*    7.1 */     exec
/*   88   */     min r1.x, r1.x, c253.w
               + muls r1.y, r1.yy
/*   89   */     mul r8, r1.yx, r8.wxyz
/*   90   */     add_sat r8.x, r8.x, c6.x
/*   91   */     mul r8.xyz, r8.yzw, r8.x
/*   92   */     mul r8.yzw, r8.xxyz, r10.xxyz
               + mulsc r8.x, c8.y, r3.x
/*   93   */     mul r1.xyz, r8.yzw, c254.w
               + mulsc r8.y, c8.y, r3.z
/*    8.0 */     exece
/*   94   */     mul r1.xyz, r1.xyz, c5.z
               + mulsc r8.z, c8.y, r3.w
/*   95   */     mad r0.xyz, r1.xyz, r11.xzy, r0.xyz
/*   96   */     add r0.xyz, r0.xzy, -r8.xzy
/*   97   */     mad r8.xyz, r0.xzy, c7.x, r8.xyz
/*   98   */     mul r2.yzw, r8.xxyz, c8.x
/*   99   */     mov oC0, r2.yzwx
/*    8.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x01ff SamplingPattern 0x00ff
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] texcoord7 r7.xy
// [8] color0 r8.xyzw

