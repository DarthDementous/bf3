      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 10003081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R3.___x = R4.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: c8040600 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
06: 58480000 00b1b1c6 2100ff80	      ALU:	MULv	R0.___w = C256.yyyy, C511.yyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
07: c8080603 011bb11b ab030000	      ALU:	MULADDv	R3.___w = -R0.wwww, R3.wwww, C256.yyyy
08: a8830008 04c6b002 80030700	      ALU:	ADDv	R8.xy__ = -R3.zzzz, C263.xyyy
                          						    	MUL_CONST_0	R0.___w = C256.w, R0.z
09: c8030600 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
      0254600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: c8060600 00bc1bbc eb000304	      ALU:	MULADDv	R0._yz_ = R4.xxyy, R0.xxyy, R3.wwww
0b: 103850a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R5.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: b8280081 1f1ffff8 00004000	      FETCH:	SAMPLE	R0.x___ = R4.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 64184001 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R0.yzy CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: c8030607 04b1b000 a0030600	   (S)ALU:	ADDv	R7.xy__ = -R3.yyyy, C262.xyyy
0f: c80c0607 046cac00 a0030500	      ALU:	ADDv	R7.__zw = -R3.xxxx, C261.xxxy
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: c8060600 00bcbc00 e1080800	      ALU:	MULv	R0._yz_ = R8.xxyy, R8.xxyy
11: c8040600 00b3b3c6 f1070700	      ALU:	DOT2ADDv	R0.__z_ = R0.zzzz, R7.wyyy, R7.wyyy
12: c8020600 006e6eb1 f1070700	      ALU:	DOT2ADDv	R0._y__ = R0.yyyy, R7.zxxx, R7.zxxx
13: 40200006 000000b1 e2060680	      ALU:	LOG_IEEE	R0._y__ = abs(R0).yyyy
14: 40400006 000000c6 e2060680	      ALU:	LOG_IEEE	R0.__z_ = abs(R0).zzzz
15: c8060600 00c1cc00 a1000800	      ALU:	MULv	R0._yz_ = R0.yyzz, C264.xxzz
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: 38200006 000000b1 e2060600	      ALU:	EXP_IEEE	R0._y__ = R0.yyyy
17: 38480000 001b1bc6 e1040600	      ALU:	MULv	R0.___w = R4.wwww, R6.wwww
                          						    	EXP_IEEE	R0.__z_ = R0.zzzz
18: c9060600 00c11100 a1000800	      ALU:	MULv	R0._yz_ = R0.yyzz, C264.yyww CLAMP
19: c8070600 04c06c00 a000ff00	      ALU:	ADDv	R0.xyz_ = -R0.xyzz, C511.xxxx
1a: a8200706 00000041 c2060603	      ALU:	MUL_CONST_0	R7._y__ = C259.x, R0.y
1b: a8170703 00c0c041 c0060602	      ALU:	ADDv	R3.xyz_ = R6.xyzz, R6.xyzz
                          						    	MUL_CONST_0	R7.x___ = C258.x, R0.y
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: a8170608 00c06c82 81050102	      ALU:	MULv	R8.xyz_ = R5.xyzz, C257.xxxx
                          						    	MUL_CONST_0	R6.x___ = C258.y, R0.z
1d: a8470605 00c0c082 c1030404	      ALU:	MULv	R5.xyz_ = R3.xyzz, R4.xyzz
                          						    	MUL_CONST_0	R6.__z_ = C260.y, R0.z
1e: a8270604 00c0c082 c1080403	      ALU:	MULv	R4.xyz_ = R8.xyzz, R4.xyzz
                          						    	MUL_CONST_0	R6._y__ = C259.y, R0.z
1f: a8470706 00c01b41 c1060204	      ALU:	MULv	R6.xyz_ = R6.xyzz, R2.wwww
                          						    	MUL_CONST_0	R7.__z_ = C260.x, R0.y
20: c8070606 00c01bc0 eb070106	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R7.xyzz, R1.wwww
21: 14070606 00c0c01b e1050600	      ALU:	MULv	R6.xyz_ = R5.xyzz, R6.xyzz
      00002022 00002200     	EXEC_END ADDR(0x22) CNT(0x2) BOOL_ADDR(0x80)
22: c8070606 00c0c0c0 eb040306	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R4.xyzz, R3.xyzz
23: 0c878000 00c06c6c a1060900	      ALU:	MULv	export0.xyz_ = R6.xyzz, C265.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
      00000000 00000000     	NOP
