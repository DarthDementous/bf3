      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      02506005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: c804070a 006cb100 210afe00	      ALU:	MULv	R10.__z_ = C266.xxxx, C510.yyyy
06: b083020a 00b0b0c3 e2060609	      ALU:	MAXv	R10.xy__ = R6.xyyy, R6.xyyy
                          						    	ADD_CONST_0	R2.___w = C265.z, R2.w
07: 105090c1 1f1ff67f 00004000	      FETCH:	SAMPLE	R9.__yw = R6.xyx CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 90409141 1f1fffc7 00008000	      FETCH:	SAMPLE	R9._x__ = R10.xyz CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 4c840805 006cc6c6 2101fe04	   (S)ALU:	MULv	R5.__z_ = C257.xxxx, C510.zzzz
                          						    	RECIP_IEEE	R8.___w = R4.zzzz
0a: 4c83080a 001bb01b e1080405	      ALU:	MULv	R10.xy__ = R8.wwww, R4.xyyy
                          						    	RECIP_IEEE	R8.___w = R5.wwww
      0400600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: bc130904 011bb049 c10805ff	      ALU:	MULv	R4.xy__ = R8.wwww, R5.xyyy
                          						    	SUB_CONST_1	R9.x___ = -C511.x, -R9.y
0c: c80b0705 00141500 e0090900	      ALU:	ADDv	R5.xy_w = R9.xzww, R9.yzww
0d: ac870809 0015bd04 8005ffff	      ALU:	ADDv	R9.xyz_ = R5.yzww, C511.yxyy
                          						    	MUL_CONST_1	R8.___w = C511.w, R5.x
0e: b8830405 001bc445 c10809ff	      ALU:	MULv	R5.xy__ = R8.wwww, R9.xzzz
                          						    	SUB_CONST_0	R4.___w = C511.x, R4.y
0f: c8030705 00b0c618 ab05ff04	      ALU:	MULADDv	R5.xy__ = R4.xwww, R5.xyyy, C511.zzzz
10: b808c0c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R12.___x = R6.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      02556011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 1018f0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R15.xyz_ = R6.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: 1028b141 1f1ff63f 00004000	      FETCH:	SAMPLE	R11.__xw = R10.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
13: 103850a1 1f1ff478 00004000	      FETCH:	SAMPLE	R5.x_yz = R5.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: 106860c1 1f1ff688 00004000	      FETCH:	SAMPLE	R6.xyzw = R6.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: b0800807 00000043 c2070709	   (S)ALU:	ADD_CONST_0	R8.___w = C265.x, R0.w
16: 1407070a 00c0c01b e0070701	      ALU:	ADDv	R10.xyz_ = R7.xyzz, R7.xyzz
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 044c070d 041bacb1 80080609	      ALU:	ADDv	R13.__zw = -R8.wwww, C262.xxxy
                          						    	ADD_PREVs	R7.__z_ = C265.yyyy
18: bc170d0e 00c06c46 200c0007	      ALU:	ADDv	R14.xyz_ = C268.xyzz, C256.xxxx
                          						    	SUB_CONST_1	R13.x___ = C263.x, R7.z
19: b8180b08 00c66c43 a504fe08	      ALU:	SETGTv	R8.___w = R4.zzzz, C510.xxxx
                          						    	SUB_CONST_0	R11.x___ = C264.x, R2.w
1a: b8270b06 00c0c083 e10a0608	      ALU:	MULv	R6.xyz_ = R10.xyzz, R6.xyzz
                          						    	SUB_CONST_0	R11._y__ = C264.y, R2.w
1b: bc2b0d0a 00c01086 e10b0b07	      ALU:	MULv	R10.xy_w = R11.xyzz, R11.xyww
                          						    	SUB_CONST_1	R13._y__ = C263.y, R7.z
1c: c8040704 00b3b3b1 f10d0d0a	      ALU:	DOT2ADDv	R4.__z_ = R10.yyyy, R13.wyyy, R13.wyyy
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: c8080704 006e6e6c f10d0d0a	      ALU:	DOT2ADDv	R4.___w = R10.xxxx, R13.zxxx, R13.zxxx
1e: ac16040c 00cccc49 c1090902	      ALU:	MULv	R12._yz_ = R9.xxzz, R9.xxzz
                          						    	MUL_CONST_1	R4.x___ = C258.x, R9.y
1f: c807070a 006cc0c0 eb040f0e	      ALU:	MULADDv	R10.xyz_ = R14.xyzz, R4.xxxx, R15.xyzz
20: 58130c04 04196c1b a00cff84	      ALU:	ADDv	R4.xy__ = -R12.ywww, C511.xxxx
                          						    	RECIPSQ_IEEE	R12.x___ = abs(R4).wwww
21: 58220c05 026cc6c6 e0040c84	      ALU:	ADDv	R5._y__ = R4.xxxx, -R12.zzzz
                          						    	RECIPSQ_IEEE	R12._y__ = abs(R4).zzzz
22: a08c0904 00acacb1 e10b0c85	      ALU:	MULv	R4.__zw = R11.xxxy, R12.xxxy
                          						    	SQRT_IEEE	R9.___w = abs(R5).yyyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: 1401070b 00cfbe1b f0090006	      ALU:	DOT3v	R11.x___ = R9.wxzz, R0.zxyy
24: 0c82070b 00cfbe1b f0090107	      ALU:	DOT3v	R11._y__ = R9.wxzz, R1.zxyy
                          						    	MUL_PREVs	R7.___w = R7.wwww
25: ac14000b 00cfbe84 d009020b	      ALU:	DOT3v	R11.__z_ = R9.wxzz, R2.zxyy
                          						    	MUL_CONST_1	R0.x___ = C267.y, R5.x
26: ac210007 00bebe86 d00b0b0b	      ALU:	DOT3v	R7.x___ = R11.zxyy, R11.zxyy
                          						    	MUL_CONST_1	R0._y__ = C267.y, R5.z
27: 581f0702 000dad6c e10d0c87	      ALU:	MULv	R2 = R13.yxzw, R12.yxxy
                          						    	RECIPSQ_IEEE	R7.x___ = abs(R7).xxxx
28: 14070701 00be6c1b e10b070a	      ALU:	MULv	R1.xyz_ = R11.zxyy, R7.xxxx
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: 0c430707 001a6c1b e1040108	      ALU:	MULv	R7.xy__ = R4.zwww, R1.xxxx
                          						    	MUL_PREVs	R7.__z_ = R8.wwww
2a: c9080700 00b2c56c f1020107	      ALU:	DOT2ADDv	R0.___w = R7.xxxx, R2.zyyy, R1.yzzz CLAMP
2b: c9010707 006fc5b1 f1020107	      ALU:	DOT2ADDv	R7.x___ = R7.yyyy, R2.wxxx, R1.yzzz CLAMP
2c: ac420007 00c61b87 c107000b	      ALU:	MULv	R7._y__ = R7.zzzz, R0.wwww
                          						    	MUL_CONST_1	R0.__z_ = C267.y, R5.w
2d: ac270201 00c0c045 e00a0804	      ALU:	ADDv	R1.xyz_ = R10.xyzz, R8.xyzz
                          						    	MUL_CONST_1	R2._y__ = C260.x, R7.y
2e: ac160208 00cc6145 a1070503	      ALU:	MULv	R8._yz_ = R7.xxzz, C261.yyxx
                          						    	MUL_CONST_1	R2.x___ = C259.x, R7.y
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: ac840202 00c61b84 e1080003	      ALU:	MULv	R2.__z_ = R8.zzzz, R0.wwww
                          						    	MUL_CONST_1	R2.___w = C259.y, R7.x
30: ac1f0802 0000ac84 e1020304	      ALU:	MULv	R2 = R2, R3.xxxy
                          						    	MUL_CONST_1	R8.x___ = C260.y, R7.x
31: c8060707 00bcb1c1 eb080302	      ALU:	MULADDv	R7._yz_ = R2.yyzz, R8.xxyy, R3.yyyy
32: 14010707 006c1b1b e0020207	      ALU:	ADDv	R7.x___ = R2.xxxx, R2.wwww
33: c8070707 01b4b4b4 eb060700	      ALU:	MULADDv	R7.xyz_ = -R0.xzyy, R6.xzyy, R7.xzyy
34: c8070707 00b4b4c0 eb060107	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R6.xzyy, R1.xzyy
      00002035 00002200     	EXEC_END ADDR(0x35) CNT(0x2) BOOL_ADDR(0x80)
35: c8070707 00b46cc0 ab070a00	      ALU:	MULADDv	R7.xyz_ = R0.xyzz, R7.xzyy, C266.xxxx
36: 0c878000 00c06cb1 a1070b04	      ALU:	MULv	export0.xyz_ = R7.xyzz, C267.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R4.yyyy	; COLOR
