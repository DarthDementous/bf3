      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: c8070507 00ca1a00 e1020200	      ALU:	MULv	R7.xyz_ = R2.zwzz, R2.zwww
08: c8070507 00ca1ac0 eb010107	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R1.zwzz, R1.zwww
09: c80b0507 00cacb62 eb000007	      ALU:	MULADDv	R7.xy_w = R7.zyxx, R0.zwzz, R0.wwzz
0a: 58810707 006c6c1b e0070787	      ALU:	ADDv	R7.x___ = R7.xxxx, R7.xxxx
                          						    	RECIPSQ_IEEE	R7.___w = abs(R7).wwww
0b: 58440704 001bb1b1 a0010b87	      ALU:	ADDv	R4.__z_ = R1.wwww, C267.yyyy
                          						    	RECIPSQ_IEEE	R7.__z_ = abs(R7).yyyy
0c: c807050b 00cf1600 e1070000	      ALU:	MULv	R11.xyz_ = R7.wxzz, R0.zzww
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: c807050d 00cf1600 e1070100	      ALU:	MULv	R13.xyz_ = R7.wxzz, R1.zzww
0e: c8020507 04b11b00 e00d0100	      ALU:	ADDv	R7._y__ = -R13.yyyy, R1.wwww
0f: 140b0508 0167cab1 e107020b	      ALU:	MULv	R8.xy_w = R7.wzxx, R2.zwzz
10: 04140707 041b1b1b e0080200	      ALU:	ADDv	R7.__z_ = -R8.wwww, R2.wwww
                          						    	ADD_PREVs	R7.x___ = R0.wwww
11: c8010500 00bebe00 f0070700	      ALU:	DOT3v	R0.x___ = R7.zxyy, R7.zxyy
12: 58130009 00b0b06c a1860380	      ALU:	MULv	R9.xy__ = abs(R6).xyyy, C259.xyyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
      05006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c8070506 00c06c00 e1070000	      ALU:	MULv	R6.xyz_ = R7.xyzz, R0.xxxx
14: c80f0506 00a6cd00 f2060600	      ALU:	CUBEv	R6 = R6.zzxy, R6.yxzz
15: 4c14000a 001b1bc6 e2060686	      ALU:	MAXv	R10.__z_ = R6.wwww, R6.wwww
                          						    	RECIP_IEEE	R0.x___ = abs(R6).zzzz
16: c803050a 006d6c1b cb0600fd	      ALU:	MULADDv	R10.xy__ = C509.wwww, R6.yxxx, R0.xxxx
17: 10387061 1f1ff447 00004000	      FETCH:	SAMPLE	R7._xyz = R3.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: b8181061 1f1fffc7 00004000	      FETCH:	SAMPLE	R1._x__ = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      02556019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 10286081 1f1ff447 00004000	      FETCH:	SAMPLE	R6._xyz = R4.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 9058a141 1f1ff688 0000c000	      FETCH:	SAMPLE	R10.xyzw = R10.xyz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: 10083061 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1c: 10480121 1f1ffffb 00004000	      FETCH:	SAMPLE	R0.w___ = R9.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1d: c8080508 046c6c00 200dfc00	   (S)ALU:	ADDv	R8.___w = -C269.xxxx, C508.xxxx
1e: c802050e 006c1b00 2101fc00	      ALU:	MULv	R14._y__ = C257.xxxx, C508.wwww
      0000601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 14080501 001b6c1b a0000b02	      ALU:	ADDv	R1.___w = R0.wwww, C267.xxxx
20: 0484000e 001b1bc6 810afe0b	      ALU:	MULv	R14.__z_ = R10.wwww, C510.wwww
                          						    	ADD_PREVs	R0.___w = C267.zzzz
21: a88c010f 041bac80 800108fd	      ALU:	ADDv	R15.__zw = -R1.wwww, C264.xxxy
                          						    	MUL_CONST_0	R1.___w = C509.y, R0.x
22: b8170f0c 00c0c043 c005050a	      ALU:	ADDv	R12.xyz_ = R5.xyzz, R5.xyzz
                          						    	SUB_CONST_0	R15.x___ = C266.x, R0.w
23: b8270f10 00c0c083 8103fe0a	      ALU:	MULv	R16.xyz_ = R3.xyzz, C510.xyzz
                          						    	SUB_CONST_0	R15._y__ = C266.y, R0.w
24: b8170409 00c0c046 c10c0309	      ALU:	MULv	R9.xyz_ = R12.xyzz, R3.xyzz
                          						    	SUB_CONST_0	R4.x___ = C265.x, R4.z
      00006025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: b8240405 006c1b86 45fd0a09	      ALU:	SETGTv	R5.__z_ = C509.xxxx, R10.wwww
                          						    	SUB_CONST_0	R4._y__ = C265.y, R4.z
26: a8240c04 00bebe45 f0100c00	      ALU:	DOT3v	R4.__z_ = R16.zxyy, R12.zxyy
                          						    	MUL_CONST_0	R12._y__ = C256.x, R6.y
27: a8430c05 00b0b046 e1040400	      ALU:	MULv	R5.xy__ = R4.xyyy, R4.xyyy
                          						    	MUL_CONST_0	R12.__z_ = C256.x, R6.z
28: c8010506 00b3b3b1 f10f0f05	      ALU:	DOT2ADDv	R6.x___ = R5.yyyy, R15.wyyy, R15.wyyy
29: c8010507 006e6e6c f10f0f05	      ALU:	DOT2ADDv	R7.x___ = R5.xxxx, R15.zxxx, R15.zxxx
2a: a8830c05 00b26d47 a00efd00	      ALU:	ADDv	R5.xy__ = R14.zyyy, C509.yxxx
                          						    	MUL_CONST_0	R12.___w = C256.x, R6.w
      0000602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: ac480404 00c66c45 8204ff02	      ALU:	MAXv	R4.___w = R4.zzzz, C511.xxxx
                          						    	MUL_CONST_1	R4.__z_ = C258.x, R5.y
2c: 58110e05 006c006c e8050087	      ALU:	FRACv	R5.x___ = R5.xxxx
                          						    	RECIPSQ_IEEE	R14.x___ = abs(R7).xxxx
2d: 58210e05 02c66c6c e00e0586	      ALU:	ADDv	R5.x___ = R14.zzzz, -R5.xxxx
                          						    	RECIPSQ_IEEE	R14._y__ = abs(R6).xxxx
2e: b44e0407 00c601c4 c10407fc	      ALU:	MULv	R7._yzw = R4.zzzz, R7.yyzw
                          						    	ADD_CONST_1	R4.__z_ = C508.z, R5.x
2f: 4021050c 04c6c66c e10b0087	      ALU:	MULv	R12.x___ = -R11.zzzz, R0.zzzz
                          						    	LOG_IEEE	R5._y__ = abs(R7).xxxx
30: 40110507 04c6c66c e10d0186	      ALU:	MULv	R7.x___ = -R13.zzzz, R1.zzzz
                          						    	LOG_IEEE	R5.x___ = abs(R6).xxxx
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: ac130104 00b0b045 c1040e04	      ALU:	MULv	R4.xy__ = R4.xyyy, R14.xyyy
                          						    	MUL_CONST_1	R1.x___ = C260.x, R5.y
32: ac2f0500 007a70c4 c10f0e04	      ALU:	MULv	R0 = R15.zwyx, R14.xyyx
                          						    	MUL_CONST_1	R5._y__ = C260.z, R5.x
33: 38130504 00b06c6c e1040d01	      ALU:	MULv	R4.xy__ = R4.xyyy, R13.xxxx
                          						    	EXP_IEEE	R5.x___ = R1.xxxx
34: 381f0107 000000c6 e00c0704	      ALU:	ADDv	R7 = R12, R7
                          						    	EXP_IEEE	R1.x___ = R4.zzzz
35: c8030500 00b06cb0 eb000b04	      ALU:	MULADDv	R0.xy__ = R4.xyyy, R0.xyyy, R11.xxxx
36: 38270504 006cc0b1 e1010a05	      ALU:	MULv	R4.xyz_ = R1.xxxx, R10.xyzz
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
      00006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: c8070504 00c6c0c0 ee05040a	      ALU:	CNDGTv	R4.xyz_ = R10.xyzz, R5.zzzz, R4.xyzz
38: c9050501 00c76cb0 eb000800	      ALU:	MULADDv	R1.x_z_ = R0.xyyy, R0.wzzz, R8.xxxx CLAMP
39: c9060505 00bc1100 a1050400	      ALU:	MULv	R5._yz_ = R5.xxyy, C260.yyww CLAMP
3a: c8010505 04b1c66c eb080207	      ALU:	MULADDv	R5.x___ = R7.xxxx, -R8.yyyy, R2.zzzz
3b: bc170005 04c06c41 8005fdfd	      ALU:	ADDv	R5.xyz_ = -R5.xyzz, C509.xxxx
                          						    	SUB_CONST_1	R0.x___ = C509.x, R1.y
3c: 08240000 001b6c6c a304fd05	      ALU:	MINv	R0.__z_ = R4.wwww, C509.xxxx
                          						    	MULs	R0._y__ = R5.xxxx
      0000603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: ac170207 00b4c945 c1090707	      ALU:	MULv	R7.xyz_ = R9.xzyy, R7.ywzz
                          						    	MUL_CONST_1	R2.x___ = C263.x, R5.y
3e: ac230205 006eb286 c1010507	      ALU:	MULv	R5.xy__ = R1.zxxx, R5.zyyy
                          						    	MUL_CONST_1	R2._y__ = C263.y, R5.z
3f: c8040508 00b0c4b1 d10201fc	      ALU:	DOT2ADDv	R8.__z_ = C508.yyyy, R2.xyyy, R1.xzzz
40: ac170402 00c6c045 c1000405	      ALU:	MULv	R2.xyz_ = R0.zzzz, R4.xyzz
                          						    	MUL_CONST_1	R4.x___ = C261.x, R5.y
41: ac2c0404 0071ac84 81050605	      ALU:	MULv	R4.__zw = R5.yyyx, C262.xxxy
                          						    	MUL_CONST_1	R4._y__ = C261.y, R5.x
42: 08830908 00c419b1 e0040400	      ALU:	ADDv	R8.xy__ = R4.xzzz, R4.ywww
                          						    	MULs	R9.___w = R0.yyyy
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: bc2f0004 00000043 c10908fd	      ALU:	MULv	R4 = R9, R8
                          						    	SUB_CONST_1	R0._y__ = C509.x, R1.w
44: c80e0500 008cb1fc eb070004	      ALU:	MULADDv	R0._yzw = R4.xxyz, R7.xxzy, R0.yyyy
45: b2100105 00000047 c205050d	      ALU:	ADD_CONST_0	R1.x___ = C269.x, R4.w CLAMP
46: 14070501 00c06c1b e1020103	      ALU:	MULv	R1.xyz_ = R2.xyzz, R1.xxxx
47: 0c870501 00c0c61b a101fd05	      ALU:	MULv	R1.xyz_ = R1.xyzz, C509.zzzz
                          						    	MUL_PREVs	R5.___w = R5.wwww
48: 14070505 00c0c61b a1010c05	      ALU:	MULv	R5.xyz_ = R1.xyzz, C268.zzzz
      00002049 00002200     	EXEC_END ADDR(0x49) CNT(0x2) BOOL_ADDR(0x80)
49: c8070505 00c01515 eb050600	      ALU:	MULADDv	R5.xyz_ = R0.yzww, R5.xyzz, R6.yzww
4a: 0c878000 00c06c6c a1050e00	      ALU:	MULv	export0.xyz_ = R5.xyzz, C270.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
      00000000 00000000     	NOP
