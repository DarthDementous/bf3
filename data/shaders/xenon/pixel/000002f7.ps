//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $suncolour     c3       1
//   $sunintensity  c4       1
//   $latten0       c5       1
//   $lcol          c6       3
//   $wlightpos     c9       3
//   $worldviewpos  c12      1
//   $matvalue      c13      1
//   $fresnelterm   c14      1
//   $apptime       c15      1
//   $compressedhdr c16      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $spec          s3       1
//   $envmap        s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c15
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c16
defconst $diff, sampler2d, object, [1, 1], s8
defconst $envmap, samplercube, object, [1, 1], s4
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c14
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $latten0, float, vector, [1, 4], c5
defconst $lcol, float, matrix_columns, [4, 4], c6-8
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c13
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $spec, sampler2d, object, [1, 1], s3
defconst $suncolour, float, vector, [1, 3], c3
defconst $sunintensity, float, scalar, [1, 1], c4
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c9-11
defconst $worldviewpos, float, vector, [1, 3], c12
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=17
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 9 interpolants: 9, components: 32
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_texcoord7 r7.xy
dcl_color_centroid r8

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 0, 0, 0, 0
def c251, -1, 10, 0.0529999994, 0
def c252, 2, 0, 0.5, 1.5
def c253, 5, 4, -127.5, 1
def c254, 0.298999995, 0.587000012, 0.143999994, 3.29999995
def c255, 0.0599999987, 0.289999992, 0.150000006, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mov r4.xy, r6.xy
/*    9   */     mul r4.z, c15.x, c252.z
/*   10   */     tfetch2D r7.xyz_, r7.xy, tf1, FetchValidOnly=false
/*   11   */     tfetch3D r4._x__, r4.xyz, tf6, FetchValidOnly=false
/*   12   */     tfetch2D r11.xyz_, r6.xy, tf3, FetchValidOnly=false
/*   13   */     tfetch2D r4.y_w_, r6.xy, tf7, FetchValidOnly=false
/*    1.0 */     exec
/*   14   */     serialize
                 mul r7.w, c13.x, c251.y
               + addsc r3.w, c12.y, r1.w
/*   15   */     mul r9.xyz, r2.zzw, r2.zw
               + subsc r13.x, c10.x, r3.w
/*   16   */     add r4.zw, r4.xxxz, r4.xxxz
               + subsc r13.y, c10.y, r3.w
/*   17   */     mad r9.xyz, r1.zwz, r1.zw, r9.xzy
/*   18   */     dp3 r3.w, r11.zyx, c255.xyz
               + rcp r4.x, r5.w
/*   19   */     mad r3.w, r7.w, r3.w, c253.w
/*    1.1 */     exec
/*   20   */     mad r9.xyz, r0.zwz, r0.zw, r9.xyz
/*   21   */     mul r15.xz, r4.x, r5.xy
               + rsq r10.y, r9_abs.y
/*   22   */     add r15.y, -r15.z, c253.w
               + rsq r10.z, r9_abs.x
/*   23   */     mul r5.xyz, r11.xyz, c252.z
               + adds r10.x, r9.zz
/*   24   */     mul r11.yzw, r5.xxyz, r7.xxyz
               + addsc r14.y, c251.x, r4.y
/*   25   */     mul r9.xyw, r10.xyz, r2.zwz
               + addsc r14.z, c251.x, r4.z
/*    2.0 */     exec
/*   26   */     mul r12.xyz, r10.zxy, r1.zzw
               + addsc r14.w, c251.x, r4.w
/*   27   */     mul r10.xyw, r10.xyz, r0.zwz
               + movs r8._, r14.y
/*   28   */     add r14.x, -r10.x, r0.w
               + adds_prev r11.x, r4.y
/*   29   */     max r13.z, r3.w, c252.y
               + movs r8._, -r12.z
/*   30   */     mul r11, r11, c253.xy
               + muls_prev r3.w, r1.z
/*   31   */     mad r15.w, -r10.y, r0.z, r3.w
/*    2.1 */     exec
/*   32   */     mul r4.xy, r11.x, r14.zw
               + movs r8._, -r9.y
/*   33   */     mul r4.yz, r4.xxy, c251.z
               + muls_prev r4.x, r2.z
/*   34   */     add r10.xyz, r15.wxy, r4.xyz
               + movs r8._, -r12.y
/*   35   */     add r13.w, -r10.x, c253.w
               + adds_prev r14.y, r1.w
/*   36   */     mul r12.yzw, r13.wwxy, r13.wwxy
               + movs r8._, -r9.x
/*   37   */     mul r14.w, r12.y, r12.y
               + adds_prev r14.z, r2.w
/*    3.0 */     exec
/*   38   */     dp3 r0.z, r14.zxy, r14.zxy
/*   39   */     add r1.x, -c14.x, c252.x
               + rsq r1.y, r0_abs.z
/*   40   */     mul r4, r14.xywz, r1.yyxy
/*   41   */     cube r1, r4.wwxy, r4.yxw
/*   42   */     mov r14.z, r1.w
               + rcp r0.z, r1_abs.z
/*   43   */     mad r14.xy, r1.yx, r0.z, c252.w
/*    3.1 */     exec
/*   44   */     tfetch2D r4._x__, r6.zw, tf0
/*   45   */     tfetch2D r17.xyz_, r6.xy, tf2
/*   46   */     tfetch2D r1.xyz_, r10.yz, tf5
/*   47   */     tfetchCube r15, r14.xyz, tf4
/*   48   */     tfetch2D r16, r6.xy, tf8
/*   49   */     serialize
                 mul r2.y, c1.x, c251.y
               + addsc r0.y, c12.x, r0.w
/*    4.0 */     exec
/*   50   */     dp3 r0.x, r3.zxy, r3.zxy
/*   51   */     add r6.zw, -r0.y, c9.xxxy
               + rsq r0.x, r0_abs.x
/*   52   */     add r14.xyz, r8.xyz, r8.xyz
               + movs r8.x, r15.w
/*   53   */     mul r1.xyz, r1.xyz, c16.y
               + mulsc r8.x, c255.w, r8.x
/*   54   */     mul_sat r0.y, r0.x, r3.z
               + addsc r0.z, c12.z, r2.w
/*   55   */     sgt r0.x, c253.w, r15.w
               + addsc r0.w, c252.z, r8.x
/*    4.1 */     exec
/*   56   */     frc r0.w, r0.w
               + movs r8._, r16.w
/*   57   */     add r2.x, r8.x, -r0.w
               + muls_prev r8.w, r8.w
/*   58   */     add r8.xy, r2.xy, c253.zw
               + subsc r6.x, c11.x, r0.z
/*   59   */     mul r0.w, r8.y, c2.x
               + exp r8.x, r8.x
/*   60   */     mul r8.xyz, r8.x, r15.xyz
               + subsc r6.y, c11.y, r0.z
/*   61   */     mul r2.xyz, r0.w, r17.xyz
               + log r0.w, r0.y
/*    5.0 */     exec
/*   62   */     mad r2.xyz, r7.xzy, c0.x, r2.xzy
/*   63   */     cndgt r10.xyz, r0.x, r8.xyz, r15.xyz
/*   64   */     dp2add r8.x, r6.wy, r6.wy, r12.w
/*   65   */     dp2add r8.y, r6.zx, r6.zx, r12.z
/*   66   */     mul r15.xyz, r16.xyz, c254.xyz
               + rsq r0.x, r8_abs.y
/*   67   */     mul r3.xyz, r14.xyz, r16.xyz
               + rsq r0.z, r8_abs.x
/*    5.1 */     exec
/*   68   */     dp3 r8.z, r15.zxy, r14.zxy
               + log r8.y, r8_abs.y
/*   69   */     max r8.z, r8.z, c255.z
               + log r8.x, r8_abs.x
/*   70   */     min r1.w, r8.z, c253.w
               + mulsc r8.z, c5.x, r8.y
/*   71   */     mul r9.xyz, r13.xyz, r0.xzw
               + mulsc r0.y, c5.z, r8.x
/*   72   */     mul r6, r6.yxzw, r0.zxxz
               + exp r0.x, r8.z
/*   73   */     mul r8.yz, r9.xxy, r12.x
               + exp r8.x, r9.z
/*    6.0 */     exec
/*   74   */     mad r0.zw, r6.zzzw, r10.w, r8.yyyz
/*   75   */     mul r8.xyz, r11.wyz, r8.x
               + exp r0.y, r0.y
/*   76   */     mul r9.xyz, r1.w, r10.xyz
               + mulsc r4.x, c3.x, r8.y
/*   77   */     mad_sat r6.yz, r6.yyx, r9.w, r0.zzw
/*   78   */     add_sat r0.z, r4.z, c14.x
               + mulsc_sat r4.z, c5.y, r0.x
/*   79   */     mul r9.xyz, r9.xyz, r0.z
               + mulsc_sat r4.w, c5.w, r0.y
/*    6.1 */     exec
/*   80   */     add r0.xyz, -r4.yzw, c253.w
               + mulsc r4.y, c3.z, r8.x
/*   81   */     mul r5.xyz, r9.xyz, r5.xyz
               + mulsc r4.z, c3.y, r8.z
/*   82   */     mul r5.xyw, r5.xyz, c254.w
               + mulsc r9.x, c8.x, r0.y
/*   83   */     mul r8.xy, r6.zy, r0.zy
               + mulsc r9.y, c8.y, r0.z
/*   84   */     dp2add r5.z, r8.yx, c7.xy, c252.y
/*   85   */     mul r5.xyw, r5.xyw, c13.z
               + mulsc r6.x, c6.x, r8.y
/*    7.0 */     exec
/*   86   */     mul r6.zw, r9.xxxy, r6.yyyz
               + mulsc r6.y, c6.y, r8.x
/*   87   */     mad r8.xyz, r5.xwy, r7.xzy, -r1.xzy
/*   88   */     add r5.xy, r6.xz, r6.yw
               + movs r8._, r8.w
/*   89   */     mad r8.xyz, r3.xzy, r5.xyz, r8.xyz
/*   90   */     mad r8.xyz, r4.xyz, c4.x, r8.xyz
/*   91   */     mad r8.xyz, r3.xyz, r2.xzy, r8.xzy
/*    7.1 */     exece
/*   92   */     mad r8.xyz, r8.xyz, c15.x, r1.xyz
/*   93   */     mul oC0.xyz, r8.xyz, c16.x
               + muls_prev oC0.w, r0.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x01ff SamplingPattern 0x00ff
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] texcoord7 r7.xy
// [8] color0 r8.xyzw

