//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $frametexture;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spotlightmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $apptime       c12      1
//   $compressedhdr c13      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $screenshadmap s3       1
//   $spotlightmap  s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c12
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c13
defconst $diff, sampler2d, object, [1, 1], s8
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spotlightmap, sampler2d, object, [1, 1], s4
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=13
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 29
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4
dcl_texcoord5 r5
dcl_texcoord6 r6.xy
dcl_color_centroid r7

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0.200000003, 0.5, 10, 0
def c255, 1, -1, 5, 0.0529999994


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    6   */     mul r9.z, c12.x, c254.y
               + movs r9.x, r5.x
/*    7   */     mul r8.zw, r8_abs.xxxy, c3.xxxy
               + rcp r3.w, r3.z
/*    8   */     mul r6.zw, r3.w, r3.xxxy
               + movs r9.y, r5.y
/*    9   */     tfetch2D r11.___x, r5.zw, tf0, FetchValidOnly=false
/*   10   */     tfetch2D r8.yw__, r5.xy, tf7, FetchValidOnly=false
/*   11   */     tfetch2D r3.w___, r8.zw, tf3, FetchValidOnly=false
/*    1.0 */     exec
/*   12   */     tfetch2D r11.x_w_, r6.zw, tf4, FetchValidOnly=false
/*   13   */     tfetch3D r3.___x, r9.xyz, tf6, FetchValidOnly=false
/*   14   */     serialize
                 mul r9.x, c1.x, c254.z
               + addsc r6.z, c11.x, r0.w
/*   15   */     add r6.w, r1.w, c11.y
               + movs r7._, r2.w
/*   16   */     add r9.yz, r8.xxy, r8.xxy
               + adds_prev r0.w, c11.z
/*   17   */     add r12.zw, -r6.w, c9.xxxy
               + mulsc r13.x, c254.y, r3.x
/*    1.1 */     exec
/*   18   */     sgt r11.y, r3.z, c254.x
               + subsc r12.x, c10.x, r0.w
/*   19   */     add r8.xy, -r6.z, c8.xy
               + rcp r8.z, r4.w
/*   20   */     mul r3.xz, r8.xy, r8.xy
               + subsc r12.y, c10.y, r0.w
/*   21   */     dp2add r3.z, r12.wy, r12.wy, r3.z
/*   22   */     dp2add r3.x, r12.zx, r12.zx, r3.x
/*   23   */     add r10.xyw, r9.yzx, c255.yyx
               + rsq r9.x, r3_abs.x
/*    2.0 */     exec
/*   24   */     mul r13.yz, r10.xxy, r10.xxy
               + log r3.x, r3_abs.x
/*   25   */     add r6.zw, -r13.xxxy, c255.x
               + log r3.y, r3_abs.z
/*   26   */     mul r3.xy, r3.xy, c4.xz
               + rsq r9.y, r3_abs.z
/*   27   */     mul r8.xy, r8.xy, r9.xy
               + exp r3.x, r3.x
/*   28   */     add r3.z, r6.w, -r13.z
               + exp r3.y, r3.y
/*   29   */     mul r9, r12.yxzw, r9.yxxy
               + sqrt r10.z, r3_abs.z
/*    2.1 */     exec
/*   30   */     dp3 r2.x, r10.zxy, r2.zxy
/*   31   */     dp3 r2.y, r10.zxy, r1.zxy
               + muls r2.w, r11.xz
/*   32   */     dp3 r2.z, r10.zxy, r0.zxy
               + mulsc_sat r11.x, c4.y, r3.x
/*   33   */     dp3 r0.x, r2.xzy, r2.xzy
               + mulsc_sat r11.z, c4.w, r3.y
/*   34   */     add r1.xzw, -r11.xzzw, c255.x
               + rsq r11.x, r0_abs.x
/*   35   */     mul r0, r2.xwyz, r11.xyx
/*    3.0 */     exec
/*   36   */     mul r2.xy, r8.xy, r0.w
/*   37   */     dp2add_sat r8.y, r9.wx, r0.zx, r2.y
/*   38   */     dp2add_sat r0.x, r9.zy, r0.zx, r2.x
/*   39   */     mul r8.x, r0.y, r0.x
               + subsc r3.z, -c255.x, -r3.w
/*   40   */     mul r1.xy, r8.yx, r1.zx
               + movs r7._, r8.z
/*   41   */     mul r3.xy, r1.yx, c6.xy
               + muls_prev r0.x, r4.x
/*    3.1 */     exec
/*   42   */     add r3.zw, r3.xxxz, r3.yyyw
               + movs r7._, r8.z
/*   43   */     mul r0.z, r3.w, c255.z
               + muls_prev r0.y, r4.y
/*   44   */     mul r2.xy, r0.z, r10.xy
               + subsc r0.z, c255.x, r0.y
/*   45   */     mad r0.xy, r2.xy, c255.w, r0.xz
/*   46   */     tfetch2D r9.xyz_, r6.xy, tf1
/*   47   */     tfetch2D r2.xyz_, r5.xy, tf2
/*    4.0 */     exec
/*   48   */     tfetch2D r0.x_yz, r0.xy, tf5
/*   49   */     tfetch2D r4, r5.xy, tf8
/*   50   */     serialize
                 add r5.xyz, r7.xyz, r7.xyz
               + movs r7._, r4.w
/*   51   */     mul r4.xyz, r5.xyz, r4.xyz
               + muls_prev r7.w, r7.w
/*   52   */     mul r7.y, r10.w, c2.x
               + mulsc r7.x, c13.y, r0.x
/*   53   */     mul r2.xyz, r7.y, r2.xyz
               + mulsc r7.y, c13.y, r0.z
/*    4.1 */     exec
/*   54   */     mad r2.xyz, r9.xyz, c0.x, r2.xyz
/*   55   */     mul r2.xyz, r4.xzy, r2.xzy
               + mulsc r7.z, c7.y, r1.z
/*   56   */     mul r5.w, r7.z, r8.y
               + mulsc r7.z, c13.y, r0.w
/*   57   */     mul r5.xy, r1.yx, c5.xy
               + mulsc r5.z, c7.x, r1.y
/*   58   */     add r3.xy, r5.xz, r5.yw
               + movs r7._, r7.w
/*   59   */     mad r0.xyz, r4.xzy, r3.xyz, -r7.xzy
/*    5.0 */     exece
/*   60   */     mad r0.xyz, r2.xyz, r6.z, r0.xyz
/*   61   */     mad r7.xyz, r0.xzy, c12.x, r7.xyz
/*   62   */     mul oC0.xyz, r7.xyz, c13.x
               + muls_prev oC0.w, r1.w
/*    5.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xy
// [7] color0 r7.xyzw

