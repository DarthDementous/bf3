//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   float $usendotl;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $suncolour     c3       1
//   $sunintensity  c4       1
//   $usendotl      c5       1
//   $invscreensize c6       1
//   $matvalue      c7       1
//   $fresnelterm   c8       1
//   $compressedhdr c9       1
//   $diff          s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $bump          s3       1
//   $spec          s4       1
//   $screenshadmap s5       1
//   $envmap        s6       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c9
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s6
defconst $fresnelterm, float, scalar, [1, 1], c8
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c6
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c7
defconst $screenshadmap, sampler2d, object, [1, 1], s5
defconst $spec, sampler2d, object, [1, 1], s4
defconst $suncolour, float, vector, [1, 3], c3
defconst $sunintensity, float, scalar, [1, 1], c4
defconst $usendotl, float, scalar, [1, 1], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=7

// interpolators: 7 interpolants: 7, components: 26
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_color_centroid r6

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 0, 0, 0, 0
def c251, 4, 0.25, 0.300000012, 0
def c252, 2, 1.5, -127.5, 10
def c253, 0, 1, 0.5, -1
def c254, 0.298999995, 0.587000012, 0.143999994, 3.29999995
def c255, 0.0599999987, 0.150000006, 0.289999992, 255


/*    0.0 */     exec
/*    8   */     tfetch2D r12.xyz_, r5.xy, tf2
/*    9   */     tfetch2D r10.xyz_, r5.zw, tf1
/*   10   */     tfetch2D r9.yw__, r5.xy, tf3, FetchValidOnly=false
/*   11   */     tfetch2D r8.xyz_, r5.xy, tf4
/*   12   */     tfetch2D r11, r5.xy, tf0
/*   13   */     serialize
                 mul r4.w, c7.x, c252.w
/*    0.1 */     exec
/*   14   */     mul r3.w, r11.w, r6.w
/*   15   */     dp3 r5.w, r3.zxy, r3.zxy
/*   16   */     add r5.xyz, r6.xyz, r6.xyz
/*   17   */     mul r13.xyz, r5.xyz, r11.xyz
/*   18   */     dp3 r6.x, r8.zxy, c255.xyz
/*   19   */     mad r9.xy, r9.xy, c252.x, c253.w
/*    1.0 */     exec
/*   20   */     mul r8.xyz, r8.xyz, c253.z
/*   21   */     mul r14.xyz, r8.zyx, r10.zyx
               + rsq r6.y, r5_abs.w
/*   22   */     mul r3.xyz, r6.y, r3.xyz
               + movs r6._, c1.x
/*   23   */     dp2add r6.z, -r9.yx, r9.yx, c253.y
/*   24   */     mul r6.x, r4.w, r6.x
               + muls_prev r6.y, c252.w
/*   25   */     add r6.xy, r6.xy, c253.y
               + sqrt r9.z, r6_abs.z
/*    1.1 */     exec
/*   26   */     dp3 r2.z, r9.zxy, r2.zxy
               + mulsc r6.z, c2.x, r6.y
/*   27   */     dp3 r2.x, r9.zxy, r0.zxy
               + movs r6.x, r6.x
/*   28   */     dp3_sat r6.y, r3.zxy, r9.zxy
               + movs r6.w, c253.x
/*   29   */     dp3 r2.y, r9.zxy, r1.zxy
               + maxs r6.w, r6.xw
/*   30   */     mul r6.x, r2.y, r1.w
               + log r12.w, r6.y
/*   31   */     mad r6.x, r2.x, r0.w, r6.x
/*    2.0 */     exec
/*   32   */     mad r4.w, r2.z, r2.w, r6.x
/*   33   */     mul r6, r6.zzwz, r12.xywz
/*   34   */     mad r12.xyz, r10.xyz, c0.x, r6.xyw
/*   35   */     mul r3.xyz, r14.xyz, c251.x
               + adds r4.w, r4.ww
/*   36   */     mul r6.xyw, r4.w, r2.zyx
               + exp r6.z, r6.z
/*   37   */     mul r14.xyz, r3.xyz, r6.z
               + movs r6._, -r6.x
/*    2.1 */     exec
/*   38   */     add r3.y, -r6.y, r1.w
               + adds_prev r3.x, r2.w
/*   39   */     mul r6.xyz, r14.xyz, c3.zyx
               + movs r6._, -r6.w
/*   40   */     mul r6.xyz, r6.xyz, c4.x
               + adds_prev r3.z, r0.w
/*   41   */     mad r0.xyz, r13.xyz, r12.xyz, r6.zyx
/*   42   */     dp3 r6.y, r3.xzy, r3.xzy
               + movs_sat r6.x, r4.z
/*   43   */     mul r1.xyz, r11.xyz, c254.xyz
               + rsq r6.y, r6_abs.y
/*    3.0 */     exec    // PredicateClean=false
/*   44   */     mul r6.yzw, r3.zzyx, r6.y
               + setp_ne r6._, c5.x
/*    3.1 */ (p0) exec
/*   45   */     (p0) mul r3.y, c4.x, c3.x
/*   46   */     (p0) cndeq r11.xyz, c253.xxy, -r4.zx, r4.y
/*   47   */     (p0) dp3_sat r4.w, r9.zxy, r4.zxy
               + (p0) movs_sat r3.x, -r4.z
/*   48   */     (p0) dp3_sat r3.z, r9.zxy, r11.xyz
               + (p0) movs r6._, r4.w
/*   49   */     (p0) add r3.x, r3.z, -r3.x
               + (p0) adds_prev r6.x, -r6.x
/*   50   */     (p0) mad r3.x, r3.x, c251.y, r6.x
/*    4.0 */ (p0) exec
/*   51   */     (p0) mul r3.y, r3.y, r3.x
/*   52   */     (p0) mul r4.xw, r3.yx, c251.z
/*   53   */     (p0) mul r3.xy, r4.w, c3.yz
/*   54   */     (p0) mul r4.yz, r3.yyx, c4.x
/*   55   */     (p0) add r0.xyz, r0.xyz, r4.xzy
/*    4.1 */     alloc colors
/*    5.0 */     exec
/*   56   */     cube r6, r6.wwyz, r6.zyw
/*   57   */     mov r3.z, r6.w
               + rcp r3.x, r6_abs.z
/*   58   */     mad r3.xy, r6.yx, r3.x, c252.y
/*   59   */     tfetchCube r4, r3.xyz, tf6
/*   60   */     serialize
                 mul r6.yz, r7_abs.xxy, c6.xxy
               + muls r6.x, r2.ww
/*   61   */     tfetch2D r6._w__, r6.yz, tf5
/*    5.1 */     exec
/*   62   */     serialize
                 mad r6.z, r1.w, r1.w, r6.x
/*   63   */     mul r6.x, r4.w, c255.w
/*   64   */     addsc r6.w, c253.z, r6.x
/*   65   */     mad r6.z, r0.w, r0.w, r6.z
/*   66   */     frc r3.y, r6.w
               + rsq r5.w, r6_abs.z
/*   67   */     sgt r6.w, c253.y, r4.w
               + movs r6._, r5.w
/*    6.0 */     exec
/*   68   */     mul r3.x, r5.w, r0.w
               + muls_prev r3.z, r2.w
/*   69   */     dp3 r6.z, r1.zxy, r5.zxy
               + movs r6._, r5.w
/*   70   */     add r6.x, r6.x, -r3.y
               + muls_prev r3.y, r1.w
/*   71   */     max r0.w, r6.z, c255.y
               + addsc r6.x, c252.z, r6.x
/*   72   */     dp3 r6.z, -r3.zxy, r2.zxy
               + exp r6.x, r6.x
/*   73   */     mul r1.xyz, r6.x, r4.xyz
               + mulsc r6.x, c253.z, r6.y
/*    6.1 */     exec
/*   74   */     cndgt r1.xyz, r6.w, r1.xyz, r4.xyz
/*   75   */     add r6.xw, -r6.zx, c253.y
               + movs r6._, -c8.x
/*   76   */     mul r6.z, r6.x, r6.x
               + adds_prev r1.w, c252.x
/*   77   */     min r6.y, r0.w, c253.y
               + muls r6.z, r6.zz
/*   78   */     mul r1, r6.yyyz, r1
/*   79   */     addsc_sat r6.y, c8.x, r1.w
/*    7.0 */     exec
/*   80   */     mul r1.xyz, r1.xyz, r6.y
/*   81   */     mul r1.xyz, r1.xyz, r8.xyz
/*   82   */     mul r1.xyz, r1.xyz, c254.w
/*   83   */     mul r1.xyz, r1.xyz, c7.z
/*   84   */     mul r6.xyz, r1.xyz, r10.xyz
/*   85   */     mad r6.xyz, r6.w, r0.xyz, r6.xyz
/*    7.1 */     exece
/*   86   */     mul r3.xyz, r6.xyz, c9.x
/*   87   */     mov oC0, r3

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x007f SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] color0 r6.xyzw

