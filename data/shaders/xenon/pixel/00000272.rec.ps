      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: c8070506 00ca1a00 e1020200	      ALU:	MULv	R6.xyz_ = R2.zwzz, R2.zwww
07: c8070506 00ca1ac0 eb010106	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R1.zwzz, R1.zwww
08: c8070506 001617be eb000006	      ALU:	MULADDv	R6.xyz_ = R6.zxyy, R0.zzww, R0.wzww
09: 58400605 000000c6 e2050586	      ALU:	RECIPSQ_IEEE	R6.__z_ = abs(R6).zzzz
0a: 58810606 006c6cb1 e0060686	      ALU:	ADDv	R6.x___ = R6.xxxx, R6.xxxx
                          						    	RECIPSQ_IEEE	R6.___w = abs(R6).yyyy
0b: c807050a 00cf1600 e1060000	      ALU:	MULv	R10.xyz_ = R6.wxzz, R0.zzww
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c807050b 00cf1600 e1060100	      ALU:	MULv	R11.xyz_ = R6.wxzz, R1.zzww
0d: c8020506 04b11b00 e00b0100	      ALU:	ADDv	R6._y__ = -R11.yyyy, R1.wwww
0e: 14070507 0114cab1 e106020a	      ALU:	MULv	R7.xyz_ = R6.xzww, R2.zwzz
0f: 04140606 046c1b1b e0070200	      ALU:	ADDv	R6.__z_ = -R7.xxxx, R2.wwww
                          						    	ADD_PREVs	R6.x___ = R0.wwww
10: c8010500 00bebe00 f0060600	      ALU:	DOT3v	R0.x___ = R6.zxyy, R6.zxyy
11: 58100005 0000006c e2050580	      ALU:	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
      05006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8070506 00c06c00 e1060000	      ALU:	MULv	R6.xyz_ = R6.xyzz, R0.xxxx
13: c80f0506 00a6cd00 f2060600	      ALU:	CUBEv	R6 = R6.zzxy, R6.yxzz
14: 4c140008 001b1bc6 e2060686	      ALU:	MAXv	R8.__z_ = R6.wwww, R6.wwww
                          						    	RECIP_IEEE	R0.x___ = abs(R6).zzzz
15: c8030508 006d6c1b cb0600fd	      ALU:	MULADDv	R8.xy__ = C509.wwww, R6.yxxx, R0.xxxx
16: 1038e061 1f1ffe88 00004000	      FETCH:	SAMPLE	R14.xyz_ = R3.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 10286081 1f1ffe88 00004000	      FETCH:	SAMPLE	R6.xyz_ = R4.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 10084061 1f1ff611 00004000	      FETCH:	SAMPLE	R4.yzxw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 9048d101 1f1ff688 0000c000	      FETCH:	SAMPLE	R13.xyzw = R8.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: b8180061 1f1ffff8 00004000	      FETCH:	SAMPLE	R0.x___ = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: 14010501 016c6c6c 0101fc0c	   (S)ALU:	MULv	R1.x___ = C257.xxxx, C508.xxxx
1c: 04420303 001bb16c 80010aff	      ALU:	ADDv	R3._y__ = R1.wwww, C266.yyyy
                          						    	ADD_PREVs	R3.__z_ = C511.xxxx
1d: 14080501 001bc61b a0020a00	      ALU:	ADDv	R1.___w = R2.wwww, C266.zzzz
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: 04120301 001b1b6c 810dfe0a	      ALU:	MULv	R1._y__ = R13.wwww, C510.wwww
                          						    	ADD_PREVs	R3.x___ = C266.xxxx
1f: bc170809 00c0c043 c0050509	      ALU:	ADDv	R9.xyz_ = R5.xyzz, R5.xyzz
                          						    	SUB_CONST_1	R8.x___ = C265.x, R1.w
20: bc2c0808 046cac83 80030709	      ALU:	ADDv	R8.__zw = -R3.xxxx, C263.xxxy
                          						    	SUB_CONST_1	R8._y__ = C265.y, R1.w
21: 1427050f 00c06cc6 a1060004	      ALU:	MULv	R15.xyz_ = R6.xyzz, C256.xxxx
                          						    	MAXs	R5._y__ = R4.zzzz
22: ac180306 00b11b45 45fd0dfe	      ALU:	SETGTv	R6.___w = C509.yyyy, R13.wwww
                          						    	MUL_CONST_1	R3.x___ = C510.x, R5.y
23: a823030c 04b1b084 800308fe	      ALU:	ADDv	R12.xy__ = -R3.yyyy, C264.xyyy
                          						    	MUL_CONST_0	R3._y__ = C510.y, R4.x
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: a8830305 00b0b0c5 c10c0cfe	      ALU:	MULv	R5.xy__ = R12.xyyy, R12.xyyy
                          						    	MUL_CONST_0	R3.___w = C510.z, R4.y
25: c8080509 00b3b3b1 f1080805	      ALU:	DOT2ADDv	R9.___w = R5.yyyy, R8.wyyy, R8.wyyy
26: c808050a 006e6e6c f1080805	      ALU:	DOT2ADDv	R10.___w = R5.xxxx, R8.zxxx, R8.zxxx
27: b4120505 00bfbe41 d00309fd	      ALU:	DOT3v	R5._y__ = R3.wxyy, R9.zxyy
                          						    	ADD_CONST_1	R5.x___ = C509.x, R1.y
28: b4210503 00b1b180 8205fcfd	      ALU:	MAXv	R3.x___ = R5.yyyy, C508.yyyy
                          						    	ADD_CONST_1	R5._y__ = C509.y, R1.x
29: ac280503 006cb145 8303fd02	      ALU:	MINv	R3.___w = R3.xxxx, C509.yyyy
                          						    	MUL_CONST_1	R5._y__ = C258.x, R5.y
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 58110305 006c001b e805008a	      ALU:	FRACv	R5.x___ = R5.xxxx
                          						    	RECIPSQ_IEEE	R3.x___ = abs(R10).wwww
2b: 58210305 02b16c1b e0010589	      ALU:	ADDv	R5.x___ = R1.yyyy, -R5.xxxx
                          						    	RECIPSQ_IEEE	R3._y__ = abs(R9).wwww
2c: b487070e 00b1c004 c1050efc	      ALU:	MULv	R14.xyz_ = R5.yyyy, R14.xyzz
                          						    	ADD_CONST_1	R7.___w = C508.w, R5.x
2d: 4018050f 04c6c61b e10a008a	      ALU:	MULv	R15.___w = -R10.zzzz, R0.zzzz
                          						    	LOG_IEEE	R5.x___ = abs(R10).wwww
2e: 4028050e 04c6c61b e10b0189	      ALU:	MULv	R14.___w = -R11.zzzz, R1.zzzz
                          						    	LOG_IEEE	R5._y__ = abs(R9).wwww
2f: 38230005 00b0c41b a1050307	      ALU:	MULv	R5.xy__ = R5.xyyy, C259.xzzz
                          						    	EXP_IEEE	R0._y__ = R7.wwww
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: 381f0508 000dad6c e1080305	      ALU:	MULv	R8 = R8.yxzw, R3.yxxy
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
31: 382f0501 003434b1 e00f0e05	      ALU:	ADDv	R1 = R15.xzyw, R14.xzyw
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
32: c8080500 04b1c61b eb070201	      ALU:	MULADDv	R0.___w = R1.wwww, -R7.yyyy, R2.zzzz
33: ae270002 00b1c084 c1000d03	      ALU:	MULv	R2.xyz_ = R0.yyyy, R13.xyzz
                          						    	MUL_CONST_1	R0._y__ = C259.y, R5.x CLAMP
34: c8070502 001bc0c0 ee06020d	      ALU:	CNDGTv	R2.xyz_ = R13.xyzz, R6.wwww, R2.xyzz
35: ae470002 001bc005 c1030203	      ALU:	MULv	R2.xyz_ = R3.wwww, R2.xyzz
                          						    	MUL_CONST_1	R0.__z_ = C259.w, R5.y CLAMP
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: b81e0000 0401b180 8000fdfd	      ALU:	ADDv	R0._yzw = -R0.yyzw, C509.yyyy
                          						    	SUB_CONST_0	R0.x___ = C509.y, R0.x
37: 14080502 001b1b1b e1000004	      ALU:	MULv	R2.___w = R0.wwww, R0.wwww
38: 0c84020c 001b1b1b e1020205	      ALU:	MULv	R12.__z_ = R2.wwww, R2.wwww
                          						    	MUL_PREVs	R2.___w = R5.wwww
39: a8270305 00b4b441 c10c0306	      ALU:	MULv	R5.xyz_ = R12.xzyy, R3.xzyy
                          						    	MUL_CONST_0	R3._y__ = C262.x, R0.y
3a: b6150503 00c46c45 c1050b0c	      ALU:	MULv	R3.x_z_ = R5.xzzz, R11.xxxx
                          						    	ADD_CONST_1	R5.x___ = C268.x, R5.y CLAMP
3b: c8030507 001a6cc4 eb080a03	      ALU:	MULADDv	R7.xy__ = R3.xzzz, R8.zwww, R10.xxxx
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: a84b0305 00c06c82 c1020506	      ALU:	MULv	R5.xy_w = R2.xyzz, R5.xxxx
                          						    	MUL_CONST_0	R3.__z_ = C262.y, R0.z
3d: ac170302 00c0bec4 c10904fd	      ALU:	MULv	R2.xyz_ = R9.xyzz, R4.zxyy
                          						    	MUL_CONST_1	R3.x___ = C509.z, R5.x
3e: c9050505 006dc6b0 eb080707	      ALU:	MULADDv	R5.x_z_ = R7.xyyy, R8.yxxx, R7.zzzz CLAMP
3f: c8040503 00c5c4c6 d10305fc	      ALU:	DOT2ADDv	R3.__z_ = C508.zzzz, R3.yzzz, R5.xzzz
40: ac250305 006eb2c5 c10500fd	      ALU:	MULv	R5.x_z_ = R5.zxxx, R0.zyyy
                          						    	MUL_CONST_1	R3._y__ = C509.z, R5.y
41: ac8c0304 0046acc7 810505fd	      ALU:	MULv	R4.__zw = R5.zzzx, C261.xxxy
                          						    	MUL_CONST_1	R3.___w = C509.z, R5.w
      00006042 00002200     	EXEC_END ADDR(0x42) CNT(0x6) BOOL_ADDR(0x80)
42: ac1e0400 003cc646 81030b04	      ALU:	MULv	R0._yzw = R3.xxyw, C267.zzzz
                          						    	MUL_CONST_1	R4.x___ = C260.x, R5.z
43: ac2e0400 0001fc84 c1000604	      ALU:	MULv	R0._yzw = R0.yyzw, R6.xxyz
                          						    	MUL_CONST_1	R4._y__ = C260.y, R5.x
44: 14030503 00c4191b e0040402	      ALU:	ADDv	R3.xy__ = R4.xzzz, R4.ywww
45: c8070505 00c0c015 eb020300	      ALU:	MULADDv	R5.xyz_ = R0.yzww, R2.xyzz, R3.xyzz
46: c8070505 00c0b4c0 eb020105	      ALU:	MULADDv	R5.xyz_ = R5.xyzz, R2.xyzz, R1.xzyy
47: 0c878000 00c06c6c a1050d00	      ALU:	MULv	export0.xyz_ = R5.xyzz, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
