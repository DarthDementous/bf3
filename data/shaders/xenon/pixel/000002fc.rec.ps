      05556008 00001200     	EXEC ADDR(0x8) CNT(0x6) BOOL_ADDR(0x80)
08: 1028b0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R11.xyz_ = R6.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: b800e0c1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R14.__x_ = R6.zwz CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 1018c0e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R7.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 1038d0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R13.xyz_ = R6.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 106070c1 1f1fffd9 00004000	      FETCH:	SAMPLE	R7.yw__ = R6.xyx CONST(6) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 107890c1 1f1ff688 00004000	      FETCH:	SAMPLE	R9.xyzw = R6.xyx CONST(7) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0002600e 00001200     	EXEC ADDR(0xe) CNT(0x6) BOOL_ADDR(0x80)
0e: c8080806 006cb100 2101fd00	   (S)ALU:	MULv	R6.___w = C257.xxxx, C509.yyyy
0f: c8080804 001b1b00 e1090800	      ALU:	MULv	R4.___w = R9.wwww, R8.wwww
10: 14080803 00bebe6c d0030306	      ALU:	DOT3v	R3.___w = R3.zxyy, R3.zxyy
11: c8030807 00b06c1b 8b07fcfe	      ALU:	MULADDv	R7.xy__ = C510.wwww, R7.xyyy, C508.xxxx
12: 0c440706 0062c0b1 900dfffd	      ALU:	DOT3v	R6.__z_ = R13.zyxx, C511.xyzz
                          						    	MUL_PREVs	R7.__z_ = C509.yyyy
13: 58840306 00c6c61b e1070683	      ALU:	MULv	R6.__z_ = R7.zzzz, R6.zzzz
                          						    	RECIPSQ_IEEE	R3.___w = abs(R3).wwww
      00006014 00001200     	EXEC ADDR(0x14) CNT(0x6) BOOL_ADDR(0x80)
14: c807080a 00626200 e0080800	      ALU:	ADDv	R10.xyz_ = R8.zyxx, R8.zyxx
15: c8070808 00626c00 a10dfd00	      ALU:	MULv	R8.xyz_ = R13.zyxx, C509.xxxx
16: c8070809 00beb400 e10a0900	      ALU:	MULv	R9.xyz_ = R10.zxyy, R9.xzyy
17: 08170e0d 001bc06c e1030307	      ALU:	MULv	R13.xyz_ = R3.wwww, R3.xyzz
                          						    	MULs	R14.x___ = R7.xxxx
18: 08270e08 00c062b1 e1080c07	      ALU:	MULv	R8.xyz_ = R8.xyzz, R12.zyxx
                          						    	MULs	R14._y__ = R7.yyyy
19: c8090803 04c4b100 a00efe00	      ALU:	ADDv	R3.x__w = -R14.xzzz, C510.yyyy
      0000601a 00001200     	EXEC ADDR(0x1a) CNT(0x6) BOOL_ADDR(0x80)
1a: b017080a 00c01b86 a108fdfe	      ALU:	MULv	R10.xyz_ = R8.xyzz, C509.wwww
                          						    	ADD_CONST_0	R8.x___ = C510.y, R6.z
1b: b0280808 026cb187 e0030efe	      ALU:	ADDv	R8.___w = R3.xxxx, -R14.yyyy
                          						    	ADD_CONST_0	R8._y__ = C510.y, R6.w
1c: a0440708 006c6c1b a208fe88	      ALU:	MAXv	R8.__z_ = R8.xxxx, C510.xxxx
                          						    	SQRT_IEEE	R7.__z_ = abs(R8).wwww
1d: c8010803 00bebe00 f0070000	      ALU:	DOT3v	R3.x___ = R7.zxyy, R0.zxyy
1e: a9180808 00bebe49 d00d0702	      ALU:	DOT3v	R8.___w = R13.zxyy, R7.zxyy CLAMP
                          						    	MUL_CONST_0	R8.x___ = C258.x, R8.y
1f: 40820b03 00bebe1b f0070108	      ALU:	DOT3v	R3._y__ = R7.zxyy, R1.zxyy
                          						    	LOG_IEEE	R11.___w = R8.wwww
      00006020 00001000     	EXEC ADDR(0x20) CNT(0x6)
20: 161f080b 00ec00c6 e1080b04	      ALU:	MULv	R11 = R8.xxxz, R11
                          						    	MAXs	R8.x___ = R4.zzzz CLAMP
21: c8070801 00c06cc0 ab0c000b	      ALU:	MULADDv	R1.xyz_ = R11.xyzz, R12.xyzz, C256.xxxx
22: 38240803 00bebe1b f007020b	      ALU:	DOT3v	R3.__z_ = R7.zxyy, R2.zxyy
                          						    	EXP_IEEE	R8._y__ = R11.wwww
23: 140e0808 00fcb11b e10a0804	      ALU:	MULv	R8._yzw = R10.xxyz, R8.yyyy
24: 0c1e0008 0001761b a1080303	      ALU:	MULv	R8._yzw = R8.yyzw, C259.zzyx
                          						    	MUL_PREVs	R0.x___ = R3.wwww
25: 700e0808 00016c6c 81080405	      ALU:	MULv	R8._yzw = R8.yyzw, C260.xxxx
      00001026 00001200     	EXEC ADDR(0x26) CNT(0x1) BOOL_ADDR(0x80)
26: c8070801 00626512 eb090108	      ALU:	MULADDv	R1.xyz_ = R8.zyww, R9.zyxx, R1.yzxx
      00006027 00005600     	COND_PRED_EXEC ADDR(0x27) CNT(0x6) BOOL_ADDR(0x80) COND(1)
27: c8020808 186c6c00 21040300	      ALU:	MULv	R8._y__ = C260.xxxx, C259.xxxx COND(1)
28: c807080a 1abc6eb1 6cfe0404	      ALU:	CNDEv	R10.xyz_ = R4.yyyy, C510.xxyy, -R4.zxxx COND(1)
29: 17480803 19bebec6 f0070404	      ALU:	DOT3v	R3.___w = R7.zxyy, R4.zxyy CLAMP COND(1)
                          						    	MAXs	R8.__z_ = -R4.zzzz CLAMP
2a: 15080808 18bec01b f0070a03	      ALU:	DOT3v	R8.___w = R7.zxyy, R10.xyzz CLAMP COND(1)
2b: 04140808 1b1bc66c e0080808	      ALU:	ADDv	R8.__z_ = R8.wwww, -R8.zzzz COND(1)
                          						    	ADD_PREVs	R8.x___ = -R8.xxxx
2c: c8010808 18c6c66c ab08fd08	      ALU:	MULADDv	R8.x___ = R8.xxxx, R8.zzzz, C509.zzzz COND(1)
      0000502d 00005600     	COND_PRED_EXEC ADDR(0x2d) CNT(0x5) BOOL_ADDR(0x80) COND(1)
2d: c8020808 18b16c00 e1080800	      ALU:	MULv	R8._y__ = R8.yyyy, R8.xxxx COND(1)
2e: c8090808 186dc600 a108fe00	      ALU:	MULv	R8.x__w = R8.yxxx, C510.zzzz COND(1)
2f: c8060808 181bc100 a1080300	      ALU:	MULv	R8._yz_ = R8.wwww, C259.yyzz COND(1)
30: c8060808 18b66c00 a1080400	      ALU:	MULv	R8._yz_ = R8.zzyy, C260.xxxx COND(1)
31: c8070801 18c06200 e0010800	      ALU:	ADDv	R1.xyz_ = R1.xyzz, R8.zyxx COND(1)
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00246032 00001200     	EXEC ADDR(0x32) CNT(0x6) BOOL_ADDR(0x80)
32: b0140806 006c6c43 010ffd0e	      ALU:	MULv	R6.__z_ = C271.xxxx, C509.xxxx
                          						    	ADD_CONST_0	R8.x___ = C270.x, R0.w
33: 905040c1 1f1ff1ff 00008000	      FETCH:	SAMPLE	R4.___x = R6.xyz CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
34: b0240808 001bb1c3 a0010e0e	   (S)ALU:	ADDv	R8.__z_ = R1.wwww, C270.yyyy
                          						    	ADD_CONST_0	R8._y__ = C270.z, R2.w
35: b81c0606 04b1ac4a 80080d0c	      ALU:	ADDv	R6.__zw = -R8.yyyy, C269.xxxy
                          						    	SUB_CONST_0	R6.x___ = C268.x, R8.z
36: b82c0607 046cac8a 80080b0c	      ALU:	ADDv	R7.__zw = -R8.xxxx, C267.xxxy
                          						    	SUB_CONST_0	R6._y__ = C268.y, R8.z
37: 4c840808 00bebe1b f0030305	      ALU:	DOT3v	R8.__z_ = R3.zxyy, R3.zxyy
                          						    	RECIP_IEEE	R8.___w = R5.wwww
      00006038 00001200     	EXEC ADDR(0x38) CNT(0x6) BOOL_ADDR(0x80)
38: 58430808 00c7c7c6 e1070788	      ALU:	MULv	R8.xy__ = R7.wzzz, R7.wzzz
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R8).zzzz
39: c8010808 0019196c f1060608	      ALU:	DOT2ADDv	R8.x___ = R8.xxxx, R6.ywww, R6.ywww
3a: c8020808 00c4c4b1 f1060608	      ALU:	DOT2ADDv	R8._y__ = R8.yyyy, R6.xzzz, R6.xzzz
3b: 58100408 000000b1 e2080888	      ALU:	RECIPSQ_IEEE	R4.x___ = abs(R8).yyyy
3c: 58240404 021bb16c a004fe88	      ALU:	ADDv	R4.__z_ = R4.wwww, -C510.yyyy
                          						    	RECIPSQ_IEEE	R4._y__ = abs(R8).xxxx
3d: 402a0800 001bbcb1 e1080588	      ALU:	MULv	R0._y_w = R8.wwww, R5.xxyy
                          						    	LOG_IEEE	R8._y__ = abs(R8).yyyy
      0000603e 00001200     	EXEC ADDR(0x3e) CNT(0x6) BOOL_ADDR(0x80)
3e: 40140800 041bb16c a000fe88	      ALU:	ADDv	R0.__z_ = -R0.wwww, C510.yyyy
                          						    	LOG_IEEE	R8.x___ = abs(R8).xxxx
3f: a8870102 0062c649 c1030807	      ALU:	MULv	R2.xyz_ = R3.zyxx, R8.zzzz
                          						    	MUL_CONST_0	R1.___w = C263.x, R8.y
40: a82c0808 0006acc8 c1070407	      ALU:	MULv	R8.__zw = R7.zzzw, R4.xxxy
                          						    	MUL_CONST_0	R8._y__ = C263.z, R8.x
41: 381f0803 000dad1b e1060401	      ALU:	MULv	R3 = R6.yxzw, R4.yxxy
                          						    	EXP_IEEE	R8.x___ = R1.wwww
42: 382c0808 0006c6b1 e1080208	      ALU:	MULv	R8.__zw = R8.zzzw, R2.zzzz
                          						    	EXP_IEEE	R8._y__ = R8.yyyy
43: c9040802 00186d1b f1030208	      ALU:	DOT2ADDv	R2.__z_ = R8.wwww, R3.xwww, R2.yxxx CLAMP
      00006044 00001200     	EXEC ADDR(0x44) CNT(0x6) BOOL_ADDR(0x80)
44: c9020802 00c56dc6 f1030208	      ALU:	DOT2ADDv	R2._y__ = R8.zzzz, R3.yzzz, R2.yxxx CLAMP
45: c9030808 00b01900 a1080700	      ALU:	MULv	R8.xy__ = R8.xyyy, C263.ywww CLAMP
46: c8090802 04b0b100 a008fe00	      ALU:	ADDv	R2.x__w = -R8.xyyy, C510.yyyy
47: c8030808 00b26f00 e1020200	      ALU:	MULv	R8.xy__ = R2.zyyy, R2.wxxx
48: c8030804 006db000 a1080900	      ALU:	MULv	R4.xy__ = R8.yxxx, C265.xyyy
49: c80c0808 00469b00 e0040400	      ALU:	ADDv	R8.__zw = R4.zzzx, R4.wwwy
      0240604a 00001200     	EXEC ADDR(0x4a) CNT(0x6) BOOL_ADDR(0x80)
4a: a8830103 0018b00a 81020aff	      ALU:	MULv	R3.xy__ = R2.xwww, C266.xyyy
                          						    	MUL_CONST_0	R1.___w = C511.w, R8.z
4b: c8090802 001bb000 e1010700	      ALU:	MULv	R2.x__w = R1.wwww, R7.xyyy
4c: c8060800 001cb1c1 ab02fc00	      ALU:	MULADDv	R0._yz_ = R0.yyzz, R2.xxww, C508.yyyy
4d: 64480001 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R0.yzy CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
4e: a81e0200 0001b149 81001008	   (S)ALU:	MULv	R0._yzw = R0.yyzw, C272.yyyy
                          						    	MUL_CONST_0	R2.x___ = C264.x, R8.y
4f: a82c0202 00acf188 c1030208	      ALU:	MULv	R2.__zw = R3.xxxy, R2.yyyz
                          						    	MUL_CONST_0	R2._y__ = C264.y, R8.x
      00006050 00002200     	EXEC_END ADDR(0x50) CNT(0x6) BOOL_ADDR(0x80)
50: c8030808 00c41900 e0020200	      ALU:	ADDv	R8.xy__ = R2.xzzz, R2.ywww
51: c8070808 00b4b8be eb090801	      ALU:	MULADDv	R8.xyz_ = R1.zxyy, R9.xzyy, R8.xwyy
52: c8070808 02b4c900 e0080000	      ALU:	ADDv	R8.xyz_ = R8.xzyy, -R0.ywzz
53: c8070808 00b46c15 ab080f00	      ALU:	MULADDv	R8.xyz_ = R0.yzww, R8.xzyy, C271.xxxx
54: c80e0800 00fc6c00 a1081000	      ALU:	MULv	R0._yzw = R8.xxyz, C272.xxxx
55: c80f8000 00555500 e2000000	      ALU:	MAXv	export0 = R0.yzwx, R0.yzwx	; COLOR
      00000000 00000000     	NOP
