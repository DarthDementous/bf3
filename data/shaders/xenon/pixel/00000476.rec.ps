      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: c8070607 00ca1a00 e1020200	      ALU:	MULv	R7.xyz_ = R2.zwzz, R2.zwww
08: c8070607 00ca1ac0 eb010107	      ALU:	MULADDv	R7.xyz_ = R7.xyzz, R1.zwzz, R1.zwww
09: c80b0607 00cacb62 eb000007	      ALU:	MULADDv	R7.xy_w = R7.zyxx, R0.zwzz, R0.wwzz
0a: 58810707 006c6c1b e0070787	      ALU:	ADDv	R7.x___ = R7.xxxx, R7.xxxx
                          						    	RECIPSQ_IEEE	R7.___w = abs(R7).wwww
0b: 58420700 006c1bb1 2101fd87	      ALU:	MULv	R0._y__ = C257.xxxx, C509.wwww
                          						    	RECIPSQ_IEEE	R7.__z_ = abs(R7).yyyy
0c: c8070609 0014ca00 e1070000	      ALU:	MULv	R9.xyz_ = R7.xzww, R0.zwzz
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: c807060a 00cf1600 e1070100	      ALU:	MULv	R10.xyz_ = R7.wxzz, R1.zzww
0e: c8020607 04b11b00 e00a0100	      ALU:	ADDv	R7._y__ = -R10.yyyy, R1.wwww
0f: 140b0608 0167ca6c e1070209	      ALU:	MULv	R8.xy_w = R7.wzxx, R2.zwzz
10: 04140707 041b1b1b e0080200	      ALU:	ADDv	R7.__z_ = -R8.wwww, R2.wwww
                          						    	ADD_PREVs	R7.x___ = R0.wwww
11: 4c480503 00bebec6 f0070703	      ALU:	DOT3v	R3.___w = R7.zxyy, R7.zxyy
                          						    	RECIP_IEEE	R5.__z_ = R3.zzzz
12: 5883030b 00c6b01b e1050383	      ALU:	MULv	R11.xy__ = R5.zzzz, R3.xyyy
                          						    	RECIPSQ_IEEE	R3.___w = abs(R3).wwww
      05006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c8070607 00c01b00 e1070300	      ALU:	MULv	R7.xyz_ = R7.xyzz, R3.wwww
14: c80f0607 00a6cd00 f2070700	      ALU:	CUBEv	R7 = R7.zzxy, R7.yxzz
15: 4c84030d 001b1bc6 e2070787	      ALU:	MAXv	R13.__z_ = R7.wwww, R7.wwww
                          						    	RECIP_IEEE	R3.___w = abs(R7).zzzz
16: c803060d 006d1bb1 cb0703fc	      ALU:	MULADDv	R13.xy__ = C508.yyyy, R7.yxxx, R3.wwww
17: 10387081 1f1ff5c8 00004000	      FETCH:	SAMPLE	R7.xy_z = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: 102850a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      09556019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 1048c081 1f1ff5c8 00004000	      FETCH:	SAMPLE	R12.xy_z = R4.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 1008e081 1f1ff688 00004000	      FETCH:	SAMPLE	R14.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: 9068f1a1 1f1ff688 0000c000	      FETCH:	SAMPLE	R15.xyzw = R13.xyz CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1c: b8183081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R3.___x = R4.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1d: 10584161 1f1fffd8 00004000	      FETCH:	SAMPLE	R4.xw__ = R11.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1e: c8080608 046c6c00 200cfc00	   (S)ALU:	ADDv	R8.___w = -C268.xxxx, C508.xxxx
      0000601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 14080601 001bb11b a0010a00	      ALU:	ADDv	R1.___w = R1.wwww, C266.yyyy
20: 04880200 001bc66c 80020a0a	      ALU:	ADDv	R0.___w = R2.wwww, C266.zzzz
                          						    	ADD_PREVs	R2.___w = C266.xxxx
21: 08480c03 041b6c61 a003fd04	      ALU:	ADDv	R3.___w = -R3.wwww, C509.xxxx
                          						    	MULs	R12.__z_ = R4.yyxx
22: b8110b00 001b1b43 810ffe09	      ALU:	MULv	R0.x___ = R15.wwww, C510.wwww
                          						    	SUB_CONST_0	R11.x___ = C265.x, R0.w
23: b8280b06 001b1b83 c10e0609	      ALU:	MULv	R6.___w = R14.wwww, R6.wwww
                          						    	SUB_CONST_0	R11._y__ = C265.y, R0.w
24: c8088000 001b1b00 e1060300	      ALU:	MULv	export0.___w = R6.wwww, R3.wwww	; COLOR
      00006025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: b0810604 04b1c641 c10900fd	      ALU:	MULv	R4.x___ = -R9.yyyy, R0.zzzz
                          						    	ADD_CONST_0	R6.___w = C509.x, R0.y
26: b017060d 00c0c080 c00606fd	      ALU:	ADDv	R13.xyz_ = R6.xyzz, R6.xyzz
                          						    	ADD_CONST_0	R6.x___ = C509.y, R0.x
27: a8240607 00c61b47 a503fc02	      ALU:	SETGTv	R7.__z_ = R3.zzzz, C508.wwww
                          						    	MUL_CONST_0	R6._y__ = C258.x, R6.w
28: 2c170603 0010b16c a10cfd06	      ALU:	MULv	R3.xyz_ = R12.xyww, C509.yyyy
                          						    	FRACs	R6.x___ = R6.xxxx
29: 140e0604 00fc6c6c a1050000	      ALU:	MULv	R4._yzw = R5.xxyz, C256.xxxx
2a: 04180606 016c1b6c 65fd0f06	      ALU:	SETGTv	R6.___w = C509.xxxx, R15.wwww
                          						    	ADD_PREVs	R6.x___ = -R6.xxxx
      0000602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: b01e0600 00b13cc4 e10607fc	      ALU:	MULv	R0._yzw = R6.yyyy, R7.xxyw
                          						    	ADD_CONST_0	R6.x___ = C508.z, R6.x
2c: 38110600 04c6c66c e10a0106	      ALU:	MULv	R0.x___ = -R10.zzzz, R1.zzzz
                          						    	EXP_IEEE	R6.x___ = R6.xxxx
2d: bc470b06 006cc043 c1060f08	      ALU:	MULv	R6.xyz_ = R6.xxxx, R15.xyzz
                          						    	SUB_CONST_1	R11.__z_ = C264.x, R1.w
2e: b81f0c00 00d0d043 e0040007	      ALU:	ADDv	R0 = R4.xywz, R0.xywz
                          						    	SUB_CONST_0	R12.x___ = C263.x, R2.w
2f: c80b0604 001bc0c0 ee06060f	      ALU:	CNDGTv	R4.xy_w = R15.xyzz, R6.wwww, R6.xyzz
30: c8010606 04b1c66c eb080200	      ALU:	MULADDv	R6.x___ = R0.xxxx, -R8.yyyy, R2.zzzz
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: b8280c0c 046c6c83 a006fd07	      ALU:	ADDv	R12.___w = -R6.xxxx, C509.xxxx
                          						    	SUB_CONST_0	R12._y__ = C263.y, R2.w
32: bc8b0b06 001d1d83 c10c0c08	      ALU:	MULv	R6.xy_w = R12.yxww, R12.yxww
                          						    	SUB_CONST_1	R11.___w = C264.y, R1.w
33: c8010606 00b3b36c f10b0b06	      ALU:	DOT2ADDv	R6.x___ = R6.xxxx, R11.wyyy, R11.wyyy
34: c8080601 006e6eb1 f10b0b06	      ALU:	DOT2ADDv	R1.___w = R6.yyyy, R11.zxxx, R11.zxxx
35: 58170702 00c0c01b a10efe81	      ALU:	MULv	R2.xyz_ = R14.xyzz, C510.xyzz
                          						    	RECIPSQ_IEEE	R7.x___ = abs(R1).wwww
36: 58270701 00c0c06c e10d0e86	      ALU:	MULv	R1.xyz_ = R13.xyzz, R14.xyzz
                          						    	RECIPSQ_IEEE	R7._y__ = abs(R6).xxxx
      00006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: 40240606 00bebe1b f0020d81	      ALU:	DOT3v	R6.__z_ = R2.zxyy, R13.zxyy
                          						    	LOG_IEEE	R6._y__ = abs(R1).wwww
38: 40140604 001b1b6c e1060686	      ALU:	MULv	R4.__z_ = R6.wwww, R6.wwww
                          						    	LOG_IEEE	R6.x___ = abs(R6).xxxx
39: a8840606 00c66c45 a206ff03	      ALU:	MAXv	R6.__z_ = R6.zzzz, C511.xxxx
                          						    	MUL_CONST_0	R6.___w = C259.x, R6.y
3a: a8270602 00c0c0c4 e10c0703	      ALU:	MULv	R2.xyz_ = R12.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R6._y__ = C259.z, R6.x
3b: 381f0607 007a701b e10b0706	      ALU:	MULv	R7 = R11.zwyx, R7.xyyx
                          						    	EXP_IEEE	R6.x___ = R6.wwww
3c: 38230609 00b06cb1 e1070a06	      ALU:	MULv	R9.xy__ = R7.xyyy, R10.xxxx
                          						    	EXP_IEEE	R6._y__ = R6.yyyy
      0000603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: c8030607 00b0c6b0 eb020909	      ALU:	MULADDv	R7.xy__ = R9.xyyy, R2.xyyy, R9.zzzz
3e: c9030606 00b01900 a1060300	      ALU:	MULv	R6.xy__ = R6.xyyy, C259.ywww CLAMP
3f: c9060608 00166c61 eb070807	      ALU:	MULADDv	R8._yz_ = R7.yyxx, R7.zzww, R8.xxxx CLAMP
40: 14080601 00c66cc6 a306fd02	      ALU:	MINv	R1.___w = R6.zzzz, C509.xxxx
41: 0c1c0806 04716cc6 a006fd08	      ALU:	ADDv	R6.__zw = -R6.yyyx, C509.xxxx
                          						    	MUL_PREVs	R8.x___ = R8.zzzz
42: c8030606 006d1a00 e1080600	      ALU:	MULv	R6.xy__ = R8.yxxx, R6.zwww
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: c80c0607 0071ac00 a1060500	      ALU:	MULv	R7.__zw = R6.yyyx, C261.xxxy
44: a8170702 001b1045 e1010404	      ALU:	MULv	R2.xyz_ = R1.wwww, R4.xyww
                          						    	MUL_CONST_0	R7.x___ = C260.x, R6.y
45: a8230704 00c5b084 a1060604	      ALU:	MULv	R4.xy__ = R6.yzzz, C262.xyyy
                          						    	MUL_CONST_0	R7._y__ = C260.y, R6.x
46: c8030606 00c51900 e1040800	      ALU:	MULv	R6.xy__ = R4.yzzz, R8.ywww
47: b2400606 00000045 e206060c	      ALU:	ADD_CONST_0	R6.__z_ = C268.x, R6.y CLAMP
48: c8070602 00c0c600 e1020600	      ALU:	MULv	R2.xyz_ = R2.xyzz, R6.zzzz
      00006049 00001200     	EXEC ADDR(0x49) CNT(0x6) BOOL_ADDR(0x80)
49: 00170302 00c0c061 e1020307	      ALU:	MULv	R2.xyz_ = R2.xyzz, R3.xyzz
                          						    	ADDs	R3.x___ = R7.yyxx
4a: 00270302 00c0c6cb a102fd07	      ALU:	MULv	R2.xyz_ = R2.xyzz, C509.zzzz
                          						    	ADDs	R3._y__ = R7.wwzz
4b: 14070602 00c0c66c a1020b04	      ALU:	MULv	R2.xyz_ = R2.xyzz, C267.zzzz
4c: 04470302 00c0c06c e1020506	      ALU:	MULv	R2.xyz_ = R2.xyzz, R5.xyzz
                          						    	ADD_PREVs	R3.__z_ = R6.xxxx
4d: c8070606 00c0c0c0 eb010302	      ALU:	MULADDv	R6.xyz_ = R2.xyzz, R1.xyzz, R3.xyzz
4e: c8070606 00c0c9c0 eb010006	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R1.xyzz, R0.ywzz
      0000104f 00002200     	EXEC_END ADDR(0x4f) CNT(0x1) BOOL_ADDR(0x80)
4f: c8078000 00c06c00 a1060d00	      ALU:	MULv	export0.xyz_ = R6.xyzz, C269.xxxx	; COLOR
