      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: 100000c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: c8040800 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
08: c80c0807 0071ac00 2101fd00	      ALU:	MULv	R7.__zw = C257.yyyx, C509.xxxy
09: c8080801 011bb1c6 ab000107	      ALU:	MULADDv	R1.___w = -R7.zzzz, R0.wwww, C257.yyyy
0a: 58430002 00b0b0c6 a1890480	      ALU:	MULv	R2.xy__ = abs(R9).xyyy, C260.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0b: a8880005 00bebe02 d0030301	      ALU:	DOT3v	R5.___w = R3.zxyy, R3.zxyy
                          						    	MUL_CONST_0	R0.___w = C257.w, R0.z
      0550600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c8030800 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
0d: c8050800 00b01bb0 eb000106	      ALU:	MULADDv	R0.x_z_ = R6.xyyy, R0.xyyy, R1.wwww
0e: b82800c1 1f1fffc7 00004000	      FETCH:	SAMPLE	R0._x__ = R6.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: 1038a0e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R7.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 20487001 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R0.xzx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: 2018b001 1f1ff688 00004000	      FETCH:	SAMPLE	R11.xyzw = R0.xzx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: 10580041 1f1ffffb 00004000	      FETCH:	SAMPLE	R0.w___ = R2.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
13: c8080801 001b1b00 e10b0800	   (S)ALU:	MULv	R1.___w = R11.wwww, R8.wwww
14: c8040800 00bebe00 f0010100	      ALU:	DOT3v	R0.__z_ = R1.zxyy, R1.zxyy
15: c8070802 00c0c000 e0080800	      ALU:	ADDv	R2.xyz_ = R8.xyzz, R8.xyzz
16: c8030806 046cb000 a0050800	      ALU:	ADDv	R6.xy__ = -R5.xxxx, C264.xyyy
17: c80c0806 04b1ac00 a0050900	      ALU:	ADDv	R6.__zw = -R5.yyyy, C265.xxxy
      00006018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: c80c0809 04c6ac00 a0050a00	      ALU:	ADDv	R9.__zw = -R5.zzzz, C266.xxxy
19: a8180000 00bebe00 d00404fe	      ALU:	DOT3v	R0.___w = R4.zxyy, R4.zxyy
                          						    	MUL_CONST_0	R0.x___ = C510.w, R0.x
1a: 58870205 00c01b1b a107fe80	      ALU:	MULv	R5.xyz_ = R7.xyzz, C510.wwww
                          						    	RECIPSQ_IEEE	R2.___w = abs(R0).wwww
1b: 58880500 00bec01b b007fe85	      ALU:	DOT3v	R0.___w = R7.zxyy, C510.xyzz
                          						    	RECIPSQ_IEEE	R5.___w = abs(R5).wwww
1c: c8080800 001b1bc6 cb0700fd	      ALU:	MULADDv	R0.___w = C509.zzzz, R7.wwww, R0.wwww
1d: 1407080c 00c06c1b a10a0005	      ALU:	MULv	R12.xyz_ = R10.xyzz, C256.xxxx
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: 0f120909 001bc6c6 e1020403	      ALU:	MULv	R9._y__ = R2.wwww, R4.zzzz CLAMP
                          						    	MUL_PREVs	R9.x___ = R3.zzzz CLAMP
1f: c9030809 00b06cb1 8b090c0c	      ALU:	MULADDv	R9.xy__ = C268.yyyy, R9.xyyy, C268.xxxx CLAMP
20: c8030809 00b0b000 e1090900	      ALU:	MULv	R9.xy__ = R9.xyyy, R9.xyyy
21: c80f0809 00949400 e1090900	      ALU:	MULv	R9 = R9.xzwy, R9.xzwy
22: c8080802 001919c6 f1060609	      ALU:	DOT2ADDv	R2.___w = R9.zzzz, R6.ywww, R6.ywww
23: c8080805 00c4c4b1 f1060609	      ALU:	DOT2ADDv	R5.___w = R9.yyyy, R6.xzzz, R6.xzzz
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 40170d06 00c0c01b e1020b85	      ALU:	MULv	R6.xyz_ = R2.xyzz, R11.xyzz
                          						    	LOG_IEEE	R13.x___ = abs(R5).wwww
25: 40270d07 00c0c01b e1070882	      ALU:	MULv	R7.xyz_ = R7.xyzz, R8.xyzz
                          						    	LOG_IEEE	R13._y__ = abs(R2).wwww
26: 58430808 00b0c4c6 a10d0b80	      ALU:	MULv	R8.xy__ = R13.xyyy, C267.xzzz
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R0).zzzz
27: 39140800 00c6c66c e1080108	      ALU:	MULv	R0.__z_ = R8.zzzz, R1.zzzz CLAMP
                          						    	EXP_IEEE	R8.x___ = R8.xxxx
28: 38270801 00c0c0b1 e10c0b08	      ALU:	MULv	R1.xyz_ = R12.xyzz, R11.xyzz
                          						    	EXP_IEEE	R8._y__ = R8.yyyy
29: 29130b08 00b0191b a1080b03	      ALU:	MULv	R8.xy__ = R8.xyyy, C267.ywww CLAMP
                          						    	SETNEs	R11.x___ = R3.wwww
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 28230b08 046dc61b a008fd04	      ALU:	ADDv	R8.xy__ = -R8.yxxx, C509.zzzz
                          						    	SETNEs	R11._y__ = R4.wwww
2b: a8470905 00c0c049 c1050a06	      ALU:	MULv	R5.xyz_ = R5.xyzz, R10.xyzz
                          						    	MUL_CONST_0	R9.__z_ = C262.x, R8.y
2c: a8280907 001b1b49 8200fd07	      ALU:	MAXv	R7.___w = R0.wwww, C509.wwww
                          						    	MUL_CONST_0	R9._y__ = C263.x, R8.y
2d: a82c0a08 002c7188 c1090807	      ALU:	MULv	R8.__zw = R9.xxxw, R8.yyyx
                          						    	MUL_CONST_0	R10._y__ = C263.y, R8.x
2e: a8430a0c 001ab088 81080706	      ALU:	MULv	R12.xy__ = R8.zwww, C263.xyyy
                          						    	MUL_CONST_0	R10.__z_ = C262.y, R8.x
2f: a8490c09 00c56c4a 81080506	      ALU:	MULv	R9.x__w = R8.yzzz, C261.xxxx
                          						    	MUL_CONST_0	R12.__z_ = C262.x, R8.z
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: a8890c0a 0018b18b 81080506	      ALU:	MULv	R10.x__w = R8.xwww, C261.yyyy
                          						    	MUL_CONST_0	R12.___w = C262.y, R8.w
31: 140f0808 000dad1b e10c0b0a	      ALU:	MULv	R8 = R12.yxzw, R11.yxxy
32: 0c160808 00b66bb1 e008080b	      ALU:	ADDv	R8._yz_ = R8.zzyy, R8.wwxx
                          						    	MUL_PREVs	R8.x___ = R11.yyyy
33: c8010808 001b6c6c eb090b08	      ALU:	MULADDv	R8.x___ = R8.xxxx, R9.wwww, R11.xxxx
34: 40870804 00c01bc6 e10a0400	      ALU:	MULv	R4.xyz_ = R10.xyzz, R4.wwww
                          						    	LOG_IEEE	R8.___w = R0.zzzz
35: c8070803 00b41bb4 eb090304	      ALU:	MULADDv	R3.xyz_ = R4.xzyy, R9.xzyy, R3.wwww
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: c80f0808 00ffff00 e1070800	      ALU:	MULv	R8 = R7.wxyz, R8.wxyz
37: c80e0808 00fcfc01 eb060308	      ALU:	MULADDv	R8._yzw = R8.yyzw, R6.xxyz, R3.xxyz
38: 38170803 00c06c6c a105ff08	      ALU:	MULv	R3.xyz_ = R5.xyzz, C511.xxxx
                          						    	EXP_IEEE	R8.x___ = R8.xxxx
39: b8170803 00c06cc1 c10308fd	      ALU:	MULv	R3.xyz_ = R3.xyzz, R8.xxxx
                          						    	SUB_CONST_0	R8.x___ = C509.z, R0.y
3a: b8870003 00c0c0c0 810302fd	      ALU:	MULv	R3.xyz_ = R3.xyzz, C258.xyzz
                          						    	SUB_CONST_0	R0.___w = C509.z, R0.x
3b: 14070800 00c06c1b a1030301	      ALU:	MULv	R0.xyz_ = R3.xyzz, C259.xxxx
      0000303c 00002200     	EXEC_END ADDR(0x3c) CNT(0x3) BOOL_ADDR(0x80)
3c: c8070800 00b4b4b4 eb010200	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R1.xzyy, R2.xzyy
3d: c80e0808 001b8c01 eb000008	      ALU:	MULADDv	R8._yzw = R8.yyzw, R0.wwww, R0.xxzy
3e: 0c878000 00156c6c a1080d08	      ALU:	MULv	export0.xyz_ = R8.yzww, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R8.xxxx	; COLOR
      00000000 00000000     	NOP
