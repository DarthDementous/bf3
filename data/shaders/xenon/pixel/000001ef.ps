//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $matvalue      c4       1
//   $fresnelterm   c5       1
//   $apptime       c6       1
//   $compressedhdr c7       1
//   $lmap          s0       1
//   $incan         s1       1
//   $spec          s2       1
//   $screenshadmap s3       1
//   $envmap        s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c6
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c7
defconst $diff, sampler2d, object, [1, 1], s8
defconst $envmap, samplercube, object, [1, 1], s4
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c5
defconst $incan, sampler2d, object, [1, 1], s1
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $lmap, sampler2d, object, [1, 1], s0
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c4
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spec, sampler2d, object, [1, 1], s2
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=10
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=6

// interpolators: 6 interpolants: 6, components: 24
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4
dcl_color_centroid r5

def c252, 0.150000006, 0.0529999994, 10, 0
def c253, -1, 3.29999995, 2, 1.5
def c254, -127.5, 1, 5, 0.5
def c255, 0.298999995, 0.587000012, 0.143999994, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     mul r7.z, c6.x, c254.w
               + movs r7.x, r4.x
/*    8   */     mul r6.xy, r6_abs.xy, c3.xy
               + movs r7.y, r4.y
/*    9   */     tfetch2D r7.___w, r6.xy, tf3, FetchValidOnly=false
/*   10   */     tfetch2D r8._yw_, r4.xy, tf7, FetchValidOnly=false
/*   11   */     tfetch3D r8.___x, r7.xyz, tf6, FetchValidOnly=false
/*   12   */     serialize
                 add r8.x, r8.w, -c254.y
               + rcp r6.z, r3.w
/*    1.0 */     exec
/*   13   */     add r7.xyz, r8.xyz, r8.wyz
/*   14   */     add r9.yz, r7.yyz, c253.x
               + muls r9.x, r0.ww
/*   15   */     mul r8.xw, r7.wx, c254.wz
               + muls r8.y, r9.yy
/*   16   */     mul r7.xy, r8.w, r9.yz
               + muls r8.z, r9.zz
/*   17   */     add r6.xy, -r8.xy, c254.y
               + movs r5._, r6.z
/*   18   */     add r6.w, r6.y, -r8.z
               + muls_prev r3.x, r3.x
/*    1.1 */     exec
/*   19   */     mul r8.yz, r7.xxy, c252.y
               + sqrt r9.w, r6_abs.w
/*   20   */     dp3 r7.y, r9.wyz, r2.zxy
               + movs r5._, r6.z
/*   21   */     mul r6.w, r7.y, r2.w
               + muls_prev r3.z, r3.y
/*   22   */     dp3 r7.x, r9.wyz, r0.zxy
               + subsc r3.y, c254.y, r3.z
/*   23   */     dp3 r7.z, r9.wyz, r1.zxy
               + movs r5._, r7.x
/*   24   */     mul r8.x, r7.z, r1.w
               + muls_prev r3.w, r0.w
/*    2.0 */     exec
/*   25   */     add r9.yzw, r3.wwxy, r8.xxyz
               + muls r6.z, r1.ww
/*   26   */     add r3.xy, r9.xy, r6.zw
               + muls r3.z, r2.ww
/*   27   */     add r3.yz, r3.xxy, r3.zzy
/*   28   */     add r7.w, -c5.x, c253.z
               + rsq r3.x, r3_abs.y
/*   29   */     mul r8.y, r3.x, r1.w
               + movs r5._, r3.x
/*   30   */     mul r8.z, r3.x, r2.w
               + muls_prev r8.x, r0.w
/*    2.1 */     exec
/*   31   */     dp3 r0.x, -r8.zxy, r7.yxz
/*   32   */     subsc r3.x, c254.y, r0.x
/*   33   */     muls r3.x, r3.xx
/*   34   */     muls r3.x, r3.xx
/*   35   */     mul r3, r3.zzxz, r7.xywz
/*   36   */     add r1.y, -r3.w, r1.w
               + movs r5._, -r3.x
/*    3.0 */     exec
/*   37   */     add r1.z, -r3.y, r2.w
               + adds_prev r1.x, r0.w
/*   38   */     dp3 r0.x, r1.zxy, r1.zxy
/*   39   */     rsq r0.x, r0_abs.x
/*   40   */     mul r0.xyz, r1.xyz, r0.x
/*   41   */     cube r0, r0.zzxy, r0.yxz
/*   42   */     mov r7.z, r0.w
               + rcp r1.x, r0_abs.z
/*    3.1 */     exec
/*   43   */     mad r7.xy, r0.yx, r1.x, c253.w
/*   44   */     tfetch2D r2.xyz_, r4.zw, tf0
/*   45   */     tfetch2D r8.xyz_, r4.xy, tf1
/*   46   */     tfetch2D r1.xyz_, r4.xy, tf2
/*   47   */     tfetch2D r0.x_yz, r9.zw, tf5
/*   48   */     tfetchCube r7, r7.xyz, tf4
/*    4.0 */     exec
/*   49   */     tfetch2D r10, r4.xy, tf8
/*   50   */     serialize
                 mul oC0.w, r10.w, r5.w
/*   51   */     add r4.xyz, r5.xyz, r5.xyz
               + movs r5._, c1.x
/*   52   */     mul r0.y, r7.w, c255.w
               + muls_prev r6.w, c252.z
/*   53   */     mul r9.xyz, r10.xyz, c255.xyz
               + mulsc r5.x, c7.y, r0.x
/*   54   */     mul r3.xyw, r4.xzy, r10.xzy
               + mulsc r5.y, c7.y, r0.z
/*    4.1 */     exec
/*   55   */     sgt r1.w, c254.y, r7.w
               + mulsc r5.z, c7.y, r0.w
/*   56   */     dp3 r5.w, r9.zxy, r4.zxy
               + mulsc r4.x, c254.w, r1.x
/*   57   */     add r0.x, r0.y, c254.w
               + mulsc r4.y, c254.w, r1.y
/*   58   */     max r5.w, r5.w, c252.x
               + frcs r0.x, r0.x
/*   59   */     add r6.z, r0.y, -r0.x
               + mulsc r4.z, c254.w, r1.z
/*   60   */     add r0.xw, r6.wz, c254.yx
               + movs r6.z, r5.w
/*    5.0 */     exec
/*   61   */     mul r5.w, r0.x, c2.x
               + movs r6.w, c254.y
/*   62   */     mul r0.xyz, r5.w, r8.xyz
               + exp r5.w, r0.w
/*   63   */     mul r1.xyz, r5.w, r7.xyz
               + mins r5.w, r6.zw
/*   64   */     cndgt r1.xyz, r1.w, r1.xyz, r7.xyz
/*   65   */     mad r0.xyw, r2.xzy, c0.x, r0.xzy
/*   66   */     mul r1.yzw, r5.w, r1.xxyz
               + movs r5._, r3.x
/*    5.1 */     exec
/*   67   */     add_sat r5.w, r3.z, c5.x
               + muls_prev r1.x, r0.x
/*   68   */     mul r1.yzw, r1.yyzw, r5.w
               + movs r5._, r3.y
/*   69   */     mul r4.xyz, r1.yzw, r4.xyz
               + muls_prev r1.y, r0.y
/*   70   */     mul r3.xyz, r4.xyz, c253.y
               + movs r5._, r3.w
/*   71   */     mul r0.xyz, r3.xyz, c4.z
               + muls_prev r1.z, r0.w
/*   72   */     mad r0.xyz, r0.xyz, r2.xyz, -r5.xyz
/*    6.0 */     exece
/*   73   */     mad r0.xyz, r1.xyz, r6.x, r0.xzy
/*   74   */     mad r5.xyz, r0.xzy, c6.x, r5.xyz
/*   75   */     mul oC0.xyz, r5.xyz, c7.x
/*    6.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x003f SamplingPattern 0x001f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyzw
// [5] color0 r5.xyzw

