      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: b4140605 001bc683 80020808	      ALU:	ADDv	R5.__z_ = R2.wwww, C264.zzzz
                          						    	ADD_CONST_1	R6.x___ = C264.y, R1.w
07: 140b0405 00ca1a1b e1020200	      ALU:	MULv	R5.xy_w = R2.zwzz, R2.zwww
08: 0443050a 04c6b06c 80050708	      ALU:	ADDv	R10.xy__ = -R5.zzzz, C263.xyyy
                          						    	ADD_PREVs	R5.__z_ = C264.xxxx
09: bc460a09 046cbc46 80060605	      ALU:	ADDv	R9._yz_ = -R6.xxxx, C262.xxyy
                          						    	SUB_CONST_1	R10.__z_ = C261.x, R5.z
0a: c80b0405 00ca1a10 eb010105	      ALU:	MULADDv	R5.xy_w = R5.xyww, R1.zwzz, R1.zwww
0b: c80b0406 00cacb63 eb000005	      ALU:	MULADDv	R6.xy_w = R5.wyxx, R0.zwzz, R0.wwzz
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: bc890a05 00c5c586 c1090905	      ALU:	MULv	R5.x__w = R9.yzzz, R9.yzzz
                          						    	SUB_CONST_1	R10.___w = C261.y, R5.z
0d: c8080405 00b3b31b f10a0a05	      ALU:	DOT2ADDv	R5.___w = R5.wwww, R10.wyyy, R10.wyyy
0e: 58800804 0000001b e2040486	      ALU:	RECIPSQ_IEEE	R8.___w = abs(R6).wwww
0f: c8080406 006e6e6c f10a0a05	      ALU:	DOT2ADDv	R6.___w = R5.xxxx, R10.zxxx, R10.zxxx
10: 58120908 006c6c1b e0060686	      ALU:	ADDv	R8._y__ = R6.xxxx, R6.xxxx
                          						    	RECIPSQ_IEEE	R9.x___ = abs(R6).wwww
11: 58470805 00c0c0b1 e0040486	      ALU:	ADDv	R5.xyz_ = R4.xyzz, R4.xyzz
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R6).yyyy
      00006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: 40170b06 00c3161b e1080086	      ALU:	MULv	R6.xyz_ = R8.wyzz, R0.zzww
                          						    	LOG_IEEE	R11.x___ = abs(R6).wwww
13: 40210b08 04b11b1b e0060085	      ALU:	ADDv	R8.x___ = -R6.yyyy, R0.wwww
                          						    	LOG_IEEE	R11._y__ = abs(R5).wwww
14: c80d0407 00f30600 e1080200	      ALU:	MULv	R7.x_zw = R8.wyyz, R2.zzzw
15: c80e0408 00fb0600 e1080100	      ALU:	MULv	R8._yzw = R8.wwyz, R1.zzzw
16: 588a0906 00bccc1b a10b0185	      ALU:	MULv	R6._y_w = R11.xxyy, C257.xxzz
                          						    	RECIPSQ_IEEE	R9.___w = abs(R5).wwww
17: c8060409 00c11c00 e1090900	      ALU:	MULv	R9._yz_ = R9.yyzz, R9.xxww
      00006018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 381f090a 000d2fb1 e10a0906	      ALU:	MULv	R10 = R10.yxzw, R9.wxxw
                          						    	EXP_IEEE	R9.x___ = R6.yyyy
19: 382c0909 00f1b11b e1090806	      ALU:	MULv	R9.__zw = R9.yyyz, R8.yyyy
                          						    	EXP_IEEE	R9._y__ = R6.wwww
1a: c80c0409 00066c06 eb0a0609	      ALU:	MULADDv	R9.__zw = R9.zzzw, R10.zzzw, R6.xxxx
1b: c9030407 006d6c1a eb0a0709	      ALU:	MULADDv	R7.xy__ = R9.zwww, R10.yxxx, R7.xxxx CLAMP
1c: 15030406 01b019c6 a1090106	      ALU:	MULv	R6.xy__ = R9.xyyy, C257.ywww CLAMP
1d: 0c130006 04b0b1c6 a006fd00	      ALU:	ADDv	R6.xy__ = -R6.xyyy, C509.yyyy
                          						    	MUL_PREVs	R0.x___ = R0.zzzz
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: 14060400 01bcbc1b a1060408	      ALU:	MULv	R0._yz_ = R6.xxyy, C260.xxyy
1f: 0c860000 00c1bcc6 e1000701	      ALU:	MULv	R0._yz_ = R0.yyzz, R7.xxyy
                          						    	MUL_PREVs	R0.___w = R1.zzzz
20: 140c0406 017106c6 e0000008	      ALU:	ADDv	R6.__zw = R0.yyyx, R0.zzzw
21: c8010400 041bc61b eb070206	      ALU:	MULADDv	R0.x___ = R6.wwww, -R7.wwww, R2.zzzz
22: 04210800 046cb11b a000fd01	      ALU:	ADDv	R0.x___ = -R0.xxxx, C509.yyyy
                          						    	ADD_PREVs	R8._y__ = R1.wwww
23: 14010400 016c6cc6 e1000007	      ALU:	MULv	R0.x___ = R0.xxxx, R0.xxxx
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 04480808 006c6c1b e1000002	      ALU:	MULv	R8.___w = R0.xxxx, R0.xxxx
                          						    	ADD_PREVs	R8.__z_ = R2.wwww
25: c8020400 00bebe00 f0080800	      ALU:	DOT3v	R0._y__ = R8.zxyy, R8.zxyy
26: 58210000 046c6cb1 200afe80	      ALU:	ADDv	R0.x___ = -C266.xxxx, C510.xxxx
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R0).yyyy
27: c80f0401 00007100 e1080000	      ALU:	MULv	R1 = R8, R0.yyyx
28: c80f0400 00a6cd00 f2010100	      ALU:	CUBEv	R0 = R1.zzxy, R1.yxzz
29: 4c140202 001b1bc6 e2000080	      ALU:	MAXv	R2.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R2.x___ = abs(R0).zzzz
      0254602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: c8030402 006d6cc6 cb0002fe	      ALU:	MULADDv	R2.xy__ = C510.zzzz, R0.yxxx, R2.xxxx
2b: b8180061 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R3.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2c: 90288041 1f1ff688 0000c000	      FETCH:	SAMPLE	R8.xyzw = R2.xyz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2d: 10083061 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2e: c8088000 001b1b00 e1030400	   (S)ALU:	MULv	export0.___w = R3.wwww, R4.wwww	; COLOR
2f: c8040404 001b1b00 a108ff00	      ALU:	MULv	R4.__z_ = R8.wwww, C511.wwww
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: a8170902 00c0c041 c1050300	      ALU:	MULv	R2.xyz_ = R5.xyzz, R3.xyzz
                          						    	MUL_CONST_0	R9.x___ = C256.x, R0.y
31: a8210900 00b11b42 45fd0800	      ALU:	SETGTv	R0.x___ = C509.yyyy, R8.wwww
                          						    	MUL_CONST_0	R9._y__ = C256.x, R0.z
32: a8410904 00c61b43 8004fe00	      ALU:	ADDv	R4.x___ = R4.zzzz, C510.wwww
                          						    	MUL_CONST_0	R9.__z_ = C256.x, R0.w
33: 2c120404 00bec06c b002ff04	      ALU:	DOT3v	R4._y__ = R2.zxyy, C511.xyzz
                          						    	FRACs	R4.x___ = R4.xxxx
34: 14270401 00c0c0b1 e1090304	      ALU:	MULv	R1.xyz_ = R9.xyzz, R3.xyzz
                          						    	MAXs	R4._y__ = R4.yyyy
35: 14410404 02c66c6c c00404fd	      ALU:	ADDv	R4.x___ = R4.zzzz, -R4.xxxx
                          						    	MAXs	R4.__z_ = C509.xxxx
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: 14210404 006cc6b6 a004fd04	      ALU:	ADDv	R4.x___ = R4.xxxx, C509.zzzz
                          						    	MAXs	R4._y__ = R4.zzyy
37: 38140404 00b1b16c a304fd04	      ALU:	MINv	R4.__z_ = R4.yyyy, C509.yyyy
                          						    	EXP_IEEE	R4.x___ = R4.xxxx
38: c80b0404 006cc000 e1040800	      ALU:	MULv	R4.xy_w = R4.xxxx, R8.xyzz
39: c8070403 006c10c0 ee000408	      ALU:	CNDGTv	R3.xyz_ = R8.xyzz, R0.xxxx, R4.xyww
3a: c8030404 006d6d00 e1070600	      ALU:	MULv	R4.xy__ = R7.yxxx, R6.yxxx
3b: a8170307 00c6c045 c1040302	      ALU:	MULv	R7.xyz_ = R4.zzzz, R3.xyzz
                          						    	MUL_CONST_0	R3.x___ = C258.x, R4.y
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: a82c0303 0071ac84 81040302	      ALU:	MULv	R3.__zw = R4.yyyx, C259.xxxy
                          						    	MUL_CONST_0	R3._y__ = C258.y, R4.x
3d: b6100404 00000043 c204040a	      ALU:	ADD_CONST_1	R4.x___ = C266.x, R1.w CLAMP
3e: c8070404 00c06c00 e1070400	      ALU:	MULv	R4.xyz_ = R7.xyzz, R4.xxxx
3f: c8070404 00c0b100 a104fe00	      ALU:	MULv	R4.xyz_ = R4.xyzz, C510.yyyy
40: 00170604 00c0c661 a1040903	      ALU:	MULv	R4.xyz_ = R4.xyzz, C265.zzzz
                          						    	ADDs	R6.x___ = R3.yyxx
41: 00270604 00c015cb e1040003	      ALU:	MULv	R4.xyz_ = R4.xyzz, R0.yzww
                          						    	ADDs	R6._y__ = R3.wwzz
      00003042 00002200     	EXEC_END ADDR(0x42) CNT(0x3) BOOL_ADDR(0x80)
42: c8070404 00c0c0c0 eb020604	      ALU:	MULADDv	R4.xyz_ = R4.xyzz, R2.xyzz, R6.xyzz
43: c8070404 00c0c0c0 eb010504	      ALU:	MULADDv	R4.xyz_ = R4.xyzz, R1.xyzz, R5.xyzz
44: c8078000 00c06c00 a1040b00	      ALU:	MULv	export0.xyz_ = R4.xyzz, C267.xxxx	; COLOR
