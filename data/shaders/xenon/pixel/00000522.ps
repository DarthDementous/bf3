//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $ambientcolour;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4x4 $lcol;
//   float $lightningintensity;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   float4 $shadowmask;
//   sampler2D $spotlightmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   $lightningintensity c0       1
//   $incanglow          c1       1
//   $incanflag          c2       1
//   $lcol               c3       3
//   $wlightpos          c6       3
//   $worldviewpos       c9       1
//   $invscreensize      c10      1
//   $shadowmask         c11      1
//   $matvalue           c12      1
//   $fresnelterm        c13      1
//   $compressedhdr      c14      1
//   $ambientcolour      c15      1
//   $diff               s0       1
//   $incan              s1       1
//   $spotlightmap       s2       1
//   $screenshadmap      s3       1
//   $envmap             s4       1
//

// Shader type: pixel 

xps_3_0
defconst $ambientcolour, float, vector, [1, 4], c15
defconst $compressedhdr, float, vector, [1, 2], c14
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s4
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s1
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c10
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lightningintensity, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $shadowmask, float, vector, [1, 4], c11
defconst $spotlightmap, sampler2d, object, [1, 1], s2
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c9
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=17
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 28
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5.xy
dcl_color_centroid r6
dcl_color1_centroid r7.xyz

def c252, 10, 2, 0, 0
def c253, 0.200000003, 0.150000006, -127.5, 0
def c254, 1, 0.5, 3.29999995, 1.5
def c255, 0.298999995, 0.587000012, 0.143999994, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     mul r9.xyz, r2.zwz, r2.zw
/*    8   */     mad r9.xyz, r1.zwz, r1.zw, r9.xyz
/*    9   */     mad r9.xyz, r0.zwz, r0.zw, r9.xyz
/*   10   */     mul r5.zw, r8_abs.xxxy, c10.xxxy
               + rsq r8.z, r9_abs.y
/*   11   */     add r8.x, r9.z, r9.z
               + rsq r8.w, r9_abs.x
/*   12   */     mul r11.xzw, r8.xwwz, r0.zzzw
/*    1.0 */     exec
/*   13   */     mul r12.xzw, r8.xwwz, r1.zzzw
/*   14   */     add r8.y, -r12.x, r1.w
/*   15   */     mul r9.xyz, r8.wxz, r2.zzw
               + movs r6._, -r11.x
/*   16   */     add r8.z, -r9.y, r2.w
               + adds_prev r8.x, r0.w
/*   17   */     dp3 r7.w, r8.zxy, r8.zxy
               + rcp r0.x, r4.z
/*   18   */     mul r0.xy, r0.x, r4.xy
               + rsq r7.w, r7_abs.w
/*    1.1 */     exec
/*   19   */     mul r8.xyz, r8.xyz, r7.w
/*   20   */     cube r8, r8.zzxy, r8.yxz
/*   21   */     mov r10.z, r8.w
               + rcp r7.w, r8_abs.z
/*   22   */     mad r10.xy, r8.yx, r7.w, c254.w
/*   23   */     tfetch2D r12.xw__, r0.xy, tf2
/*   24   */     tfetch2D r13._xyz, r5.xy, tf1
/*    2.0 */     exec
/*   25   */     tfetchCube r14, r10.xyz, tf4
/*   26   */     tfetch2D r8.xy__, r5.zw, tf3
/*   27   */     tfetch2D r5, r5.xy, tf0
/*   28   */     serialize
                 add r7.w, r2.w, c9.z
               + movs r6._, c1.x
/*   29   */     add r4.w, r1.w, c9.y
               + muls_prev r0.y, c252.x
/*   30   */     mad r8.yz, -r8.yyx, c11.yyx, c254.x
/*    2.1 */     exec
/*   31   */     mul r0.x, r14.w, c255.w
               + movs r6._, r0.w
/*   32   */     add r16.xy, -r4.w, c7.xy
               + adds_prev r0.w, c9.x
/*   33   */     add r11.xy, -r7.w, c8.xy
               + subsc r16.z, c6.x, r0.w
/*   34   */     mul r8.xw, r11.xy, r11.xy
               + subsc r16.w, c6.y, r0.w
/*   35   */     dp2add r7.w, r16.wy, r16.wy, r8.w
/*   36   */     dp2add r4.w, r16.zx, r16.zx, r8.x
/*    3.0 */     exec
/*   37   */     mul r15.x, -r11.w, r0.z
               + rsq r10.x, r4_abs.w
/*   38   */     mul r13.x, -r12.w, r1.z
               + rsq r10.y, r7_abs.w
/*   39   */     add r1.xyz, r6.xyz, r6.xyz
/*   40   */     add r15.yzw, c15.xxyz, c0.x
/*   41   */     sgt r0.z, r4.z, c253.x
               + movs r6._, -c13.x
/*   42   */     mul r4.xyz, r1.xyz, r5.xyz
               + adds_prev r10.z, c252.y
/*    3.1 */     exec
/*   43   */     mul r17.xyz, r5.xyz, c255.xyz
               + addsc r6.y, c254.x, r0.y
/*   44   */     sgt r0.w, c254.x, r14.w
               + addsc r6.x, c254.y, r0.x
/*   45   */     dp3 r6.z, r17.zxy, r1.zxy
               + mulsc r6.y, c2.x, r6.y
/*   46   */     max r6.z, r6.z, c253.y
               + frcs r6.x, r6.x
/*   47   */     min r1.w, r6.z, c254.x
               + movs r6._, r0.x
/*   48   */     mul r13.yzw, r6.y, r13.yyzw
               + adds_prev r6.x, -r6.x
/*    4.0 */     exec
/*   49   */     mul r16, r16.yxzw, r10.yxxy
               + addsc r6.x, c253.z, r6.x
/*   50   */     mul r6.yz, r16.yyx, r12.z
               + exp r6.x, r6.x
/*   51   */     mad r5.xy, r16.wz, r11.z, r6.zy
/*   52   */     mul r6.xyz, r6.x, r14.xyz
/*   53   */     add r13, r15, r13
/*   54   */     cndgt r0.xyw, r0.w, r6.xyz, r14.xyz
/*    4.1 */     exec
/*   55   */     mad r6.y, -r9.z, r2.z, r13.x
/*   56   */     add r1.xyz, r13.yzw, r7.xyz
               + subsc r12.z, c254.x, r6.y
/*   57   */     mul r2.xy, r12.xz, r12.yz
/*   58   */     muls r11.z, r2.yy
/*   59   */     mul r6.xyz, r11.xzy, r10.xzy
               + movs r6._, r2.x
/*   60   */     mul r2.xy, r6.xz, r9.x
               + muls_prev r8.x, r0.z
/*    5.0 */     exec
/*   61   */     add_sat r0.z, r5.y, r2.x
               + addsc_sat r6.x, c13.x, r6.y
/*   62   */     mul r0.xyw, r1.w, r0.xyw
               + movs r6._, r5.x
/*   63   */     mul r0.xyw, r0.xyw, r6.x
               + adds_prev_sat r8.w, r2.y
/*   64   */     mul r6.xy, r8.xy, r3.xy
               + mulsc r2.x, c254.z, r0.x
/*   65   */     mul r6.xz, r6.yx, r8.wz
               + mulsc r2.y, c254.z, r0.w
/*   66   */     mul r6.y, r6.z, r0.z
               + mulsc r2.w, c254.z, r0.y
/*    5.1 */     exec
/*   67   */     dp2add r2.z, r6.yx, c5.xy, c253.w
/*   68   */     mul r0.xyz, r2.xwy, c12.z
               + mulsc r7.x, c3.x, r6.y
/*   69   */     mul r7.zw, r6.yyyx, c4.xxxy
               + mulsc r7.y, c3.y, r6.x
/*   70   */     add r2.xy, r7.xz, r7.yw
               + movs r6._, r5.w
/*   71   */     mad r0.xyz, r4.xyz, r2.xyz, r0.xyz
/*   72   */     mad r0.xyz, r4.xyz, r1.xyz, r0.xyz
/*    6.0 */     exece
/*   73   */     mul oC0.xyz, r0.xyz, c14.x
               + muls_prev oC0.w, r6.w
/*    6.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xy
// [6] color0 r6.xyzw
// [7] color1 r7.xyz

