//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $matvalue      c2       1
//   $fresnelterm   c3       1
//   $compressedhdr c4       1
//   $diff          s0       1
//   $lmap          s1       1
//   $bump          s2       1
//   $spec          s3       1
//   $screenshadmap s4       1
//   $envmap        s5       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s2
defconst $compressedhdr, float, vector, [1, 2], c4
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c3
defconst $invscreensize, float, vector, [1, 2], c1
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c2
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $spec, sampler2d, object, [1, 1], s3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=8
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=5

// interpolators: 5 interpolants: 5, components: 20
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_color_centroid r4

def c252, 0, 0, 0, 0
def c253, 2, 1, -127.5, 0.150000006
def c254, 0.5, 3.29999995, -1, 1.5
def c255, 0.143999994, 0.298999995, 0.587000012, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    6   */     mul r5.yw, r5_abs.xxy, c1.xxy
/*    7   */     tfetch2D r5.y_w_, r3.xy, tf2, FetchValidOnly=false
/*    8   */     tfetch2D r5._w__, r5.yw, tf4, FetchValidOnly=false
/*    9   */     serialize
                 mad r7.xy, r5.xz, c253.x, c254.z
/*   10   */     mul r6.yz, r7.xxy, r7.xxy
               + mulsc r6.x, c254.x, r5.y
/*   11   */     add r5.xy, -r6.xy, c253.y
/*    1.0 */     exec
/*   12   */     add r5.z, r5.y, -r6.z
/*   13   */     mul r7.z, r1.w, r1.w
               + sqrt r7.w, r5_abs.z
/*   14   */     dp3 r6.x, r7.wxy, r0.zxy
/*   15   */     dp3 r6.z, r7.wxy, r1.zxy
/*   16   */     dp3 r6.y, r7.wxy, r2.zxy
/*   17   */     mul r5.z, r6.y, r2.w
               + muls r7.x, r0.ww
/*    1.1 */     exec
/*   18   */     mad r5.z, r6.z, r1.w, r5.z
/*   19   */     mad r7.y, r6.x, r0.w, r5.z
/*   20   */     add r7.xy, r7.xy, r7.zy
/*   21   */     mad r5.z, r2.w, r2.w, r7.x
/*   22   */     add r6.w, -c3.x, c253.x
               + rsq r5.z, r5_abs.z
/*   23   */     mul r8.y, r5.z, r1.w
               + movs r4._, r5.z
/*    2.0 */     exec
/*   24   */     mul r8.z, r5.z, r2.w
               + muls_prev r8.x, r0.w
/*   25   */     dp3 r0.x, -r8.zxy, r6.yxz
/*   26   */     subsc r5.z, c253.y, r0.x
/*   27   */     muls r5.z, r5.zz
/*   28   */     muls r7.z, r5.zz
/*   29   */     mul r6, r7.yyyz, r6
/*    2.1 */     exec
/*   30   */     add r1.y, -r6.z, r1.w
               + movs r4._, -r6.x
/*   31   */     add r1.z, -r6.y, r2.w
               + adds_prev r1.x, r0.w
/*   32   */     dp3 r0.x, r1.zxy, r1.zxy
/*   33   */     rsq r0.x, r0_abs.x
/*   34   */     mul r0.xyz, r1.xyz, r0.x
/*   35   */     cube r0, r0.zzxy, r0.yxz
/*    3.0 */     exec
/*   36   */     mov r2.z, r0.w
               + rcp r1.x, r0_abs.z
/*   37   */     mad r2.xy, r0.yx, r1.x, c254.w
/*   38   */     tfetch2D r1._xyz, r3.zw, tf1
/*   39   */     tfetch2D r0._xyz, r3.xy, tf3
/*   40   */     tfetchCube r7, r2.xyz, tf5
/*   41   */     tfetch2D r2.xywz, r3.xy, tf0
/*    3.1 */     exec
/*   42   */     serialize
                 mul oC0.w, r2.z, r4.w
/*   43   */     mul r1.x, r7.w, c255.w
/*   44   */     add r4.xyw, r4.xyz, r4.xyz
               + mulsc r3.x, c254.x, r0.y
/*   45   */     mul r8.xyz, r4.xyw, r2.xyw
               + mulsc r3.y, c0.x, r1.y
/*   46   */     sgt r0.x, c253.y, r7.w
               + mulsc r3.z, c0.x, r1.z
/*   47   */     add r4.z, r1.x, c254.x
               + mulsc r3.w, c0.x, r1.w
/*    4.0 */     exec
/*   48   */     dp3 r2.z, r8.zxy, c255.xyz
               + frcs r4.z, r4.z
/*   49   */     mul r2.xyw, r3.yzw, r2.xyw
               + movs r3.y, r2.z
/*   50   */     add r4.z, r1.x, -r4.z
               + movs r3.z, c253.w
/*   51   */     add r1.x, r4.z, c253.z
               + maxs r4.z, r3.yz
/*   52   */     min r4.z, r4.z, c253.y
               + exp r1.x, r1.x
/*   53   */     mul r8.xyz, r1.x, r7.xyz
               + mulsc r3.y, c254.x, r0.z
/*    4.1 */     exec
/*   54   */     cndgt r7.xyz, r0.x, r8.xyz, r7.xyz
/*   55   */     mul r6.xyz, r4.z, r7.xyz
               + mulsc r3.z, c254.x, r0.w
/*   56   */     add_sat r4.z, r6.w, c3.x
               + movs r4._, r2.x
/*   57   */     mul r0.yzw, r6.xxyz, r4.z
               + muls_prev r0.x, r4.x
/*   58   */     mul r0.yzw, r0.yyzw, r3.xxyz
               + movs r4._, r2.y
/*   59   */     mul r3.xyz, r0.yzw, c254.y
               + muls_prev r0.y, r4.y
/*    5.0 */     exece
/*   60   */     mul r2.xyz, r3.xyz, c2.z
               + movs r4._, r2.w
/*   61   */     mul r4.xyz, r2.xyz, r1.yzw
               + muls_prev r0.z, r4.w
/*   62   */     mad r4.xyz, r0.xyz, r5.x, r4.xyz
/*   63   */     mul oC0.xyz, r4.xyz, c4.x
/*    5.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x001f SamplingPattern 0x000f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] color0 r4.xyzw

