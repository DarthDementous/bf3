      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006003 00001200     	EXEC ADDR(0x3) CNT(0x6) BOOL_ADDR(0x80)
03: c8030400 00b0b000 a2000000	      ALU:	MAXv	R0.xy__ = R0.xyyy, C256.xyyy
04: c80f0403 0000a000 a2030000	      ALU:	MAXv	R3 = R3, C256.xyxy
05: c80f0402 0000a000 a2020000	      ALU:	MAXv	R2 = R2, C256.xyxy
06: c80f0401 0000a000 a2010000	      ALU:	MAXv	R1 = R1, C256.xyxy
07: c8030400 00b01a00 a3000000	      ALU:	MINv	R0.xy__ = R0.xyyy, C256.zwww
08: c80f0406 00000a00 a3010000	      ALU:	MINv	R6 = R1, C256.zwzw
      05506009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: c80f0405 00000a00 a3020000	      ALU:	MINv	R5 = R2, C256.zwzw
0a: c80f0402 00000a00 a3030000	      ALU:	MINv	R2 = R3, C256.zwzw
0b: 10080001 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R0.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: b8081041 1f1ff688 00004000	      FETCH:	SAMPLE	R1.xyzw = R2.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 10082041 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R2.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: b80830a1 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R5.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0095600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: 100850a1 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 100870c1 1f1ff688 00004000	      FETCH:	SAMPLE	R7.xyzw = R6.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: b80860c1 1f1ff688 00004000	      FETCH:	SAMPLE	R6.xyzw = R6.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: c80f0406 00000000 e0070600	   (S)ALU:	ADDv	R6 = R7, R6
13: c80f0405 00000000 e0060500	      ALU:	ADDv	R5 = R6, R5
14: c80f0403 00000000 e0050300	      ALU:	ADDv	R3 = R5, R3
      00005015 00002200     	EXEC_END ADDR(0x15) CNT(0x5) BOOL_ADDR(0x80)
15: c80f0402 00000000 e0030200	      ALU:	ADDv	R2 = R3, R2
16: c80f0401 00000000 e0020100	      ALU:	ADDv	R1 = R2, R1
17: c80f0401 00000000 e0010000	      ALU:	ADDv	R1 = R1, R0
18: c80f0401 01006c00 ab01ff00	      ALU:	MULADDv	R1 = -R0, R1, C511.xxxx
19: c80f8000 00001b00 eb010400	      ALU:	MULADDv	export0 = R0, R1, R4.wwww	; COLOR
      00000000 00000000     	NOP
