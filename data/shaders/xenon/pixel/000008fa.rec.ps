      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 10007081 1f1ffff8 00004000	      FETCH:	SAMPLE	R7.x___ = R4.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 14060506 00bcbc1b a1860103	   (S)ALU:	MULv	R6._yz_ = abs(R6).xxyy, C257.xxyy
07: 04180606 00b16cc6 0102ff0a	      ALU:	MULv	R6.___w = C258.yyyy, C511.xxxx
                          						    	ADD_PREVs	R6.x___ = C266.zzzz
08: c8040509 016cb11b ab070206	      ALU:	MULADDv	R9.__z_ = -R6.wwww, R7.xxxx, C258.yyyy
09: b08c000a 046cac83 a006090a	      ALU:	ADDv	R10.__zw = -R6.xxxx, C265.xxxy
                          						    	ADD_CONST_0	R0.___w = C266.y, R2.w
0a: b8180a06 00bebe43 d0000008	      ALU:	DOT3v	R6.___w = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R10.x___ = C264.x, R0.w
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 08110607 001b6cc6 a0010a03	      ALU:	ADDv	R7.x___ = R1.wwww, C266.xxxx
                          						    	MULs	R6.x___ = R3.zzzz
0c: b8230a07 046cb083 80070708	      ALU:	ADDv	R7.xy__ = -R7.xxxx, C263.xyyy
                          						    	SUB_CONST_0	R10._y__ = C264.y, R0.w
0d: 58830708 00b0b01b e1070786	      ALU:	MULv	R8.xy__ = R7.xyyy, R7.xyyy
                          						    	RECIPSQ_IEEE	R7.___w = abs(R6).wwww
0e: c8080506 001919b1 f10a0a08	      ALU:	DOT2ADDv	R6.___w = R8.yyyy, R10.ywww, R10.ywww
0f: c8040508 00c4c46c f10a0a08	      ALU:	DOT2ADDv	R8.__z_ = R8.xxxx, R10.xzzz, R10.xzzz
10: 58140907 001b1bc6 a1070288	      ALU:	MULv	R7.__z_ = R7.wwww, C258.wwww
                          						    	RECIPSQ_IEEE	R9.x___ = abs(R8).zzzz
      05406011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 582c0907 0006ac1b e1070086	      ALU:	MULv	R7.__zw = R7.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R9._y__ = abs(R6).wwww
12: c80f0500 009e8e00 e1070900	      ALU:	MULv	R0 = R7.zxwy, R9.zxzy
13: c8030508 00c4b000 e0000400	      ALU:	ADDv	R8.xy__ = R0.xzzz, R4.xyyy
14: b8287081 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R4.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: 643860c1 1f1fffdf 00004000	      FETCH:	SAMPLE	R6._w__ = R6.yzy CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 10184101 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R8.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: c8010506 00c6c66c eb020206	   (S)ALU:	MULADDv	R6.x___ = R6.xxxx, R2.zzzz, R2.zzzz
18: c8010506 00c6c66c eb010106	      ALU:	MULADDv	R6.x___ = R6.xxxx, R1.zzzz, R1.zzzz
19: 58840700 00b16c6c a106ff86	      ALU:	MULv	R0.__z_ = R6.yyyy, C511.xxxx
                          						    	RECIPSQ_IEEE	R7.___w = abs(R6).xxxx
1a: c8010508 001bc600 e1070300	      ALU:	MULv	R8.x___ = R7.wwww, R3.zzzz
1b: c8070506 00c0c000 e0050500	      ALU:	ADDv	R6.xyz_ = R5.xyzz, R5.xyzz
1c: c8070507 00c06c00 a1070000	      ALU:	MULv	R7.xyz_ = R7.xyzz, C256.xxxx
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: c8070503 00c0c000 e1060400	      ALU:	MULv	R3.xyz_ = R6.xyzz, R4.xyzz
1e: 40120508 001bc6c6 e1070288	      ALU:	MULv	R8._y__ = R7.wwww, R2.zzzz
                          						    	LOG_IEEE	R5.x___ = abs(R8).zzzz
1f: 40210500 001bc61b e1070186	      ALU:	MULv	R0.x___ = R7.wwww, R1.zzzz
                          						    	LOG_IEEE	R5._y__ = abs(R6).wwww
20: c8030505 00b0c400 a1050300	      ALU:	MULv	R5.xy__ = R5.xyyy, C259.xzzz
21: 381f0501 000dad6c e10a0905	      ALU:	MULv	R1 = R10.yxzw, R9.yxxy
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
22: 38230500 00196cb1 e1000005	      ALU:	MULv	R0.xy__ = R0.ywww, R0.xxxx
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c9020502 00186db1 f1010800	      ALU:	DOT2ADDv	R2._y__ = R0.yyyy, R1.xwww, R8.yxxx CLAMP
24: c9010502 00c56d6c f1010800	      ALU:	DOT2ADDv	R2.x___ = R0.xxxx, R1.yzzz, R8.yxxx CLAMP
25: c9030500 00b01900 a1050300	      ALU:	MULv	R0.xy__ = R5.xyyy, C259.ywww CLAMP
26: c8070500 04cdc600 a000ff00	      ALU:	ADDv	R0.xyz_ = -R0.yxzz, C511.zzzz
27: a84b0201 00c0c041 c1070406	      ALU:	MULv	R1.xy_w = R7.xyzz, R4.xyzz
                          						    	MUL_CONST_0	R2.__z_ = C262.x, R0.y
28: a8830205 006db080 c1020006	      ALU:	MULv	R5.xy__ = R2.yxxx, R0.xyyy
                          						    	MUL_CONST_0	R2.___w = C262.y, R0.x
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c8040501 001ab0b1 d10202ff	      ALU:	DOT2ADDv	R1.__z_ = C511.yyyy, R2.zwww, R2.xyyy
2a: ac170602 0010c045 c1010604	      ALU:	MULv	R2.xyz_ = R1.xyww, R6.xyzz
                          						    	MUL_CONST_1	R6.x___ = C260.x, R5.y
2b: ac2c0606 0071ac84 81050504	      ALU:	MULv	R6.__zw = R5.yyyx, C261.xxxy
                          						    	MUL_CONST_1	R6._y__ = C260.y, R5.x
2c: c8030501 00c41900 e0060600	      ALU:	ADDv	R1.xy__ = R6.xzzz, R6.ywww
2d: 14070501 00c0c01b e1030104	      ALU:	MULv	R1.xyz_ = R3.xyzz, R1.xyzz
2e: c8070500 00c0c6c0 eb020001	      ALU:	MULADDv	R0.xyz_ = R1.xyzz, R2.xyzz, R0.zzzz
      0000102f 00002200     	EXEC_END ADDR(0x2f) CNT(0x1) BOOL_ADDR(0x80)
2f: 0c878000 00c06c1b a1000b05	      ALU:	MULv	export0.xyz_ = R0.xyzz, C267.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
      00000000 00000000     	NOP
