//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $apptime       c14      1
//   $compressedhdr c15      1
//   $lmap          s0       1
//   $incan         s1       1
//   $screenshadmap s2       1
//   $envmap        s3       1
//   $frametexture  s4       1
//   $noisetex      s5       1
//   $bump          s6       1
//   $diff          s7       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c14
defconst $bump, sampler2d, object, [1, 1], s6
defconst $compressedhdr, float, vector, [1, 2], c15
defconst $diff, sampler2d, object, [1, 1], s7
defconst $envmap, samplercube, object, [1, 1], s3
defconst $frametexture, sampler2d, object, [1, 1], s4
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s1
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s0
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $noisetex, sampler3d, object, [1, 1], s5
defconst $screenshadmap, sampler2d, object, [1, 1], s2
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=16
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=6

// interpolators: 6 interpolants: 6, components: 24
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4
dcl_color_centroid r5

def c252, 2, -127.5, 10, 0.150000006
def c253, -1, 0, 1.5, 0.0529999994
def c254, 0.5, 1, 5, 3.29999995
def c255, 0.298999995, 0.587000012, 0.143999994, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     mul r8.z, c14.x, c254.x
               + movs r8.x, r4.x
/*    8   */     mul r6.xy, r6_abs.xy, c3.xy
               + movs r8.y, r4.y
/*    9   */     tfetch2D r6.___w, r6.xy, tf2, FetchValidOnly=false
/*   10   */     tfetch2D r7.__yw, r4.xy, tf6, FetchValidOnly=false
/*   11   */     tfetch3D r7.x___, r8.xyz, tf5, FetchValidOnly=false
/*   12   */     serialize
                 addsc r8.x, c11.y, r1.w
/*    1.0 */     exec
/*   13   */     add r7.y, r2.w, c11.z
               + movs r5._, r0.w
/*   14   */     mul r6.xyz, r2.zwz, r2.zw
               + adds_prev r3.z, c11.x
/*   15   */     add r14.xy, -r7.y, c10.xy
               + subsc r7.y, -c254.y, -r7.x
/*   16   */     add r8.yz, -r8.x, c9.xxy
               + rcp r8.x, r3.w
/*   17   */     mad r6.xyz, r1.zwz, r1.zw, r6.xyz
/*   18   */     mul r3.xy, r8.x, r3.yx
               + subsc r14.z, c8.x, r3.z
/*    1.1 */     exec
/*   19   */     mad r9.xyz, r0.zwz, r0.wwz, r6.zyx
/*   20   */     mul r6.xy, r8.yz, r8.yz
               + subsc r14.w, c8.y, r3.z
/*   21   */     dp2add r10.w, r14.wy, r14.wy, r6.y
/*   22   */     dp2add r15.x, r14.zx, r14.zx, r6.x
/*   23   */     add r9.x, r9.x, r9.x
               + rsq r9.y, r9_abs.y
/*   24   */     add r6.xyz, r7.yzw, r7.xzw
               + rsq r9.z, r9_abs.z
/*    2.0 */     exec
/*   25   */     mul r7.xzw, r9.zyyx, r2.zwwz
/*   26   */     mul r10.xyz, r9.xzy, r1.zzw
               + subsc r3.z, c254.y, r3.x
/*   27   */     mul r9.xyw, r9.xyz, r0.zwz
               + addsc r11.z, c253.x, r6.y
/*   28   */     mul r3.w, -r9.y, r0.z
               + addsc r11.w, c253.x, r6.z
/*   29   */     add r12.z, -r7.w, r2.w
               + rsq r11.x, r15_abs.x
/*   30   */     add r12.x, -r9.x, r0.w
               + rsq r11.y, r10_abs.w
/*    2.1 */     exec
/*   31   */     mul r8.xw, r6.wx, c254.xz
               + movs r5._, -r10.x
/*   32   */     mul r13, r8.yzw, r11
               + adds_prev r12.y, r1.w
/*   33   */     dp3 r0.x, r12.zxy, r12.zxy
               + movs r5._, -r10.z
/*   34   */     mul r0.zw, r13.zzzw, c253.w
               + muls_prev r0.y, r1.z
/*   35   */     add r1.xyw, r3.yzw, r0.zwy
               + rsq r0.x, r0_abs.x
/*   36   */     mul r0.xyz, r12.xyz, r0.x
/*    3.0 */     exec
/*   37   */     cube r0, r0.zzxy, r0.yxz
/*   38   */     mov r3.z, r0.w
               + rcp r1.z, r0_abs.z
/*   39   */     mad r3.xy, r0.yx, r1.z, c253.z
/*   40   */     tfetch2D r6.xyz_, r4.zw, tf0
/*   41   */     tfetch2D r15._xyz, r4.xy, tf1
/*   42   */     tfetch2D r0.x_yz, r1.xy, tf4
/*    3.1 */     exec
/*   43   */     tfetchCube r12, r3.xyz, tf3
/*   44   */     tfetch2D r3, r4.xy, tf7
/*   45   */     serialize
                 add r7.w, -c13.x, c252.x
/*   46   */     add r4.xzw, r5.xyyz, r5.xyyz
               + movs r5._, c1.x
/*   47   */     mul r16.xyz, r3.xyz, c255.xyz
               + muls_prev r4.y, c252.z
/*   48   */     mul r9.xyz, r4.xzw, r3.xyz
               + movs r5.x, r12.w
/*    4.0 */     exec
/*   49   */     dp3 r0.y, r16.zxy, r4.wxz
               + mulsc r4.x, c255.w, r5.x
/*   50   */     add r5.xy, r4.xy, c254.xy
/*   51   */     sgt r5.z, c254.y, r12.w
               + movs r10.x, r0.y
/*   52   */     frc r0.y, r5.x
               + mulsc r5.y, c2.x, r5.y
/*   53   */     add r5.x, r4.x, -r0.y
               + log r15.x, r15_abs.x
/*   54   */     mul r4.xyz, r5.y, r15.yzw
               + log r15.y, r10_abs.w
/*    4.1 */     exec
/*   55   */     mad r4.xyz, r6.xyz, c0.x, r4.xyz
/*   56   */     mul r1.xy, r15.xy, c4.xz
               + addsc r5.y, c252.y, r5.x
/*   57   */     mul r11, r14.yxzw, r11.yxxy
               + exp r5.x, r1.x
/*   58   */     mul r10.zw, r13.xxxy, r10.y
               + exp r5.y, r5.y
/*   59   */     mul r13.xyz, r5.y, r12.xyz
               + exp r5.y, r1.y
/*   60   */     cndgt r1.xyz, r5.z, r13.xyz, r12.xyz
/*    5.0 */     exec
/*   61   */     mul_sat r5.yz, r5.xxy, c4.yyw
               + movs r10.y, c252.w
/*   62   */     mad r10.zw, r11.zzzw, r9.w, r10.zzzw
/*   63   */     mad_sat r7.xy, r11.yx, r7.x, r10.zw
/*   64   */     mad r5.x, -r7.z, r2.z, r1.w
/*   65   */     add r5.xyz, -r5.xyz, c254.y
               + maxs r0.y, r10.xy
/*   66   */     min r1.w, r0.y, c254.y
               + muls r0.y, r5.xx
/*    5.1 */     exec
/*   67   */     mul r4.xyz, r9.xzy, r4.xzy
               + mulsc r2.y, c7.x, r5.y
/*   68   */     mul r5.xy, r7.yx, r5.zy
               + mulsc r2.z, c7.y, r5.z
/*   69   */     dp2add r7.z, r5.yx, c6.xy, c253.y
/*   70   */     mul r1.xyz, r1.w, r1.xyz
               + mulsc r2.x, c5.x, r5.y
/*   71   */     mul r2.zw, r2.yyyz, r7.xxxy
               + mulsc r2.y, c5.y, r5.x
/*   72   */     add r7.xy, r2.xz, r2.yw
               + muls r9.w, r0.yy
/*    6.0 */     exec
/*   73   */     mul r2, r9.xzyw, r7
               + subsc r0.y, c254.y, r8.x
/*   74   */     mad r2.xyz, r4.xyz, r0.y, r2.xyz
/*   75   */     addsc_sat r0.y, c13.x, r2.w
/*   76   */     mul r1.yzw, r1.xxyz, r0.y
               + mulsc r1.x, c15.y, r0.x
/*   77   */     mul r4.xyz, r1.yzw, c254.w
               + mulsc r1.y, c15.y, r0.z
/*   78   */     mul r4.xyz, r4.xyz, c12.z
               + mulsc r1.z, c15.y, r0.w
/*    6.1 */     exece
/*   79   */     mad r0.xyz, r4.xzy, r6.xzy, r2.xyz
/*   80   */     add r0.xyz, r0.xyz, -r1.xzy
               + movs r5._, r3.w
/*   81   */     mad r0.xyz, r0.xzy, c14.x, r1.xyz
/*   82   */     mul oC0.xyz, r0.xyz, c15.x
               + muls_prev oC0.w, r5.w

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x003f SamplingPattern 0x001f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyzw
// [5] color0 r5.xyzw

