//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $matvalue      c12      1
//   $fresnelterm   c13      1
//   $compressedhdr c14      1
//   $diff          s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $bump          s3       1
//   $screenshadmap s4       1
//   $envmap        s5       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c14
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c13
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=13
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=5

// interpolators: 5 interpolants: 5, components: 20
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_color_centroid r4

def c252, 2, 0.150000006, 0, 0
def c253, 0.5, 1.5, -1, 10
def c254, -127.5, 1, 0, 3.29999995
def c255, 0.298999995, 0.587000012, 0.143999994, 255


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    8   */     mul r5.xy, r5_abs.xy, c3.xy
/*    9   */     tfetch2D r6._yw_, r3.xy, tf3, FetchValidOnly=false
/*   10   */     tfetch2D r5._w__, r5.xy, tf4, FetchValidOnly=false
/*   11   */     serialize
                 mul r5.x, r1.w, r1.w
               + muls r6.w, r2.ww
/*   12   */     mad r6.x, r0.w, r0.w, r5.x
/*   13   */     add r5.xzw, r6.yxxz, r6.ywwz
/*    1.0 */     exec
/*   14   */     add r6.xy, r5.xw, c253.z
/*   15   */     mul r7.xy, r6.xy, r6.xy
               + mulsc r7.z, c253.x, r5.y
/*   16   */     add r5.xw, -r7.xz, c254.y
/*   17   */     add r5.y, r5.x, -r7.y
/*   18   */     add r13.xyz, r4.xyz, r4.xyz
               + sqrt r6.z, r5_abs.y
/*   19   */     dp3 r9.x, r6.zxy, r0.zxy
/*    1.1 */     exec
/*   20   */     dp3 r9.y, r6.zxy, r1.zxy
/*   21   */     dp3 r9.z, r6.zxy, r2.zxy
               + rsq r9.w, r5_abs.z
/*   22   */     mul r10.xy, r9.zw, r2.w
/*   23   */     mul r6.xw, r9.xw, r0.w
/*   24   */     mul r10.zw, r9.yyyw, r1.w
/*   25   */     add r4.x, r6.x, r10.z
/*    2.0 */     exec
/*   26   */     add r4.y, r4.x, r10.x
/*   27   */     add r4.x, r0.w, c11.x
               + adds r4.y, r4.yy
/*   28   */     mul r5.xyz, r4.y, r9.xzy
/*   29   */     add r7.y, -r5.z, r1.w
               + movs r4._, -r5.x
/*   30   */     add r7.z, -r5.y, r2.w
               + adds_prev r7.x, r0.w
/*   31   */     dp3 r4.y, r7.zxy, r7.zxy
/*    2.1 */     exec
/*   32   */     mul r1.x, c1.x, c253.w
               + rsq r4.y, r4_abs.y
/*   33   */     mul r0.xyz, r7.xyz, r4.y
/*   34   */     cube r0, r0.zzxy, r0.yxz
/*   35   */     mov r7.z, r0.w
               + rcp r4.y, r0_abs.z
/*   36   */     mad r7.xy, r0.yx, r4.y, c253.y
/*   37   */     tfetch2D r5.xyz_, r3.zw, tf1
/*    3.0 */     exec
/*   38   */     tfetch2D r12.xyz_, r3.xy, tf2
/*   39   */     tfetchCube r11, r7.xyz, tf5
/*   40   */     tfetch2D r0, r3.xy, tf0
/*   41   */     serialize
                 add r4.y, r1.w, c11.y
               + movs r4._, r2.w
/*   42   */     add r7.xy, -r4.y, c9.xy
               + adds_prev r4.z, c11.z
/*   43   */     add r1.zw, -r4.x, c8.xxxy
               + subsc r7.z, c10.x, r4.z
/*    3.1 */     exec
/*   44   */     mul r4.xy, r1.wz, r1.wz
               + subsc r7.w, c10.y, r4.z
/*   45   */     dp2add r4.x, r7.yw, r7.yw, r4.x
/*   46   */     dp2add r4.y, r7.xz, r7.xz, r4.y
/*   47   */     mul r1.y, r11.w, c255.w
               + rsq r2.x, r4_abs.y
/*   48   */     add r4.z, r1.y, c253.x
               + rsq r2.y, r4_abs.x
/*   49   */     frc r4.z, r4.z
               + log r4.y, r4_abs.y
/*    4.0 */     exec
/*   50   */     add r1.y, r1.y, -r4.z
               + log r4.x, r4_abs.x
/*   51   */     mul r8.xy, r1.zw, r2.xy
/*   52   */     mul r3.xyz, r0.xyz, c255.xyz
/*   53   */     mul r6.xyz, r13.xyz, r0.xyz
/*   54   */     sgt r1.w, c254.y, r11.w
/*   55   */     dp3 r4.z, r3.zxy, r13.zxy
               + mulsc r3.x, c4.x, r4.y
/*    4.1 */     exec
/*   56   */     max r2.z, r4.z, c252.y
               + addsc r4.z, c254.x, r1.y
/*   57   */     mul r7, r7.yxzw, r2.yxxy
               + addsc r1.x, c254.y, r1.x
/*   58   */     mul r2.x, r1.x, c2.x
               + exp r4.z, r4.z
/*   59   */     mul r1.xyz, r4.z, r11.xyz
               + mulsc r4.z, c4.z, r4.x
/*   60   */     mul r2.xyw, r2.x, r12.xyz
               + exp r4.y, r3.x
/*   61   */     mad r3.xyz, r5.xyz, c0.x, r2.xyw
/*    5.0 */     exec
/*   62   */     cndgt r1.yzw, r1.w, r1.xxyz, r11.xxyz
/*   63   */     dp3 r4.x, r9.zxy, r9.zxy
               + exp r4.z, r4.z
/*   64   */     mul_sat r4.yz, r4.yyz, c4.yyw
               + rsq r4.x, r4_abs.x
/*   65   */     mul r2.xyw, r9.zxy, r4.x
/*   66   */     cndeq r10.xyz, c254.zy, -r6.w, -r10.yyw
/*   67   */     dp3 r4.x, r10.yzx, r9.zyx
/*    5.1 */     exec
/*   68   */     mul r0.xy, r8.xy, r2.y
               + movs r4._, -c13.x
/*   69   */     dp2add_sat r2.y, r7.xw, r2.wx, r0.y
/*   70   */     dp2add_sat r2.x, r7.yz, r2.wx, r0.x
/*   71   */     add r4.xyz, -r4.xyz, c254.y
               + adds_prev r2.w, c252.x
/*   72   */     min r2.z, r2.z, c254.y
               + muls r1.x, r4.xx
/*   73   */     mul r1.yzw, r2.z, r1.yyzw
               + mulsc r7.x, c7.x, r4.y
/*    6.0 */     exec
/*   74   */     mul r4.xy, r2.yx, r4.zy
               + mulsc r7.y, c7.y, r4.z
/*   75   */     dp2add r2.z, r7.xy, r2.xy, c254.z
/*   76   */     mul r3.xyz, r6.xzy, r3.xzy
               + mulsc r7.x, c5.x, r4.y
/*   77   */     mul r7.zw, r4.yyyx, c6.xxxy
               + mulsc r7.y, c5.y, r4.x
/*   78   */     add r2.xy, r7.xz, r7.yw
               + muls r6.w, r1.xx
/*   79   */     mul r2, r6, r2
/*    6.1 */     exec
/*   80   */     mad r0.xyz, r3.xzy, r5.w, r2.xyz
/*   81   */     addsc_sat r1.x, c13.x, r2.w
/*   82   */     mul r1.xyz, r1.yzw, r1.x
/*   83   */     mul r1.xyz, r1.xyz, c254.w
/*   84   */     mul r1.xyz, r1.xyz, c12.z
               + movs r4._, r0.w
/*   85   */     mad r0.xyz, r1.xyz, r5.xyz, r0.xyz
/*    7.0 */     exece
/*   86   */     mul oC0.xyz, r0.xyz, c14.x
               + muls_prev oC0.w, r4.w
/*    7.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x001f SamplingPattern 0x000f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] color0 r4.xyzw

