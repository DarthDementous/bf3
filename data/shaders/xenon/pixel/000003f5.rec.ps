      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: 14140101 006cb16c 210ffe06	      ALU:	MULv	R1.__z_ = C271.xxxx, C510.yyyy
                          						    	MAXs	R1.x___ = R6.xxxx
07: 142c0107 00acacb1 a1890606	      ALU:	MULv	R7.__zw = abs(R9).xxxy, C262.xxxy
                          						    	MAXs	R1._y__ = R6.yyyy
08: b800a0c1 1f1fffc7 00004000	      FETCH:	SAMPLE	R10._x__ = R6.zwz CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: b84010e1 1f1ff7ff 00004000	      FETCH:	SAMPLE	R1.___w = R7.zwz CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 1030b0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R11.xyz_ = R6.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 107090c1 1f1ff67f 00004000	      FETCH:	SAMPLE	R9.__yw = R6.xyx CONST(7) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0009600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: 90609021 1f1ffff8 00008000	      FETCH:	SAMPLE	R9.x___ = R1.xyz CONST(6) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 4c88000a 006c1b1b 2103fe05	   (S)ALU:	MULv	R10.___w = C259.xxxx, C510.wwww
                          						    	RECIP_IEEE	R0.___w = R5.wwww
0e: bc230905 011b6dc8 c10005fe	      ALU:	MULv	R5.xy__ = R0.wwww, R5.yxxx
                          						    	SUB_CONST_1	R9._y__ = -C510.z, -R9.x
0f: c8070801 00121e00 e0090900	      ALU:	ADDv	R1.xyz_ = R9.zyww, R9.zxww
10: b4140909 00bec080 900bfffd	      ALU:	DOT3v	R9.__z_ = R11.zxyy, C511.xyzz
                          						    	ADD_CONST_1	R9.x___ = C509.y, R1.x
11: b425090a 00b36d82 8101fefd	      ALU:	MULv	R10.x_z_ = R1.wyyy, C510.yxxx
                          						    	ADD_CONST_1	R9._y__ = C509.y, R1.z
      05506012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: bc4d050d 00c7aec4 c10a09fe	      ALU:	MULv	R13.x_zw = R10.wzzz, R9.zxxy
                          						    	SUB_CONST_1	R5.__z_ = C510.z, R5.x
13: c8030801 001a1bc5 ab0dff05	      ALU:	MULADDv	R1.xy__ = R5.yzzz, R13.zwww, C511.wwww
14: 101870e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R7.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: 1028c0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R6.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 10581021 1f1ffe88 00004000	      FETCH:	SAMPLE	R1.xyz_ = R1.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 108850c1 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R6.xyx CONST(8) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: c802080d 006c1b00 2101fe00	   (S)ALU:	MULv	R13._y__ = C257.xxxx, C510.wwww
19: c8080800 001b1b00 e1050800	      ALU:	MULv	R0.___w = R5.wwww, R8.wwww
1a: c8070806 00c0c000 e0080800	      ALU:	ADDv	R6.xyz_ = R8.xyzz, R8.xyzz
1b: c803080e 046cb000 a0040a00	      ALU:	ADDv	R14.xy__ = -R4.xxxx, C266.xyyy
1c: c80c080e 04b1ac00 a0040b00	      ALU:	ADDv	R14.__zw = -R4.yyyy, C267.xxxy
1d: c80c0804 04c6ac00 a0040c00	      ALU:	ADDv	R4.__zw = -R4.zzzz, C268.xxxy
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: c8080801 00bebe00 f0000000	      ALU:	DOT3v	R1.___w = R0.zxyy, R0.zxyy
1f: c8020804 00bebe00 f0020200	      ALU:	DOT3v	R4._y__ = R2.zxyy, R2.zxyy
20: c8010804 00bebe00 f0030300	      ALU:	DOT3v	R4.x___ = R3.zxyy, R3.zxyy
21: 58170401 00c0b16c a1011084	      ALU:	MULv	R1.xyz_ = R1.xyzz, C272.yyyy
                          						    	RECIPSQ_IEEE	R4.x___ = abs(R4).xxxx
22: 58270409 00c0b1b1 a10bfe84	      ALU:	MULv	R9.xyz_ = R11.xyzz, C510.yyyy
                          						    	RECIPSQ_IEEE	R4._y__ = abs(R4).yyyy
23: 58870105 00c0c01b e1060581	      ALU:	MULv	R5.xyz_ = R6.xyzz, R5.xyzz
                          						    	RECIPSQ_IEEE	R1.___w = abs(R1).wwww
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 14070806 00c0c0b1 e10b0804	      ALU:	MULv	R6.xyz_ = R11.xyzz, R8.xyzz
25: 0f120808 006cc6c6 e1040302	      ALU:	MULv	R8._y__ = R4.xxxx, R3.zzzz CLAMP
                          						    	MUL_PREVs	R8.x___ = R2.zzzz CLAMP
26: c9030804 00b06cb1 8b080e0e	      ALU:	MULADDv	R4.xy__ = C270.yyyy, R8.xyyy, C270.xxxx CLAMP
27: 281f0b08 00aaaa1b e1040402	      ALU:	MULv	R8 = R4.zwxy, R4.zwxy
                          						    	SETNEs	R11.x___ = R2.wwww
28: c8020808 001919b1 f10e0e08	      ALU:	DOT2ADDv	R8._y__ = R8.yyyy, R14.ywww, R14.ywww
29: c8010808 00c4c46c f10e0e08	      ALU:	DOT2ADDv	R8.x___ = R8.xxxx, R14.xzzz, R14.xzzz
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 401c0808 0006066c e1080888	      ALU:	MULv	R8.__zw = R8.zzzw, R8.zzzw
                          						    	LOG_IEEE	R8.x___ = abs(R8).xxxx
2b: 40290804 006dc6b1 a00dfe88	      ALU:	ADDv	R4.x__w = R13.yxxx, C510.zzzz
                          						    	LOG_IEEE	R8._y__ = abs(R8).yyyy
2c: 28230b08 00b0c41b a1080d03	      ALU:	MULv	R8.xy__ = R8.xyyy, C269.xzzz
                          						    	SETNEs	R11._y__ = R3.wwww
2d: 38120804 006c6c6c a1040208	      ALU:	MULv	R4._y__ = R4.xxxx, C258.xxxx
                          						    	EXP_IEEE	R8.x___ = R8.xxxx
2e: 3827080c 00b1c0b1 e1040c08	      ALU:	MULv	R12.xyz_ = R4.yyyy, R12.xyzz
                          						    	EXP_IEEE	R8._y__ = R8.yyyy
2f: c8070804 00c06cc0 ab07000c	      ALU:	MULADDv	R4.xyz_ = R12.xyzz, R7.xyzz, C256.xxxx
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: 15030808 00b0191b a1080d01	      ALU:	MULv	R8.xy__ = R8.xyyy, C269.ywww CLAMP
31: 0e830108 046dc6c6 a008fe00	      ALU:	ADDv	R8.xy__ = -R8.yxxx, C510.zzzz
                          						    	MUL_PREVs	R1.___w = R0.zzzz CLAMP
32: a8470700 00c0c049 c1090708	      ALU:	MULv	R0.xyz_ = R9.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R7.__z_ = C264.x, R8.y
33: a8280706 001b6c49 8204fd09	      ALU:	MAXv	R6.___w = R4.wwww, C509.xxxx
                          						    	MUL_CONST_0	R7._y__ = C265.x, R8.y
34: a82c0908 00067188 c1080809	      ALU:	MULv	R8.__zw = R8.zzzw, R8.yyyx
                          						    	MUL_CONST_0	R9._y__ = C265.y, R8.x
35: a843090c 001ab088 81080908	      ALU:	MULv	R12.xy__ = R8.zwww, C265.xyyy
                          						    	MUL_CONST_0	R9.__z_ = C264.y, R8.x
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: a8490c07 00c56c4a 81080708	      ALU:	MULv	R7.x__w = R8.yzzz, C263.xxxx
                          						    	MUL_CONST_0	R12.__z_ = C264.x, R8.z
37: a8890c09 0018b18b 81080708	      ALU:	MULv	R9.x__w = R8.xwww, C263.yyyy
                          						    	MUL_CONST_0	R12.___w = C264.y, R8.w
38: 140f0808 000dad1b e10c0b09	      ALU:	MULv	R8 = R12.yxzw, R11.yxxy
39: 0c160808 00c11cb1 e008080b	      ALU:	ADDv	R8._yz_ = R8.yyzz, R8.xxww
                          						    	MUL_PREVs	R8.x___ = R11.yyyy
3a: c8010808 001b6c6c eb070b08	      ALU:	MULADDv	R8.x___ = R8.xxxx, R7.wwww, R11.xxxx
3b: 40870803 00c01b1b e1090301	      ALU:	MULv	R3.xyz_ = R9.xyzz, R3.wwww
                          						    	LOG_IEEE	R8.___w = R1.wwww
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: c8070802 00b41bb4 eb070203	      ALU:	MULADDv	R2.xyz_ = R3.xzyy, R7.xzyy, R2.wwww
3d: c80f0808 008fff00 e1060800	      ALU:	MULv	R8 = R6.wxzy, R8.wxyz
3e: c80e0808 008c8c01 eb050208	      ALU:	MULADDv	R8._yzw = R8.yyzw, R5.xxzy, R2.xxzy
3f: 38170800 00c0c66c a100fd08	      ALU:	MULv	R0.xyz_ = R0.xyzz, C509.zzzz
                          						    	EXP_IEEE	R8.x___ = R8.xxxx
40: 14170800 00c06cb1 e100080a	      ALU:	MULv	R0.xyz_ = R0.xyzz, R8.xxxx
                          						    	MAXs	R8.x___ = R10.yyyy
41: b8170800 00c0c0c8 810004fe	      ALU:	MULv	R0.xyz_ = R0.xyzz, C260.xyzz
                          						    	SUB_CONST_0	R8.x___ = C510.z, R8.x
      00006042 00002200     	EXEC_END ADDR(0x42) CNT(0x6) BOOL_ADDR(0x80)
42: b8870100 00c06cc8 a10005fe	      ALU:	MULv	R0.xyz_ = R0.xyzz, C261.xxxx
                          						    	SUB_CONST_0	R1.___w = C510.z, R10.x
43: c8070800 00b4b4b4 eb050400	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R5.xzyy, R4.xzyy
44: c80e0808 001b8cd1 eb010008	      ALU:	MULADDv	R8._yzw = R8.yywz, R1.wwww, R0.xxzy
45: 140e0808 02d18c1b e0080100	      ALU:	ADDv	R8._yzw = R8.yywz, -R1.xxzy
46: c80e0808 00d16cfc ab080f01	      ALU:	MULADDv	R8._yzw = R1.xxyz, R8.yywz, C271.xxxx
47: 0c878000 00156c6c a1081008	      ALU:	MULv	export0.xyz_ = R8.yzww, C272.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R8.xxxx	; COLOR
