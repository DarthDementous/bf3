      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 100090a1 1f1fffc7 00004000	      FETCH:	SAMPLE	R9._x__ = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: 140c0605 00acac1b a1880b01	   (S)ALU:	MULv	R5.__zw = abs(R8).xxxy, C267.xxxy
06: 04810708 00b16c6c 0103ff0a	      ALU:	MULv	R8.x___ = C259.yyyy, C511.xxxx
                          						    	ADD_PREVs	R7.___w = C266.xxxx
07: c8040609 01b1b16c ab090308	      ALU:	MULADDv	R9.__z_ = -R8.xxxx, R9.yyyy, C259.yyyy
08: b08c000a 041bac83 a007070a	      ALU:	ADDv	R10.__zw = -R7.wwww, C263.xxxy
                          						    	ADD_CONST_0	R0.___w = C266.y, R2.w
09: b8180a07 00bebe43 d0000008	      ALU:	DOT3v	R7.___w = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R10.x___ = C264.x, R0.w
      0000600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: b41e090b 00fc6cc3 200e000a	      ALU:	ADDv	R11._yzw = C270.xxyz, C256.xxxx
                          						    	ADD_CONST_1	R9.x___ = C266.z, R3.w
0b: b8230a08 046cb083 80090908	      ALU:	ADDv	R8.xy__ = -R9.xxxx, C265.xyyy
                          						    	SUB_CONST_0	R10._y__ = C264.y, R0.w
0c: 58830809 00b0b01b e1080887	      ALU:	MULv	R9.xy__ = R8.xyyy, R8.xyyy
                          						    	RECIPSQ_IEEE	R8.___w = abs(R7).wwww
0d: c8080600 00b3b3b1 f10a0a09	      ALU:	DOT2ADDv	R0.___w = R9.yyyy, R10.wyyy, R10.wyyy
0e: c8080607 006e6e6c f10a0a09	      ALU:	DOT2ADDv	R7.___w = R9.xxxx, R10.zxxx, R10.zxxx
0f: 58140908 001b1b1b a1080387	      ALU:	MULv	R8.__z_ = R8.wwww, C259.wwww
                          						    	RECIPSQ_IEEE	R9.x___ = abs(R7).wwww
      05406010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: 582c0908 0006ac1b e1080080	      ALU:	MULv	R8.__zw = R8.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R9._y__ = abs(R0).wwww
11: c80f0608 00aaa600 e1080900	      ALU:	MULv	R8 = R8.zwxy, R9.zzxy
12: c8030600 00b0b000 e0080500	      ALU:	ADDv	R0.xy__ = R8.xyyy, R5.xyyy
13: 1028c0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: b838d0a1 1f1fffc8 00004000	      FETCH:	SAMPLE	R13.xy__ = R5.zwz CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: 10180001 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: c8070605 00c0c000 e0060600	   (S)ALU:	ADDv	R5.xyz_ = R6.xyzz, R6.xyzz
17: c8020606 006c1bc6 0b01ffff	      ALU:	MULADDv	R6._y__ = C511.zzzz, C257.xxxx, C511.wwww
18: 08170b05 00c0c0c6 e1050001	      ALU:	MULv	R5.xyz_ = R5.xyzz, R0.xyzz
                          						    	MULs	R11.x___ = R1.zzzz
19: c803060d 04b0b0c6 8b0d0cff	      ALU:	MULADDv	R13.xy__ = C511.zzzz, -R13.xyyy, C268.xyyy
1a: a8130608 00b0b045 e10d0402	      ALU:	MULv	R8.xy__ = R13.xyyy, R4.xyyy
                          						    	MUL_CONST_0	R6.x___ = C258.x, R6.y
1b: 081e0404 006cfcc6 e1060c02	      ALU:	MULv	R4._yzw = R6.xxxx, R12.xxyz
                          						    	MULs	R4.x___ = R2.zzzz
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: c80f0604 00000000 e00b0400	      ALU:	ADDv	R4 = R11, R4
1d: c8010606 00c6c66c eb030304	      ALU:	MULADDv	R6.x___ = R4.xxxx, R3.zzzz, R3.zzzz
1e: 582f0609 000dad6c e10a0986	      ALU:	MULv	R9 = R10.yxzw, R9.yxxy
                          						    	RECIPSQ_IEEE	R6._y__ = abs(R6).xxxx
1f: c8010601 00b1c600 e1060100	      ALU:	MULv	R1.x___ = R6.yyyy, R1.zzzz
20: 14010606 00b1c6b1 e1060306	      ALU:	MULv	R6.x___ = R6.yyyy, R3.zzzz
21: 0c230106 001a6cc6 e1080602	      ALU:	MULv	R6.xy__ = R8.zwww, R6.xxxx
                          						    	MUL_PREVs	R1._y__ = R2.zzzz
      00006022 00001200     	EXEC ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: c9020606 006fb0b1 f1090106	      ALU:	DOT2ADDv	R6._y__ = R6.yyyy, R9.wxxx, R1.xyyy CLAMP
23: c9010606 00b2b06c f1090106	      ALU:	DOT2ADDv	R6.x___ = R6.xxxx, R9.zyyy, R1.xyyy CLAMP
24: c8030606 006d6d00 e1080600	      ALU:	MULv	R6.xy__ = R8.yxxx, R6.yxxx
25: c8040602 006db0b1 910606ff	      ALU:	DOT2ADDv	R2.__z_ = C511.yyyy, R6.yxxx, C262.xyyy
26: a8170301 0015c045 e0040704	      ALU:	ADDv	R1.xyz_ = R4.yzww, R7.xyzz
                          						    	MUL_CONST_0	R3.x___ = C260.x, R6.y
27: a82c0303 0071ac84 a1060504	      ALU:	MULv	R3.__zw = R6.yyyx, C261.xxxy
                          						    	MUL_CONST_0	R3._y__ = C260.y, R6.x
      00004028 00002200     	EXEC_END ADDR(0x28) CNT(0x4) BOOL_ADDR(0x80)
28: c8030602 00c41900 e0030300	      ALU:	ADDv	R2.xy__ = R3.xzzz, R3.ywww
29: 14070600 00c0c01b e1050200	      ALU:	MULv	R0.xyz_ = R5.xyzz, R2.xyzz
2a: c8070600 00c0c0c0 eb050100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R5.xyzz, R1.xyzz
2b: 0c878000 00c06c1b a1000d06	      ALU:	MULv	export0.xyz_ = R0.xyzz, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.wwww	; COLOR
