      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 10000061 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R3.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: c8040500 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
07: 584c0004 007106c6 2101fe80	      ALU:	MULv	R4.__zw = C257.yyyx, C510.zzzw
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
08: c8080501 011bb1c6 ab000104	      ALU:	MULADDv	R1.___w = -R4.zzzz, R0.wwww, C257.yyyy
09: a8870006 00626202 c0050501	      ALU:	ADDv	R6.xyz_ = R5.zyxx, R5.zyxx
                          						    	MUL_CONST_0	R0.___w = C257.w, R0.z
0a: c8030500 001a6d00 e1000000	      ALU:	MULv	R0.xy__ = R0.zwww, R0.yxxx
      0554600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: c8030508 006d1bb0 eb000103	      ALU:	MULADDv	R8.xy__ = R3.xyyy, R0.yxxx, R1.wwww
0c: b8287061 1f1ffff8 00004000	      FETCH:	SAMPLE	R7.x___ = R3.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 10384081 1f1ffe88 00004000	      FETCH:	SAMPLE	R4.xyz_ = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: 10487101 1f1ffecf 00004000	      FETCH:	SAMPLE	R7._yw_ = R8.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: 10580101 1f1ff5c8 00004000	      FETCH:	SAMPLE	R0.xy_z = R8.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 10183101 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R8.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: c8080502 001b1b00 e1030500	   (S)ALU:	MULv	R2.___w = R3.wwww, R5.wwww
12: a8140805 00bebec3 d00101fe	      ALU:	DOT3v	R5.__z_ = R1.zxyy, R1.zxyy
                          						    	MUL_CONST_0	R8.x___ = C510.z, R0.w
13: c8030505 00c51bb1 8b07fdfd	      ALU:	MULADDv	R5.xy__ = C509.yyyy, R7.yzzz, C509.wwww
14: a8280805 0063c0c1 9000fffe	      ALU:	DOT3v	R5.___w = R0.wyxx, C511.xyzz
                          						    	MUL_CONST_0	R8._y__ = C510.z, R0.y
15: a84e0807 00fc6cc0 810400fe	      ALU:	MULv	R7._yzw = R4.xxyz, C256.xxxx
                          						    	MUL_CONST_0	R8.__z_ = C510.z, R0.x
16: 58470503 0015c0c6 e1070385	      ALU:	MULv	R3.xyz_ = R7.yzww, R3.xyzz
                          						    	RECIPSQ_IEEE	R5.__z_ = abs(R5).zzzz
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: c8080501 001b1bb1 cb0405fe	      ALU:	MULADDv	R1.___w = C510.yyyy, R4.wwww, R5.wwww
18: 08270701 00c6c06c e1050105	      ALU:	MULv	R1.xyz_ = R5.zzzz, R1.xyzz
                          						    	MULs	R7._y__ = R5.xxxx
19: 08470700 00c062b1 e1080405	      ALU:	MULv	R0.xyz_ = R8.xyzz, R4.zyxx
                          						    	MULs	R7.__z_ = R5.yyyy
1a: c80c0505 0471b100 a007fe00	      ALU:	ADDv	R5.__zw = -R7.yyyx, C510.yyyy
1b: c8080500 02c6c600 e0050700	      ALU:	ADDv	R0.___w = R5.zzzz, -R7.zzzz
1c: a0470500 00c06c1b a100fd80	      ALU:	MULv	R0.xyz_ = R0.xyzz, C509.xxxx
                          						    	SQRT_IEEE	R5.__z_ = abs(R0).wwww
      0000601d 00001000     	EXEC ADDR(0x1d) CNT(0x6)
1d: c9080500 00bebe00 f0010500	      ALU:	DOT3v	R0.___w = R1.zxyy, R5.zxyy CLAMP
1e: 40880603 001b6c1b a201fe00	      ALU:	MAXv	R3.___w = R1.wwww, C510.xxxx
                          						    	LOG_IEEE	R6.___w = R0.wwww
1f: c80f0501 00220000 e1030600	      ALU:	MULv	R1 = R3.zyxw, R6
20: 38880500 001b1b1b e1020501	      ALU:	MULv	R0.___w = R2.wwww, R5.wwww
                          						    	EXP_IEEE	R5.___w = R1.wwww
21: 16870500 00c01bc6 e1000502	      ALU:	MULv	R0.xyz_ = R0.xyzz, R5.wwww
                          						    	MAXs	R5.___w = R2.zzzz CLAMP
22: 70070500 00c0626c 81000204	      ALU:	MULv	R0.xyz_ = R0.xyzz, C258.zyxx
      00001023 00001200     	EXEC ADDR(0x23) CNT(0x1) BOOL_ADDR(0x80)
23: c8070500 00626c62 ab000301	      ALU:	MULADDv	R0.xyz_ = R1.zyxx, R0.zyxx, C259.xxxx
      00006024 00005600     	COND_PRED_EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80) COND(1)
24: c8010501 186c6c00 21030200	      ALU:	MULv	R1.x___ = C259.xxxx, C258.xxxx COND(1)
25: c8070503 1abc6eb1 6cfe0202	      ALU:	CNDEv	R3.xyz_ = R2.yyyy, C510.xxyy, -R2.zxxx COND(1)
26: 17240101 19bebec6 f0050202	      ALU:	DOT3v	R1.__z_ = R5.zxyy, R2.zxyy CLAMP COND(1)
                          						    	MAXs	R1._y__ = -R2.zzzz CLAMP
27: 15010505 18bec0c6 f0050301	      ALU:	DOT3v	R5.x___ = R5.zxyy, R3.xyzz CLAMP COND(1)
28: 04120505 1b6cb11b e0050105	      ALU:	ADDv	R5._y__ = R5.xxxx, -R1.yyyy COND(1)
                          						    	ADD_PREVs	R5.x___ = -R5.wwww
29: c8010505 18b1c66c ab05fd05	      ALU:	MULADDv	R5.x___ = R5.xxxx, R5.yyyy, C509.zzzz COND(1)
      0000502a 00005600     	COND_PRED_EXEC ADDR(0x2a) CNT(0x5) BOOL_ADDR(0x80) COND(1)
2a: c8020505 186c6c00 e1010500	      ALU:	MULv	R5._y__ = R1.xxxx, R5.xxxx COND(1)
2b: c8090505 186d1b00 a105ff00	      ALU:	MULv	R5.x__w = R5.yxxx, C511.wwww COND(1)
2c: c8060505 181bc100 a1050200	      ALU:	MULv	R5._yz_ = R5.wwww, C258.yyzz COND(1)
2d: c8060505 18b66c00 a1050300	      ALU:	MULv	R5._yz_ = R5.zzyy, C259.xxxx COND(1)
2e: c8070500 18c0b400 e0000500	      ALU:	ADDv	R0.xyz_ = R0.xyzz, R5.xzyy COND(1)
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      0000202f 00002200     	EXEC_END ADDR(0x2f) CNT(0x2) BOOL_ADDR(0x80)
2f: c8070500 00c06c00 a1000500	      ALU:	MULv	R0.xyz_ = R0.xyzz, C261.xxxx
30: c80f8000 00000000 e2000000	      ALU:	MAXv	export0 = R0, R0	; COLOR
