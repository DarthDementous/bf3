      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      02506004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 4c880700 00b1b1c6 2100ff04	      ALU:	MULv	R0.___w = C256.yyyy, C511.yyyy
                          						    	RECIP_IEEE	R7.___w = R4.zzzz
05: c80c0605 001bac00 e1070400	      ALU:	MULv	R5.__zw = R7.wwww, R4.xxxy
06: b84080a1 1f1fffd8 00004000	      FETCH:	SAMPLE	R8.xw__ = R5.zwz CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: 100070a1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R7.___x = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: c8040600 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
09: c8040605 011bb11b ab070000	      ALU:	MULADDv	R5.__z_ = -R0.wwww, R7.wwww, C256.yyyy
      0400600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: 58440008 006cb1c6 e1080880	      ALU:	MULv	R8.__z_ = R8.xxxx, R8.yyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0b: a8880005 00c61b02 8504ff00	      ALU:	SETGTv	R5.___w = R4.zzzz, C511.wwww
                          						    	MUL_CONST_0	R0.___w = C256.w, R0.z
0c: c8030608 00c7b000 e1000000	      ALU:	MULv	R8.xy__ = R0.wzzz, R0.xyyy
0d: c8070600 00c01600 e1080500	      ALU:	MULv	R0.xyz_ = R8.xyzz, R5.zzww
0e: c8030604 00b0b000 e0000500	      ALU:	ADDv	R4.xy__ = R0.xyyy, R5.xyyy
0f: 10388081 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: 102890a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: 10184081 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R4.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: 1402060b 00b1b1b1 a1010501	   (S)ALU:	MULv	R11._y__ = R1.yyyy, C261.yyyy
13: 0c140b0b 00b1b1b1 81010604	      ALU:	MULv	R11.__z_ = R1.yyyy, C262.yyyy
                          						    	MUL_PREVs	R11.x___ = C260.yyyy
14: 140d0605 00f06c6c 20090101	      ALU:	ADDv	R5.x_zw = C265.xyyz, C257.xxxx
15: c8080608 006c6cc6 0b02ffff	      ALU:	MULADDv	R8.___w = C511.zzzz, C258.xxxx, C511.xxxx
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: 0c280507 00bebe1b f0020202	      ALU:	DOT3v	R7.___w = R2.zxyy, R2.zxyy
                          						    	MUL_PREVs	R5._y__ = R2.wwww
17: 58880700 00bebe1b f0030387	      ALU:	DOT3v	R0.___w = R3.zxyy, R3.zxyy
                          						    	RECIPSQ_IEEE	R7.___w = abs(R7).wwww
18: 58880008 001b6c1b a1080380	      ALU:	MULv	R8.___w = R8.wwww, C259.xxxx
                          						    	RECIPSQ_IEEE	R0.___w = abs(R0).wwww
19: c8070609 001bc014 eb080905	      ALU:	MULADDv	R9.xyz_ = R5.xzww, R8.wwww, R9.xyzz
1a: 15010605 001bc61b e1070200	      ALU:	MULv	R5.x___ = R7.wwww, R2.zzzz CLAMP
1b: 0e430000 00b0c6c6 e1050003	      ALU:	MULv	R0.xy__ = R5.xyyy, R0.zzzz
                          						    	MUL_PREVs	R0.__z_ = R3.zzzz CLAMP
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: a8410505 00b16c41 81000406	      ALU:	MULv	R5.x___ = R0.yyyy, C260.xxxx
                          						    	MUL_CONST_0	R5.__z_ = C262.x, R0.y
1d: a827050a 00c0c041 c0060605	      ALU:	ADDv	R10.xyz_ = R6.xyzz, R6.xyzz
                          						    	MUL_CONST_0	R5._y__ = C261.x, R0.y
1e: c9030600 00c46cb1 8b000707	      ALU:	MULADDv	R0.xy__ = C263.yyyy, R0.xzzz, C263.xxxx CLAMP
1f: c8070605 00c01bc0 eb0b0305	      ALU:	MULADDv	R5.xyz_ = R5.xyzz, R11.xyzz, R3.wwww
20: c8030600 00b0b000 e1000000	      ALU:	MULv	R0.xy__ = R0.xyyy, R0.xyyy
21: c8030600 006d6d00 e1000000	      ALU:	MULv	R0.xy__ = R0.yxxx, R0.yxxx
      00006022 00001200     	EXEC ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: a8270a04 00c0c080 c10a0405	      ALU:	MULv	R4.xyz_ = R10.xyzz, R4.xyzz
                          						    	MUL_CONST_0	R10._y__ = C261.y, R0.x
23: a8170a08 00c0c080 c1080604	      ALU:	MULv	R8.xyz_ = R8.xyzz, R6.xyzz
                          						    	MUL_CONST_0	R10.x___ = C260.y, R0.x
24: a8170907 00c0c041 c0090704	      ALU:	ADDv	R7.xyz_ = R9.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R9.x___ = C260.x, R0.y
25: a8240909 00b16c41 81000605	      ALU:	MULv	R9.__z_ = R0.yyyy, C262.xxxx
                          						    	MUL_CONST_0	R9._y__ = C261.x, R0.y
26: a8470a09 00c06c80 c1090106	      ALU:	MULv	R9.xyz_ = R9.xyzz, R1.xxxx
                          						    	MUL_CONST_0	R10.__z_ = C262.y, R0.x
27: 281e0000 00fcb11b e10a0103	      ALU:	MULv	R0._yzw = R10.xxyz, R1.yyyy
                          						    	SETNEs	R0.x___ = R3.wwww
      00006028 00002200     	EXEC_END ADDR(0x28) CNT(0x6) BOOL_ADDR(0x80)
28: 28870000 00c96c1b e1000002	      ALU:	MULv	R0.xyz_ = R0.ywzz, R0.xxxx
                          						    	SETNEs	R0.___w = R2.wwww
29: c8070600 00c01bb4 eb090000	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R9.xyzz, R0.wwww
2a: 14070600 00b4b41b e1080004	      ALU:	MULv	R0.xyz_ = R8.xzyy, R0.xzyy
2b: c8070600 00c0c0b4 eb040500	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R4.xyzz, R5.xyzz
2c: c8070600 00c0c0c0 eb040700	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R4.xyzz, R7.xyzz
2d: 0c878000 00c06c1b a1000806	      ALU:	MULv	export0.xyz_ = R0.xyzz, C264.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.wwww	; COLOR
