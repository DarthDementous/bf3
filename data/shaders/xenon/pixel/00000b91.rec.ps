      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: c803000e 00b0b000 a0000100	      ALU:	ADDv	R14.xy__ = R0.xyyy, C257.xyyy
06: 140c000e 00acac6c a0000000	      ALU:	ADDv	R14.__zw = R0.xxxy, C256.xxxy
07: 04130d0c 00b0b06c 80000302	      ALU:	ADDv	R12.xy__ = R0.xyyy, C259.xyyy
                          						    	ADD_PREVs	R13.x___ = C258.xxxx
08: 1403000b 00b0b0b1 a0000400	      ALU:	ADDv	R11.xy__ = R0.xyyy, C260.xyyy
09: 04230d0a 00b0b0b1 80000502	      ALU:	ADDv	R10.xy__ = R0.xyyy, C261.xyyy
                          						    	ADD_PREVs	R13._y__ = C258.yyyy
0a: 14030009 00b0b06c a0000600	      ALU:	ADDv	R9.xy__ = R0.xyyy, C262.xyyy
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 04130807 00b0b06c 80000807	      ALU:	ADDv	R7.xy__ = R0.xyyy, C264.xyyy
                          						    	ADD_PREVs	R8.x___ = C263.xxxx
0c: 14030006 00b0b0b1 a0000900	      ALU:	ADDv	R6.xy__ = R0.xyyy, C265.xyyy
0d: 04230805 00b0b0b1 80000a07	      ALU:	ADDv	R5.xy__ = R0.xyyy, C266.xyyy
                          						    	ADD_PREVs	R8._y__ = C263.yyyy
0e: 14030004 00b0b06c a0000b00	      ALU:	ADDv	R4.xy__ = R0.xyyy, C267.xyyy
0f: 04130302 00b0b06c 80000d0c	      ALU:	ADDv	R2.xy__ = R0.xyyy, C269.xyyy
                          						    	ADD_PREVs	R3.x___ = C268.xxxx
10: 14030001 00b0b0b1 a0000e00	      ALU:	ADDv	R1.xy__ = R0.xyyy, C270.xyyy
      05546011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 04230300 00b0b0b1 80000f0c	      ALU:	ADDv	R0.xy__ = R0.xyyy, C271.xyyy
                          						    	ADD_PREVs	R3._y__ = C268.yyyy
12: 10080001 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R0.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
13: 10081021 1f1ff688 00004000	      FETCH:	SAMPLE	R1.xyzw = R1.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: 10082041 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R2.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: 10083061 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 10084081 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      05556017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 100850a1 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: 100860c1 1f1ff688 00004000	      FETCH:	SAMPLE	R6.xyzw = R6.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 100870e1 1f1ff688 00004000	      FETCH:	SAMPLE	R7.xyzw = R7.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 10088101 1f1ff688 00004000	      FETCH:	SAMPLE	R8.xyzw = R8.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: 10089121 1f1ff688 00004000	      FETCH:	SAMPLE	R9.xyzw = R9.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1c: 1008a141 1f1ff688 00004000	      FETCH:	SAMPLE	R10.xyzw = R10.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0955601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 1008b161 1f1ff688 00004000	      FETCH:	SAMPLE	R11.xyzw = R11.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1e: 1008c181 1f1ff688 00004000	      FETCH:	SAMPLE	R12.xyzw = R12.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1f: 1008d1a1 1f1ff688 00004000	      FETCH:	SAMPLE	R13.xyzw = R13.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
20: b808f1c1 1f1ff688 00004000	      FETCH:	SAMPLE	R15.xyzw = R14.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
21: 1008e1c1 1f1ff688 00004000	      FETCH:	SAMPLE	R14.xyzw = R14.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: c80f000e 00000000 e00f0e00	   (S)ALU:	ADDv	R14 = R15, R14
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c80f000d 00000000 e00e0d00	      ALU:	ADDv	R13 = R14, R13
24: c80f000c 00000000 e00d0c00	      ALU:	ADDv	R12 = R13, R12
25: c80f000b 00000000 e00c0b00	      ALU:	ADDv	R11 = R12, R11
26: c80f000a 00000000 e00b0a00	      ALU:	ADDv	R10 = R11, R10
27: c80f0009 00000000 e00a0900	      ALU:	ADDv	R9 = R10, R9
28: c80f0008 00000000 e0090800	      ALU:	ADDv	R8 = R9, R8
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c80f0007 00000000 e0080700	      ALU:	ADDv	R7 = R8, R7
2a: c80f0006 00000000 e0070600	      ALU:	ADDv	R6 = R7, R6
2b: c80f0005 00000000 e0060500	      ALU:	ADDv	R5 = R6, R5
2c: c80f0004 00000000 e0050400	      ALU:	ADDv	R4 = R5, R4
2d: c80f0003 00000000 e0040300	      ALU:	ADDv	R3 = R4, R3
2e: c80f0002 00000000 e0030200	      ALU:	ADDv	R2 = R3, R2
      0000302f 00002200     	EXEC_END ADDR(0x2f) CNT(0x3) BOOL_ADDR(0x80)
2f: c80f0001 00000000 e0020100	      ALU:	ADDv	R1 = R2, R1
30: c80f0000 00000000 e0010000	      ALU:	ADDv	R0 = R1, R0
31: c80f8000 00006c00 a100ff00	      ALU:	MULv	export0 = R0, C511.xxxx	; COLOR
      00000000 00000000     	NOP
