//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $avgsampleoffsets[16];
//   float2 $compressedhdr;
//   sampler2D $inputtex;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   $avgsampleoffsets c0      16
//   $compressedhdr    c16      1
//   $inputtex         s0       1
//

// Shader type: pixel 

xps_3_0
defconst $avgsampleoffsets[0], float, vector, [1, 2], c0
defconst $avgsampleoffsets[1], float, vector, [1, 2], c1
defconst $avgsampleoffsets[2], float, vector, [1, 2], c2
defconst $avgsampleoffsets[3], float, vector, [1, 2], c3
defconst $avgsampleoffsets[4], float, vector, [1, 2], c4
defconst $avgsampleoffsets[5], float, vector, [1, 2], c5
defconst $avgsampleoffsets[6], float, vector, [1, 2], c6
defconst $avgsampleoffsets[7], float, vector, [1, 2], c7
defconst $avgsampleoffsets[8], float, vector, [1, 2], c8
defconst $avgsampleoffsets[9], float, vector, [1, 2], c9
defconst $avgsampleoffsets[10], float, vector, [1, 2], c10
defconst $avgsampleoffsets[11], float, vector, [1, 2], c11
defconst $avgsampleoffsets[12], float, vector, [1, 2], c12
defconst $avgsampleoffsets[13], float, vector, [1, 2], c13
defconst $avgsampleoffsets[14], float, vector, [1, 2], c14
defconst $avgsampleoffsets[15], float, vector, [1, 2], c15
defconst $compressedhdr, float, vector, [1, 2], c16
defconst $inputtex, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=16
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 2 interpolants: 2, components: 6
// UsesMemexport: false
dcl_texcoord r0.xy
dcl_color_centroid r1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.0625, 0, 0, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    6   */     add r2.xy, r0.yx, c1.yx
/*    7   */     add r2.zw, r0.xxxy, c0.xxxy
               + movs r0._, r0.x
/*    8   */     add r3.xy, r0.xy, c2.xy
               + adds_prev r0.z, c14.x
/*    9   */     add r3.zw, r0.yyyx, c13.yyyx
               + movs r0._, r0.y
/*   10   */     add r4.xy, r0.xy, c12.xy
               + adds_prev r0.w, c14.y
/*   11   */     add r4.zw, r0.yyyx, c3.yyyx
               + movs r0._, r0.x
/*    1.0 */     exec
/*   12   */     add r5.zw, r0.yyyx, c11.yyyx
               + adds_prev r5.x, c4.x
/*   13   */     add r6.xy, r0.xy, c10.xy
               + movs r0._, r0.y
/*   14   */     add r6.zw, r0.yyyx, c5.yyyx
               + adds_prev r5.y, c4.y
/*   15   */     add r7.xy, r0.xy, c6.xy
               + movs r0._, r0.y
/*   16   */     add r8.xy, r0.xy, c8.xy
               + adds_prev r7.z, c9.y
/*   17   */     add r8.zw, r0.yyyx, c7.yyyx
               + movs r0._, r0.x
/*    1.1 */     exec
/*   18   */     add r0.xy, r0.yx, c15.yx
               + adds_prev r7.w, c9.x
/*   19   */     tfetch2D r1.wxyz, r0.yx, tf0
/*   20   */     tfetch2D r15, r8.wz, tf0
/*   21   */     tfetch2D r13, r8.xy, tf0
/*   22   */     tfetch2D r12.xwyz, r7.wz, tf0
/*   23   */     tfetch2D r14, r7.xy, tf0
/*    2.0 */     exec
/*   24   */     tfetch2D r11, r6.wz, tf0
/*   25   */     tfetch2D r9, r6.xy, tf0
/*   26   */     tfetch2D r8.xwyz, r5.wz, tf0
/*   27   */     tfetch2D r10, r5.xy, tf0
/*   28   */     tfetch2D r7, r4.wz, tf0
/*   29   */     tfetch2D r5, r4.xy, tf0
/*    2.1 */     exec
/*   30   */     tfetch2D r4.xwyz, r3.wz, tf0
/*   31   */     tfetch2D r6, r3.xy, tf0
/*   32   */     tfetch2D r0.xwyz, r0.zw, tf0
/*   33   */     tfetch2D r3, r2.zw, tf0
/*   34   */     tfetch2D r2, r2.yx, tf0
/*   35   */     serialize
                 add r16.x, r2.w, r3.w
/*    3.0 */     exec
/*   36   */     mul r16.yzw, r0.xxwz, c16.y
/*   37   */     add r16.x, r16.x, r6.w
/*   38   */     mad r16.yzw, r4.xxwz, c16.y, r16.yyzw
/*   39   */     mad r16.yzw, r5.xxyz, c16.y, r16.yywz
/*   40   */     add r16.x, r16.x, r7.w
/*   41   */     add r16.x, r16.x, r10.w
/*    3.1 */     exec
/*   42   */     mad r16.yzw, r8.xxwz, c16.y, r16.yywz
/*   43   */     mad r16.yzw, r9.xxyz, c16.y, r16.yywz
/*   44   */     add r16.x, r16.x, r11.w
/*   45   */     add r16.x, r16.x, r14.w
/*   46   */     mad r16.yzw, r12.xxwz, c16.y, r16.yywz
/*   47   */     mad r13.xyz, r13.xyz, c16.y, r16.ywz
/*    4.0 */     exec
/*   48   */     add r16.x, r16.x, r15.w
/*   49   */     add r12.x, r16.x, r13.w
/*   50   */     mad r13.xyz, r15.xzy, c16.y, r13.xzy
/*   51   */     mad r9.xyz, r14.xyz, c16.y, r13.xzy
/*   52   */     add r12.x, r12.x, r12.y
/*   53   */     add r8.x, r12.x, r9.w
/*    4.1 */     exec
/*   54   */     mad r9.xyz, r11.xzy, c16.y, r9.xzy
/*   55   */     mad r5.xyz, r10.xyz, c16.y, r9.xzy
/*   56   */     add r8.x, r8.x, r8.y
/*   57   */     add r4.x, r8.x, r5.w
/*   58   */     mad r5.xyz, r7.xzy, c16.y, r5.xzy
/*   59   */     mad r0.xzw, r6.xyyz, c16.y, r5.xzzy
/*    5.0 */     exec
/*   60   */     add r4.x, r4.x, r4.y
/*   61   */     add r0.y, r4.x, r0.y
               + movs r0._, c16.x
/*   62   */     mad r0.xzw, r3.xzzy, c16.y, r0.xwwz
/*   63   */     mad r0.xzw, r2.xyyz, c16.y, r0.xwwz
/*   64   */     add r0.y, r0.y, r1.x
               + muls_prev r1.x, c255.x
/*   65   */     mad r0.xzw, r1.yzzw, c16.y, r0.xzzw
/*    5.1 */     exece
/*   66   */     mul oC0.xyz, r1.x, r0.xzw
               + mulsc oC0.w, c255.x, r0.y

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x0003 SamplingPattern 0x0001
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xy
// [1] color0 r1.xyzw

