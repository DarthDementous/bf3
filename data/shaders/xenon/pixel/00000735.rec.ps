      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 4c830006 00b06cc6 a1050004	      ALU:	MULv	R6.xy__ = R5.xyyy, C256.xxxx
                          						    	RECIP_IEEE	R0.___w = R4.zzzz
05: c8030001 001bb000 e1000400	      ALU:	MULv	R1.xy__ = R0.wwww, R4.xyyy
06: 101880c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R6.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: b82860a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R6.xyz_ = R5.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 10389021 1f1fffd8 00004000	      FETCH:	SAMPLE	R9.xw__ = R1.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 100810a1 1f1ffe81 00004000	      FETCH:	SAMPLE	R1.yxz_ = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0002600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: c8030005 04b1b000 a0030600	   (S)ALU:	ADDv	R5.xy__ = -R3.yyyy, C262.xyyy
0b: c80c0005 046cac00 a0030500	      ALU:	ADDv	R5.__zw = -R3.xxxx, C261.xxxy
0c: c8030007 04c6b000 a0030700	      ALU:	ADDv	R7.xy__ = -R3.zzzz, C263.xyyy
0d: c8080007 00c6c600 a504ff00	      ALU:	SETGTv	R7.___w = R4.zzzz, C511.zzzz
0e: 08480700 00bebe61 f0000009	      ALU:	DOT3v	R0.___w = R0.zxyy, R0.zxyy
                          						    	MULs	R7.__z_ = R9.yyxx
0f: a0870000 04c0b11b a008ff80	      ALU:	ADDv	R0.xyz_ = -R8.xyzz, C511.yyyy
                          						    	SQRT_IEEE	R0.___w = abs(R0).wwww
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: a9180400 001b6c45 a100ff01	      ALU:	MULv	R0.___w = R0.wwww, C511.xxxx CLAMP
                          						    	MUL_CONST_0	R4.x___ = C257.x, R6.y
11: c8070003 001bc0c0 eb000008	      ALU:	MULADDv	R3.xyz_ = R8.xyzz, R0.wwww, R0.xyzz
12: a8270400 00c01046 e1070701	      ALU:	MULv	R0.xyz_ = R7.xyzz, R7.xyww
                          						    	MUL_CONST_0	R4._y__ = C257.x, R6.z
13: c8020000 00b3b3b1 f1050500	      ALU:	DOT2ADDv	R0._y__ = R0.yyyy, R5.wyyy, R5.wyyy
14: c8080000 006e6e6c f1050500	      ALU:	DOT2ADDv	R0.___w = R0.xxxx, R5.zxxx, R5.zxxx
15: 40160004 00bccc1b e1040180	      ALU:	MULv	R4._yz_ = R4.xxyy, R1.xxzz
                          						    	LOG_IEEE	R0.x___ = abs(R0).wwww
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: 40240000 00c61bb1 e1000180	      ALU:	MULv	R0.__z_ = R0.zzzz, R1.wwww
                          						    	LOG_IEEE	R0._y__ = abs(R0).yyyy
17: ac130400 00b0c441 81000801	      ALU:	MULv	R0.xy__ = R0.xyyy, C264.xzzz
                          						    	MUL_CONST_1	R4.x___ = C257.x, R1.y
18: 381e0003 0041416c e1040300	      ALU:	MULv	R3._yzw = R4.yyzx, R3.yyzx
                          						    	EXP_IEEE	R0.x___ = R0.xxxx
19: 38210003 001b6cb1 e1030600	      ALU:	MULv	R3.x___ = R3.wwww, R6.xxxx
                          						    	EXP_IEEE	R0._y__ = R0.yyyy
1a: c9030000 00b01900 a1000800	      ALU:	MULv	R0.xy__ = R0.xyyy, C264.ywww CLAMP
1b: c8030000 046d1b00 a000ff00	      ALU:	ADDv	R0.xy__ = -R0.yxxx, C511.wwww
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: a8100500 00000080 c2000002	      ALU:	MUL_CONST_0	R5.x___ = C258.y, R0.x
1d: a8220500 00c6b180 c1000003	      ALU:	MULv	R0._y__ = R0.zzzz, R0.yyyy
                          						    	MUL_CONST_0	R5._y__ = C259.y, R0.x
1e: a8410504 00b16c80 81000204	      ALU:	MULv	R4.x___ = R0.yyyy, C258.xxxx
                          						    	MUL_CONST_0	R5.__z_ = C260.y, R0.x
1f: a8240404 00b16c41 81000403	      ALU:	MULv	R4.__z_ = R0.yyyy, C260.xxxx
                          						    	MUL_CONST_0	R4._y__ = C259.x, R0.y
20: c8070000 00c01bc0 eb050204	      ALU:	MULADDv	R0.xyz_ = R4.xyzz, R5.xyzz, R2.wwww
21: c8070000 00c0cdc0 eb000103	      ALU:	MULADDv	R0.xyz_ = R3.xyzz, R0.xyzz, R1.yxzz
      00001022 00002200     	EXEC_END ADDR(0x22) CNT(0x1) BOOL_ADDR(0x80)
22: 14878000 00c06c1b a1000906	      ALU:	MULv	export0.xyz_ = R0.xyzz, C265.xxxx	; COLOR
                          						    	MAXs	export0.___w = R6.wwww	; COLOR
      00000000 00000000     	NOP
