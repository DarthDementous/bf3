//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   sampler2D $screenshadmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $invscreensize c3       1
//   $latten0       c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $worldviewpos  c11      1
//   $compressedhdr c12      1
//   $diff          s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $bump          s3       1
//   $screenshadmap s4       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c12
defconst $diff, sampler2d, object, [1, 1], s0
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c3
defconst $latten0, float, vector, [1, 4], c4
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=11
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=5

// interpolators: 5 interpolants: 5, components: 20
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_color_centroid r4

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, -1, 1, 0, 0.5
def c255, 10, 0, 0, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    4   */     mul r6.xy, r5_abs.xy, c3.xy
/*    5   */     tfetch2D r9.xyz_, r3.zw, tf1
/*    6   */     tfetch2D r7.xyz_, r3.xy, tf2
/*    7   */     tfetch2D r8.yw__, r3.xy, tf3
/*    8   */     tfetch2D r5.xywz, r3.xy, tf0
/*    9   */     tfetch2D r3.w___, r6.xy, tf4
/*    1.0 */     exec
/*   10   */     serialize
                 mul r3.w, c1.x, c255.x
/*   11   */     add r2.w, r2.w, c11.z
               + movs r4._, r0.w
/*   12   */     add r3.z, r1.w, c11.y
               + adds_prev r6.w, c11.x
/*   13   */     add r6.xyz, r4.xyz, r4.xyz
               + adds r3.y, r8.xx
/*   14   */     add r10.xy, -r3.z, c9.xy
               + adds r3.z, r8.yy
/*   15   */     add r8.zw, -r6.w, c8.xxxy
               + subsc r10.z, c10.x, r2.w
/*    1.1 */     exec
/*   16   */     mul r4.xz, r8.zw, r8.zw
               + subsc r10.w, c10.y, r2.w
/*   17   */     dp2add r4.z, r10.yw, r10.yw, r4.z
/*   18   */     dp2add r4.x, r10.xz, r10.xz, r4.x
/*   19   */     add r3.yzw, r3.yyzw, c254.xxxy
               + mulsc r11.z, c254.w, r3.x
/*   20   */     mul r6.xyz, r6.xyz, r5.xyw
               + mulsc r4.y, c2.x, r3.w
/*   21   */     mul r11.xy, r3.yz, r3.yz
               + rsq r8.x, r4_abs.x
/*    2.0 */     exec
/*   22   */     mul r7.xyz, r4.y, r7.xyz
               + log r4.x, r4_abs.x
/*   23   */     mad r7.xyz, r9.xyz, c0.x, r7.xyz
/*   24   */     add r5.xy, -r11.xz, c254.y
               + log r4.y, r4_abs.z
/*   25   */     mul r4.xy, r4.xy, c4.xz
               + rsq r8.y, r4_abs.z
/*   26   */     mul r9.xy, r8.zw, r8.xy
               + exp r4.x, r4.x
/*   27   */     add r4.z, r5.x, -r11.y
               + exp r4.y, r4.y
/*    2.1 */     exec
/*   28   */     mul r8, r10.yxzw, r8.yxxy
               + sqrt r3.x, r4_abs.z
/*   29   */     dp3 r10.x, r3.xyz, r0.zxy
               + mulsc_sat r4.x, c4.y, r4.x
/*   30   */     dp3 r10.y, r3.xyz, r1.zxy
               + mulsc_sat r4.z, c4.w, r4.y
/*   31   */     dp3 r10.z, r3.xyz, r2.zxy
               + subsc r4.x, c254.y, r4.x
/*   32   */     dp3 r0.x, r10.zxy, r10.zxy
               + subsc r4.y, c254.y, r4.z
/*   33   */     mul r0.zw, r4.xxxy, c7.xxxy
               + rsq r0.x, r0_abs.x
/*    3.0 */     exec
/*   34   */     mul r1.xyz, r10.xzy, r0.x
/*   35   */     mul r0.xy, r9.xy, r1.x
/*   36   */     dp2add_sat r0.y, r8.xw, r1.zy, r0.y
/*   37   */     dp2add_sat r0.x, r8.yz, r1.zy, r0.x
/*   38   */     dp2add r0.z, r0.zw, r0.xy, c254.z
/*   39   */     mul r4.xy, r0.yx, r4.yx
/*    3.1 */     exece
/*   40   */     mul r1.xyz, r6.xyz, r7.xyz
               + mulsc r2.x, c5.x, r4.y
/*   41   */     mul r2.zw, r4.yyyx, c6.xxxy
               + mulsc r2.y, c5.y, r4.x
/*   42   */     add r0.xy, r2.xz, r2.yw
/*   43   */     mul r0.xyz, r6.xyz, r0.xyz
               + movs r4._, r5.z
/*   44   */     mad r0.xyz, r1.xyz, r5.y, r0.xyz
/*   45   */     mul oC0.xyz, r0.xyz, c12.x
               + muls_prev oC0.w, r4.w

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x001f SamplingPattern 0x000f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] color0 r4.xyzw

