//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $frametexture;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   float2 $powoffset;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $matvalue      c1       1
//   $suncolour     c2       1
//   $sunintensity  c3       1
//   $invscreensize c4       1
//   $lcol          c5       3
//   $wlightpos     c8       3
//   $latten0       c11      1
//   $powoffset     c12      1
//   $apptime       c13      1
//   $compressedhdr c14      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $spec          s2       1
//   $screenshadmap s3       1
//   $frametexture  s4       1
//   $noisetex      s5       1
//   $bump          s6       1
//   $diff          s7       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c13
defconst $bump, sampler2d, object, [1, 1], s6
defconst $compressedhdr, float, vector, [1, 2], c14
defconst $diff, sampler2d, object, [1, 1], s7
defconst $frametexture, sampler2d, object, [1, 1], s4
defconst $invscreensize, float, vector, [1, 2], c4
defconst $latten0, float, vector, [1, 4], c11
defconst $lcol, float, matrix_columns, [4, 4], c5-7
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c1
defconst $noisetex, sampler3d, object, [1, 1], s5
defconst $powoffset, float, vector, [1, 2], c12
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spec, sampler2d, object, [1, 1], s2
defconst $suncolour, float, vector, [1, 3], c2
defconst $sunintensity, float, scalar, [1, 1], c3
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c8-10
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=16
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=9

// interpolators: 9 interpolants: 9, components: 31
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1.xyz
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_texcoord7 r7.xy
dcl_color_centroid r8

def c252, 0, 0, 0, 0
def c253, 0, -1, 4, 0
def c254, 5, 0.5, 1, 10
def c255, 0.0599999987, 0.150000006, 0.289999992, 0.0529999994


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    6   */     mul r10.w, c13.x, c254.y
               + movs r10.x, r6.x
/*    7   */     mul r1.xy, r9_abs.xy, c4.xy
               + movs r10.z, r6.y
/*    8   */     tfetch2D r10._x__, r6.zw, tf0, FetchValidOnly=false
/*    9   */     tfetch2D r5.__w_, r1.xy, tf3, FetchValidOnly=false
/*   10   */     tfetch2D r1.x_yz, r6.xy, tf2, FetchValidOnly=false
/*   11   */     tfetch2D r11.__yw, r6.xy, tf6, FetchValidOnly=false
/*    1.0 */     exec
/*   12   */     tfetch3D r11.x___, r10.xzw, tf5, FetchValidOnly=false
/*   13   */     serialize
                 mul r10.w, c1.x, c254.w
               + rcp r0.w, r5.w
/*   14   */     mul r9.xy, r0.w, r5.yx
               + subsc r11.y, -c254.z, -r11.x
/*   15   */     add r5.xyw, r11.zyw, r11.zxw
               + snes r13.x, r2.w
/*   16   */     dp3 r11.z, r1.wxz, c255.xyz
               + addsc r11.x, c253.y, r5.x
/*   17   */     mul r10.xz, r5.zy, c254.yx
               + addsc r11.y, c253.y, r5.w
/*    1.1 */     exec
/*   18   */     mul r5.xyz, r10.zwz, r11.xzy
               + subsc r9.z, c254.z, r9.x
/*   19   */     mad r7.zw, r5.xxxz, c255.w, r9.yyyz
/*   20   */     tfetch2D r14, r6.xy, tf7
/*   21   */     tfetch2D r12.xyz_, r7.xy, tf1
/*   22   */     tfetch2D r5.x_yz, r7.zw, tf4
/*   23   */     serialize
                 add r15.xy, -r4.x, c8.xy
               + snes r13.y, r3.w
/*    2.0 */     exec
/*   24   */     dp3 r1.y, r0.zxy, r0.zxy
               + movs r8._, -r4.y
/*   25   */     add r16.zw, -r4.z, c10.xxxy
               + adds_prev r15.z, c9.x
/*   26   */     dp3 r4.w, r2.zxy, r2.zxy
               + movs r8._, -r4.y
/*   27   */     add r6.xyz, r8.xyz, r8.xyz
               + adds_prev r15.w, c9.y
/*   28   */     dp3 r0.w, r3.zxy, r3.zxy
               + mulsc r4.x, c14.y, r5.x
/*   29   */     mul r7.xyz, r12.xyz, c0.x
               + mulsc r4.y, c14.y, r5.z
/*    2.1 */     exec
/*   30   */     mul r9.xyz, r6.xyz, r14.xyz
               + rsq r4.z, r0_abs.w
/*   31   */     mul r0.w, r14.w, r8.w
               + rsq r4.w, r4_abs.w
/*   32   */     mul r11.xyz, r1.xzw, r8.xyz
               + movs r8._, r4.w
/*   33   */     mul_sat r8.y, r4.z, r3.z
               + muls_prev_sat r8.x, r2.z
/*   34   */     mad_sat r16.xy, r8.xy, c12.x, c12.y
/*   35   */     mul r8, r16.zwxy, r16.zwxy
               + rsq r4.z, r1_abs.y
/*    3.0 */     exec
/*   36   */     dp2add r1.y, r15.yw, r15.yw, r8.y
/*   37   */     dp2add r4.w, r15.xz, r15.xz, r8.x
/*   38   */     mul_sat r4.z, r4.z, r0.z
               + log r0.x, r4_abs.w
/*   39   */     mul r7.xyz, r7.xyz, r14.xyz
               + log r0.y, r1_abs.y
/*   40   */     mul r8.xy, r0.xy, c11.xz
               + mulsc r0.x, c254.y, r1.x
/*   41   */     mul r8.zw, r8.zzzw, r8.zzzw
               + exp r8.x, r8.x
/*    3.1 */     exec
/*   42   */     add r1.y, r5.y, c254.z
               + exp r8.y, r8.y
/*   43   */     mul_sat r8.xy, r8.xy, c11.yw
               + mulsc r0.y, c254.y, r1.z
/*   44   */     add r8.xy, -r8.yx, c254.z
               + mulsc r0.z, c254.y, r1.w
/*   45   */     mul r0.xyz, r0.xyz, r12.xyz
               + mulsc r12.z, c6.x, r8.y
/*   46   */     max r11.w, r1.y, c253.x
               + mulsc r12.y, c7.x, r8.y
/*   47   */     mul r8.zw, r8.zzzw, r8.yyyx
               + mulsc r1.y, c7.y, r8.x
/*    4.0 */     exec
/*   48   */     mul r14.xy, r8.zw, c7.xy
               + mulsc r1.z, c6.y, r8.x
/*   49   */     mul r12.xw, r8.yz, c5.x
               + mulsc r14.z, c6.x, r8.z
/*   50   */     mul r1.xw, r8.xw, c5.y
               + mulsc r14.w, c6.y, r8.w
/*   51   */     mul r8, r14.yxzw, r13.yxxy
               + movs r8._, r1.w
/*   52   */     add r8.yz, r8.yyz, r8.xxw
               + muls_prev r8.x, r13.y
/*   53   */     mad r8.x, r12.w, r13.x, r8.x
/*    4.1 */     exec
/*   54   */     mul r1.xyz, r1.xyz, r3.w
               + log r8.w, r4.z
/*   55   */     mad r1.xyz, r12.xzy, r2.w, r1.xzy
/*   56   */     mul r8, r11.wxzy, r8.wxyz
               + mulsc r4.z, c14.y, r5.w
/*   57   */     mad r8.yzw, r9.xxzy, r1.xxzy, r8.yyzw
/*   58   */     mul r0.xyz, r0.xyz, c253.z
               + exp r8.x, r8.x
/*   59   */     mul r0.xyz, r0.xyz, r8.x
               + movs r8.x, r10.y
/*    5.0 */     exec
/*   60   */     mul r0.xyz, r0.xyz, c2.xyz
               + subsc r8.x, c254.z, r8.x
/*   61   */     mul r0.xyz, r0.xyz, c3.x
               + subsc r1.x, c254.z, r10.x
/*   62   */     mad r0.xyz, r7.xzy, r6.xzy, r0.xzy
/*   63   */     mad r8.yzw, r1.x, r0.xxzy, r8.yywz
/*   64   */     add r8.yzw, r8.yywz, -r4.xxzy
               + movs r8._, r0.w
/*   65   */     mad r8.yzw, r8.yywz, c13.x, r4.xxyz
/*    5.1 */     exece
/*   66   */     mul oC0.xyz, r8.yzw, c14.x
               + muls_prev oC0.w, r8.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x01ff SamplingPattern 0x00ff
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyz
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] texcoord7 r7.xy
// [8] color0 r8.xyzw

