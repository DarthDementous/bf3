      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      02506004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 4c880005 001bc6c6 a0030805	      ALU:	ADDv	R5.___w = R3.wwww, C264.zzzz
                          						    	RECIP_IEEE	R0.___w = R5.zzzz
05: c80c0706 001bac00 e1000500	      ALU:	MULv	R6.__zw = R0.wwww, R5.xxxy
06: b82090c1 1f1fffd8 00004000	      FETCH:	SAMPLE	R9.xw__ = R6.zwz CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: 100060c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R6.___x = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 08840806 001b6cc6 a0010803	   (S)ALU:	ADDv	R6.__z_ = R1.wwww, C264.xxxx
                          						    	MULs	R8.___w = R3.zzzz
09: 14080700 00b1b11b 2101ff02	      ALU:	MULv	R0.___w = C257.yyyy, C511.yyyy
      0000600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: c802070a 011bb11b ab060100	      ALU:	MULADDv	R10._y__ = -R0.wwww, R6.wwww, C257.yyyy
0b: 0484000b 006cb1b1 c1090908	      ALU:	MULv	R11.__z_ = R9.xxxx, R9.yyyy
                          						    	ADD_PREVs	R0.___w = C264.yyyy
0c: b8140900 00bebe43 d0000006	      ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R9.x___ = C262.x, R0.w
0d: b82c0909 04c6ac83 80060506	      ALU:	ADDv	R9.__zw = -R6.zzzz, C261.xxxy
                          						    	SUB_CONST_0	R9._y__ = C262.y, R0.w
0e: c8080708 00c6c61b eb020208	      ALU:	MULADDv	R8.___w = R8.wwww, R2.zzzz, R2.zzzz
0f: 5843000b 041bb0c6 a0050780	      ALU:	ADDv	R11.xy__ = -R5.wwww, C263.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: a888000b 00c66c02 8505ff01	      ALU:	SETGTv	R11.___w = R5.zzzz, C511.xxxx
                          						    	MUL_CONST_0	R0.___w = C257.w, R0.z
11: c8080708 00c6c61b eb010108	      ALU:	MULADDv	R8.___w = R8.wwww, R1.zzzz, R1.zzzz
12: 588b0801 00bebf1b e10b0b88	      ALU:	MULv	R1.xy_w = R11.zxyy, R11.wxyy
                          						    	RECIPSQ_IEEE	R8.___w = abs(R8).wwww
13: c8010705 00b3b31b f1090901	      ALU:	DOT2ADDv	R5.x___ = R1.wwww, R9.wyyy, R9.wyyy
14: c8020705 006e6eb1 f1090901	      ALU:	DOT2ADDv	R5._y__ = R1.yyyy, R9.zxxx, R9.zxxx
15: 5841060a 001bc6b1 e1080385	      ALU:	MULv	R10.x___ = R8.wwww, R3.zzzz
                          						    	RECIPSQ_IEEE	R6.__z_ = abs(R5).yyyy
      09006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: 588c0600 00dbac6c e1000085	      ALU:	MULv	R0.__zw = R0.wwwz, R0.xxxy
                          						    	RECIPSQ_IEEE	R6.___w = abs(R5).xxxx
17: c8030700 00b01a00 e10b0600	      ALU:	MULv	R0.xy__ = R11.xyyy, R6.zwww
18: c80f0703 0000bc00 e1000a00	      ALU:	MULv	R3 = R0, R10.xxyy
19: c8030700 001ab000 e0030600	      ALU:	ADDv	R0.xy__ = R3.zwww, R6.xyyy
1a: 10180001 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: c8020702 001bc600 e1080200	   (S)ALU:	MULv	R2._y__ = R8.wwww, R2.zzzz
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: 14070705 00c0c01b e0070708	      ALU:	ADDv	R5.xyz_ = R7.xyzz, R7.xyzz
1d: 0c1f0206 000d07c6 e1090601	      ALU:	MULv	R6 = R9.yxzw, R6.wzzw
                          						    	MUL_PREVs	R2.x___ = R1.zzzz
1e: c9080702 00b2b06c f1060203	      ALU:	DOT2ADDv	R2.___w = R3.xxxx, R6.zyyy, R2.xyyy CLAMP
1f: c9040701 006fb0b1 f1060203	      ALU:	DOT2ADDv	R1.__z_ = R3.yyyy, R6.wxxx, R2.xyyy CLAMP
20: ac170302 00c06c82 000a0002	      ALU:	ADDv	R2.xyz_ = C266.xyzz, C256.xxxx
                          						    	MUL_CONST_1	R3.x___ = C258.y, R1.z
21: ac220307 006c1b82 c1010203	      ALU:	MULv	R7._y__ = R1.xxxx, R2.wwww
                          						    	MUL_CONST_1	R3._y__ = C259.y, R1.z
      00006022 00001200     	EXEC ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: ac170802 00c0c045 e0020802	      ALU:	ADDv	R2.xyz_ = R2.xyzz, R8.xyzz
                          						    	MUL_CONST_1	R8.x___ = C258.x, R7.y
23: ac2c0803 00467145 a1010403	      ALU:	MULv	R3.__zw = R1.zzzx, C260.yyyx
                          						    	MUL_CONST_1	R8._y__ = C259.x, R7.y
24: 14070701 00c0c01b e1050003	      ALU:	MULv	R1.xyz_ = R5.xyzz, R0.xyzz
25: 0c470803 00c0b11b e1030402	      ALU:	MULv	R3.xyz_ = R3.xyzz, R4.yyyy
                          						    	MUL_PREVs	R8.__z_ = R2.wwww
26: c8070703 00c06cc0 eb080403	      ALU:	MULADDv	R3.xyz_ = R3.xyzz, R8.xyzz, R4.xxxx
27: 14070700 00c0c01b e1010300	      ALU:	MULv	R0.xyz_ = R1.xyzz, R3.xyzz
      00002028 00002200     	EXEC_END ADDR(0x28) CNT(0x2) BOOL_ADDR(0x80)
28: c8070700 00c0c0c0 eb010200	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R2.xyzz
29: 0c878000 00c06c1b a1000907	      ALU:	MULv	export0.xyz_ = R0.xyzz, C265.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R7.wwww	; COLOR
