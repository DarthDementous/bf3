      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      09506008 00001200     	EXEC ADDR(0x8) CNT(0x6) BOOL_ADDR(0x80)
08: c8040605 006c6c00 210efd00	      ALU:	MULv	R5.__z_ = C270.xxxx, C509.xxxx
09: c8090608 00b0b000 a1880a00	      ALU:	MULv	R8.x__w = abs(R8).xyyy, C266.xyyy
0a: 105080a1 1f1ffecf 00004000	      FETCH:	SAMPLE	R8._yw_ = R5.xyx CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 30109101 1f1fffc8 00004000	      FETCH:	SAMPLE	R9.xy__ = R8.xwx CONST(1) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 904040a1 1f1ffe3f 00008000	      FETCH:	SAMPLE	R4.__x_ = R5.xyz CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 08880805 001b1b1b e1010102	   (S)ALU:	MULv	R5.___w = R1.wwww, R1.wwww
                          						    	MULs	R8.___w = R2.wwww
      0000600e 00001200     	EXEC ADDR(0xe) CNT(0x6) BOOL_ADDR(0x80)
0e: 4c8c070a 00acac1b a1090b04	      ALU:	MULv	R10.__zw = R9.xxxy, C267.xxxy
                          						    	RECIP_IEEE	R7.___w = R4.wwww
0f: c8010608 001b1b1b eb000005	      ALU:	MULADDv	R8.x___ = R5.wwww, R0.wwww, R0.wwww
10: c80b0608 00651500 e0080800	      ALU:	ADDv	R8.xy_w = R8.yzxx, R8.yzww
11: 14060609 00bcb11b a008fc07	      ALU:	ADDv	R9._yz_ = R8.xxyy, C508.yyyy
12: 0c130b0a 00c5c56c e1090904	      ALU:	MULv	R10.xy__ = R9.yzzz, R9.yzzz
                          						    	MUL_PREVs	R11.x___ = R4.xxxx
13: 14070608 0414b11b a00afe07	      ALU:	ADDv	R8.xyz_ = -R10.xzww, C510.yyyy
      00006014 00001200     	EXEC ADDR(0x14) CNT(0x6) BOOL_ADDR(0x80)
14: 0c480b07 026cb1b1 e0080a04	      ALU:	ADDv	R7.___w = R8.xxxx, -R10.yyyy
                          						    	MUL_PREVs	R11.__z_ = R4.yyyy
15: a082090b 04c6b11b a00bfe87	      ALU:	ADDv	R11._y__ = -R11.zzzz, C510.yyyy
                          						    	SQRT_IEEE	R9.___w = abs(R7).wwww
16: c801060a 00c3be00 f0090000	      ALU:	DOT3v	R10.x___ = R9.wyzz, R0.zxyy
17: c802060a 00c3be00 f0090100	      ALU:	DOT3v	R10._y__ = R9.wyzz, R1.zxyy
18: 58840a0a 00c3be1b f0090288	      ALU:	DOT3v	R10.__z_ = R9.wyzz, R2.zxyy
                          						    	RECIPSQ_IEEE	R10.___w = abs(R8).wwww
19: c8030604 001a1b00 e10a0200	      ALU:	MULv	R4.xy__ = R10.zwww, R2.wwww
      0000601a 00001200     	EXEC ADDR(0x1a) CNT(0x6) BOOL_ADDR(0x80)
1a: c8010609 04b1c600 e1040a00	      ALU:	MULv	R9.x___ = -R4.yyyy, R10.zzzz
1b: c80c060c 002c1b00 e10a0000	      ALU:	MULv	R12.__zw = R10.xxxw, R0.wwww
1c: c803060c 00191b00 e10a0100	      ALU:	MULv	R12.xy__ = R10.ywww, R1.wwww
1d: c8010600 00c66c00 e00c0c00	      ALU:	ADDv	R0.x___ = R12.zzzz, R12.xxxx
1e: c808060b 04b3b0b1 d10c0afd	      ALU:	DOT2ADDv	R11.___w = C509.yyyy, -R12.wyyy, R10.xyyy
1f: b8120404 016c6c86 c00004fe	      ALU:	ADDv	R4._y__ = R0.xxxx, R4.xxxx
                          						    	SUB_CONST_0	R4.x___ = -C510.y, -R4.z
      00006020 00001200     	EXEC ADDR(0x20) CNT(0x6) BOOL_ADDR(0x80)
20: c8030600 00b0b200 e0040400	      ALU:	ADDv	R0.xy__ = R4.xyyy, R4.zyyy
21: c8070604 00b1c000 e1000a00	      ALU:	MULv	R4.xyz_ = R0.yyyy, R10.xyzz
22: c8010604 046c1b00 e0040000	      ALU:	ADDv	R4.x___ = -R4.xxxx, R0.wwww
23: a8120004 04b11b00 c00401ff	      ALU:	ADDv	R4._y__ = -R4.yyyy, R1.wwww
                          						    	MUL_CONST_0	R0.x___ = C511.w, R0.x
24: 14030600 016cc5c6 e1000904	      ALU:	MULv	R0.xy__ = R0.xxxx, R9.yzzz
25: 04460409 00bc1b1b a100fd02	      ALU:	MULv	R9._yz_ = R0.xxyy, C509.wwww
                          						    	ADD_PREVs	R4.__z_ = R2.wwww
      00006026 00001200     	EXEC ADDR(0x26) CNT(0x6) BOOL_ADDR(0x80)
26: c8010600 00bebe00 f0040400	      ALU:	DOT3v	R0.x___ = R4.zxyy, R4.zxyy
27: 58170009 00bfc06c e00b0980	      ALU:	ADDv	R9.xyz_ = R11.wxyy, R9.xyzz
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
28: c8070604 00c06c00 e1040000	      ALU:	MULv	R4.xyz_ = R4.xyzz, R0.xxxx
29: c80f0604 00a6cd00 f2040400	      ALU:	CUBEv	R4 = R4.zzxy, R4.yxzz
2a: 4c14000b 001b1bc6 e2040484	      ALU:	MAXv	R11.__z_ = R4.wwww, R4.wwww
                          						    	RECIP_IEEE	R0.x___ = abs(R4).zzzz
2b: c803060b 006d6cc6 cb0400fd	      ALU:	MULADDv	R11.xy__ = C509.zzzz, R4.yxxx, R0.xxxx
      0255602c 00001200     	EXEC ADDR(0x2c) CNT(0x6) BOOL_ADDR(0x80)
2c: 6438d121 1f1ffe88 00004000	      FETCH:	SAMPLE	R13.xyz_ = R9.yzy CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2d: 100840a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R4.xyz_ = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2e: 9028b161 1f1ff688 0000c000	      FETCH:	SAMPLE	R11.xyzw = R11.xyz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2f: 1068c0a1 1f1ff688 00004000	      FETCH:	SAMPLE	R12.xyzw = R5.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
30: c8088000 001b1b00 e10c0600	   (S)ALU:	MULv	export0.___w = R12.wwww, R6.wwww	; COLOR
31: ac200006 000000cb e20606fe	      ALU:	MUL_CONST_1	R0._y__ = C510.z, R11.w
      00006032 00001200     	EXEC ADDR(0x32) CNT(0x6) BOOL_ADDR(0x80)
32: b0180006 001bc641 800209fd	      ALU:	ADDv	R6.___w = R2.wwww, C265.zzzz
                          						    	ADD_CONST_0	R0.x___ = C509.x, R0.y
33: 14010600 006c006c c8000001	      ALU:	FRACv	R0.x___ = R0.xxxx
34: 0c210000 02b16cc6 c00000fc	      ALU:	ADDv	R0.x___ = R0.yyyy, -R0.xxxx
                          						    	MUL_PREVs	R0._y__ = C508.zzzz
35: c8030600 00b0b000 a000fe00	      ALU:	ADDv	R0.xy__ = R0.xyyy, C510.xyyy
36: a8870202 00c06c41 00100002	      ALU:	ADDv	R2.xyz_ = C272.xyzz, C256.xxxx
                          						    	MUL_CONST_0	R2.___w = C258.x, R0.y
37: c8070604 001bc0c0 eb020402	      ALU:	MULADDv	R4.xyz_ = R2.xyzz, R2.wwww, R4.xyzz
      00006038 00001200     	EXEC ADDR(0x38) CNT(0x6) BOOL_ADDR(0x80)
38: 38830205 00c5b06c e1080300	      ALU:	MULv	R5.xy__ = R8.yzzz, R3.xyyy
                          						    	EXP_IEEE	R2.___w = R0.xxxx
39: c8070608 00c0c000 e0060600	      ALU:	ADDv	R8.xyz_ = R6.xyzz, R6.xyzz
3a: 14070602 00c0b11b a10d0f00	      ALU:	MULv	R2.xyz_ = R13.xyzz, C271.yyyy
3b: 044b0600 00c0c06c 810cff09	      ALU:	MULv	R0.xy_w = R12.xyzz, C511.xyzz
                          						    	ADD_PREVs	R6.__z_ = C265.xxxx
3c: 14070603 00c0c01b e1080c01	      ALU:	MULv	R3.xyz_ = R8.xyzz, R12.xyzz
3d: 04410006 00b11bb1 45fe0b09	      ALU:	SETGTv	R6.x___ = C510.yyyy, R11.wwww
                          						    	ADD_PREVs	R0.__z_ = C265.yyyy
      0000603e 00001200     	EXEC ADDR(0x3e) CNT(0x6) BOOL_ADDR(0x80)
3e: b8120806 00bfbe42 d0000807	      ALU:	DOT3v	R6._y__ = R0.wxyy, R8.zxyy
                          						    	SUB_CONST_0	R8.x___ = C263.x, R0.z
3f: b8220806 00b11b82 8206fc07	      ALU:	MAXv	R6._y__ = R6.yyyy, C508.wwww
                          						    	SUB_CONST_0	R8._y__ = C263.y, R0.z
40: b8480800 00b1b146 a306fe06	      ALU:	MINv	R0.___w = R6.yyyy, C510.yyyy
                          						    	SUB_CONST_0	R8.__z_ = C262.x, R6.z
41: b8870800 001bc086 e1020b06	      ALU:	MULv	R0.xyz_ = R2.wwww, R11.xyzz
                          						    	SUB_CONST_0	R8.___w = C262.y, R6.z
42: c80b0601 006cc0c0 ee06000b	      ALU:	CNDGTv	R1.xy_w = R11.xyzz, R6.xxxx, R0.xyzz
43: b8210900 00bebe47 f00a0a08	      ALU:	DOT3v	R0.x___ = R10.zxyy, R10.zxyy
                          						    	SUB_CONST_0	R9._y__ = C264.x, R6.w
      00006044 00001200     	EXEC ADDR(0x44) CNT(0x6) BOOL_ADDR(0x80)
44: b8410909 046cb187 a009fe08	      ALU:	ADDv	R9.x___ = -R9.xxxx, C510.yyyy
                          						    	SUB_CONST_0	R9.__z_ = C264.y, R6.w
45: 58170006 00bebe6c e1090980	      ALU:	MULv	R6.xyz_ = R9.zxyy, R9.zxyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
46: c8010606 00b3b36c f1080806	      ALU:	DOT2ADDv	R6.x___ = R6.xxxx, R8.wyyy, R8.wyyy
47: c8080606 006e6ec6 f1080806	      ALU:	DOT2ADDv	R6.___w = R6.zzzz, R8.zxxx, R8.zxxx
48: 58470600 00be6c1b e10a0086	      ALU:	MULv	R0.xyz_ = R10.zxyy, R0.xxxx
                          						    	RECIPSQ_IEEE	R6.__z_ = abs(R6).wwww
49: 58840605 00b1b16c e1060686	      ALU:	MULv	R5.__z_ = R6.yyyy, R6.yyyy
                          						    	RECIPSQ_IEEE	R6.___w = abs(R6).xxxx
      0000604a 00001200     	EXEC ADDR(0x4a) CNT(0x6) BOOL_ADDR(0x80)
4a: c8030606 00c51a00 e1090600	      ALU:	MULv	R6.xy__ = R9.yzzz, R6.zwww
4b: 140f0608 010d076c c108060d	      ALU:	MULv	R8 = R8.yxzw, R6.wzzw
4c: 04430606 00b06c6c c10600fc	      ALU:	MULv	R6.xy__ = R6.xyyy, R0.xxxx
                          						    	ADD_PREVs	R6.__z_ = C508.xxxx
4d: c9010606 00b2c56c f1080006	      ALU:	DOT2ADDv	R6.x___ = R6.xxxx, R8.zyyy, R0.yzzz CLAMP
4e: c9020606 006fc5b1 f1080006	      ALU:	DOT2ADDv	R6._y__ = R6.yyyy, R8.wxxx, R0.yzzz CLAMP
4f: c8070606 00cdcd00 e1050600	      ALU:	MULv	R6.xyz_ = R5.yxzz, R6.yxzz
      00006050 00001200     	EXEC ADDR(0x50) CNT(0x6) BOOL_ADDR(0x80)
50: c8040601 006db0b1 910604fd	      ALU:	DOT2ADDv	R1.__z_ = C509.yyyy, R6.yxxx, C260.xyyy
51: b2870600 00c0c046 e004070d	      ALU:	ADDv	R0.xyz_ = R4.xyzz, R7.xyzz
                          						    	ADD_CONST_0	R6.___w = C269.x, R6.z CLAMP
52: a81b0701 001b1045 e1000103	      ALU:	MULv	R1.xy_w = R0.wwww, R1.xyww
                          						    	MUL_CONST_0	R7.x___ = C259.x, R6.y
53: a82c0707 0071ac84 a1060503	      ALU:	MULv	R7.__zw = R6.yyyx, C261.xxxy
                          						    	MUL_CONST_0	R7._y__ = C259.y, R6.x
54: 00170106 00101b61 e1010607	      ALU:	MULv	R6.xyz_ = R1.xyww, R6.wwww
                          						    	ADDs	R1.x___ = R7.yyxx
55: 00270106 00b41bcb a106fe07	      ALU:	MULv	R6.xyz_ = R6.xzyy, C510.wwww
                          						    	ADDs	R1._y__ = R7.wwzz
      00005056 00002200     	EXEC_END ADDR(0x56) CNT(0x5) BOOL_ADDR(0x80)
56: c8070606 01c0c6b4 ab060c02	      ALU:	MULADDv	R6.xyz_ = -R2.xzyy, R6.xyzz, C268.zzzz
57: c8070606 00b4c0c0 eb030106	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R3.xzyy, R1.xyzz
58: c8070606 00b4b4c0 eb030006	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R3.xzyy, R0.xzyy
59: c8070606 00b46cc0 ab060e02	      ALU:	MULADDv	R6.xyz_ = R2.xyzz, R6.xzyy, C270.xxxx
5a: c8078000 00c06c00 a1060f00	      ALU:	MULv	export0.xyz_ = R6.xyzz, C271.xxxx	; COLOR
      00000000 00000000     	NOP
