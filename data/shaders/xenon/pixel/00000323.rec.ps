      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: c8070508 00ca1a00 e1020200	      ALU:	MULv	R8.xyz_ = R2.zwzz, R2.zwww
07: c8070508 00ca1ac0 eb010108	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R1.zwzz, R1.zwww
08: c8070508 00cacb62 eb000008	      ALU:	MULADDv	R8.xyz_ = R8.zyxx, R0.zwzz, R0.wwzz
09: 58410808 006c6cc6 e0080888	      ALU:	ADDv	R8.x___ = R8.xxxx, R8.xxxx
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R8).zzzz
0a: 5827080f 00c0c0b1 e0050588	      ALU:	ADDv	R15.xyz_ = R5.xyzz, R5.xyzz
                          						    	RECIPSQ_IEEE	R8._y__ = abs(R8).yyyy
0b: c80d0509 00840600 e1080000	      ALU:	MULv	R9.x_zw = R8.xzzy, R0.zzzw
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c807050e 00be1600 e1080100	      ALU:	MULv	R14.xyz_ = R8.zxyy, R1.zzww
0d: c802050a 04b11b00 e00e0100	      ALU:	ADDv	R10._y__ = -R14.yyyy, R1.wwww
0e: 14070508 01be166c e1080209	      ALU:	MULv	R8.xyz_ = R8.zxyy, R2.zzww
0f: 04140a0a 04b11b1b e0080200	      ALU:	ADDv	R10.__z_ = -R8.yyyy, R2.wwww
                          						    	ADD_PREVs	R10.x___ = R0.wwww
10: c8040505 00bebe00 f00a0a00	      ALU:	DOT3v	R5.__z_ = R10.zxyy, R10.zxyy
11: 58430505 00b0b0c6 a1870a85	      ALU:	MULv	R5.xy__ = abs(R7).xyyy, C266.xyyy
                          						    	RECIPSQ_IEEE	R5.__z_ = abs(R5).zzzz
      05006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8070507 00c0c600 e10a0500	      ALU:	MULv	R7.xyz_ = R10.xyzz, R5.zzzz
13: c80f0507 00a6cd00 f2070700	      ALU:	CUBEv	R7 = R7.zzxy, R7.yxzz
14: 4c44050a 001b1bc6 e2070787	      ALU:	MAXv	R10.__z_ = R7.wwww, R7.wwww
                          						    	RECIP_IEEE	R5.__z_ = abs(R7).zzzz
15: c803050a 006dc61b cb0705fd	      ALU:	MULADDv	R10.xy__ = C509.wwww, R7.yxxx, R5.zzzz
16: 1018c081 1f1ff447 00004000	      FETCH:	SAMPLE	R12._xyz = R4.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
17: 9038a141 1f1ff688 0000c000	      FETCH:	SAMPLE	R10.xyzw = R10.xyz CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 102800a1 1f1fffc1 00004000	      FETCH:	SAMPLE	R0.yx__ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 10084081 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 14080506 001bc66c 80020901	   (S)ALU:	ADDv	R6.___w = R2.wwww, C265.zzzz
1b: 0c240505 001bb16c 800109fc	      ALU:	ADDv	R5.__z_ = R1.wwww, C265.yyyy
                          						    	MUL_PREVs	R5._y__ = C508.xxxx
1c: 14010505 001b1b1b a10afe00	      ALU:	MULv	R5.x___ = R10.wwww, C510.wwww
1d: 0443050b 04c6b06c 80050709	      ALU:	ADDv	R11.xy__ = -R5.zzzz, C263.xyyy
                          						    	ADD_PREVs	R5.__z_ = C265.xxxx
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: bc430b09 041bb046 80060806	      ALU:	ADDv	R9.xy__ = -R6.wwww, C264.xyyy
                          						    	SUB_CONST_1	R11.__z_ = C262.x, R5.z
1f: bc830b07 00b0b086 c1090906	      ALU:	MULv	R7.xy__ = R9.xyyy, R9.xyyy
                          						    	SUB_CONST_1	R11.___w = C262.y, R5.z
20: c8040505 00b3b3b1 f10b0b07	      ALU:	DOT2ADDv	R5.__z_ = R7.yyyy, R11.wyyy, R11.wyyy
21: c8080506 006e6e6c f10b0b07	      ALU:	DOT2ADDv	R6.___w = R7.xxxx, R11.zxxx, R11.zxxx
22: 5811070d 041bc61b e1090086	      ALU:	MULv	R13.x___ = -R9.wwww, R0.zzzz
                          						    	RECIPSQ_IEEE	R7.x___ = abs(R6).wwww
23: 5821070c 04c6c6c6 e10e0185	      ALU:	MULv	R12.x___ = -R14.zzzz, R1.zzzz
                          						    	RECIPSQ_IEEE	R7._y__ = abs(R5).zzzz
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 140e050d 01fc6c6c 000f000d	      ALU:	ADDv	R13._yzw = C271.xxyz, C256.xxxx
25: 04470701 00c0c06c 8104feff	      ALU:	MULv	R1.xyz_ = R4.xyzz, C510.xyzz
                          						    	ADD_PREVs	R7.__z_ = C511.xxxx
26: b4270504 00c0c045 c10f04fd	      ALU:	MULv	R4.xyz_ = R15.xyzz, R4.xyzz
                          						    	ADD_CONST_1	R5._y__ = C509.x, R5.y
27: b4480506 006c1b84 45fd0afd	      ALU:	SETGTv	R6.___w = C509.xxxx, R10.wwww
                          						    	ADD_CONST_1	R5.__z_ = C509.y, R5.x
28: ac480000 00bebe45 d0010f02	      ALU:	DOT3v	R0.___w = R1.zxyy, R15.zxyy
                          						    	MUL_CONST_1	R0.__z_ = C258.x, R5.y
29: 2c480500 001bb1c6 a200fc05	      ALU:	MAXv	R0.___w = R0.wwww, C508.yyyy
                          						    	FRACs	R5.__z_ = R5.zzzz
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 14080501 001b6c6c a300fd05	      ALU:	MINv	R1.___w = R0.wwww, C509.xxxx
2b: 041e050c 01c601c6 e1000c05	      ALU:	MULv	R12._yzw = R0.zzzz, R12.yyzw
                          						    	ADD_PREVs	R5.x___ = -R5.zzzz
2c: b41f050b 000dad04 c10b07fc	      ALU:	MULv	R11 = R11.yxzw, R7.yxxy
                          						    	ADD_CONST_1	R5.x___ = C508.w, R5.x
2d: 38160505 00616c6c e10b0e05	      ALU:	MULv	R5._yz_ = R11.yyxx, R14.xxxx
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
2e: c80c0500 0006c6f1 eb0b0905	      ALU:	MULADDv	R0.__zw = R5.yyyz, R11.zzzw, R9.zzzz
2f: c807050b 006cc000 e1050a00	      ALU:	MULv	R11.xyz_ = R5.xxxx, R10.xyzz
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: c80f050c 00000000 e00d0c00	      ALU:	ADDv	R12 = R13, R12
31: a8170501 0015c041 c00c060b	      ALU:	ADDv	R1.xyz_ = R12.yzww, R6.xyzz
                          						    	MUL_CONST_0	R5.x___ = C267.x, R0.y
32: c8040505 04c6c66c eb08020c	      ALU:	MULADDv	R5.__z_ = R12.xxxx, -R8.zzzz, R2.zzzz
33: c8070502 001bc0c0 ee060b0a	      ALU:	CNDGTv	R2.xyz_ = R10.xyzz, R6.wwww, R11.xyzz
34: a8270502 001bc080 c101020b	      ALU:	MULv	R2.xyz_ = R1.wwww, R2.xyzz
                          						    	MUL_CONST_0	R5._y__ = C267.y, R0.x
35: c8070505 04c06c00 a005fd00	      ALU:	ADDv	R5.xyz_ = -R5.xyzz, C509.xxxx
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: 08130500 00b0b0c6 e1050305	      ALU:	MULv	R0.xy__ = R5.xyyy, R3.xyyy
                          						    	MULs	R5.x___ = R5.zzzz
37: 08400905 0000006c e2050505	      ALU:	MULs	R9.__z_ = R5.xxxx
38: c8070505 00c0c000 e1090700	      ALU:	MULv	R5.xyz_ = R9.xyzz, R7.xyzz
39: c9030505 00b06c1a eb050800	      ALU:	MULADDv	R5.xy__ = R0.zwww, R5.xyyy, R8.xxxx CLAMP
3a: b6130005 006d6d46 c100050d	      ALU:	MULv	R5.xy__ = R0.yxxx, R5.yxxx
                          						    	ADD_CONST_1	R0.x___ = C269.x, R5.z CLAMP
3b: c8070500 00c06c00 e1020000	      ALU:	MULv	R0.xyz_ = R2.xyzz, R0.xxxx
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: c8040502 006db0c6 910505fc	      ALU:	DOT2ADDv	R2.__z_ = C508.zzzz, R5.yxxx, C261.xyyy
3d: c8030506 006db000 a1050300	      ALU:	MULv	R6.xy__ = R5.yxxx, C259.xyyy
3e: ac470600 00b4c645 8100fd04	      ALU:	MULv	R0.xyz_ = R0.xzyy, C509.zzzz
                          						    	MUL_CONST_1	R6.__z_ = C260.x, R5.y
3f: ac870600 00b4c684 81000c04	      ALU:	MULv	R0.xyz_ = R0.xzyy, C268.zzzz
                          						    	MUL_CONST_1	R6.___w = C260.y, R5.x
40: 14030502 00c4191b e0060604	      ALU:	ADDv	R2.xy__ = R6.xzzz, R6.ywww
41: c8070500 00c0c0c0 eb040200	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R4.xyzz, R2.xyzz
      00002042 00002200     	EXEC_END ADDR(0x42) CNT(0x2) BOOL_ADDR(0x80)
42: c8070500 00c0c0c0 eb040100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R4.xyzz, R1.xyzz
43: 0c878000 00c06c1b a1000e05	      ALU:	MULv	export0.xyz_ = R0.xyzz, C270.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
