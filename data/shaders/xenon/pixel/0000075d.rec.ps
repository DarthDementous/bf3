      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 4c8c0208 0006acc6 a1040003	      ALU:	MULv	R8.__zw = R4.zzzw, C256.xxxy
                          						    	RECIP_IEEE	R2.___w = R3.zzzz
05: c8030608 001bb000 e1020300	      ALU:	MULv	R8.xy__ = R2.wwww, R3.xyyy
06: b83870a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R5.zwz CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: b8283101 1f1ff1ff 00004000	      FETCH:	SAMPLE	R3.___x = R8.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 10089081 1f1ff688 00004000	      FETCH:	SAMPLE	R9.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 101850a1 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R5.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0009600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: 10488101 1f1ff63f 00004000	      FETCH:	SAMPLE	R8.__xw = R8.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: c807060a 00c0c000 e0060600	   (S)ALU:	ADDv	R10.xyz_ = R6.xyzz, R6.xyzz
0c: c8030604 04c6b000 a0020700	      ALU:	ADDv	R4.xy__ = -R2.zzzz, C263.xyyy
0d: c80c0604 04b1ac00 a0020600	      ALU:	ADDv	R4.__zw = -R2.yyyy, C262.xxxy
0e: 08430808 046cb0cb a0020508	      ALU:	ADDv	R8.xy__ = -R2.xxxx, C261.xyyy
                          						    	MULs	R8.__z_ = R8.wwzz
0f: 14080608 00c66c1b a503ff05	      ALU:	SETGTv	R8.___w = R3.zzzz, C511.xxxx
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: 0c870505 00c0c01b e10a0506	      ALU:	MULv	R5.xyz_ = R10.xyzz, R5.xyzz
                          						    	MUL_PREVs	R5.___w = R6.wwww
11: 14070602 00c0c01b e10a0909	      ALU:	MULv	R2.xyz_ = R10.xyzz, R9.xyzz
12: 0c870203 00c0101b e1080806	      ALU:	MULv	R3.xyz_ = R8.xyzz, R8.xyww
                          						    	MUL_PREVs	R2.___w = R6.wwww
13: c80f0606 02000000 e0050200	      ALU:	ADDv	R6 = R5, -R2
14: c8088000 001b1b1b eb060302	      ALU:	MULADDv	export0.___w = R2.wwww, R6.wwww, R3.wwww	; COLOR
15: c8070602 00c01bc0 eb060302	      ALU:	MULADDv	R2.xyz_ = R2.xyzz, R6.xyzz, R3.wwww
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: c8020606 00b3b3b1 f1040403	      ALU:	DOT2ADDv	R6._y__ = R3.yyyy, R4.wyyy, R4.wyyy
17: c8010606 006e6e6c f1040403	      ALU:	DOT2ADDv	R6.x___ = R3.xxxx, R4.zxxx, R4.zxxx
18: 40100606 0000006c e2060686	      ALU:	LOG_IEEE	R6.x___ = abs(R6).xxxx
19: 40200606 000000b1 e2060686	      ALU:	LOG_IEEE	R6._y__ = abs(R6).yyyy
1a: c8030606 00b0c400 a1060800	      ALU:	MULv	R6.xy__ = R6.xyyy, C264.xzzz
1b: 38100606 0000006c e2060606	      ALU:	EXP_IEEE	R6.x___ = R6.xxxx
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: 38240606 00c61bb1 e1030006	      ALU:	MULv	R6.__z_ = R3.zzzz, R0.wwww
                          						    	EXP_IEEE	R6._y__ = R6.yyyy
1d: c9030606 00b01900 a1060800	      ALU:	MULv	R6.xy__ = R6.xyyy, C264.ywww CLAMP
1e: c8030606 046db100 a006ff00	      ALU:	ADDv	R6.xy__ = -R6.yxxx, C511.yyyy
1f: a8120303 006cb184 a1060302	      ALU:	MULv	R3._y__ = R6.xxxx, C259.yyyy
                          						    	MUL_CONST_0	R3.x___ = C258.y, R6.x
20: a8420306 00c6b184 e1060604	      ALU:	MULv	R6._y__ = R6.zzzz, R6.yyyy
                          						    	MUL_CONST_0	R3.__z_ = C260.y, R6.x
21: a8170600 00c06c45 a1070102	      ALU:	MULv	R0.xyz_ = R7.xyzz, C257.xxxx
                          						    	MUL_CONST_0	R6.x___ = C258.x, R6.y
      00005022 00002200     	EXEC_END ADDR(0x22) CNT(0x5) BOOL_ADDR(0x80)
22: a8480606 00b16c45 a1060403	      ALU:	MULv	R6.___w = R6.yyyy, C260.xxxx
                          						    	MUL_CONST_0	R6.__z_ = C259.x, R6.y
23: c8070606 00c01b14 eb030106	      ALU:	MULADDv	R6.xyz_ = R6.xzww, R3.xyzz, R1.wwww
24: c8070606 00c0c000 e1020600	      ALU:	MULv	R6.xyz_ = R2.xyzz, R6.xyzz
25: c8070606 00c0c0c0 eb000206	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R0.xyzz, R2.xyzz
26: c8078000 00c06c00 a1060900	      ALU:	MULv	export0.xyz_ = R6.xyzz, C265.xxxx	; COLOR
      00000000 00000000     	NOP
