      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: 100050c1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R5.__x_ = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: 14030805 00c6c71b e1030301	   (S)ALU:	MULv	R5.xy__ = R3.zzzz, R3.wzzz
08: 04880400 001bc66c 80030b0b	      ALU:	ADDv	R0.___w = R3.wwww, C267.zzzz
                          						    	ADD_PREVs	R4.___w = C267.xxxx
09: 140c080a 0071ac1b 2103fe02	      ALU:	MULv	R10.__zw = C259.yyyx, C510.xxxy
0a: c808080b 01c6b1c6 ab05030a	      ALU:	MULADDv	R11.___w = -R10.zzzz, R5.zzzz, C259.yyyy
0b: 048c000d 041bacb1 80000a0b	      ALU:	ADDv	R13.__zw = -R0.wwww, C266.xxxy
                          						    	ADD_PREVs	R0.___w = C267.yyyy
      0000600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: b8140d00 00bebe43 d0000009	      ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R13.x___ = C265.x, R0.w
0d: c8030805 00c6c7b0 eb020205	      ALU:	MULADDv	R5.xy__ = R5.xyyy, R2.zzzz, R2.wzzz
0e: 58430009 041bb0c6 a0040880	      ALU:	ADDv	R9.xy__ = -R4.wwww, C264.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0f: c8030805 00c61a6d eb010105	      ALU:	MULADDv	R5.xy__ = R5.yxxx, R1.zzzz, R1.zwww
10: b82c0d05 00acac83 c1090909	      ALU:	MULv	R5.__zw = R9.xxxy, R9.xxxy
                          						    	SUB_CONST_0	R13._y__ = C265.y, R0.w
11: c8080804 0019191b f10d0d05	      ALU:	DOT2ADDv	R4.___w = R5.wwww, R13.ywww, R13.ywww
      00006012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: c8040807 00c4c4c6 f10d0d05	      ALU:	DOT2ADDv	R7.__z_ = R5.zzzz, R13.xzzz, R13.xzzz
13: 58420505 00b1b16c e0050585	      ALU:	ADDv	R5._y__ = R5.yyyy, R5.yyyy
                          						    	RECIPSQ_IEEE	R5.__z_ = abs(R5).xxxx
14: c80c080c 00f1c600 e1050200	      ALU:	MULv	R12.__zw = R5.yyyz, R2.zzzz
15: c8090805 00c5c600 e1050100	      ALU:	MULv	R5.x__w = R5.yzzz, R1.zzzz
16: a883000c 00c5c602 c1050303	      ALU:	MULv	R12.xy__ = R5.yzzz, R3.zzzz
                          						    	MUL_CONST_0	R0.___w = C259.w, R0.z
17: 58140b03 046c1bc6 e00c0387	      ALU:	ADDv	R3.__z_ = -R12.xxxx, R3.wwww
                          						    	RECIPSQ_IEEE	R11.x___ = abs(R7).zzzz
      00006018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: 58210b03 046c1b1b e0050184	      ALU:	ADDv	R3.x___ = -R5.xxxx, R1.wwww
                          						    	RECIPSQ_IEEE	R11._y__ = abs(R4).wwww
19: 140c0809 01dbacc6 e100000c	      ALU:	MULv	R9.__zw = R0.wwwz, R0.xxxy
1a: 042f0309 0000101b e1090b02	      ALU:	MULv	R9 = R9, R11.xyww
                          						    	ADD_PREVs	R3._y__ = R2.wwww
1b: c8010800 00bebe00 f0030300	      ALU:	DOT3v	R0.x___ = R3.zxyy, R3.zxyy
1c: 58130001 001ab06c e0090680	      ALU:	ADDv	R1.xy__ = R9.zwww, R6.xyyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
1d: c8070800 00c06c00 e1030000	      ALU:	MULv	R0.xyz_ = R3.xyzz, R0.xxxx
      0540601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: c80f0800 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
1f: 4c440102 001b1bc6 e2000080	      ALU:	MAXv	R2.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.__z_ = abs(R0).zzzz
20: c8030802 006dc61b cb0001fe	      ALU:	MULADDv	R2.xy__ = C510.wwww, R0.yxxx, R1.zzzz
21: 90583041 1f1ffe88 0000c000	      FETCH:	SAMPLE	R3.xyz_ = R2.xyz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: b828b0c1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R11.__x_ = R6.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
23: 103850e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R7.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 10480021 1f1ffe88 00004000	      FETCH:	SAMPLE	R0.xyz_ = R1.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
25: 10182021 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R1.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
26: c8080801 001b1b00 e1020800	   (S)ALU:	MULv	R1.___w = R2.wwww, R8.wwww
27: c8080800 00bebe00 f0040400	      ALU:	DOT3v	R0.___w = R4.zxyy, R4.zxyy
28: c8070801 00c0c000 e0080800	      ALU:	ADDv	R1.xyz_ = R8.xyzz, R8.xyzz
29: c8070806 00c0c000 e1010200	      ALU:	MULv	R6.xyz_ = R1.xyzz, R2.xyzz
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: c8040809 00bec000 b000ff00	      ALU:	DOT3v	R9.__z_ = R0.zxyy, C511.xyzz
2b: 581e0808 00fc6c1b a1050080	      ALU:	MULv	R8._yzw = R5.xxyz, C256.xxxx
                          						    	RECIPSQ_IEEE	R8.x___ = abs(R0).wwww
2c: 41180802 006cc6c6 e1080487	      ALU:	MULv	R2.___w = R8.xxxx, R4.zzzz CLAMP
                          						    	LOG_IEEE	R8.x___ = abs(R7).zzzz
2d: 40270802 0015c01b e1080284	      ALU:	MULv	R2.xyz_ = R8.yzww, R2.xyzz
                          						    	LOG_IEEE	R8._y__ = abs(R4).wwww
2e: a8130408 00b0c400 810804ff	      ALU:	MULv	R8.xy__ = R8.xyyy, C260.xzzz
                          						    	MUL_CONST_0	R4.x___ = C511.w, R0.x
2f: 381f0807 000dad6c e10d0b08	      ALU:	MULv	R7 = R13.yxzw, R11.yxxy
                          						    	EXP_IEEE	R8.x___ = R8.xxxx
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: 382c0808 00ac1bb1 e1090508	      ALU:	MULv	R8.__zw = R9.xxxy, R5.wwww
                          						    	EXP_IEEE	R8._y__ = R8.yyyy
31: c9010809 00c5b3c6 f1070c08	      ALU:	DOT2ADDv	R9.x___ = R8.zzzz, R7.yzzz, R12.wyyy CLAMP
32: c9020809 0018b31b f1070c08	      ALU:	DOT2ADDv	R9._y__ = R8.wwww, R7.xwww, R12.wyyy CLAMP
33: a923040b 00b01901 810804ff	      ALU:	MULv	R11.xy__ = R8.xyyy, C260.ywww CLAMP
                          						    	MUL_CONST_0	R4._y__ = C511.w, R0.y
34: a84b0400 04cdb102 800bfdff	      ALU:	ADDv	R0.xy_w = -R11.yxzz, C509.yyyy
                          						    	MUL_CONST_0	R4.__z_ = C511.w, R0.z
35: a8130a08 006db041 c1090007	      ALU:	MULv	R8.xy__ = R9.yxxx, R0.xyyy
                          						    	MUL_CONST_0	R10.x___ = C263.x, R0.y
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: a82c0a07 0071ac80 81080607	      ALU:	MULv	R7.__zw = R8.yyyx, C262.xxxy
                          						    	MUL_CONST_0	R10._y__ = C263.y, R0.x
37: a8170703 00b4b449 c1040305	      ALU:	MULv	R3.xyz_ = R4.xzyy, R3.xzyy
                          						    	MUL_CONST_0	R7.x___ = C261.x, R8.y
38: a82e0708 009c8c88 c10a0905	      ALU:	MULv	R8._yzw = R10.xxwy, R9.xxzy
                          						    	MUL_CONST_0	R7._y__ = C261.y, R8.x
39: 00470504 00c0c0bb e1040508	      ALU:	MULv	R4.xyz_ = R4.xyzz, R5.xyzz
                          						    	ADDs	R5.__z_ = R8.wwyy
3a: b0130805 00c4198a c00707fd	      ALU:	ADDv	R5.xy__ = R7.xzzz, R7.ywww
                          						    	ADD_CONST_0	R8.x___ = C509.y, R8.z
3b: 40880506 006cc61b a208fe02	      ALU:	MAXv	R6.___w = R8.xxxx, C510.zzzz
                          						    	LOG_IEEE	R5.___w = R2.wwww
      0000603c 00001200     	EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80)
3c: c80f0808 00000000 e1060500	      ALU:	MULv	R8 = R6, R5
3d: 38470004 00c06c1b a104fd08	      ALU:	MULv	R4.xyz_ = R4.xyzz, C509.xxxx
                          						    	EXP_IEEE	R0.__z_ = R8.wwww
3e: c8070804 00c0c600 e1040000	      ALU:	MULv	R4.xyz_ = R4.xyzz, R0.zzzz
3f: 14070804 00b4b41b a1040101	      ALU:	MULv	R4.xyz_ = R4.xzyy, C257.xzyy
40: c8070808 00b46cc0 ab040208	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R4.xzyy, C258.xxxx
41: c8070808 00b4c6c0 ab030308	      ALU:	MULADDv	R8.xyz_ = R8.xyzz, R3.xzyy, C259.zzzz
      00002042 00002200     	EXEC_END ADDR(0x42) CNT(0x2) BOOL_ADDR(0x80)
42: c8070808 00b4b4b4 eb020108	      ALU:	MULADDv	R8.xyz_ = R8.xzyy, R2.xzyy, R1.xzyy
43: 0c878000 00b46c1b a1080c00	      ALU:	MULv	export0.xyz_ = R8.xzyy, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.wwww	; COLOR
