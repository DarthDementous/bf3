//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   float $fresnelterm;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   sampler2D $tranpcy;
//   float $usendotl;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $suncolour     c1       1
//   $sunintensity  c2       1
//   $usendotl      c3       1
//   $invscreensize c4       1
//   $latten0       c5       1
//   $lcol          c6       3
//   $wlightpos     c9       3
//   $worldviewpos  c12      1
//   $matvalue      c13      1
//   $fresnelterm   c14      1
//   $compressedhdr c15      1
//   $diff          s0       1
//   $tranpcy       s1       1
//   $lmap          s2       1
//   $bump          s3       1
//   $spec          s4       1
//   $screenshadmap s5       1
//   $envmap        s6       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c15
defconst $diff, sampler2d, object, [1, 1], s0
defconst $envmap, samplercube, object, [1, 1], s6
defconst $fresnelterm, float, scalar, [1, 1], c14
defconst $invscreensize, float, vector, [1, 2], c4
defconst $latten0, float, vector, [1, 4], c5
defconst $lcol, float, matrix_columns, [4, 4], c6-8
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c13
defconst $screenshadmap, sampler2d, object, [1, 1], s5
defconst $spec, sampler2d, object, [1, 1], s4
defconst $suncolour, float, vector, [1, 3], c1
defconst $sunintensity, float, scalar, [1, 1], c2
defconst $tranpcy, sampler2d, object, [1, 1], s1
defconst $usendotl, float, scalar, [1, 1], c3
defconst $wlightpos, float, matrix_columns, [4, 4], c9-11
defconst $worldviewpos, float, vector, [1, 3], c12
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=13
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 28
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6.xy
dcl_color_centroid r7

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 0, 0, 0, 0
def c251, 4, 0.25, 0.300000012, 0
def c252, 2, 1.5, -127.5, 10
def c253, 0, 1, 0.5, -1
def c254, 0.143999994, 0.298999995, 0.587000012, 3.29999995
def c255, 0.0599999987, 0.150000006, 0.289999992, 255


/*    0.0 */     exec
/*   10   */     tfetch2D r13.x___, r5.zw, tf1, FetchValidOnly=false
/*   11   */     tfetch2D r6.__yw, r5.xy, tf3, FetchValidOnly=false
/*   12   */     tfetch2D r9.xzy_, r6.xy, tf2
/*   13   */     tfetch2D r12.xyz_, r5.xy, tf4
/*   14   */     tfetch2D r10, r5.xy, tf0
/*   15   */     serialize
                 mul r12.w, c13.x, c252.w
/*    0.1 */     exec
/*   16   */     mul r3.w, r10.w, r7.w
/*   17   */     add r11.xyz, r7.zyx, r7.zyx
/*   18   */     dp3 r7.w, r3.zxy, r3.zxy
/*   19   */     dp3 r11.w, r12.zxy, c255.xyz
/*   20   */     mul r5.xyz, r12.xyz, c253.z
/*   21   */     mul r7.xyz, r9.xzy, c0.x
               + rsq r7.w, r7_abs.w
/*    1.0 */     exec
/*   22   */     mad r6.xy, r6.zw, c252.x, c253.w
/*   23   */     mul r3.xyz, r7.w, r3.xyz
/*   24   */     mul r12.xyz, r7.xyz, r10.xyz
               + muls r13.y, r6.xx
/*   25   */     mul r7.yzw, r5.zzyx, r9.yyzx
               + muls r13.z, r6.yy
/*   26   */     add r6.zw, -r13.yyyx, c253.y
/*   27   */     mul r12, r12.zyxw, r11
               + movs r7._, r6.z
/*    1.1 */     exec
/*   28   */     add r4.w, r12.w, c253.y
               + adds_prev r7.x, -r13.z
/*   29   */     max r4.w, r4.w, c253.x
               + sqrt r6.z, r7_abs.x
/*   30   */     dp3 r0.x, r6.zxy, r0.zxy
/*   31   */     dp3_sat r3.z, r3.zxy, r6.zxy
               + mulsc r3.x, c251.x, r7.y
/*   32   */     dp3 r0.y, r6.zxy, r1.zxy
               + mulsc r3.y, c251.x, r7.z
/*   33   */     mul r7.x, r0.y, r1.w
               + log r3.z, r3.z
/*    2.0 */     exec
/*   34   */     mad r7.x, r0.x, r0.w, r7.x
/*   35   */     mul r4.w, r4.w, r3.z
               + mulsc r3.z, c251.x, r7.w
/*   36   */     dp3 r0.z, r6.zxy, r2.zxy
               + exp r7.y, r4.w
/*   37   */     mad r7.x, r0.z, r2.w, r7.x
/*   38   */     mul r7.yzw, r3.xxyz, r7.y
/*   39   */     mul r2.xyz, r7.yzw, c1.zyx
               + adds r7.x, r7.xx
/*    2.1 */     exec
/*   40   */     mul r7.xyz, r7.x, r0.xzy
/*   41   */     mad r2.xyz, r2.zyx, c2.x, r12.zyx
/*   42   */     add r3.y, -r7.z, r1.w
/*   43   */     mul r1.xyz, r11.zyx, r10.xyz
               + movs r7._, -r7.y
/*   44   */     add r3.z, -r7.x, r0.w
               + adds_prev r3.x, r2.w
/*   45   */     dp3 r7.y, r3.xzy, r3.xzy
               + movs_sat r7.x, r4.z
/*    3.0 */     exec    // PredicateClean=false
/*   46   */     mul r3.w, r3.w, r6.w
               + rsq r7.y, r7_abs.y
/*   47   */     mul r7.yzw, r3.zzyx, r7.y
               + setp_ne r7._, c3.x
/*    3.1 */ (p0) exec
/*   48   */     (p0) mul r3.y, c2.x, c1.x
/*   49   */     (p0) cndeq r10.xyz, c253.xxy, -r4.zx, r4.y
/*   50   */     (p0) dp3_sat r4.w, r6.zxy, r4.zxy
               + (p0) movs_sat r3.x, -r4.z
/*   51   */     (p0) dp3_sat r3.z, r6.zxy, r10.xyz
               + (p0) movs r7._, r4.w
/*   52   */     (p0) add r3.x, r3.z, -r3.x
               + (p0) adds_prev r7.x, -r7.x
/*   53   */     (p0) mad r3.x, r3.x, c251.y, r7.x
/*    4.0 */ (p0) exec
/*   54   */     (p0) mul r3.y, r3.y, r3.x
/*   55   */     (p0) mul r4.xw, r3.yx, c251.z
/*   56   */     (p0) mul r3.xy, r4.w, c1.yz
/*   57   */     (p0) mul r4.yz, r3.yyx, c2.x
/*   58   */     (p0) add r2.xyz, r2.xyz, r4.xzy
/*    4.1 */     alloc colors
/*    5.0 */     exec
/*   59   */     mul r3.xy, r8_abs.xy, c4.xy
/*   60   */     cube r7, r7.wwyz, r7.zyw
/*   61   */     mov r4.z, r7.w
               + rcp r3.z, r7_abs.z
/*   62   */     mad r4.xy, r7.yx, r3.z, c252.y
/*   63   */     tfetchCube r12, r4.xyz, tf6
/*   64   */     tfetch2D r7.__w_, r3.xy, tf5
/*    5.1 */     exec
/*   65   */     serialize
                 add r3.x, r0.w, c12.x
               + muls r7.y, r2.ww
/*   66   */     add r8.z, -c14.x, c252.x
               + addsc r7.x, c12.z, r2.w
/*   67   */     mul r11.w, r7.z, c253.z
               + addsc r7.z, c12.y, r1.w
/*   68   */     add r6.zw, -r7.x, c11.xxxy
               + subsc r6.x, c10.x, r7.z
/*   69   */     sgt r7.w, c253.y, r12.w
               + subsc r6.y, c10.y, r7.z
/*   70   */     dp3 r7.z, r1.zxy, c254.xyz
               + movs r7.x, r12.w
/*    6.0 */     exec
/*   71   */     add r10.xy, -r3.x, c9.xy
               + mulsc r7.x, c255.w, r7.x
/*   72   */     mad r7.y, r1.w, r1.w, r7.y
/*   73   */     mad r4.x, r0.w, r0.w, r7.y
/*   74   */     dp3 r7.y, r0.zxy, r0.zxy
               + addsc r3.z, c253.z, r7.x
/*   75   */     mul r3.xy, r10.xy, r10.xy
               + rsq r7.y, r7_abs.y
/*   76   */     max r7.z, r7.z, c255.y
               + frcs r3.z, r3.z
/*    6.1 */     exec
/*   77   */     dp2add r3.y, r6.yw, r6.yw, r3.y
/*   78   */     min r7.z, r7.z, c253.y
               + rsq r4.x, r4_abs.x
/*   79   */     dp2add r3.x, r6.xz, r6.xz, r3.x
/*   80   */     mul r11.x, r4.x, r1.w
               + rsq r8.x, r3_abs.x
/*   81   */     mul r11.y, r4.x, r0.w
               + rsq r8.y, r3_abs.y
/*   82   */     mul r11.z, r4.x, r2.w
               + log r3.x, r3_abs.x
/*    7.0 */     exec
/*   83   */     add r7.x, r7.x, -r3.z
               + log r3.y, r3_abs.y
/*   84   */     mul r4.xzw, r0.xzzy, r7.y
               + addsc r0.w, c252.z, r7.x
/*   85   */     mul r7.xy, r3.xy, c5.xz
               + exp r0.w, r0.w
/*   86   */     mul r6, r6.yxzw, r8.yxxy
               + exp r7.x, r7.x
/*   87   */     mul r3.xyz, r0.w, r12.xyz
               + exp r7.y, r7.y
/*   88   */     cndgt r3.xyz, r7.w, r3.xyz, r12.xyz
/*    7.1 */     exec
/*   89   */     dp3 r11.z, -r11.zyx, r0.zxy
               + mulsc_sat r11.x, c5.y, r7.x
/*   90   */     mul r3.xyz, r7.z, r3.xyz
               + mulsc_sat r11.y, c5.w, r7.y
/*   91   */     add r0, -r11, c253.y
/*   92   */     muls r7.x, r0.zz
/*   93   */     muls r10.z, r7.xx
/*   94   */     mul r7.xyz, r10.xzy, r8.xzy
/*    8.0 */     exec
/*   95   */     mul r4.xy, r7.xz, r4.x
               + addsc_sat r7.x, c14.x, r7.y
/*   96   */     dp2add_sat r4.y, r6.xw, r4.wz, r4.y
/*   97   */     dp2add_sat r4.x, r6.yz, r4.wz, r4.x
/*   98   */     mul r7.xyz, r3.xyz, r7.x
/*   99   */     mul r7.xyz, r7.xyz, r5.xyz
/*  100   */     mul r3.yz, r0.xxy, c8.xxy
               + mulsc r3.x, c254.w, r7.x
/*    8.1 */     exec
/*  101   */     mul r5.xy, r3.yz, r4.xy
               + mulsc r3.y, c254.w, r7.y
/*  102   */     mul r7.xy, r4.yx, r0.yx
               + mulsc r3.z, c254.w, r7.z
/*  103   */     dp2add r4.x, r7.yx, c7.xy, c253.x
/*  104   */     mul r3.xyz, r3.xyz, c13.z
               + mulsc r5.z, c6.x, r7.y
/*  105   */     mul r3.xyz, r3.xzy, r9.xyz
               + mulsc r5.w, c6.y, r7.x
/*  106   */     add r4.yz, r5.xxz, r5.yyw
/*    9.0 */     exece
/*  107   */     mad r7.xyz, r1.xyz, r4.zxy, r3.xzy
/*  108   */     mad r7.xyz, r0.w, r2.xzy, r7.xzy
/*  109   */     mul r3.xyz, r7.xzy, c15.x
/*  110   */     mov oC0, r3
/*    9.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xy
// [7] color0 r7.xyzw

