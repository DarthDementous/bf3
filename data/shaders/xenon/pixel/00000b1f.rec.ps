      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05556003 00001200     	EXEC ADDR(0x3) CNT(0x6) BOOL_ADDR(0x80)
03: 10080001 1f1ffe88 00004000	      FETCH:	SAMPLE	R0.xyz_ = R0.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
04: b8086081 1f1ffe88 00004000	      FETCH:	SAMPLE	R6.xyz_ = R4.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: 10087061 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 10084081 1f1ffe88 00004000	      FETCH:	SAMPLE	R4.xyz_ = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: b8083061 1f1ffe88 00004000	      FETCH:	SAMPLE	R3.xyz_ = R3.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 10088041 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R2.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: b8089021 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R1.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: b8082041 1f1ffe88 00004000	      FETCH:	SAMPLE	R2.xyz_ = R2.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 10081021 1f1ffe88 00004000	      FETCH:	SAMPLE	R1.xyz_ = R1.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: c8070502 00c0b1c0 ab02ff01	   (S)ALU:	MULADDv	R2.xyz_ = R1.xyzz, R2.xyzz, C511.yyyy
0d: c8070501 00c0b1c0 ab09ff01	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R9.xyzz, C511.yyyy
0e: c8070501 00c0c000 e0010800	      ALU:	ADDv	R1.xyz_ = R1.xyzz, R8.xyzz
      0000600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: c8070502 00c0c000 e0020300	      ALU:	ADDv	R2.xyz_ = R2.xyzz, R3.xyzz
10: c8070502 02c0c000 e0020800	      ALU:	ADDv	R2.xyz_ = R2.xyzz, -R8.xyzz
11: c8070501 02c0c000 e0010300	      ALU:	ADDv	R1.xyz_ = R1.xyzz, -R3.xyzz
12: c8070501 00c06cc0 ab04ff01	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R4.xyzz, C511.xxxx
13: c8070502 00c06cc0 ab07ff02	      ALU:	MULADDv	R2.xyz_ = R2.xyzz, R7.xyzz, C511.xxxx
14: c8070502 02c0c000 e0020600	      ALU:	ADDv	R2.xyz_ = R2.xyzz, -R6.xyzz
      00006015 00002200     	EXEC_END ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: c8070501 02c0c000 e0010600	      ALU:	ADDv	R1.xyz_ = R1.xyzz, -R6.xyzz
16: c8070501 00c0c000 e1010100	      ALU:	MULv	R1.xyz_ = R1.xyzz, R1.xyzz
17: c9070501 00c0c0c0 eb020201	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R2.xyzz, R2.xyzz CLAMP
18: c8070501 02c0c000 e0010000	      ALU:	ADDv	R1.xyz_ = R1.xyzz, -R0.xyzz
19: c8070500 00c06cc0 ab010000	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, C256.xxxx
1a: 14878000 00c0c01b e1000505	      ALU:	MULv	export0.xyz_ = R0.xyzz, R5.xyzz	; COLOR
                          						    	MAXs	export0.___w = R5.wwww	; COLOR
      00000000 00000000     	NOP
