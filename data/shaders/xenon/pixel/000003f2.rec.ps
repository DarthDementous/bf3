      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      02506007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: c8040609 006c6c00 210efd00	      ALU:	MULv	R9.__z_ = C270.xxxx, C509.xxxx
08: b4430509 00b0b083 c204040b	      ALU:	MAXv	R9.xy__ = R4.xyyy, R4.xyyy
                          						    	ADD_CONST_1	R5.__z_ = C267.y, R1.w
09: 10708081 1f1ff67f 00004000	      FETCH:	SAMPLE	R8.__yw = R4.xyx CONST(7) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 90608121 1f1ffff8 00008000	      FETCH:	SAMPLE	R8.x___ = R9.xyz CONST(6) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 14080605 001bc61b a0020b00	   (S)ALU:	ADDv	R5.___w = R2.wwww, C267.zzzz
0c: 04470309 00ca1a6c c102020b	      ALU:	MULv	R9.xyz_ = R2.zwzz, R2.zwww
                          						    	ADD_PREVs	R3.__z_ = C267.xxxx
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: b8230810 051bb088 80050afe	      ALU:	ADDv	R16.xy__ = -R5.wwww, C266.xyyy
                          						    	SUB_CONST_0	R8._y__ = -C510.y, -R8.x
0e: 4c43050a 04c6b01b a0050903	      ALU:	ADDv	R10.xy__ = -R5.zzzz, C265.xyyy
                          						    	RECIP_IEEE	R5.__z_ = R3.wwww
0f: c807060b 00ca1ac0 eb010109	      ALU:	MULADDv	R11.xyz_ = R9.xyzz, R1.zwzz, R1.zwww
10: bc431009 00c66d42 e1050308	      ALU:	MULv	R9.xy__ = R5.zzzz, R3.yxxx
                          						    	SUB_CONST_1	R16.__z_ = C264.x, R3.z
11: c807060b 00ca1ac0 eb00000b	      ALU:	MULADDv	R11.xyz_ = R11.xyzz, R0.zwzz, R0.zwww
12: bc891003 00b0b082 e10a0a08	      ALU:	MULv	R3.x__w = R10.xyyy, R10.xyyy
                          						    	SUB_CONST_1	R16.___w = C264.y, R3.z
      00006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c8080603 00b3b31b f1101003	      ALU:	DOT2ADDv	R3.___w = R3.wwww, R16.wyyy, R16.wyyy
14: c8080605 006e6e6c f1101003	      ALU:	DOT2ADDv	R5.___w = R3.xxxx, R16.zxxx, R16.zxxx
15: 58210c0c 00c6c6b1 e00b0b8b	      ALU:	ADDv	R12.x___ = R11.zzzz, R11.zzzz
                          						    	RECIPSQ_IEEE	R12._y__ = abs(R11).yyyy
16: 58870c03 0015146c e008088b	      ALU:	ADDv	R3.xyz_ = R8.yzww, R8.xzww
                          						    	RECIPSQ_IEEE	R12.___w = abs(R11).xxxx
17: bc47090d 00bf1688 c10c00fe	      ALU:	MULv	R13.xyz_ = R12.wxyy, R0.zzww
                          						    	SUB_CONST_1	R9.__z_ = C510.y, R9.x
18: ac470a0b 00bf1600 e10c02ff	      ALU:	MULv	R11.xyz_ = R12.wxyy, R2.zzww
                          						    	MUL_CONST_1	R10.__z_ = C511.w, R3.x
      00006019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: b4410c08 04b11b01 e00d00fd	      ALU:	ADDv	R8.x___ = -R13.yyyy, R0.wwww
                          						    	ADD_CONST_1	R12.__z_ = C509.w, R3.y
1a: b4870c0e 00bf1602 e10c01fd	      ALU:	MULv	R14.xyz_ = R12.wxyy, R1.zzww
                          						    	ADD_CONST_1	R12.___w = C509.w, R3.z
1b: 58120c08 04b11b1b e00e0185	      ALU:	ADDv	R8._y__ = -R14.yyyy, R1.wwww
                          						    	RECIPSQ_IEEE	R12.x___ = abs(R5).wwww
1c: 58240c08 04b11b1b e00b0283	      ALU:	ADDv	R8.__z_ = -R11.yyyy, R2.wwww
                          						    	RECIPSQ_IEEE	R12._y__ = abs(R3).wwww
1d: 14030607 01b0b0c6 a187030e	      ALU:	MULv	R7.xy__ = abs(R7).xyyy, C259.xyyy
1e: 0c1f010f 00c000c6 e10a0c01	      ALU:	MULv	R15 = R10.xyzz, R12
                          						    	MUL_PREVs	R1.x___ = R1.zzzz
      0000601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: c8080609 04c6c66c eb0d0001	      ALU:	MULADDv	R9.___w = R1.xxxx, -R13.zzzz, R0.zzzz
20: 140c0600 01066cc6 a10ffc0b	      ALU:	MULv	R0.__zw = R15.zzzw, C508.xxxx
21: 0c210000 00bebec6 f0080802	      ALU:	DOT3v	R0.x___ = R8.zxyy, R8.zxyy
                          						    	MUL_PREVs	R0._y__ = R2.zzzz
22: 581d000a 00f3056c e0090080	      ALU:	ADDv	R10.x_zw = R9.wyyz, R0.yzzw
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
23: c8070600 00c06c00 e1080000	      ALU:	MULv	R0.xyz_ = R8.xyzz, R0.xxxx
24: c80f0600 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
      05506025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: 4c140101 001b1bc6 e2000080	      ALU:	MAXv	R1.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
26: c8030601 006d6cb1 cb0001fd	      ALU:	MULADDv	R1.xy__ = C509.yyyy, R0.yxxx, R1.xxxx
27: b8089081 1f1ffff8 00004000	      FETCH:	SAMPLE	R9.x___ = R4.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
28: 101830a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R3.xyz_ = R5.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
29: 10285081 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R4.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2a: b8580141 1f1ff478 00004000	      FETCH:	SAMPLE	R0.x_yz = R10.zwz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0095602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: 90488021 1f1ff688 0000c000	      FETCH:	SAMPLE	R8.xyzw = R1.xyz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2c: 10881081 1f1ff688 00004000	      FETCH:	SAMPLE	R1.xyzw = R4.xyx CONST(8) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2d: 103800e1 1f1fffdf 00004000	      FETCH:	SAMPLE	R0._w__ = R7.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2e: c8080602 046c1b00 200dfc00	   (S)ALU:	ADDv	R2.___w = -C269.xxxx, C508.wwww
2f: c8070604 00c0c000 e0060600	      ALU:	ADDv	R4.xyz_ = R6.xyzz, R6.xyzz
30: 140e0609 00fcfc6c 8101ff01	      ALU:	MULv	R9._yzw = R1.xxyz, C511.xxyz
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: 0c270207 00c0c0b1 c10401fc	      ALU:	MULv	R7.xyz_ = R4.xyzz, R1.xyzz
                          						    	MUL_PREVs	R2._y__ = C508.yyyy
32: 14140602 00b11b1b 65fe0808	      ALU:	SETGTv	R2.__z_ = C510.yyyy, R8.wwww
                          						    	MAXs	R6.x___ = R8.wwww
33: a8140206 00c3bec4 f00904fe	      ALU:	DOT3v	R6.__z_ = R9.wyzz, R4.zxyy
                          						    	MUL_CONST_0	R2.x___ = C510.z, R6.x
34: a8210a06 006c6c41 8002fdfd	      ALU:	ADDv	R6.x___ = R2.xxxx, C509.xxxx
                          						    	MUL_CONST_0	R10._y__ = C509.x, R0.y
35: 40210606 006c001b e8060085	      ALU:	FRACv	R6.x___ = R6.xxxx
                          						    	LOG_IEEE	R6._y__ = abs(R5).wwww
36: 40110602 026c6c1b e0020683	      ALU:	ADDv	R2.x___ = R2.xxxx, -R6.xxxx
                          						    	LOG_IEEE	R6.x___ = abs(R3).wwww
      00006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: a8820500 00c6c645 a206fc04	      ALU:	MAXv	R0._y__ = R6.zzzz, C508.zzzz
                          						    	MUL_CONST_0	R5.___w = C260.x, R6.y
38: a8860306 00bcbcc4 a002fe04	      ALU:	ADDv	R6._yz_ = R2.xxyy, C510.xxyy
                          						    	MUL_CONST_0	R3.___w = C260.z, R6.x
39: a88f040c 000dad46 e1100c02	      ALU:	MULv	R12 = R16.yxzw, R12.yxxy
                          						    	MUL_CONST_0	R4.___w = C258.x, R6.z
3a: 38130602 00b06cb1 e10f0e06	      ALU:	MULv	R2.xy__ = R15.xyyy, R14.xxxx
                          						    	EXP_IEEE	R6.x___ = R6.yyyy
3b: 38170604 006cc01b e1060805	      ALU:	MULv	R4.xyz_ = R6.xxxx, R8.xyzz
                          						    	EXP_IEEE	R6.x___ = R5.wwww
3c: c8030602 001a6cb0 eb0c0d02	      ALU:	MULADDv	R2.xy__ = R2.xyyy, R12.zwww, R13.xxxx
      0000603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: 38270605 001bc01b e1040503	      ALU:	MULv	R5.xyz_ = R4.wwww, R5.xyzz
                          						    	EXP_IEEE	R6._y__ = R3.wwww
3e: c8070605 00c06cc0 ab030005	      ALU:	MULADDv	R5.xyz_ = R5.xyzz, R3.xyzz, C256.xxxx
3f: c9030602 006d6cb0 eb0c0b02	      ALU:	MULADDv	R2.xy__ = R2.xyyy, R12.yxxx, R11.xxxx CLAMP
40: c8070608 00c6c0c0 ee020408	      ALU:	CNDGTv	R8.xyz_ = R8.xyzz, R2.zzzz, R4.xyzz
41: aa240902 00b1b184 a300fe04	      ALU:	MINv	R2.__z_ = R0.yyyy, C510.yyyy
                          						    	MUL_CONST_0	R9._y__ = C260.y, R6.x CLAMP
42: aa490904 04b0b105 a00afe04	      ALU:	ADDv	R4.x__w = -R10.xyyy, C510.yyyy
                          						    	MUL_CONST_0	R9.__z_ = C260.w, R6.y CLAMP
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: 08270001 04c0b16c a009fe04	      ALU:	ADDv	R1.xyz_ = -R9.xyzz, C510.yyyy
                          						    	MULs	R0._y__ = R4.xxxx
44: ac270804 00c6c041 c1020807	      ALU:	MULv	R4.xyz_ = R2.zzzz, R8.xyzz
                          						    	MUL_CONST_1	R8._y__ = C263.x, R1.y
45: ac430806 006db282 c1020107	      ALU:	MULv	R6.xy__ = R2.yxxx, R1.zyyy
                          						    	MUL_CONST_1	R8.__z_ = C263.y, R1.z
46: c8040602 006db0c6 910606fd	      ALU:	DOT2ADDv	R2.__z_ = C509.zzzz, R6.yxxx, C262.xyyy
47: a8170805 00b4b445 e1070505	      ALU:	MULv	R5.xyz_ = R7.xzyy, R5.xzyy
                          						    	MUL_CONST_0	R8.x___ = C261.x, R6.y
48: a82c0808 00f1ac84 e1080205	      ALU:	MULv	R8.__zw = R8.yyyz, R2.xxxy
                          						    	MUL_CONST_0	R8._y__ = C261.y, R6.x
      00006049 00001200     	EXEC ADDR(0x49) CNT(0x6) BOOL_ADDR(0x80)
49: 08830702 00c419b1 e0080800	      ALU:	ADDv	R2.xy__ = R8.xzzz, R8.ywww
                          						    	MULs	R7.___w = R0.yyyy
4a: 140f0602 0034001b e1070201	      ALU:	MULv	R2 = R7.xzyw, R2
4b: c8070602 00c01bc0 eb050402	      ALU:	MULADDv	R2.xyz_ = R2.xyzz, R5.xyzz, R4.wwww
4c: 0d820600 001b6c1b a0020d06	      ALU:	ADDv	R0._y__ = R2.wwww, C269.xxxx CLAMP
                          						    	MUL_PREVs	R6.___w = R6.wwww
4d: a8170604 00c0b180 c104000f	      ALU:	MULv	R4.xyz_ = R4.xyzz, R0.yyyy
                          						    	MUL_CONST_0	R6.x___ = C271.y, R0.x
4e: a8270604 00c01b82 8104fe0f	      ALU:	MULv	R4.xyz_ = R4.xyzz, C510.wwww
                          						    	MUL_CONST_0	R6._y__ = C271.y, R0.z
      0000504f 00002200     	EXEC_END ADDR(0x4f) CNT(0x5) BOOL_ADDR(0x80)
4f: a8470604 00c0c683 81040c0f	      ALU:	MULv	R4.xyz_ = R4.xyzz, C268.zzzz
                          						    	MUL_CONST_0	R6.__z_ = C271.y, R0.w
50: c8070600 00b4b4c0 eb040302	      ALU:	MULADDv	R0.xyz_ = R2.xyzz, R4.xzyy, R3.xzyy
51: 14070600 02c0b41b e0000606	      ALU:	ADDv	R0.xyz_ = R0.xyzz, -R6.xzyy
52: c8070606 00b46cc0 ab000e06	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R0.xzyy, C270.xxxx
53: 0c878000 00c06c6c a1060f01	      ALU:	MULv	export0.xyz_ = R6.xyzz, C271.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R1.xxxx	; COLOR
