      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 100050c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R5.___x = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: c8040700 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
07: 4c880008 00b1c6c6 2103fe05	      ALU:	MULv	R8.___w = C259.yyyy, C510.zzzz
                          						    	RECIP_IEEE	R0.___w = R5.zzzz
08: c8080705 011bb11b ab050308	      ALU:	MULADDv	R5.___w = -R8.wwww, R5.wwww, C259.yyyy
09: 58430009 001bb0c6 e1000580	      ALU:	MULv	R9.xy__ = R0.wwww, R5.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0a: a8880008 001bc602 80030a03	      ALU:	ADDv	R8.___w = R3.wwww, C266.zzzz
                          						    	MUL_CONST_0	R0.___w = C259.w, R0.z
      0550600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: c8030700 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
0c: c8030700 00b01bb0 eb000506	      ALU:	MULADDv	R0.xy__ = R6.xyyy, R0.xyyy, R5.wwww
0d: 1028d0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R13.xyz_ = R6.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: 1038b001 1f1fffd9 00004000	      FETCH:	SAMPLE	R11.yw__ = R0.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: 10186001 1f1ff688 00004000	      FETCH:	SAMPLE	R6.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 10480121 1f1fffd8 00004000	      FETCH:	SAMPLE	R0.xw__ = R9.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: c804070b 006c6c00 2101ff00	   (S)ALU:	MULv	R11.__z_ = C257.xxxx, C511.xxxx
12: 14080700 001b6c1b a0010a02	      ALU:	ADDv	R0.___w = R1.wwww, C266.xxxx
13: 04470009 00c06cb1 000c000a	      ALU:	ADDv	R9.xyz_ = C268.xyzz, C256.xxxx
                          						    	ADD_PREVs	R0.__z_ = C266.yyyy
14: 084c0c0a 041bac61 a0000700	      ALU:	ADDv	R10.__zw = -R0.wwww, C263.xxxy
                          						    	MULs	R12.__z_ = R0.yyxx
15: b8180a0c 00c61b42 8505fe08	      ALU:	SETGTv	R12.___w = R5.zzzz, C510.wwww
                          						    	SUB_CONST_0	R10.x___ = C264.x, R0.z
16: 00130b0c 041bb06c a008090b	      ALU:	ADDv	R12.xy__ = -R8.wwww, C265.xyyy
                          						    	ADDs	R11.x___ = R11.xxxx
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 002b0b00 00bebfb1 e10c0c0b	      ALU:	MULv	R0.xy_w = R12.zxyy, R12.wxyy
                          						    	ADDs	R11._y__ = R11.yyyy
18: b82b0a0b 00c0bc82 800bfe08	      ALU:	ADDv	R11.xy_w = R11.xyzz, C510.xxyy
                          						    	SUB_CONST_0	R10._y__ = C264.y, R0.z
19: c8040700 046d6db1 d10b0bfe	      ALU:	DOT2ADDv	R0.__z_ = C510.yyyy, -R11.yxxx, R11.yxxx
1a: c8020705 00b3b31b f10a0a00	      ALU:	DOT2ADDv	R5._y__ = R0.wwww, R10.wyyy, R10.wyyy
1b: c8080708 006e6eb1 f10a0a00	      ALU:	DOT2ADDv	R8.___w = R0.yyyy, R10.zxxx, R10.zxxx
1c: 58810505 001b6cb1 a10b0285	      ALU:	MULv	R5.x___ = R11.wwww, C258.xxxx
                          						    	RECIPSQ_IEEE	R5.___w = abs(R5).yyyy
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: c8070709 006cc0c0 eb050d09	      ALU:	MULADDv	R9.xyz_ = R9.xyzz, R5.xxxx, R13.xyzz
1e: 58400507 0000001b e2070788	      ALU:	RECIPSQ_IEEE	R5.__z_ = abs(R8).wwww
1f: a0430b05 00b01ac6 e10c0580	      ALU:	MULv	R5.xy__ = R12.xyyy, R5.zwww
                          						    	SQRT_IEEE	R11.__z_ = abs(R0).zzzz
20: c8010701 00bebe00 f00b0100	      ALU:	DOT3v	R1.x___ = R11.zxyy, R1.zxyy
21: c8020701 00bebe00 f00b0200	      ALU:	DOT3v	R1._y__ = R11.zxyy, R2.zxyy
22: c8040701 00bebe00 f00b0300	      ALU:	DOT3v	R1.__z_ = R11.zxyy, R3.zxyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c8040700 00bebe00 f0010100	      ALU:	DOT3v	R0.__z_ = R1.zxyy, R1.zxyy
24: 584f0002 000d07c6 e10a0580	      ALU:	MULv	R2 = R10.yxzw, R5.wzzw
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
25: c8070701 00bec600 e1010000	      ALU:	MULv	R1.xyz_ = R1.zxyy, R0.zzzz
26: c8090701 006d6c00 e1050100	      ALU:	MULv	R1.x__w = R5.yxxx, R1.xxxx
27: c9080701 00b2c51b f1020101	      ALU:	DOT2ADDv	R1.___w = R1.wwww, R2.zyyy, R1.yzzz CLAMP
28: c9040700 006fc56c f1020101	      ALU:	DOT2ADDv	R0.__z_ = R1.xxxx, R2.wxxx, R1.yzzz CLAMP
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: a8170501 00c0c082 c0070704	      ALU:	ADDv	R1.xyz_ = R7.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R5.x___ = C260.y, R0.z
2a: a8220507 006c1b82 c1000105	      ALU:	MULv	R7._y__ = R0.xxxx, R1.wwww
                          						    	MUL_CONST_0	R5._y__ = C261.y, R0.z
2b: ac170302 00c0c045 e1010604	      ALU:	MULv	R2.xyz_ = R1.xyzz, R6.xyzz
                          						    	MUL_CONST_1	R3.x___ = C260.x, R7.y
2c: ac2c0305 00467145 a1000605	      ALU:	MULv	R5.__zw = R0.zzzx, C262.yyyx
                          						    	MUL_CONST_1	R3._y__ = C261.x, R7.y
2d: 14070701 00c0c01b e0090805	      ALU:	ADDv	R1.xyz_ = R9.xyzz, R8.xyzz
2e: 0c470300 00c0b11b e1050401	      ALU:	MULv	R0.xyz_ = R5.xyzz, R4.yyyy
                          						    	MUL_PREVs	R3.__z_ = R1.wwww
      0000402f 00002200     	EXEC_END ADDR(0x2f) CNT(0x4) BOOL_ADDR(0x80)
2f: c8070700 00c06cc0 eb030400	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R3.xyzz, R4.xxxx
30: 14070700 00c0c01b e1020006	      ALU:	MULv	R0.xyz_ = R2.xyzz, R0.xyzz
31: c8070700 00c0c0c0 eb020100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R2.xyzz, R1.xyzz
32: 0c878000 00c06c1b a1000b07	      ALU:	MULv	export0.xyz_ = R0.xyzz, C267.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R7.wwww	; COLOR
      00000000 00000000     	NOP
