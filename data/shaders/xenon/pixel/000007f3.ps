//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $height;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   float $usendotl;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $matvalue      c1       1
//   $suncolour     c2       1
//   $sunintensity  c3       1
//   $usendotl      c4       1
//   $invscreensize c5       1
//   $compressedhdr c6       1
//   $height        s0       1
//   $diff          s1       1
//   $lmap          s2       1
//   $bump          s3       1
//   $spec          s4       1
//   $screenshadmap s5       1
//

// Shader type: pixel 

xps_3_0
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c6
defconst $diff, sampler2d, object, [1, 1], s1
defconst $height, sampler2d, object, [1, 1], s0
defconst $invscreensize, float, vector, [1, 2], c5
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c1
defconst $screenshadmap, sampler2d, object, [1, 1], s5
defconst $spec, sampler2d, object, [1, 1], s4
defconst $suncolour, float, vector, [1, 3], c2
defconst $sunintensity, float, scalar, [1, 1], c3
defconst $usendotl, float, scalar, [1, 1], c4
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=9
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=5

// interpolators: 5 interpolants: 5, components: 17
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1.xyz
dcl_texcoord2 r2.xyz
dcl_texcoord3 r3
dcl_color_centroid r4

def c252, 2, -1, 0.300000012, 0.25
def c253, 0, 1, 0.5, 10
def c254, 0.0599999987, 0.289999992, 0.150000006, 0.5
def c255, 4, 0, 0, 0


/*    0.0 */     exec
/*    5   */     tfetch2D r0.___x, r3.xy, tf0, FetchValidOnly=false
/*    6   */     serialize
                 dp3 r0.z, r0.zxy, r0.zxy
/*    7   */     mul r6.xw, c1.yx, c253.zw
               + rsq r0.z, r0_abs.z
/*    8   */     mad r2.w, r0.w, c1.y, -r6.x
/*    9   */     dp3 r1.w, r1.zxy, r1.zxy
               + mulsc r0.w, c1.w, r0.z
/*   10   */     mul r0.xy, r0.zw, r0.yx
/*    0.1 */     exec
/*   11   */     mad r6.yz, r0.yyx, r2.w, r3.xxy
/*   12   */     tfetch2D r8._xyz, r6.yz, tf4
/*   13   */     tfetch2D r0._xyz, r3.zw, tf2
/*   14   */     tfetch2D r3.yw__, r6.yz, tf3
/*   15   */     tfetch2D r7, r6.yz, tf1
/*   16   */     serialize
                 mul r0.x, r7.w, r4.w
/*    1.0 */     exec
/*   17   */     add r4.xyz, r4.zyx, r4.zyx
/*   18   */     mad r3.xy, r3.xy, c252.x, c252.y
/*   19   */     dp3 r4.w, r8.wzy, c254.xyz
               + mulsc r8.x, c0.x, r0.y
/*   20   */     mul r9.xyz, r8.wzy, c254.w
               + mulsc r8.y, c0.x, r0.z
/*   21   */     mul r6.xyz, r9.xyz, r0.wzy
               + mulsc r8.z, c0.x, r0.w
/*   22   */     mul r7.xyz, r8.xyz, r7.xyz
               + rsq r0.z, r1_abs.w
/*    1.1 */     exec
/*   23   */     mad r0.y, r6.w, r4.w, c253.y
/*   24   */     dp2add r4.w, -r3.yx, r3.yx, c253.y
/*   25   */     mul r1.xyz, r0.z, r1.xyz
               + sqrt r3.z, r4_abs.w
/*   26   */     dp3_sat r4.w, r1.zxy, r3.zxy
/*   27   */     max r7.w, r0.y, c253.x
               + log r4.w, r4.w
/*   28   */     mul r4, r7.zyxw, r4
/*    2.0 */     exec    // PredicateClean=false
/*   29   */     mul r1.xyz, r6.xyz, c255.x
               + exp r0.y, r4.w
/*   30   */     mul r0.yzw, r1.xxyz, r0.y
               + movs_sat r4.w, r2.z
/*   31   */     mul r0.yzw, r0.yyzw, c2.zzyx
               + setp_ne r4._, c4.x
/*   32   */     mad r4.xyz, r0.wyz, c3.x, r4.zxy
/*    2.1 */ (p0) exec
/*   33   */     (p0) mul r0.y, c3.x, c2.x
/*   34   */     (p0) cndeq r1.yzw, c253.xxxy, -r2.zzx, r2.y
/*   35   */     (p0) dp3_sat r1.x, r3.zxy, r2.zxy
               + (p0) movs_sat r0.z, -r2.z
/*   36   */     (p0) dp3_sat r0.w, r3.zxy, r1.yzw
               + (p0) movs r4._, r1.x
/*   37   */     (p0) add r0.z, r0.w, -r0.z
               + (p0) adds_prev r4.w, -r4.w
/*   38   */     (p0) mad r0.z, r0.z, c252.w, r4.w
/*    3.0 */ (p0) exec
/*   39   */     (p0) mul r0.y, r0.y, r0.z
/*   40   */     (p0) mul r1.xw, r0.yz, c252.z
/*   41   */     (p0) mul r0.yz, r1.w, c2.yyz
/*   42   */     (p0) mul r1.yz, r0.zzy, c3.x
/*   43   */     (p0) add r4.xyz, r4.xyz, r1.xyz
/*    3.1 */     alloc colors
/*    4.0 */     exece
/*   44   */     mul r0.yz, r5_abs.xxy, c5.xxy
               + mulsc r4.w, c6.x, r4.y
/*   45   */     tfetch2D r4._w__, r0.yz, tf5
/*   46   */     serialize
                 mad r4.y, -r4.y, c254.w, c253.y
/*   47   */     mul r0.w, r4.w, r4.y
               + mulsc r4.y, c6.x, r4.y
/*   48   */     mul r0.yz, r4.y, r4.xxz
/*   49   */     mov oC0, r0.yzwx
/*    4.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x001f SamplingPattern 0x000f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyz
// [2] texcoord2 r2.xyz
// [3] texcoord3 r3.xyzw
// [4] color0 r4.xyzw

