      00096008 00001200     	EXEC ADDR(0x8) CNT(0x6) BOOL_ADDR(0x80)
08: 10106061 1f1ffecf 00004000	      FETCH:	SAMPLE	R6._yw_ = R3.xyx CONST(1) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 08880604 001b1b1b e1010102	   (S)ALU:	MULv	R4.___w = R1.wwww, R1.wwww
                          						    	MULs	R6.___w = R2.wwww
0a: c8010406 001b1b1b eb000004	      ALU:	MULADDv	R6.x___ = R4.wwww, R0.wwww, R0.wwww
0b: c8070406 00c0c300 e0060600	      ALU:	ADDv	R6.xyz_ = R6.xyzz, R6.wyzz
0c: 58860607 00c16c6c a006fc86	      ALU:	ADDv	R7._yz_ = R6.yyzz, C508.xxxx
                          						    	RECIPSQ_IEEE	R6.___w = abs(R6).xxxx
0d: c8080404 04b2b2b1 d10707fd	      ALU:	DOT2ADDv	R4.___w = C509.yyyy, -R7.zyyy, R7.zyyy
      0000600e 00001200     	EXEC ADDR(0xe) CNT(0x6) BOOL_ADDR(0x80)
0e: a0810707 001b1b1b e1060184	      ALU:	MULv	R7.x___ = R6.wwww, R1.wwww
                          						    	SQRT_IEEE	R7.___w = abs(R4).wwww
0f: c8010406 00c3be00 f0070000	      ALU:	DOT3v	R6.x___ = R7.wyzz, R0.zxyy
10: c8020406 00c3be00 f0070100	      ALU:	DOT3v	R6._y__ = R7.wyzz, R1.zxyy
11: c8040406 00c3be00 f0070200	      ALU:	DOT3v	R6.__z_ = R7.wyzz, R2.zxyy
12: c8080404 00bebe00 f0060600	      ALU:	DOT3v	R4.___w = R6.zxyy, R6.zxyy
13: 58840407 001b1b1b e1060084	      ALU:	MULv	R7.__z_ = R6.wwww, R0.wwww
                          						    	RECIPSQ_IEEE	R4.___w = abs(R4).wwww
      00006014 00001200     	EXEC ADDR(0x14) CNT(0x6) BOOL_ADDR(0x80)
14: c8070406 00c01b00 e1060400	      ALU:	MULv	R6.xyz_ = R6.xyzz, R4.wwww
15: c80a0407 00cb1b00 e1060200	      ALU:	MULv	R7._y_w = R6.wwzz, R2.wwww
16: c8080404 006c1b1b eb060007	      ALU:	MULADDv	R4.___w = R7.wwww, R6.xxxx, R0.wwww
17: c8010400 0465be00 f0070600	      ALU:	DOT3v	R0.x___ = -R7.yzxx, R6.zxyy
18: c8040403 00b11b1b eb060104	      ALU:	MULADDv	R3.__z_ = R4.wwww, R6.yyyy, R1.wwww
19: b8880504 00bebe80 900604fd	      ALU:	DOT3v	R4.___w = R6.zxyy, C260.zxyy
                          						    	SUB_CONST_0	R5.___w = C509.y, R0.x
      0000601a 00001200     	EXEC ADDR(0x1a) CNT(0x6) BOOL_ADDR(0x80)
1a: 00480305 001b1bc6 e1050503	      ALU:	MULv	R5.___w = R5.wwww, R5.wwww
                          						    	ADDs	R3.__z_ = R3.zzzz
1b: 08870606 00c0c61b e1060305	      ALU:	MULv	R6.xyz_ = R6.xyzz, R3.zzzz
                          						    	MULs	R6.___w = R5.wwww
1c: 14020406 05b11bc6 e0060106	      ALU:	ADDv	R6._y__ = -R6.yyyy, R1.wwww
1d: 04140606 046c1b1b e0060002	      ALU:	ADDv	R6.__z_ = -R6.xxxx, R0.wwww
                          						    	ADD_PREVs	R6.x___ = R2.wwww
1e: c8020400 00b4b400 f0060600	      ALU:	DOT3v	R0._y__ = R6.xzyy, R6.xzyy
1f: 58210000 046cb1b1 2003fc80	      ALU:	ADDv	R0.x___ = -C259.xxxx, C508.yyyy
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R0).yyyy
      05006020 00001200     	EXEC ADDR(0x20) CNT(0x6) BOOL_ADDR(0x80)
20: c80f0401 00007100 e1060000	      ALU:	MULv	R1 = R6, R0.yyyx
21: c80f0400 008c6500 f2010100	      ALU:	CUBEv	R0 = R1.xxzy, R1.yzxx
22: 4c140202 001b1bc6 e2000080	      ALU:	MAXv	R2.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R2.x___ = abs(R0).zzzz
23: c8030402 006d6c1b cb0002fe	      ALU:	MULADDv	R2.xy__ = C510.wwww, R0.yxxx, R2.xxxx
24: 10080061 1f1ffe42 00004000	      FETCH:	SAMPLE	R0.zxy_ = R3.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
25: 90282041 1f1ff688 0000c000	      FETCH:	SAMPLE	R2.xyzw = R2.xyz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026026 00001200     	EXEC ADDR(0x26) CNT(0x6) BOOL_ADDR(0x80)
26: c8070407 00626200 e0040400	   (S)ALU:	ADDv	R7.xyz_ = R4.zyxx, R4.zyxx
27: 14170408 00626c1b 200b0002	      ALU:	ADDv	R8.xyz_ = C267.zyxx, C256.xxxx
                          						    	MAXs	R4.x___ = R2.wwww
28: a8470406 00626504 c10700ff	      ALU:	MULv	R6.xyz_ = R7.zyxx, R0.yzxx
                          						    	MUL_CONST_0	R4.__z_ = C511.w, R4.x
29: a81e0805 00fc7641 c00805ff	      ALU:	ADDv	R5._yzw = R8.xxyz, R5.zzyx
                          						    	MUL_CONST_0	R8.x___ = C511.x, R0.y
2a: a8210805 00b11b82 45fd02ff	      ALU:	SETGTv	R5.x___ = C509.yyyy, R2.wwww
                          						    	MUL_CONST_0	R8._y__ = C511.y, R0.z
2b: a8410804 00c6c6c0 8004feff	      ALU:	ADDv	R4.x___ = R4.zzzz, C510.zzzz
                          						    	MUL_CONST_0	R8.__z_ = C511.z, R0.x
      0000602c 00001200     	EXEC ADDR(0x2c) CNT(0x6) BOOL_ADDR(0x80)
2c: 2c120404 00beb46c f0080704	      ALU:	DOT3v	R4._y__ = R8.zxyy, R7.xzyy
                          						    	FRACs	R4.x___ = R4.xxxx
2d: 14270400 006215b1 e1060504	      ALU:	MULv	R0.xyz_ = R6.zyxx, R5.yzww
                          						    	MAXs	R4._y__ = R4.yyyy
2e: 14410404 02c66c1b c00404fd	      ALU:	ADDv	R4.x___ = R4.zzzz, -R4.xxxx
                          						    	MAXs	R4.__z_ = C509.wwww
2f: 14210404 006cc6b6 a004fd04	      ALU:	ADDv	R4.x___ = R4.xxxx, C509.zzzz
                          						    	MAXs	R4._y__ = R4.zzyy
30: 38180400 00b1b16c a304fd04	      ALU:	MINv	R0.___w = R4.yyyy, C509.yyyy
                          						    	EXP_IEEE	R4.x___ = R4.xxxx
31: c8070404 006c6200 e1040200	      ALU:	MULv	R4.xyz_ = R4.xxxx, R2.zyxx
      00006032 00001000     	EXEC ADDR(0x32) CNT(0x6)
32: c8070404 006c62c0 ee050402	      ALU:	CNDGTv	R4.xyz_ = R2.xyzz, R5.xxxx, R4.zyxx
33: b6170401 001bc043 c1000403	      ALU:	MULv	R1.xyz_ = R0.wwww, R4.xyzz
                          						    	ADD_CONST_1	R4.x___ = C259.x, R1.w CLAMP
34: c8070404 00c06c00 e1010400	      ALU:	MULv	R4.xyz_ = R1.xyzz, R4.xxxx
35: c8070404 00c0b100 a104fe00	      ALU:	MULv	R4.xyz_ = R4.xyzz, C510.yyyy
36: 6c070404 0062c66c 81040205	      ALU:	MULv	R4.xyz_ = R4.zyxx, C258.zzzz
37: c8070400 00be6cbe ab000104	      ALU:	MULADDv	R0.xyz_ = R4.zxyy, R0.zxyy, C257.xxxx
      0000400b 0000b000     	COND_JMP ADDR(0xb) DIR(0) COND(0)
      00001038 00001200     	EXEC ADDR(0x38) CNT(0x1) BOOL_ADDR(0x80)
38: 20800004 0100006c e2040484	      ALU:	SETGTs	R0.___w = -abs(R4).xxxx
      0000200e 0000b000     	COND_JMP ADDR(0xe) DIR(0) FORCE_CALL
      04006039 00001200     	EXEC ADDR(0x39) CNT(0x6) BOOL_ADDR(0x80)
39: 4c160404 00bc6c6c 8003fe0a	      ALU:	ADDv	R4._yz_ = R3.xxyy, C510.xxxx
                          						    	RECIP_IEEE	R4.x___ = C266.xxxx
3a: c9030404 00b26cc6 cb0404fe	      ALU:	MULADDv	R4.xy__ = C510.zzzz, R4.zyyy, R4.xxxx CLAMP
3b: b0800004 00000045 c2040407	      ALU:	ADD_CONST_0	R0.___w = C263.x, R4.y
3c: 34400404 0000001b e2040400	      ALU:	FLOORs	R4.__z_ = R0.wwww
3d: 14210101 021bc66c e0000404	      ALU:	ADDv	R1.x___ = R0.wwww, -R4.zzzz
                          						    	MAXs	R1._y__ = R4.xxxx
3e: 10382021 1f1ffe88 00004000	      FETCH:	SAMPLE	R2.xyz_ = R1.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0009603f 00001200     	EXEC ADDR(0x3f) CNT(0x6) BOOL_ADDR(0x80)
3f: 10484021 1f1ffe88 00004000	      FETCH:	SAMPLE	R4.xyz_ = R1.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
40: b8240101 056cb147 0006fd09	   (S)ALU:	ADDv	R1.__z_ = -C262.xxxx, C509.yyyy
                          						    	SUB_CONST_0	R1._y__ = -C265.x, -R4.w
41: 14080400 006c1b6c 45080408	      ALU:	SETGTv	R0.___w = C264.xxxx, R4.wwww
42: 04810401 011b6c6c 85040909	      ALU:	SETGTv	R1.x___ = R4.wwww, C265.xxxx
                          						    	ADD_PREVs	R4.___w = -C265.xxxx
43: 4c870404 00626c1b a1040604	      ALU:	MULv	R4.xyz_ = R4.zyxx, C262.xxxx
                          						    	RECIP_IEEE	R4.___w = R4.wwww
44: c8070404 00c662c0 eb010204	      ALU:	MULADDv	R4.xyz_ = R4.xyzz, R1.zzzz, R2.zyxx
      00005045 00001200     	EXEC ADDR(0x45) CNT(0x5) BOOL_ADDR(0x80)
45: c8080404 00b11b00 e1010400	      ALU:	MULv	R4.___w = R1.yyyy, R4.wwww
46: c8080404 006c6c1b ac01fd04	      ALU:	CNDEv	R4.___w = R4.wwww, R1.xxxx, C509.xxxx
47: c8070404 006cc0be ec010004	      ALU:	CNDEv	R4.xyz_ = R4.zxyy, R1.xxxx, R0.xyzz
48: c8070400 001bc0c0 ec000004	      ALU:	CNDEv	R0.xyz_ = R4.xyzz, R0.wwww, R0.xyzz
49: c8080400 001b6c1b ac00fd04	      ALU:	CNDEv	R0.___w = R4.wwww, R0.wwww, C509.xxxx
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      0000104a 00002200     	EXEC_END ADDR(0x4a) CNT(0x1) BOOL_ADDR(0x80)
4a: c80f8000 00343400 e2000000	      ALU:	MAXv	export0 = R0.xzyw, R0.xzyw	; COLOR
