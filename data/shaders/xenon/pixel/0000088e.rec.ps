      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 100050a1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R5.___x = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: b4480500 001b6cc3 a0010a0a	   (S)ALU:	ADDv	R0.___w = R1.wwww, C266.xxxx
                          						    	ADD_CONST_1	R5.__z_ = C266.z, R3.w
06: 14080607 00b1c61b 2103ff02	      ALU:	MULv	R7.___w = C259.yyyy, C511.zzzz
07: c804060a 011bb11b ab050307	      ALU:	MULADDv	R10.__z_ = -R7.wwww, R5.wwww, C259.yyyy
08: 048c000b 041bacb1 8000070a	      ALU:	ADDv	R11.__zw = -R0.wwww, C263.xxxy
                          						    	ADD_PREVs	R0.___w = C266.yyyy
09: b8180b07 00bebe43 d0000008	      ALU:	DOT3v	R7.___w = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R11.x___ = C264.x, R0.w
      0000600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: b8230b08 04c6b083 80050908	      ALU:	ADDv	R8.xy__ = -R5.zzzz, C265.xyyy
                          						    	SUB_CONST_0	R11._y__ = C264.y, R0.w
0b: 588c0508 00acac1b e1080887	      ALU:	MULv	R8.__zw = R8.xxxy, R8.xxxy
                          						    	RECIPSQ_IEEE	R5.___w = abs(R7).wwww
0c: c8080600 00b3b31b f10b0b08	      ALU:	DOT2ADDv	R0.___w = R8.wwww, R11.wyyy, R11.wyyy
0d: c8080607 006e6ec6 f10b0b08	      ALU:	DOT2ADDv	R7.___w = R8.zzzz, R11.zxxx, R11.zxxx
0e: 58140a05 001b1b1b a1050387	      ALU:	MULv	R5.__z_ = R5.wwww, C259.wwww
                          						    	RECIPSQ_IEEE	R10.x___ = abs(R7).wwww
0f: 582c0a08 0006ac1b e1050080	      ALU:	MULv	R8.__zw = R5.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R10._y__ = abs(R0).wwww
      09506010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: c80f0609 0000c000 e1080a00	      ALU:	MULv	R9 = R8, R10.xyzz
11: c8030600 001ab000 e0090500	      ALU:	ADDv	R0.xy__ = R9.zwww, R5.xyyy
12: 102880a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
13: 1038c001 1f1fffd9 00004000	      FETCH:	SAMPLE	R12.yw__ = R0.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: 10185001 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: 14070600 00c06c6c 000c0001	   (S)ALU:	ADDv	R0.xyz_ = C268.xyzz, C256.xxxx
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: 0c160c0c 00bcbc1b c00c0cff	      ALU:	ADDv	R12._yz_ = R12.xxyy, R12.xxyy
                          						    	MUL_PREVs	R12.x___ = C511.wwww
17: c80b060c 00656100 a00cff00	      ALU:	ADDv	R12.xy_w = R12.yzxx, C511.yyxx
18: c8080607 046d6d6c d10c0cff	      ALU:	DOT2ADDv	R7.___w = C511.xxxx, -R12.yxxx, R12.yxxx
19: a0480c00 001b6c1b a10c0287	      ALU:	MULv	R0.___w = R12.wwww, C258.xxxx
                          						    	SQRT_IEEE	R12.__z_ = abs(R7).wwww
1a: c8070608 001bc0c0 eb000800	      ALU:	MULADDv	R8.xyz_ = R0.xyzz, R0.wwww, R8.xyzz
1b: c8020600 00bebe00 f00c0100	      ALU:	DOT3v	R0._y__ = R12.zxyy, R1.zxyy
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: c8040600 00bebe00 f00c0200	      ALU:	DOT3v	R0.__z_ = R12.zxyy, R2.zxyy
1d: c8080600 00bebe00 f00c0300	      ALU:	DOT3v	R0.___w = R12.zxyy, R3.zxyy
1e: c8010600 00c3c300 f0000000	      ALU:	DOT3v	R0.x___ = R0.wyzz, R0.wyzz
1f: 581f0001 000dad6c e10b0a80	      ALU:	MULv	R1 = R11.yxzw, R10.yxxy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
20: c80d0600 00f36c00 e1000000	      ALU:	MULv	R0.x_zw = R0.wyyz, R0.xxxx
21: c8030600 006d6c00 e1090000	      ALU:	MULv	R0.xy__ = R9.yxxx, R0.xxxx
      00006022 00001200     	EXEC ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: c9010600 006f1a6c f1010000	      ALU:	DOT2ADDv	R0.x___ = R0.xxxx, R1.wxxx, R0.zwww CLAMP
23: c9020600 00b21ab1 f1010000	      ALU:	DOT2ADDv	R0._y__ = R0.yyyy, R1.zyyy, R0.zwww CLAMP
24: a8270301 00c0c041 c0060605	      ALU:	ADDv	R1.xyz_ = R6.xyzz, R6.xyzz
                          						    	MUL_CONST_0	R3._y__ = C261.x, R0.y
25: a8170302 00c0c041 c1010504	      ALU:	MULv	R2.xyz_ = R1.xyzz, R5.xyzz
                          						    	MUL_CONST_0	R3.x___ = C260.x, R0.y
26: a8170701 00c0c080 c0080704	      ALU:	ADDv	R1.xyz_ = R8.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R7.x___ = C260.y, R0.x
27: a8240707 006cb180 81000605	      ALU:	MULv	R7.__z_ = R0.xxxx, C262.yyyy
                          						    	MUL_CONST_0	R7._y__ = C261.y, R0.x
      00005028 00002200     	EXEC_END ADDR(0x28) CNT(0x5) BOOL_ADDR(0x80)
28: a84d0300 00f0b141 c1070406	      ALU:	MULv	R0.x_zw = R7.xyyz, R4.yyyy
                          						    	MUL_CONST_0	R3.__z_ = C262.x, R0.y
29: c8070600 00c06c14 eb030400	      ALU:	MULADDv	R0.xyz_ = R0.xzww, R3.xyzz, R4.xxxx
2a: 14070600 00c0c01b e1020005	      ALU:	MULv	R0.xyz_ = R2.xyzz, R0.xyzz
2b: c8070600 00c0c0c0 eb020100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R2.xyzz, R1.xyzz
2c: 0c878000 00c06c1b a1000b06	      ALU:	MULv	export0.xyz_ = R0.xyzz, C267.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.wwww	; COLOR
