      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 10006081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R6.___x = R4.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: c8040500 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
06: 58480000 00b16cc6 2101fe80	      ALU:	MULv	R0.___w = C257.yyyy, C510.xxxx
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
07: c8080506 011bb11b ab060100	      ALU:	MULADDv	R6.___w = -R0.wwww, R6.wwww, C257.yyyy
08: a88e0007 00fcfc02 c0050501	      ALU:	ADDv	R7._yzw = R5.xxyz, R5.xxyz
                          						    	MUL_CONST_0	R0.___w = C257.w, R0.z
09: c8030500 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
      0094600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: c8030508 00b01bb0 eb000604	      ALU:	MULADDv	R8.xy__ = R4.xyyy, R0.xyyy, R6.wwww
0b: b8200081 1f1ffff8 00004000	      FETCH:	SAMPLE	R0.x___ = R4.zwz CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 10300101 1f1ffecf 00004000	      FETCH:	SAMPLE	R0._yw_ = R8.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: c8030509 00c56cb1 8b00fffe	   (S)ALU:	MULADDv	R9.xy__ = C510.yyyy, R0.yzzz, C511.xxxx
0e: c8060500 00bcbc00 e1090900	      ALU:	MULv	R0._yz_ = R9.xxyy, R9.xxyy
0f: c8030504 04b01b00 a000fe00	      ALU:	ADDv	R4.xy__ = -R0.xyyy, C510.wwww
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: c8010500 02b1c600 e0040000	      ALU:	ADDv	R0.x___ = R4.yyyy, -R0.zzzz
11: a0400905 0000006c e2050580	      ALU:	SQRT_IEEE	R9.__z_ = abs(R0).xxxx
12: c8010500 00bebe00 f0090100	      ALU:	DOT3v	R0.x___ = R9.zxyy, R1.zxyy
13: c8040500 00bebe00 f0090200	      ALU:	DOT3v	R0.__z_ = R9.zxyy, R2.zxyy
14: c8020500 00bebe00 f0090300	      ALU:	DOT3v	R0._y__ = R9.zxyy, R3.zxyy
15: c8080500 00b11b00 e1000300	      ALU:	MULv	R0.___w = R0.yyyy, R3.wwww
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: c8080500 00c61b1b eb000200	      ALU:	MULADDv	R0.___w = R0.wwww, R0.zzzz, R2.wwww
17: c8080500 006c1b1b eb000100	      ALU:	MULADDv	R0.___w = R0.wwww, R0.xxxx, R1.wwww
18: 00800005 0000001b e2050500	      ALU:	ADDs	R0.___w = R0.wwww
19: c8070500 001bc000 e1000000	      ALU:	MULv	R0.xyz_ = R0.wwww, R0.xyzz
1a: 14040500 05c61b6c e0000200	      ALU:	ADDv	R0.__z_ = -R0.zzzz, R2.wwww
1b: 04280000 04b11b1b e0000301	      ALU:	ADDv	R0.___w = -R0.yyyy, R3.wwww
                          						    	ADD_PREVs	R0._y__ = R1.wwww
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: c8010500 00c3c300 f0000000	      ALU:	DOT3v	R0.x___ = R0.wyzz, R0.wyzz
1d: 58100005 0000006c e2050580	      ALU:	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
1e: c8070500 00156c00 e1000000	      ALU:	MULv	R0.xyz_ = R0.yzww, R0.xxxx
1f: c80f0500 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
20: 4c140101 001b1bc6 e2000080	      ALU:	MAXv	R1.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
21: c8030501 006d6cc6 cb0001fe	      ALU:	MULADDv	R1.xy__ = C510.zzzz, R0.yxxx, R1.xxxx
      00956022 00001200     	EXEC ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: 90583021 1f1ffe88 0000c000	      FETCH:	SAMPLE	R3.xyz_ = R1.xyz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
23: 10480101 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R8.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
24: 10181101 1f1ff688 00004000	      FETCH:	SAMPLE	R1.xyzw = R8.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
25: a8170708 00c06c41 000300fe	   (S)ALU:	ADDv	R8.xyz_ = C259.xyzz, C256.xxxx
                          						    	MUL_CONST_0	R7.x___ = C510.x, R0.y
26: a8270702 0015c042 c10701fe	      ALU:	MULv	R2.xyz_ = R7.yzww, R1.xyzz
                          						    	MUL_CONST_0	R7._y__ = C510.x, R0.z
27: a8470701 00c0c043 c00806fe	      ALU:	ADDv	R1.xyz_ = R8.xyzz, R6.xyzz
                          						    	MUL_CONST_0	R7.__z_ = C510.x, R0.w
      00005028 00002200     	EXEC_END ADDR(0x28) CNT(0x5) BOOL_ADDR(0x80)
28: 14070500 00c0c01b e1070301	      ALU:	MULv	R0.xyz_ = R7.xyzz, R3.xyzz
29: 0c870500 00c0c61b a1000105	      ALU:	MULv	R0.xyz_ = R0.xyzz, C257.zzzz
                          						    	MUL_PREVs	R5.___w = R5.wwww
2a: c8070505 00c0c0c0 eb020100	      ALU:	MULADDv	R5.xyz_ = R0.xyzz, R2.xyzz, R1.xyzz
2b: c8088000 001b6c00 e1050400	      ALU:	MULv	export0.___w = R5.wwww, R4.xxxx	; COLOR
2c: c8078000 00c06c00 a1050200	      ALU:	MULv	export0.xyz_ = R5.xyzz, C258.xxxx	; COLOR
