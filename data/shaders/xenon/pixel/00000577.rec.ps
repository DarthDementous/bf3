      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 4c8c0307 00acacc6 a1870303	      ALU:	MULv	R7.__zw = abs(R7).xxxy, C259.xxxy
                          						    	RECIP_IEEE	R3.___w = R3.zzzz
06: c8030607 001bb000 e1030300	      ALU:	MULv	R7.xy__ = R3.wwww, R3.xyyy
07: b8189081 1f1ffe3f 00004000	      FETCH:	SAMPLE	R9.__x_ = R4.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 102850a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 1038a081 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 10488081 1f1ffef9 00004000	      FETCH:	SAMPLE	R8.y_w_ = R4.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0095600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 10084081 1f1ff443 00004000	      FETCH:	SAMPLE	R4.wxyz = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: b85830e1 1f1ffffb 00004000	      FETCH:	SAMPLE	R3.w___ = R7.zwz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 106880e1 1f1ff7c7 00004000	      FETCH:	SAMPLE	R8._x_w = R7.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: b084030b 006c1b43 0101fe0b	   (S)ALU:	MULv	R11.__z_ = C257.xxxx, C510.wwww
                          						    	ADD_CONST_0	R3.___w = C267.x, R0.w
0f: 14080605 001bb11b a0010b02	      ALU:	ADDv	R5.___w = R1.wwww, C267.yyyy
10: 04810604 006c1bc6 c104060b	      ALU:	MULv	R4.x___ = R4.xxxx, R6.wwww
                          						    	ADD_PREVs	R6.___w = C267.zzzz
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 088b0907 00c0c0bb e0060608	      ALU:	ADDv	R7.xy_w = R6.xyzz, R6.xyzz
                          						    	MULs	R9.___w = R8.wwyy
12: 00140b07 00c66c6c a503ff08	      ALU:	SETGTv	R7.__z_ = R3.zzzz, C511.xxxx
                          						    	ADDs	R11.x___ = R8.xxxx
13: 00230b08 041bb0c6 a0050908	      ALU:	ADDv	R8.xy__ = -R5.wwww, C265.xyyy
                          						    	ADDs	R11._y__ = R8.zzzz
14: b8430809 041bb047 a003080a	      ALU:	ADDv	R9.xy__ = -R3.wwww, C264.xyyy
                          						    	SUB_CONST_0	R8.__z_ = C266.x, R6.w
15: b8830806 006d6d87 e109090a	      ALU:	MULv	R6.xy__ = R9.yxxx, R9.yxxx
                          						    	SUB_CONST_0	R8.___w = C266.y, R6.w
16: c8010606 0019196c f1080806	      ALU:	DOT2ADDv	R6.x___ = R6.xxxx, R8.ywww, R8.ywww
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: c8080605 00c4c4b1 f1080806	      ALU:	DOT2ADDv	R5.___w = R6.yyyy, R8.xzzz, R8.xzzz
18: ac4e0b03 00fcacc0 a00bfefe	      ALU:	ADDv	R3._yzw = R11.xxyz, C510.xxxy
                          						    	MUL_CONST_1	R11.__z_ = C510.z, R3.x
19: ac2e0604 003c0143 e1070402	      ALU:	MULv	R4._yzw = R7.xxyw, R4.yyzw
                          						    	MUL_CONST_1	R6._y__ = C258.x, R3.w
1a: 5813070b 00c5c51b e1030385	      ALU:	MULv	R11.xy__ = R3.yzzz, R3.yzzz
                          						    	RECIPSQ_IEEE	R7.x___ = abs(R5).wwww
1b: 402e0706 00b1fc1b e1060a85	      ALU:	MULv	R6._yzw = R6.yyyy, R10.xxyz
                          						    	LOG_IEEE	R7._y__ = abs(R5).wwww
1c: c8070605 00c06c15 ab050006	      ALU:	MULADDv	R5.xyz_ = R6.yzww, R5.xyzz, C256.xxxx
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 408a0706 04ccb16c a00bfe86	      ALU:	ADDv	R6._y_w = -R11.xxzz, C510.yyyy
                          						    	LOG_IEEE	R7.___w = abs(R6).xxxx
1e: 5823070a 0019c46c a1070486	      ALU:	MULv	R10.xy__ = R7.ywww, C260.xzzz
                          						    	RECIPSQ_IEEE	R7._y__ = abs(R6).xxxx
1f: 381f0608 000dad6c e108070a	      ALU:	MULv	R8 = R8.yxzw, R7.yxxy
                          						    	EXP_IEEE	R6.x___ = R10.xxxx
20: 38240606 02b1b1b1 e0060b0a	      ALU:	ADDv	R6.__z_ = R6.yyyy, -R11.yyyy
                          						    	EXP_IEEE	R6._y__ = R10.yyyy
21: a01d0307 00afaec6 e1090786	      ALU:	MULv	R7.x_zw = R9.wxxy, R7.zxxy
                          						    	SQRT_IEEE	R3.x___ = abs(R6).zzzz
22: c8020600 00c0be00 f0030000	      ALU:	DOT3v	R0._y__ = R3.xyzz, R0.zxyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: aa140900 00c0be84 f0030104	      ALU:	DOT3v	R0.__z_ = R3.xyzz, R1.zxyy
                          						    	MUL_CONST_0	R9.x___ = C260.y, R6.x CLAMP
24: aa280900 00c0be05 f0030204	      ALU:	DOT3v	R0.___w = R3.xyzz, R2.zxyy
                          						    	MUL_CONST_0	R9._y__ = C260.w, R6.y CLAMP
25: c8070606 04c0b100 a009fe00	      ALU:	ADDv	R6.xyz_ = -R9.xyzz, C510.yyyy
26: c8010600 00c3c300 f0000000	      ALU:	DOT3v	R0.x___ = R0.wyzz, R0.wyzz
27: 58120007 00b1b16c a1060780	      ALU:	MULv	R7._y__ = R6.yyyy, C263.yyyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
28: c8070601 00c96c00 e1000000	      ALU:	MULv	R1.xyz_ = R0.ywzz, R0.xxxx
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c80f0600 0052f500 e1080100	      ALU:	MULv	R0 = R8.zywx, R1.yzyz
2a: c8030601 001a6c19 eb070100	      ALU:	MULADDv	R1.xy__ = R0.ywww, R7.zwww, R1.xxxx
2b: c9060600 00616600 e0010000	      ALU:	ADDv	R0._yz_ = R1.yyxx, R0.zzxx CLAMP
2c: c8090600 00b0b200 e1070000	      ALU:	MULv	R0.x__w = R7.xyyy, R0.zyyy
2d: c8030606 006d6d00 e1000600	      ALU:	MULv	R6.xy__ = R0.yxxx, R6.yxxx
2e: c8040600 00b16c1b ab060700	      ALU:	MULADDv	R0.__z_ = R0.wwww, R6.yyyy, C263.xxxx
      0000602f 00002200     	EXEC_END ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: a8170201 0015c045 e1040505	      ALU:	MULv	R1.xyz_ = R4.yzww, R5.xyzz
                          						    	MUL_CONST_0	R2.x___ = C261.x, R6.y
30: a82c0202 0071ac84 a1060605	      ALU:	MULv	R2.__zw = R6.yyyx, C262.xxxy
                          						    	MUL_CONST_0	R2._y__ = C261.y, R6.x
31: c8030600 00c41900 e0020200	      ALU:	ADDv	R0.xy__ = R2.xzzz, R2.ywww
32: 14070600 0015c06c e1040004	      ALU:	MULv	R0.xyz_ = R4.yzww, R0.xyzz
33: c8070600 00c01bc0 eb010600	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R6.wwww
34: 0c878000 00c06cc6 a1000c06	      ALU:	MULv	export0.xyz_ = R0.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R6.zzzz	; COLOR
      00000000 00000000     	NOP
