      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 100090a1 1f1fffc7 00004000	      FETCH:	SAMPLE	R9._x__ = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 1403060a 00b0b01b a1880b01	   (S)ALU:	MULv	R10.xy__ = abs(R8).xyyy, C267.xyyy
07: 04810708 00b11b6c 0103fe0a	      ALU:	MULv	R8.x___ = C259.yyyy, C510.wwww
                          						    	ADD_PREVs	R7.___w = C266.xxxx
08: c804060b 01b1b16c ab090308	      ALU:	MULADDv	R11.__z_ = -R8.xxxx, R9.yyyy, C259.yyyy
09: b08c000c 041bac83 a007070a	      ALU:	ADDv	R12.__zw = -R7.wwww, C263.xxxy
                          						    	ADD_CONST_0	R0.___w = C266.y, R2.w
0a: b8180c07 00bebe43 d0000008	      ALU:	DOT3v	R7.___w = R0.zxyy, R0.zxyy
                          						    	SUB_CONST_0	R12.x___ = C264.x, R0.w
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: b4170906 00c0c0c3 e006060a	      ALU:	ADDv	R6.xyz_ = R6.xyzz, R6.xyzz
                          						    	ADD_CONST_1	R9.x___ = C266.z, R3.w
0c: b8230c08 046cb083 80090908	      ALU:	ADDv	R8.xy__ = -R9.xxxx, C265.xyyy
                          						    	SUB_CONST_0	R12._y__ = C264.y, R0.w
0d: 58830809 00b0b01b e1080887	      ALU:	MULv	R9.xy__ = R8.xyyy, R8.xyyy
                          						    	RECIPSQ_IEEE	R8.___w = abs(R7).wwww
0e: c8080600 00b3b3b1 f10c0c09	      ALU:	DOT2ADDv	R0.___w = R9.yyyy, R12.wyyy, R12.wyyy
0f: c8080607 006e6e6c f10c0c09	      ALU:	DOT2ADDv	R7.___w = R9.xxxx, R12.zxxx, R12.zxxx
10: 58140b08 001b1b1b a1080387	      ALU:	MULv	R8.__z_ = R8.wwww, C259.wwww
                          						    	RECIPSQ_IEEE	R11.x___ = abs(R7).wwww
      05406011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 582c0b08 0006ac1b e1080080	      ALU:	MULv	R8.__zw = R8.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R11._y__ = abs(R0).wwww
12: c80f0609 0000c000 e1080b00	      ALU:	MULv	R9 = R8, R11.xyzz
13: c8030600 001ab000 e0090500	      ALU:	ADDv	R0.xy__ = R9.zwww, R5.xyyy
14: b828d0a1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R13.__x_ = R5.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
15: 103880a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R5.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 1048a001 1f1ff67f 00004000	      FETCH:	SAMPLE	R10.__yw = R0.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00256017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 1058a141 1f1fffc8 00004000	      FETCH:	SAMPLE	R10.xy__ = R10.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: 10185001 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: c8040600 001b1b00 e1050600	   (S)ALU:	MULv	R0.__z_ = R5.wwww, R6.wwww
1a: c80b0600 00c06c00 200e0000	      ALU:	ADDv	R0.xy_w = C270.xyzz, C256.xxxx
1b: c803060a 04b0b0b1 8b0a0cfe	      ALU:	MULADDv	R10.xy__ = C510.yyyy, -R10.xyyy, C268.xyyy
1c: 14070605 00c0c06c c1060501	      ALU:	MULv	R5.xyz_ = R6.xyzz, R5.xyzz
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 0c430606 001a1a6c c00a0aff	      ALU:	ADDv	R6.xy__ = R10.zwww, R10.zwww
                          						    	MUL_PREVs	R6.__z_ = C511.xxxx
1e: c8070606 00b46000 a006fe00	      ALU:	ADDv	R6.xyz_ = R6.xzyy, C510.xyxx
1f: a883060d 00c4c445 e1060602	      ALU:	MULv	R13.xy__ = R6.xzzz, R6.xzzz
                          						    	MUL_CONST_0	R6.___w = C258.x, R6.y
20: c8070608 001bc010 eb060800	      ALU:	MULADDv	R8.xyz_ = R0.xyww, R6.wwww, R8.xyzz
21: c8030600 04c4b100 a00dfe00	      ALU:	ADDv	R0.xy__ = -R13.xzzz, C510.yyyy
22: c8080606 026cb100 e0000d00	      ALU:	ADDv	R6.___w = R0.xxxx, -R13.yyyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: a0830604 00b0b01b e10a0486	      ALU:	MULv	R4.xy__ = R10.xyyy, R4.xyyy
                          						    	SQRT_IEEE	R6.___w = abs(R6).wwww
24: c801060a 00cfbe00 f0060100	      ALU:	DOT3v	R10.x___ = R6.wxzz, R1.zxyy
25: c802060a 00cfbe00 f0060200	      ALU:	DOT3v	R10._y__ = R6.wxzz, R2.zxyy
26: c804060a 00cfbe00 f0060300	      ALU:	DOT3v	R10.__z_ = R6.wxzz, R3.zxyy
27: c8010606 00bebe00 f00a0a00	      ALU:	DOT3v	R6.x___ = R10.zxyy, R10.zxyy
28: 581f0601 000dad6c e10c0b86	      ALU:	MULv	R1 = R12.yxzw, R11.yxxy
                          						    	RECIPSQ_IEEE	R6.x___ = abs(R6).xxxx
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c80d0606 00ae6c00 e10a0600	      ALU:	MULv	R6.x_zw = R10.zxxy, R6.xxxx
2a: c8030606 00b06c00 e1090600	      ALU:	MULv	R6.xy__ = R9.xyyy, R6.xxxx
2b: c9020606 006f1ab1 f1010606	      ALU:	DOT2ADDv	R6._y__ = R6.yyyy, R1.wxxx, R6.zwww CLAMP
2c: c9010606 00b21a6c f1010606	      ALU:	DOT2ADDv	R6.x___ = R6.xxxx, R1.zyyy, R6.zwww CLAMP
2d: c8030606 006d6d00 e1040600	      ALU:	MULv	R6.xy__ = R4.yxxx, R6.yxxx
2e: c8040602 006db0c6 910606fe	      ALU:	DOT2ADDv	R2.__z_ = C510.zzzz, R6.yxxx, C262.xyyy
      0000602f 00002200     	EXEC_END ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: a8170301 00c0c045 e0080704	      ALU:	ADDv	R1.xyz_ = R8.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R3.x___ = C260.x, R6.y
30: a82c0303 0071ac84 a1060504	      ALU:	MULv	R3.__zw = R6.yyyx, C261.xxxy
                          						    	MUL_CONST_0	R3._y__ = C260.y, R6.x
31: c8030602 00c41900 e0030300	      ALU:	ADDv	R2.xy__ = R3.xzzz, R3.ywww
32: 14070606 00c0c0c6 e1050200	      ALU:	MULv	R6.xyz_ = R5.xyzz, R2.xyzz
33: c8070606 00c0c0c0 eb050106	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R5.xyzz, R1.xyzz
34: 0c878000 00c06cb1 a1060d00	      ALU:	MULv	export0.xyz_ = R6.xyzz, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.yyyy	; COLOR
      00000000 00000000     	NOP
