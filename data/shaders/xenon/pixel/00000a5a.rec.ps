      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 100090a1 1f1ffff8 00004000	      FETCH:	SAMPLE	R9.x___ = R5.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: 140c070b 00acac1b a1880301	   (S)ALU:	MULv	R11.__zw = abs(R8).xxxy, C259.xxxy
07: 04480600 001bb16c 80020c0c	      ALU:	ADDv	R0.___w = R2.wwww, C268.yyyy
                          						    	ADD_PREVs	R6.__z_ = C268.xxxx
08: 14080704 00bebe1b f0000003	      ALU:	DOT3v	R4.___w = R0.zxyy, R0.zxyy
09: 04810608 00b16cc6 0104ff0c	      ALU:	MULv	R8.x___ = C260.yyyy, C511.xxxx
                          						    	ADD_PREVs	R6.___w = C268.zzzz
0a: c8040709 016cb16c ab090408	      ALU:	MULADDv	R9.__z_ = -R8.xxxx, R9.xxxx, C260.yyyy
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 4c8c060a 041bacc6 a0060b04	      ALU:	ADDv	R10.__zw = -R6.wwww, C267.xxxy
                          						    	RECIP_IEEE	R6.___w = R4.zzzz
0c: b8130a0b 001bb043 c106040a	      ALU:	MULv	R11.xy__ = R6.wwww, R4.xyyy
                          						    	SUB_CONST_0	R10.x___ = C266.x, R0.w
0d: b8230a08 04c6b083 8006090a	      ALU:	ADDv	R8.xy__ = -R6.zzzz, C265.xyyy
                          						    	SUB_CONST_0	R10._y__ = C266.y, R0.w
0e: 588c0806 00acac1b e1080884	      ALU:	MULv	R6.__zw = R8.xxxy, R8.xxxy
                          						    	RECIPSQ_IEEE	R8.___w = abs(R4).wwww
0f: c8080706 0019191b f10a0a06	      ALU:	DOT2ADDv	R6.___w = R6.wwww, R10.ywww, R10.ywww
10: c8080709 00c4c4c6 f10a0a06	      ALU:	DOT2ADDv	R9.___w = R6.zzzz, R10.xzzz, R10.xzzz
      05006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 58140908 001b1b1b a1080489	      ALU:	MULv	R8.__z_ = R8.wwww, C260.wwww
                          						    	RECIPSQ_IEEE	R9.x___ = abs(R9).wwww
12: 582c0908 0006ac1b e1080086	      ALU:	MULv	R8.__zw = R8.zzzw, R0.xxxy
                          						    	RECIPSQ_IEEE	R9._y__ = abs(R6).wwww
13: c80f0708 0000c000 e1080900	      ALU:	MULv	R8 = R8, R9.xyzz
14: c803070d 001ab000 e0080500	      ALU:	ADDv	R13.xy__ = R8.zwww, R5.xyyy
15: b82880a1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R8.__x_ = R5.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
16: 1048c0a1 1f1ff447 00004000	      FETCH:	SAMPLE	R12._xyz = R5.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      02556017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 103800c1 1f1ff447 00004000	      FETCH:	SAMPLE	R0._xyz = R6.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
18: 101851a1 1f1ff443 00004000	      FETCH:	SAMPLE	R5.wxyz = R13.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 1068b161 1f1fffd8 00004000	      FETCH:	SAMPLE	R11.xw__ = R11.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: b8584161 1f1ff7ff 00004000	      FETCH:	SAMPLE	R4.___w = R11.zwz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: c8010700 006c1bb1 0b01ffff	   (S)ALU:	MULADDv	R0.x___ = C511.yyyy, C257.xxxx, C511.wwww
1c: c8080704 041b6cb1 8b04ffff	      ALU:	MULADDv	R4.___w = C511.yyyy, -R4.wwww, C511.xxxx
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 08110c05 006c1bc6 e1050703	      ALU:	MULv	R5.x___ = R5.xxxx, R7.wwww
                          						    	MULs	R12.x___ = R3.zzzz
1e: 08270706 00c0c0c6 e0070702	      ALU:	ADDv	R6.xyz_ = R7.xyzz, R7.xyzz
                          						    	MULs	R7._y__ = R2.zzzz
1f: a8210d07 00c6c641 8504ff00	      ALU:	SETGTv	R7.x___ = R4.zzzz, C511.zzzz
                          						    	MUL_CONST_0	R13._y__ = C256.x, R0.y
20: c801070d 00c6c6b1 eb010107	      ALU:	MULADDv	R13.x___ = R7.yyyy, R1.zzzz, R1.zzzz
21: a8420d07 006c6c42 81000200	      ALU:	MULv	R7._y__ = R0.xxxx, C258.xxxx
                          						    	MUL_CONST_0	R13.__z_ = C256.x, R0.z
22: a88e0d0c 00b10143 c1070c00	      ALU:	MULv	R12._yzw = R7.yyyy, R12.yyzw
                          						    	MUL_CONST_0	R13.___w = C256.x, R0.w
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: 082f0700 00252561 e00d0c0b	      ALU:	ADDv	R0 = R13.yzxw, R12.yzxw
                          						    	MULs	R7._y__ = R11.yyxx
24: 58810704 00b16cc6 e1070780	      ALU:	MULv	R4.x___ = R7.yyyy, R7.xxxx
                          						    	RECIPSQ_IEEE	R7.___w = abs(R0).zzzz
25: 40140707 001bc61b e1070189	      ALU:	MULv	R7.__z_ = R7.wwww, R1.zzzz
                          						    	LOG_IEEE	R7.x___ = abs(R9).wwww
26: 40220701 001bc61b e1070286	      ALU:	MULv	R1._y__ = R7.wwww, R2.zzzz
                          						    	LOG_IEEE	R7._y__ = abs(R6).wwww
27: 14070702 00c0151b e1060507	      ALU:	MULv	R2.xyz_ = R6.xyzz, R5.yzww
28: 0c130107 00b0c4c6 a1070503	      ALU:	MULv	R7.xy__ = R7.xyyy, C261.xzzz
                          						    	MUL_PREVs	R1.x___ = R3.zzzz
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: 381f0703 000dad6c e10a0907	      ALU:	MULv	R3 = R10.yxzw, R9.yxxy
                          						    	EXP_IEEE	R7.x___ = R7.xxxx
2a: 382f0701 002270b1 e1030107	      ALU:	MULv	R1 = R3.zyxw, R1.xyyx
                          						    	EXP_IEEE	R7._y__ = R7.yyyy
2b: c8030703 00b0c6c5 eb080701	      ALU:	MULADDv	R3.xy__ = R1.yzzz, R8.xyyy, R7.zzzz
2c: c9030708 00b01900 a1070500	      ALU:	MULv	R8.xy__ = R7.xyyy, C261.ywww CLAMP
2d: c8070707 04cdb100 a008ff00	      ALU:	ADDv	R7.xyz_ = -R8.yxzz, C511.yyyy
2e: ad260401 00616b84 e0030108	      ALU:	ADDv	R1._yz_ = R3.yyxx, R1.wwxx CLAMP
                          						    	MUL_CONST_1	R4._y__ = C264.y, R7.x
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: c8090701 00b0b200 e1040100	      ALU:	MULv	R1.x__w = R4.xyyy, R1.zyyy
30: c8030707 006db000 e1010700	      ALU:	MULv	R7.xy__ = R1.yxxx, R7.xyyy
31: c8040700 00b16c1b ab070801	      ALU:	MULADDv	R0.__z_ = R1.wwww, R7.yyyy, C264.xxxx
32: ac170301 00c01045 e1020006	      ALU:	MULv	R1.xyz_ = R2.xyzz, R0.xyww
                          						    	MUL_CONST_1	R3.x___ = C262.x, R7.y
33: ac2c0303 0071ac84 a1070706	      ALU:	MULv	R3.__zw = R7.yyyx, C263.xxxy
                          						    	MUL_CONST_1	R3._y__ = C262.y, R7.x
34: c8030700 00c41900 e0030300	      ALU:	ADDv	R0.xy__ = R3.xzzz, R3.ywww
      00003035 00002200     	EXEC_END ADDR(0x35) CNT(0x3) BOOL_ADDR(0x80)
35: 14070700 00c0c06c e1020005	      ALU:	MULv	R0.xyz_ = R2.xyzz, R0.xyzz
36: c8070700 00c01bc0 eb010400	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R1.xyzz, R4.wwww
37: 0c878000 00c06cc6 a1000d07	      ALU:	MULv	export0.xyz_ = R0.xyzz, C269.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R7.zzzz	; COLOR
