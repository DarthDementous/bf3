      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096007 00001200     	EXEC ADDR(0x7) CNT(0x6) BOOL_ADDR(0x80)
07: 10207081 1f1ffecf 00004000	      FETCH:	SAMPLE	R7._yw_ = R4.xyx CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 08880703 001b1b1b e1010102	   (S)ALU:	MULv	R3.___w = R1.wwww, R1.wwww
                          						    	MULs	R7.___w = R2.wwww
09: c8010507 001b1b1b eb000003	      ALU:	MULADDv	R7.x___ = R3.wwww, R0.wwww, R0.wwww
0a: c8070507 00c0c300 e0070700	      ALU:	ADDv	R7.xyz_ = R7.xyzz, R7.wyzz
0b: c8030508 00c56c00 a007fc00	      ALU:	ADDv	R8.xy__ = R7.yzzz, C508.xxxx
0c: c8080507 046d6db1 d10808fe	      ALU:	DOT2ADDv	R7.___w = C510.yyyy, -R8.yxxx, R8.yxxx
      0000600d 00001200     	EXEC ADDR(0xd) CNT(0x6) BOOL_ADDR(0x80)
0d: a0480803 001bb11b a0010987	      ALU:	ADDv	R3.___w = R1.wwww, C265.yyyy
                          						    	SQRT_IEEE	R8.__z_ = abs(R7).wwww
0e: c801050b 00bebe00 f0080000	      ALU:	DOT3v	R11.x___ = R8.zxyy, R0.zxyy
0f: c802050b 00bebe00 f0080100	      ALU:	DOT3v	R11._y__ = R8.zxyy, R1.zxyy
10: 58840b0b 00bebe6c f0080287	      ALU:	DOT3v	R11.__z_ = R8.zxyy, R2.zxyy
                          						    	RECIPSQ_IEEE	R11.___w = abs(R7).xxxx
11: c803050c 001a1b00 e10b0200	      ALU:	MULv	R12.xy__ = R11.zwww, R2.wwww
12: c8030507 00181b00 e10b0000	      ALU:	MULv	R7.xy__ = R11.xwww, R0.wwww
      00006013 00001200     	EXEC ADDR(0x13) CNT(0x6) BOOL_ADDR(0x80)
13: c80c050c 00311b00 e10b0100	      ALU:	MULv	R12.__zw = R11.yyyw, R1.wwww
14: c8040507 006cc600 e0070c00	      ALU:	ADDv	R7.__z_ = R7.xxxx, R12.zzzz
15: c8040507 00c66c00 e0070c00	      ALU:	ADDv	R7.__z_ = R7.zzzz, R12.xxxx
16: 00400705 000000c6 e2050507	      ALU:	ADDs	R7.__z_ = R7.zzzz
17: c80d0507 00c68400 e1070b00	      ALU:	MULv	R7.x_zw = R7.zzzz, R11.xzzy
18: c8020501 041b1b00 e0070100	      ALU:	ADDv	R1._y__ = -R7.wwww, R1.wwww
      00006019 00001200     	EXEC ADDR(0x19) CNT(0x6) BOOL_ADDR(0x80)
19: 140c0506 01acac6c a1860107	      ALU:	MULv	R6.__zw = abs(R6).xxxy, C257.xxxy
1a: 04140101 04c61b1b e0070200	      ALU:	ADDv	R1.__z_ = -R7.zzzz, R2.wwww
                          						    	ADD_PREVs	R1.x___ = R0.wwww
1b: 4c820100 00bebec6 f0010103	      ALU:	DOT3v	R0._y__ = R1.zxyy, R1.zxyy
                          						    	RECIP_IEEE	R1.___w = R3.zzzz
1c: 58230006 001bb0b1 e1010380	      ALU:	MULv	R6.xy__ = R1.wwww, R3.xyyy
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R0).yyyy
1d: c8070501 00c0b100 e1010000	      ALU:	MULv	R1.xyz_ = R1.xyzz, R0.yyyy
1e: c80f0501 00a6cd00 f2010100	      ALU:	CUBEv	R1 = R1.zzxy, R1.yxzz
      0550601f 00001200     	EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80)
1f: 4c240008 001b1bc6 e2010181	      ALU:	MAXv	R8.__z_ = R1.wwww, R1.wwww
                          						    	RECIP_IEEE	R0._y__ = abs(R1).zzzz
20: c8030508 006db11b cb0100fe	      ALU:	MULADDv	R8.xy__ = C510.wwww, R1.yxxx, R0.yyyy
21: b8181081 1f1ff447 00004000	      FETCH:	SAMPLE	R1._xyz = R4.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: 9058a101 1f1ff688 0000c000	      FETCH:	SAMPLE	R10.xyzw = R8.xyz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
23: 10084081 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
24: b83800c1 1f1fffdf 00004000	      FETCH:	SAMPLE	R0._w__ = R6.zwz CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096025 00001200     	EXEC ADDR(0x25) CNT(0x6) BOOL_ADDR(0x80)
25: 104870c1 1f1ffef8 00004000	      FETCH:	SAMPLE	R7.x_w_ = R6.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
26: 14010500 001b6c1b a0000902	   (S)ALU:	ADDv	R0.x___ = R0.wwww, C265.xxxx
27: 044c0009 046cacc6 80000609	      ALU:	ADDv	R9.__zw = -R0.xxxx, C262.xxxy
                          						    	ADD_PREVs	R0.__z_ = C265.zzzz
28: b8170906 00c0c042 c0050508	      ALU:	ADDv	R6.xyz_ = R5.xyzz, R5.xyzz
                          						    	SUB_CONST_0	R9.x___ = C264.x, R0.z
29: b8260902 041bbc82 80030708	      ALU:	ADDv	R2._yz_ = -R3.wwww, C263.xxyy
                          						    	SUB_CONST_0	R9._y__ = C264.y, R0.z
2a: ac140303 00c6c641 8503fd00	      ALU:	SETGTv	R3.__z_ = R3.zzzz, C509.zzzz
                          						    	MUL_CONST_1	R3.x___ = C256.x, R1.y
      0000602b 00001200     	EXEC ADDR(0x2b) CNT(0x6) BOOL_ADDR(0x80)
2b: ac280300 00b11b42 45fe0a00	      ALU:	SETGTv	R0.___w = C510.yyyy, R10.wwww
                          						    	MUL_CONST_1	R3._y__ = C256.x, R1.z
2c: ac870308 00c0c043 c1060400	      ALU:	MULv	R8.xyz_ = R6.xyzz, R4.xyzz
                          						    	MUL_CONST_1	R3.___w = C256.x, R1.w
2d: 141b0503 0010c01b e103040a	      ALU:	MULv	R3.xy_w = R3.xyww, R4.xyzz
                          						    	MAXs	R5.x___ = R10.wwww
2e: ac240500 00bec004 9008ffff	      ALU:	DOT3v	R0.__z_ = R8.zxyy, C511.xyzz
                          						    	MUL_CONST_1	R5._y__ = C511.w, R5.x
2f: b4190502 00b2b245 c10202fd	      ALU:	MULv	R2.x__w = R2.zyyy, R2.zyyy
                          						    	ADD_CONST_1	R5.x___ = C509.x, R5.y
30: c8010502 00b3b36c f1090902	      ALU:	DOT2ADDv	R2.x___ = R2.xxxx, R9.wyyy, R9.wyyy
      00006031 00001200     	EXEC ADDR(0x31) CNT(0x6) BOOL_ADDR(0x80)
31: c8080502 006e6e1b f1090902	      ALU:	DOT2ADDv	R2.___w = R2.wwww, R9.zxxx, R9.zxxx
32: 58110005 006c001b e8050082	      ALU:	FRACv	R5.x___ = R5.xxxx
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R2).wwww
33: 58410001 00c61b6c a200fd82	      ALU:	MAXv	R1.x___ = R0.zzzz, C509.wwww
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R2).xxxx
34: 40170306 00b8b41b e1030682	      ALU:	MULv	R6.xyz_ = R3.xwyy, R6.xzyy
                          						    	LOG_IEEE	R3.x___ = abs(R2).wwww
35: 40210305 02b16c6c e0050582	      ALU:	ADDv	R5.x___ = R5.yyyy, -R5.xxxx
                          						    	LOG_IEEE	R3._y__ = abs(R2).xxxx
36: b4110201 006cb184 8301fefd	      ALU:	MINv	R1.x___ = R1.xxxx, C510.yyyy
                          						    	ADD_CONST_1	R2.x___ = C509.y, R5.x
      00006037 00001200     	EXEC ADDR(0x37) CNT(0x6) BOOL_ADDR(0x80)
37: 38130205 00b0c46c a1030202	      ALU:	MULv	R5.xy__ = R3.xyyy, C258.xzzz
                          						    	EXP_IEEE	R2.x___ = R2.xxxx
38: 38160502 00c1cc6c e1020005	      ALU:	MULv	R2._yz_ = R2.yyzz, R0.xxzz
                          						    	EXP_IEEE	R5.x___ = R5.xxxx
39: 382b0503 006cc0b1 e1020a05	      ALU:	MULv	R3.xy_w = R2.xxxx, R10.xyzz
                          						    	EXP_IEEE	R5._y__ = R5.yyyy
3a: c807050a 001b10c0 ee00030a	      ALU:	CNDGTv	R10.xyz_ = R10.xyzz, R0.wwww, R3.xyww
3b: ae4f0009 000dee84 c1090002	      ALU:	MULv	R9 = R9.yxzw, R0.zxxz
                          						    	MUL_CONST_1	R0.__z_ = C258.y, R5.x CLAMP
3c: ae810000 00bebe05 d00b0b02	      ALU:	DOT3v	R0.x___ = R11.zxyy, R11.zxyy
                          						    	MUL_CONST_1	R0.___w = C258.w, R5.y CLAMP
      0000603d 00001200     	EXEC ADDR(0x3d) CNT(0x6) BOOL_ADDR(0x80)
3d: 581c0000 04dbb16c a000fe80	      ALU:	ADDv	R0.__zw = -R0.wwwz, C510.yyyy
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
3e: c80b0503 00656c00 e10b0000	      ALU:	MULv	R3.xy_w = R11.yzxx, R0.xxxx
3f: c807050c 03b0b111 6cfe070c	      ALU:	CNDEv	R12.xyz_ = -R12.yyww, C510.xyyy, -R7.yyyy
40: c8010502 00656200 f00c0b00	      ALU:	DOT3v	R2.x___ = R12.yzxx, R11.zyxx
41: a82c0202 00f16c41 c10203fd	      ALU:	MULv	R2.__zw = R2.yyyz, R3.xxxx
                          						    	MUL_CONST_0	R2._y__ = C509.x, R0.y
42: c9020507 006fb31b f1090302	      ALU:	DOT2ADDv	R7._y__ = R2.wwww, R9.wxxx, R3.wyyy CLAMP
      00006043 00001200     	EXEC ADDR(0x43) CNT(0x6) BOOL_ADDR(0x80)
43: c9010500 00b2b3c6 f1090302	      ALU:	DOT2ADDv	R0.x___ = R2.zzzz, R9.zyyy, R3.wyyy CLAMP
44: 08290303 04b0b166 a002fe07	      ALU:	ADDv	R3.x__w = -R2.xyyy, C510.yyyy
                          						    	MULs	R3._y__ = R7.zzxx
45: c8090502 006d6e00 e1030300	      ALU:	MULv	R2.x__w = R3.yxxx, R3.zxxx
46: c8010507 006c6c00 e1020000	      ALU:	MULv	R7.x___ = R2.xxxx, R0.xxxx
47: 14030500 016d1a6c c107000b	      ALU:	MULv	R0.xy__ = R7.yxxx, R0.zwww
48: 048c0709 0071acb1 810004fc	      ALU:	MULv	R9.__zw = R0.yyyx, C260.xxxy
                          						    	ADD_PREVs	R7.___w = C508.yyyy
      00006049 00001200     	EXEC ADDR(0x49) CNT(0x6) BOOL_ADDR(0x80)
49: a8170902 006cc041 c1010a03	      ALU:	MULv	R2.xyz_ = R1.xxxx, R10.xyzz
                          						    	MUL_CONST_0	R9.x___ = C259.x, R0.y
4a: a8230904 00c5b080 81000503	      ALU:	MULv	R4.xy__ = R0.yzzz, C261.xyyy
                          						    	MUL_CONST_0	R9._y__ = C259.y, R0.x
4b: c8040507 00b1b16c eb040704	      ALU:	MULADDv	R7.__z_ = R4.xxxx, R4.yyyy, R7.yyyy
4c: 08830807 00c4191b e0090902	      ALU:	ADDv	R7.xy__ = R9.xzzz, R9.ywww
                          						    	MULs	R8.___w = R2.wwww
4d: c80f0500 00000000 e1080700	      ALU:	MULv	R0 = R8, R7
4e: c8070500 00b41bc0 eb060300	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R6.xzyy, R3.wwww
      0000604f 00002200     	EXEC_END ADDR(0x4f) CNT(0x6) BOOL_ADDR(0x80)
4f: b2800005 00000043 c205050b	      ALU:	ADD_CONST_0	R0.___w = C267.x, R0.w CLAMP
50: c8070502 00c01b00 e1020000	      ALU:	MULv	R2.xyz_ = R2.xyzz, R0.wwww
51: c8070502 00c0c600 a102fe00	      ALU:	MULv	R2.xyz_ = R2.xyzz, C510.zzzz
52: 14070502 00c0c61b a1020a04	      ALU:	MULv	R2.xyz_ = R2.xyzz, C266.zzzz
53: c8070500 00c015c0 eb020100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R2.xyzz, R1.yzww
54: 0c878000 00c06c1b a1000c05	      ALU:	MULv	export0.xyz_ = R0.xyzz, C268.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R5.wwww	; COLOR
