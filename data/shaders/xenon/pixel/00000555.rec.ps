      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05506005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 4c830208 00b0b0c6 a1870103	      ALU:	MULv	R8.xy__ = abs(R7).xyyy, C257.xyyy
                          						    	RECIP_IEEE	R2.___w = R3.zzzz
06: c80c0605 001bac00 e1020300	      ALU:	MULv	R5.__zw = R2.wwww, R3.xxxy
07: 10387081 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 1028c0a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R5.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: b8182081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R2.___x = R4.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 1008b081 1f1ff688 00004000	      FETCH:	SAMPLE	R11.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0025600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 10483101 1f1ff7ff 00004000	      FETCH:	SAMPLE	R3.___w = R8.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: b85890a1 1f1ff63f 00004000	      FETCH:	SAMPLE	R9.__xw = R5.zwz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: c8020604 00bebe00 f0010100	   (S)ALU:	DOT3v	R4._y__ = R1.zxyy, R1.zxyy
0e: 58210404 00bebeb1 f0000084	      ALU:	DOT3v	R4.x___ = R0.zxyy, R0.zxyy
                          						    	RECIPSQ_IEEE	R4._y__ = abs(R4).yyyy
0f: 59120404 00b1c66c e1040184	      ALU:	MULv	R4._y__ = R4.yyyy, R1.zzzz CLAMP
                          						    	RECIPSQ_IEEE	R4.x___ = abs(R4).xxxx
10: c80c0608 04b1ac00 a0020600	      ALU:	ADDv	R8.__zw = -R2.yyyy, C262.xxxy
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: c8060605 046cbc00 a0020500	      ALU:	ADDv	R5._yz_ = -R2.xxxx, C261.xxyy
12: c8030609 04c6b000 a0020700	      ALU:	ADDv	R9.xy__ = -R2.zzzz, C263.xyyy
13: c8010603 00c6c600 a503ff00	      ALU:	SETGTv	R3.x___ = R3.zzzz, C511.zzzz
14: 14070602 00c0106c e1090904	      ALU:	MULv	R2.xyz_ = R9.xyzz, R9.xyww
15: 0e180505 00c66cc6 e1020300	      ALU:	MULv	R5.___w = R2.zzzz, R3.xxxx
                          						    	MUL_PREVs	R5.x___ = R0.zzzz CLAMP
16: c80d0604 00f0f300 e1050500	      ALU:	MULv	R4.x_zw = R5.xyyz, R5.wyyz
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: c9030603 00b06cb1 8b040909	      ALU:	MULADDv	R3.xy__ = C265.yyyy, R4.xyyy, C265.xxxx CLAMP
18: c8030608 00b0b000 e1030300	      ALU:	MULv	R8.xy__ = R3.xyyy, R3.xyyy
19: c80f0608 003e3e00 e1080800	      ALU:	MULv	R8 = R8.zxyw, R8.zxyw
1a: c8030603 001a1800 e0040800	      ALU:	ADDv	R3.xy__ = R4.zwww, R8.xwww
1b: c8030602 00b0b000 e0030200	      ALU:	ADDv	R2.xy__ = R3.xyyy, R2.xyyy
1c: 40140009 001b6c6c a700ff82	      ALU:	SETNEv	R9.__z_ = R0.wwww, C511.xxxx
                          						    	LOG_IEEE	R0.x___ = abs(R2).xxxx
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: 40480009 001b6cb1 a701ff82	      ALU:	SETNEv	R9.___w = R1.wwww, C511.xxxx
                          						    	LOG_IEEE	R0.__z_ = abs(R2).yyyy
1e: c8050600 00c4c400 a1000800	      ALU:	MULv	R0.x_z_ = R0.xzzz, C264.xzzz
1f: 38140202 001b1b6c a103ff00	      ALU:	MULv	R2.__z_ = R3.wwww, C511.wwww
                          						    	EXP_IEEE	R2.x___ = R0.xxxx
20: 38210200 001b1bc6 e10b0600	      ALU:	MULv	R0.x___ = R11.wwww, R6.wwww
                          						    	EXP_IEEE	R2._y__ = R0.zzzz
21: c9030602 006db300 a1020800	      ALU:	MULv	R2.xy__ = R2.yxxx, C264.wyyy CLAMP
22: c8070603 0412b100 a002ff00	      ALU:	ADDv	R3.xyz_ = -R2.zyww, C511.yyyy
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c8088000 006cc600 e1000300	      ALU:	MULv	export0.___w = R0.xxxx, R3.zzzz	; COLOR
24: c807060a 00c0c000 e0060600	      ALU:	ADDv	R10.xyz_ = R6.xyzz, R6.xyzz
25: c807060c 00c06c00 a10c0000	      ALU:	MULv	R12.xyz_ = R12.xyzz, C256.xxxx
26: b8470004 00c0c080 e10a0bff	      ALU:	MULv	R4.xyz_ = R10.xyzz, R11.xyzz
                          						    	SUB_CONST_0	R0.__z_ = C511.y, R2.x
27: a8170807 00c0c082 c1070602	      ALU:	MULv	R7.xyz_ = R7.xyzz, R6.xyzz
                          						    	MUL_CONST_0	R8.x___ = C258.y, R0.z
28: 14070606 00c0c0c6 e10c0b08	      ALU:	MULv	R6.xyz_ = R12.xyzz, R11.xyzz
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: 0c170002 00b4b4c6 e1060a00	      ALU:	MULv	R2.xyz_ = R6.xzyy, R10.xzyy
                          						    	MUL_PREVs	R0.x___ = R0.zzzz
2a: 14010606 00b11bb1 e1030008	      ALU:	MULv	R6.x___ = R3.yyyy, R0.wwww
2b: 0c820000 006c1bb1 e1060503	      ALU:	MULv	R0._y__ = R6.xxxx, R5.wwww
                          						    	MUL_PREVs	R0.___w = R3.yyyy
2c: a84a0808 00b66182 81000304	      ALU:	MULv	R8._y_w = R0.zzyy, C259.yyxx
                          						    	MUL_CONST_0	R8.__z_ = C260.y, R0.z
2d: 14260605 006bbcb1 a1000300	      ALU:	MULv	R5._yz_ = R0.wwxx, C259.xxyy
                          						    	MAXs	R6._y__ = R0.yyyy
2e: a81d0506 0073ac45 a1000204	      ALU:	MULv	R6.x_zw = R0.wyyx, C258.xxxy
                          						    	MUL_CONST_0	R5.x___ = C260.x, R6.y
      0000602f 00001200     	EXEC ADDR(0x2f) CNT(0x6) BOOL_ADDR(0x80)
2f: c8040605 00c51a6c d10509ff	      ALU:	DOT2ADDv	R5.__z_ = C511.xxxx, R5.yzzz, R9.zwww
30: a8230509 00181a43 c1060904	      ALU:	MULv	R9.xy__ = R6.xwww, R9.zwww
                          						    	MUL_CONST_0	R5._y__ = C260.x, R0.w
31: a88b0506 00b41b80 c1080104	      ALU:	MULv	R6.xy_w = R8.xzyy, R1.wwww
                          						    	MUL_CONST_0	R5.___w = C260.y, R0.x
32: 140c0609 003106c6 e1050906	      ALU:	MULv	R9.__zw = R5.yyyw, R9.zzzw
33: 04120000 006cb16c e0050606	      ALU:	ADDv	R0._y__ = R5.xxxx, R6.yyyy
                          						    	ADD_PREVs	R0.x___ = R6.xxxx
34: 14030605 00c4191b e0090908	      ALU:	ADDv	R5.xy__ = R9.xzzz, R9.ywww
      00004035 00002200     	EXEC_END ADDR(0x35) CNT(0x4) BOOL_ADDR(0x80)
35: 04470006 00b4c01b e1070506	      ALU:	MULv	R6.xyz_ = R7.xzyy, R5.xyzz
                          						    	ADD_PREVs	R0.__z_ = R6.wwww
36: c8070606 00c0b4b4 eb040006	      ALU:	MULADDv	R6.xyz_ = R6.xzyy, R4.xyzz, R0.xzyy
37: c8070606 00b46cc0 eb020306	      ALU:	MULADDv	R6.xyz_ = R6.xyzz, R2.xzyy, R3.xxxx
38: c8078000 00c06c00 a1060a00	      ALU:	MULv	export0.xyz_ = R6.xyzz, C266.xxxx	; COLOR
