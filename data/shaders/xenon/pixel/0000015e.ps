//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   float $usendotl;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $suncolour     c3       1
//   $sunintensity  c4       1
//   $usendotl      c5       1
//   $invscreensize c6       1
//   $matvalue      c7       1
//   $fresnelterm   c8       1
//   $apptime       c9       1
//   $compressedhdr c10      1
//   $lmap          s0       1
//   $incan         s1       1
//   $spec          s2       1
//   $screenshadmap s3       1
//   $envmap        s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c9
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c10
defconst $diff, sampler2d, object, [1, 1], s8
defconst $envmap, samplercube, object, [1, 1], s4
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c8
defconst $incan, sampler2d, object, [1, 1], s1
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c6
defconst $lmap, sampler2d, object, [1, 1], s0
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c7
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spec, sampler2d, object, [1, 1], s2
defconst $suncolour, float, vector, [1, 3], c3
defconst $sunintensity, float, scalar, [1, 1], c4
defconst $usendotl, float, scalar, [1, 1], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=16
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 30
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_color_centroid r7

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 0.25, 10, 0, 0
def c251, 4, 1.5, -127.5, 0.0529999994
def c252, 2, 3.29999995, 0.300000012, 0.298999995
def c253, 0, 1, 0.5, 5
def c254, -1, 0.5, 0.587000012, 0.143999994
def c255, 0.0599999987, 0.150000006, 0.289999992, 255


/*    0.0 */     exec
/*    8   */     tfetch2D r13.xyz_, r6.xy, tf1, FetchValidOnly=false
/*    9   */     tfetch2D r12.xzy_, r6.zw, tf0, FetchValidOnly=false
/*   10   */     tfetch2D r9.yw__, r6.xy, tf7, FetchValidOnly=false
/*   11   */     tfetch2D r11.xy_z, r6.xy, tf2, FetchValidOnly=false
/*   12   */     tfetch2D r14, r6.xy, tf8, FetchValidOnly=false
/*   13   */     serialize
                 mul r3.w, c1.x, c250.y
               + adds r11.z, r7.xx
/*    0.1 */     exec
/*   14   */     mul r9.z, c7.x, c250.y
               + adds r8.z, r7.zz
/*   15   */     mul r4.w, r14.w, r7.w
               + adds r8.w, r7.yy
/*   16   */     dp3 r7.y, r3.zxy, r3.zxy
               + movs r7._, r11.z
/*   17   */     mul r10.xyz, r11.xyw, c254.y
               + muls_prev r15.x, r14.x
/*   18   */     mad r9.xy, r9.xy, c252.x, c254.x
/*   19   */     dp3 r7.x, r11.wxy, c255.xyz
               + rsq r7.y, r7_abs.y
/*    1.0 */     exec
/*   20   */     mul r15.yz, r8.wwz, r14.yyz
               + movs r7._, r9.z
/*   21   */     mul r16.xyz, r7.y, r3.xyz
               + muls_prev r3.x, r7.x
/*   22   */     dp2add r7.w, -r9.yx, r9.yx, c253.y
/*   23   */     mul r7.xyz, r10.zyx, r12.yzx
               + sqrt r9.z, r7_abs.w
/*   24   */     mul r11.xyw, r7.xyz, c251.x
               + addsc r7.x, c253.y, r3.x
/*   25   */     dp3 r3.x, r9.zxy, r2.zxy
               + addsc r7.y, c253.y, r3.w
/*    1.1 */     exec
/*   26   */     dp3 r3.y, r9.zxy, r0.zxy
               + movs r7.x, r7.x
/*   27   */     dp3_sat r3.w, r16.zxy, r9.zxy
               + movs r7.z, c253.x
/*   28   */     dp3 r3.z, r9.zxy, r1.zxy
               + maxs r15.w, r7.xz
/*   29   */     mul r7.x, r3.z, r1.w
               + mulsc r7.y, c2.x, r7.y
/*   30   */     mul r7.yzw, r7.y, r13.xxyz
               + log r13.w, r3.w
/*   31   */     mad r13.xyz, r12.xzy, c0.x, r7.yzw
/*    2.0 */     exec
/*   32   */     mad r7.x, r3.y, r0.w, r7.x
/*   33   */     mad r7.x, r3.x, r2.w, r7.x
/*   34   */     mul r15, r15, r13
               + adds r7.x, r7.xx
/*   35   */     mul r7.xyz, r7.x, r3.xyz
               + movs_sat r7.w, r4.z
/*   36   */     add r13.x, -r7.x, r2.w
               + movs r7.x, r14.x
/*   37   */     add r13.y, -r7.z, r1.w
               + exp r1.x, r15.w
/*    2.1 */     exec    // PredicateClean=false
/*   38   */     mul r1.xyz, r11.xyw, r1.x
               + movs r7._, -r7.y
/*   39   */     mul r1.xyz, r1.xyz, c3.zyx
               + adds_prev r13.z, r0.w
/*   40   */     mad r1.xyz, r1.zyx, c4.x, r15.xyz
/*   41   */     dp3 r7.y, r13.xzy, r13.xzy
               + mulsc r11.x, c252.w, r7.x
/*   42   */     mul r0.xy, r14.yz, c254.zw
               + rsq r7.x, r7_abs.y
/*   43   */     mul r7.xyz, r13.zyx, r7.x
               + setp_ne r7._, c5.x
/*    3.0 */ (p0) exec
/*   44   */     (p0) mul r3.w, c4.x, c3.x
/*   45   */     (p0) cndeq r13.xyz, c253.xxy, -r4.zx, r4.y
/*   46   */     (p0) dp3_sat r9.w, r9.zxy, r4.zxy
               + (p0) movs_sat r4.x, -r4.z
/*   47   */     (p0) dp3_sat r4.y, r9.zxy, r13.xyz
               + (p0) movs r7._, r9.w
/*   48   */     (p0) add r4.x, r4.y, -r4.x
               + (p0) adds_prev r7.w, -r7.w
/*   49   */     (p0) mad r4.x, r4.x, c250.x, r7.w
/*    3.1 */ (p0) exec
/*   50   */     (p0) mul r4.y, r3.w, r4.x
/*   51   */     (p0) mul r13.xw, r4.yx, c252.z
/*   52   */     (p0) mul r4.xy, r13.w, c3.yz
/*   53   */     (p0) mul r13.yz, r4.yyx, c4.x
/*   54   */     (p0) add r1.xyz, r1.xyz, r13.xzy
/*    4.0 */     alloc colors
/*    4.1 */     exec
/*   55   */     mul r4.xy, r8_abs.xy, c6.xy
               + movs r7._, c9.x
/*   56   */     cube r7, r7.zzxy, r7.yxz
               + muls_prev r6.z, c254.y
/*   57   */     mov r2.z, r7.w
               + rcp r0.z, r7_abs.z
/*   58   */     mad r2.xy, r7.yx, r0.z, c251.y
/*   59   */     tfetch2D r8.w___, r4.xy, tf3, FetchValidOnly=false
/*   60   */     tfetch3D r7._x__, r6.xyz, tf6, FetchValidOnly=false
/*    5.0 */     exec
/*   61   */     tfetchCube r6, r2.xyz, tf4, FetchValidOnly=false
/*   62   */     serialize
                 mul r7.x, r6.w, c255.w
               + rcp r7.z, r5.w
/*   63   */     mul r2.xy, r7.z, r5.yx
               + muls r5.w, r2.ww
/*   64   */     mul r5.xy, r0.xy, r8.wz
               + addsc r0.x, c254.x, r7.y
/*   65   */     sgt r7.w, c253.y, r6.w
               + muls r5.z, r1.ww
/*   66   */     mov r9.z, r2.w
               + movs r11.y, r0.w
/*    5.1 */     exec
/*   67   */     mad r0.yz, r11.xxy, r11.zzy, r5.xxz
/*   68   */     add r4.xy, r0.yz, r5.yw
               + addsc r7.z, c254.y, r7.x
/*   69   */     add r8.y, r0.x, r7.y
               + rsq r5.y, r4_abs.y
/*   70   */     mul r5.zw, r8.xxxy, c253.zzzw
               + subsc r2.z, c253.y, r2.x
/*   71   */     add r5.x, -r5.z, c253.y
               + movs r7._, r5.y
/*   72   */     mul r0.xyw, r5.wwy, r9.xyz
               + muls_prev r0.z, r11.y
/*    6.0 */     exec
/*   73   */     mul r1, r5.xxxy, r1
               + mulsc r5.y, c251.w, r0.x
/*   74   */     mul r5.xw, -r0.wz, r3.xy
               + mulsc r5.z, c251.w, r0.y
/*   75   */     mad r2.w, -r1.w, r3.z, r5.w
/*   76   */     add r0.xyz, r2.ywz, r5.yxz
               + frcs r7.z, r7.z
/*   77   */     tfetch2D r0.x_yz, r0.xz, tf5
/*   78   */     serialize
                 add r7.x, r7.x, -r7.z
/*    6.1 */     exec
/*   79   */     addsc r7.x, c251.z, r7.x
/*   80   */     max r2.x, r4.x, c255.y
               + exp r7.x, r7.x
/*   81   */     mul r7.xyz, r7.x, r6.xyz
/*   82   */     cndgt r7.xyz, r7.w, r7.xyz, r6.xyz
/*   83   */     add r7.w, -r0.y, c253.y
               + movs r7._, -c8.x
/*   84   */     mul r0.y, r7.w, r7.w
               + adds_prev r7.w, c252.x
/*    7.0 */     exec
/*   85   */     min r2.x, r2.x, c253.y
               + muls r2.y, r0.yy
/*   86   */     mul r7, r2.yx, r7.wxyz
/*   87   */     add_sat r7.x, r7.x, c8.x
/*   88   */     mul r7.xyz, r7.yzw, r7.x
/*   89   */     mul r7.yzw, r7.xxyz, r10.xxyz
               + mulsc r7.x, c10.y, r0.x
/*   90   */     mul r2.xyz, r7.yzw, c252.y
               + mulsc r7.y, c10.y, r0.z
/*    7.1 */     exece
/*   91   */     mul r2.xyz, r2.xyz, c7.z
               + mulsc r7.z, c10.y, r0.w
/*   92   */     mad r0.xyz, r2.xyz, r12.xzy, r1.xyz
/*   93   */     add r0.xyz, r0.xzy, -r7.xzy
/*   94   */     mad r7.xyz, r0.xzy, c9.x, r7.xyz
/*   95   */     mul r4.xyz, r7.xyz, c10.x
/*   96   */     mov oC0, r4

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x007f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] color0 r7.xyzw

