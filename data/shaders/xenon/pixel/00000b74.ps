//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $distfade;
//   float $pcfkernel;
//   sampler2D $shadmap;
//   float $shadowatten;
//   float3 $shadowboundmax;
//   float4 $texclamp;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   $texclamp       c0       1
//   $pcfkernel      c1       1
//   $distfade       c2       1
//   $shadowatten    c3       1
//   $shadowboundmax c4       1
//   $shadmap        s0       1
//

// Shader type: pixel 

xps_3_0
defconst $distfade, float, vector, [1, 2], c2
defconst $pcfkernel, float, scalar, [1, 1], c1
defconst $shadmap, sampler2d, object, [1, 1], s0
defconst $shadowatten, float, scalar, [1, 1], c3
defconst $shadowboundmax, float, vector, [1, 3], c4
defconst $texclamp, float, vector, [1, 4], c0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=10
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 4 interpolants: 4, components: 15
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2.xyz
dcl_color_centroid r3

def c252, 0, 0, 0, 0
def c253, -0.000148219435, -0.000268554693, 0, 1
def c254, 2.92968743e-005, 0.000195312503, 0.000292968762, -0.000261491165
def c255, 0.333000004, 0, 0, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    5   */     mad r4, c1.x, c254.xzyw, r0.xyxy
/*    6   */     mul r6, r0.w, c0.zwxy
/*    7   */     mad r5.xy, c1.x, c253.yx, r0.xy
/*    8   */     add r5.z, -r1.w, c2.y
               + subs r2.w, c2.yx
/*    9   */     max r5.xy, r5.xy, r6.zw
               + movs r5.z, r5.z
/*   10   */     max r4, r4, r6.zwzw
               + movs r5.w, c253.z
/*    1.0 */     exec
/*   11   */     min r5.xy, r6.xy, r5.xy
               + maxs r5.z, r5.zw
/*   12   */     min r6, r6.xyxy, r4
               + rcp r4.y, r0.w
/*   13   */     mul r10, r6, r4.y
               + rcp r4.z, r2.w
/*   14   */     mul r6.xyw, r5.xyz, r4.yyz
/*   15   */     getWeights2D r5.xy__, r10.xyy, tf0, MagFilter=linear, MinFilter=linear, MipFilter=linear
/*   16   */     getWeights2D r5.__xy, r6.xyy, tf0, MagFilter=linear, MinFilter=linear, MipFilter=linear
/*    1.1 */     exec
/*   17   */     tfetch2D r8.x___, r10.xy, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=-0.5, OffsetY=0.5
/*   18   */     tfetch2D r8._x__, r6.xy, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=-0.5, OffsetY=0.5
/*   19   */     tfetch2D r8.__x_, r10.zw, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=-0.5, OffsetY=0.5
/*   20   */     tfetch2D r7.x___, r10.xy, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=0.5, OffsetY=0.5
/*   21   */     tfetch2D r7._x__, r6.xy, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=0.5, OffsetY=0.5
/*   22   */     tfetch2D r7.___x, r10.zw, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=0.5, OffsetY=0.5
/*    2.0 */     exec
/*   23   */     getWeights2D r4.x__y, r10.zww, tf0, MagFilter=linear, MinFilter=linear, MipFilter=linear
/*   24   */     tfetch2D r9.x___, r10.xy, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=-0.5, OffsetY=-0.5
/*   25   */     tfetch2D r9._x__, r6.xy, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=-0.5, OffsetY=-0.5
/*   26   */     tfetch2D r9.__x_, r10.zw, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=-0.5, OffsetY=-0.5
/*   27   */     tfetch2D r10.x___, r10.xy, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=0.5, OffsetY=-0.5
/*   28   */     tfetch2D r10._x__, r6.xy, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=0.5, OffsetY=-0.5
/*    2.1 */     exec
/*   29   */     tfetch2D r10.__x_, r10.zw, tf0, MagFilter=point, MinFilter=point, MipFilter=point, OffsetX=0.5, OffsetY=-0.5
/*   30   */     serialize
                 dp3 r2.y, r2.zxy, r2.zxy
/*   31   */     mul_sat r2.x, r4.y, r0.z
               + sqrt r0.y, r2_abs.y
/*   32   */     sge r0.xzw, r10.xyyz, r2.x
/*   33   */     sge r6.xyz, r9.xyz, r2.x
/*   34   */     add r0.xzw, r0.wxxz, -r6.zxxy
/*    3.0 */     exec
/*   35   */     mul r7.z, r0.x, r4.x
/*   36   */     sgt r0.x, r1.w, c2.x
/*   37   */     sge r7.xyw, r7.xyw, r2.x
/*   38   */     sge r2.xyz, r8.xyz, r2.x
/*   39   */     add r8.xyz, r7.xyw, -r2.xyz
/*   40   */     mul r7.xy, r0.zw, r5.xz
               + movs r3._, r8.z
/*    3.1 */     exec
/*   41   */     mul r8.xy, r8.xy, r5.xz
               + muls_prev r8.z, r4.x
/*   42   */     cndgt r0.w, r0.x, r6.w, c253.w
/*   43   */     add r2.xyz, r8.xyz, r2.xyz
/*   44   */     add r4.xyz, r7.xyz, r6.xyz
/*   45   */     add r2.xyz, r2.xyz, -r4.xyz
/*   46   */     mul r2.z, r2.z, r4.w
/*    4.0 */     exec
/*   47   */     mul r2.xy, r2.xy, r5.yw
/*   48   */     add r2.xyz, r4.xyz, r2.xyz
/*   49   */     dp3 r0.x, r2.zxy, c253.w
               + subsc r0.y, -c4.x, -r0.y
/*   50   */     mul r0.x, r0.x, c255.x
               + mulsc_sat r0.z, c3.x, r0.y
/*   51   */     add r0.xy, -r0.xz, c253.w
/*   52   */     cndgt r0.z, r1.z, r0.x, c253.z
/*    4.1 */     exece
/*   53   */     mul r1.x, r0.z, r3.x
               + movs r3._, r0.w
/*   54   */     mul r1.x, r1.x, r0.w
               + muls_prev r0.z, r0.z
/*   55   */     mul r1.yzw, r0.z, r3.yyzw
/*   56   */     mul oC0, r1, r0.y

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x000f SamplingPattern 0x0007
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyz
// [3] color0 r3.xyzw

