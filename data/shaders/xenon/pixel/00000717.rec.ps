      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05406005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: c80f0007 00a0c100 a1050000	      ALU:	MULv	R7 = R5.xyxy, C256.yyzz
06: 4c8f000a 00a01cc6 a1050004	      ALU:	MULv	R10 = R5.xyxy, C256.xxww
                          						    	RECIP_IEEE	R0.___w = R4.zzzz
07: c8030001 001bb000 e1000400	      ALU:	MULv	R1.xy__ = R0.wwww, R4.xyyy
08: 101880a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R5.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: b858d141 1f1ffe88 00004000	      FETCH:	SAMPLE	R13.xyz_ = R10.zwz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: b84890e1 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R7.zwz CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0955600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 1028c141 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R10.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 103870e1 1f1ff447 00004000	      FETCH:	SAMPLE	R7._xyz = R7.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: b86860a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R6.xyz_ = R5.zwz CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: 1078e021 1f1fffd8 00004000	      FETCH:	SAMPLE	R14.xw__ = R1.xyx CONST(7) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: 100810a1 1f1ffe81 00004000	      FETCH:	SAMPLE	R1.yxz_ = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: c803000a 04b1b000 a0030600	   (S)ALU:	ADDv	R10.xy__ = -R3.yyyy, C262.xyyy
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: c80c000a 046cac00 a0030500	      ALU:	ADDv	R10.__zw = -R3.xxxx, C261.xxxy
12: c803000b 04c6b000 a0030700	      ALU:	ADDv	R11.xy__ = -R3.zzzz, C263.xyyy
13: ac28040b 00c6b141 8504ff01	      ALU:	SETGTv	R11.___w = R4.zzzz, C511.yyyy
                          						    	MUL_CONST_1	R4._y__ = C257.x, R1.y
14: 08480b00 00bebe61 f000000e	      ALU:	DOT3v	R0.___w = R0.zxyy, R0.zxyy
                          						    	MULs	R11.__z_ = R14.yyxx
15: bc170300 04c06c45 a00cffff	      ALU:	ADDv	R0.xyz_ = -R12.xyzz, C511.xxxx
                          						    	SUB_CONST_1	R3.x___ = C511.x, R7.y
16: bc2d0304 04f06c46 a009ffff	      ALU:	ADDv	R4.x_zw = -R9.xyyz, C511.xxxx
                          						    	SUB_CONST_1	R3._y__ = C511.x, R7.z
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: a0870005 04c06c1b a00dff80	      ALU:	ADDv	R5.xyz_ = -R13.xyzz, C511.xxxx
                          						    	SQRT_IEEE	R0.___w = abs(R0).wwww
18: bd480300 001b1b47 a100ffff	      ALU:	MULv	R0.___w = R0.wwww, C511.wwww CLAMP
                          						    	SUB_CONST_1	R3.__z_ = C511.x, R7.w
19: c8070005 001bc0c0 eb00050d	      ALU:	MULADDv	R5.xyz_ = R13.xyzz, R0.wwww, R5.xyzz
1a: c8070009 001b14c0 eb000409	      ALU:	MULADDv	R9.xyz_ = R9.xyzz, R0.wwww, R4.xzww
1b: c8070007 001bc015 eb000307	      ALU:	MULADDv	R7.xyz_ = R7.yzww, R0.wwww, R3.xyzz
1c: c8070003 001bc0c0 eb00000c	      ALU:	MULADDv	R3.xyz_ = R12.xyzz, R0.wwww, R0.xyzz
      0000601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: a8170400 00c01045 e10b0b01	      ALU:	MULv	R0.xyz_ = R11.xyzz, R11.xyww
                          						    	MUL_CONST_0	R4.x___ = C257.x, R6.y
1e: c8080000 00b3b3b1 f10a0a00	      ALU:	DOT2ADDv	R0.___w = R0.yyyy, R10.wyyy, R10.wyyy
1f: c8080003 006e6e6c f10a0a00	      ALU:	DOT2ADDv	R3.___w = R0.xxxx, R10.zxxx, R10.zxxx
20: 40470407 02b4b41b e0070383	      ALU:	ADDv	R7.xyz_ = R7.xzyy, -R3.xzyy
                          						    	LOG_IEEE	R4.__z_ = abs(R3).wwww
21: c8070003 00c06cb4 eb070803	      ALU:	MULADDv	R3.xyz_ = R3.xzyy, R7.xyzz, R8.xxxx
22: 40870407 02c0b41b e0090380	      ALU:	ADDv	R7.xyz_ = R9.xyzz, -R3.xzyy
                          						    	LOG_IEEE	R4.___w = abs(R0).wwww
      00006023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: c8070003 00c0b1b4 eb070803	      ALU:	MULADDv	R3.xyz_ = R3.xzyy, R7.xyzz, R8.yyyy
24: a8430400 001ac446 a1040801	      ALU:	MULv	R0.xy__ = R4.zwww, C264.xzzz
                          						    	MUL_CONST_0	R4.__z_ = C257.x, R6.z
25: 38140000 00c61b6c e1000100	      ALU:	MULv	R0.__z_ = R0.zzzz, R1.wwww
                          						    	EXP_IEEE	R0.x___ = R0.xxxx
26: 38270005 02b4b4b1 e0050300	      ALU:	ADDv	R5.xyz_ = R5.xzyy, -R3.xzyy
                          						    	EXP_IEEE	R0._y__ = R0.yyyy
27: c8070003 00c0c6b4 eb050803	      ALU:	MULADDv	R3.xyz_ = R3.xzyy, R5.xyzz, R8.zzzz
28: aa1c0404 00ecec80 c1040108	      ALU:	MULv	R4.__zw = R4.xxxz, R1.xxxz
                          						    	MUL_CONST_0	R4.x___ = C264.y, R0.x CLAMP
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: aa2e0403 00967601 c1040308	      ALU:	MULv	R3._yzw = R4.zzwy, R3.zzyx
                          						    	MUL_CONST_0	R4._y__ = C264.w, R0.y CLAMP
2a: 14030000 046dc61b a004ff03	      ALU:	ADDv	R0.xy__ = -R4.yxxx, C511.zzzz
2b: 0c110305 006cb16c a1000206	      ALU:	MULv	R5.x___ = R0.xxxx, C258.yyyy
                          						    	MUL_PREVs	R3.x___ = R6.xxxx
2c: a8220500 00c6b180 c1000003	      ALU:	MULv	R0._y__ = R0.zzzz, R0.yyyy
                          						    	MUL_CONST_0	R5._y__ = C259.y, R0.x
2d: a8410504 00b16c80 81000204	      ALU:	MULv	R4.x___ = R0.yyyy, C258.xxxx
                          						    	MUL_CONST_0	R5.__z_ = C260.y, R0.x
2e: a8240404 00b16c41 81000403	      ALU:	MULv	R4.__z_ = R0.yyyy, C260.xxxx
                          						    	MUL_CONST_0	R4._y__ = C259.x, R0.y
      0000302f 00002200     	EXEC_END ADDR(0x2f) CNT(0x3) BOOL_ADDR(0x80)
2f: c8070000 00c01bc0 eb050204	      ALU:	MULADDv	R0.xyz_ = R4.xyzz, R5.xyzz, R2.wwww
30: c8070000 00c0cdc0 eb000103	      ALU:	MULADDv	R0.xyz_ = R3.xyzz, R0.xyzz, R1.yxzz
31: 14878000 00c06c1b a1000906	      ALU:	MULv	export0.xyz_ = R0.xyzz, C265.xxxx	; COLOR
                          						    	MAXs	export0.___w = R6.wwww	; COLOR
      00000000 00000000     	NOP
