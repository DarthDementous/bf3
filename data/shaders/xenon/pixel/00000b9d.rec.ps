      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: c8030006 00b0b000 a0000a00	      ALU:	ADDv	R6.xy__ = R0.xyyy, C266.xyyy
06: c8030005 00b0b000 a0000800	      ALU:	ADDv	R5.xy__ = R0.xyyy, C264.xyyy
07: 140c0005 00acac6c a0000900	      ALU:	ADDv	R5.__zw = R0.xxxy, C265.xxxy
08: 04430604 00b0b06c 8000060b	      ALU:	ADDv	R4.xy__ = R0.xyyy, C262.xyyy
                          						    	ADD_PREVs	R6.__z_ = C267.xxxx
09: 14030003 00b0b06c a0000400	      ALU:	ADDv	R3.xy__ = R0.xyyy, C260.xyyy
0a: 044c0403 00acac6c 80000507	      ALU:	ADDv	R3.__zw = R0.xxxy, C261.xxxy
                          						    	ADD_PREVs	R4.__z_ = C263.xxxx
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: 14030002 00b0b06c a0000200	      ALU:	ADDv	R2.xy__ = R0.xyyy, C258.xyyy
0c: 04430201 00b0b06c 80000003	      ALU:	ADDv	R1.xy__ = R0.xyyy, C256.xyyy
                          						    	ADD_PREVs	R2.__z_ = C259.xxxx
0d: 140c0001 00acacb1 a0000100	      ALU:	ADDv	R1.__zw = R0.xxxy, C257.xxxy
0e: 048f0201 00006cb1 8201ff03	      ALU:	MAXv	R1 = R1, C511.xxxx
                          						    	ADD_PREVs	R2.___w = C259.yyyy
0f: 140f0002 00006cb1 a202ff00	      ALU:	MAXv	R2 = R2, C511.xxxx
10: 048f0403 00006cb1 8203ff07	      ALU:	MAXv	R3 = R3, C511.xxxx
                          						    	ADD_PREVs	R4.___w = C263.yyyy
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 140f0004 00006cb1 a204ff00	      ALU:	MAXv	R4 = R4, C511.xxxx
12: 048f0605 00006cb1 8205ff0b	      ALU:	MAXv	R5 = R5, C511.xxxx
                          						    	ADD_PREVs	R6.___w = C267.yyyy
13: c80f0000 00006c00 a206ff00	      ALU:	MAXv	R0 = R6, C511.xxxx
14: c80f0000 0000b100 a300ff00	      ALU:	MINv	R0 = R0, C511.yyyy
15: c80f000a 0000b100 a305ff00	      ALU:	MINv	R10 = R5, C511.yyyy
16: c80f0008 0000b100 a304ff00	      ALU:	MINv	R8 = R4, C511.yyyy
      05406017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: c80f0006 0000b100 a303ff00	      ALU:	MINv	R6 = R3, C511.yyyy
18: c80f0004 0000b100 a302ff00	      ALU:	MINv	R4 = R2, C511.yyyy
19: c80f0002 0000b100 a301ff00	      ALU:	MINv	R2 = R1, C511.yyyy
1a: 10081041 1f1ff688 00004000	      FETCH:	SAMPLE	R1.xyzw = R2.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: b8082041 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R2.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1c: 10083081 1f1ff688 00004000	      FETCH:	SAMPLE	R3.xyzw = R4.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0555601d 00001200     	EXEC ADDR(0x1d) CNT(0x6) BOOL_ADDR(0x80)
1d: b8084081 1f1ff688 00004000	      FETCH:	SAMPLE	R4.xyzw = R4.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1e: 100850c1 1f1ff688 00004000	      FETCH:	SAMPLE	R5.xyzw = R6.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1f: b80860c1 1f1ff688 00004000	      FETCH:	SAMPLE	R6.xyzw = R6.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
20: 10087101 1f1ff688 00004000	      FETCH:	SAMPLE	R7.xyzw = R8.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
21: b8088101 1f1ff688 00004000	      FETCH:	SAMPLE	R8.xyzw = R8.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
22: 10089141 1f1ff688 00004000	      FETCH:	SAMPLE	R9.xyzw = R10.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00956023 00001200     	EXEC ADDR(0x23) CNT(0x6) BOOL_ADDR(0x80)
23: b808a141 1f1ff688 00004000	      FETCH:	SAMPLE	R10.xyzw = R10.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
24: 1008b001 1f1ff688 00004000	      FETCH:	SAMPLE	R11.xyzw = R0.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
25: b8080001 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R0.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
26: c80f0000 00000000 a1001700	   (S)ALU:	MULv	R0 = R0, C279
27: c80f0000 00949494 ab0b1600	      ALU:	MULADDv	R0 = R0.xzwy, R11.xzwy, C278.xzwy
28: c80f0000 00f8f894 ab0a1500	      ALU:	MULADDv	R0 = R0.xzwy, R10.xwyz, C277.xwyz
      00006029 00001200     	EXEC ADDR(0x29) CNT(0x6) BOOL_ADDR(0x80)
29: c80f0000 00000094 ab091400	      ALU:	MULADDv	R0 = R0.xzwy, R9, C276
2a: c80f0000 00949494 ab081300	      ALU:	MULADDv	R0 = R0.xzwy, R8.xzwy, C275.xzwy
2b: c80f0000 00f8f894 ab071200	      ALU:	MULADDv	R0 = R0.xzwy, R7.xwyz, C274.xwyz
2c: c80f0000 00000094 ab061100	      ALU:	MULADDv	R0 = R0.xzwy, R6, C273
2d: c80f0000 00949494 ab051000	      ALU:	MULADDv	R0 = R0.xzwy, R5.xzwy, C272.xzwy
2e: c80f0000 00f8f894 ab040f00	      ALU:	MULADDv	R0 = R0.xzwy, R4.xwyz, C271.xwyz
      0000302f 00002200     	EXEC_END ADDR(0x2f) CNT(0x3) BOOL_ADDR(0x80)
2f: c80f0000 00000094 ab030e00	      ALU:	MULADDv	R0 = R0.xzwy, R3, C270
30: c80f0000 00949494 ab020d00	      ALU:	MULADDv	R0 = R0.xzwy, R2.xzwy, C269.xzwy
31: c80f8000 000000f8 ab010c00	      ALU:	MULADDv	export0 = R0.xwyz, R1, C268	; COLOR
      00000000 00000000     	NOP
