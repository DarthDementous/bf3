      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096006 00001200     	EXEC ADDR(0x6) CNT(0x6) BOOL_ADDR(0x80)
06: 100000c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: c8040700 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
08: c803070a 006dc500 2103fe00	      ALU:	MULv	R10.xy__ = C259.yxxx, C510.yzzz
09: c8080701 011bb16c ab00030a	      ALU:	MULADDv	R1.___w = -R10.xxxx, R0.wwww, C259.yyyy
0a: 584c0002 00acacc6 a1880680	      ALU:	MULv	R2.__zw = abs(R8).xxxy, C262.xxxy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0b: a884000a 006cc602 0101fe03	      ALU:	MULv	R10.__z_ = C257.xxxx, C510.zzzz
                          						    	MUL_CONST_0	R0.___w = C259.w, R0.z
      0550600c 00001200     	EXEC ADDR(0xc) CNT(0x6) BOOL_ADDR(0x80)
0c: c8030700 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
0d: c8030702 00b01bb0 eb000106	      ALU:	MULADDv	R2.xy__ = R6.xyyy, R0.xyyy, R1.wwww
0e: b8589041 1f1ff7ff 00004000	      FETCH:	SAMPLE	R9.___w = R2.zwz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: b82890c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R6.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 1038b0c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R11.xyz_ = R6.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: 10480041 1f1ff478 00004000	      FETCH:	SAMPLE	R0.x_yz = R2.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00096012 00001200     	EXEC ADDR(0x12) CNT(0x6) BOOL_ADDR(0x80)
12: 10182041 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R2.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
13: c8030708 04b1b000 a0050b00	   (S)ALU:	ADDv	R8.xy__ = -R5.yyyy, C267.xyyy
14: c80c0708 046cac00 a0050a00	      ALU:	ADDv	R8.__zw = -R5.xxxx, C266.xxxy
15: 00120c00 00bebe6c f0010107	      ALU:	DOT3v	R0._y__ = R1.zxyy, R1.zxyy
                          						    	ADDs	R12.x___ = R7.xxxx
16: 002c0c06 04c6acb1 a0050c07	      ALU:	ADDv	R6.__zw = -R5.zzzz, C268.xxxy
                          						    	ADDs	R12._y__ = R7.yyyy
17: 00420c01 00bebec6 f0030307	      ALU:	DOT3v	R1._y__ = R3.zxyy, R3.zxyy
                          						    	ADDs	R12.__z_ = R7.zzzz
      00006018 00001200     	EXEC ADDR(0x18) CNT(0x6) BOOL_ADDR(0x80)
18: a8110a01 00bebe80 d00404fe	      ALU:	DOT3v	R1.x___ = R4.zxyy, R4.zxyy
                          						    	MUL_CONST_0	R10.x___ = C510.y, R0.x
19: 58180101 00cfc06c b000ff81	      ALU:	DOT3v	R1.___w = R0.wxzz, C511.xyzz
                          						    	RECIPSQ_IEEE	R1.x___ = abs(R1).xxxx
1a: 5822010a 00b11bb1 e10a0181	      ALU:	MULv	R10._y__ = R10.yyyy, R1.wwww
                          						    	RECIPSQ_IEEE	R1._y__ = abs(R1).yyyy
1b: 14070705 00c0c0b1 e10c0201	      ALU:	MULv	R5.xyz_ = R12.xyzz, R2.xyzz
1c: 0f120101 006cc6c6 e1010403	      ALU:	MULv	R1._y__ = R1.xxxx, R4.zzzz CLAMP
                          						    	MUL_PREVs	R1.x___ = R3.zzzz CLAMP
1d: c9030706 00b06cb1 8b010e0e	      ALU:	MULADDv	R6.xy__ = C270.yyyy, R1.xyyy, C270.xxxx CLAMP
      0000601e 00001200     	EXEC ADDR(0x1e) CNT(0x6) BOOL_ADDR(0x80)
1e: a8230a01 00c51b82 800afffe	      ALU:	ADDv	R1.xy__ = R10.yzzz, C511.wwww
                          						    	MUL_CONST_0	R10._y__ = C510.y, R0.z
1f: ac8f0106 00aaaa41 c1060602	      ALU:	MULv	R6 = R6.zwxy, R6.zwxy
                          						    	MUL_CONST_1	R1.___w = C258.x, R1.y
20: 5887010b 001bc0b1 e1010b80	      ALU:	MULv	R11.xyz_ = R1.wwww, R11.xyzz
                          						    	RECIPSQ_IEEE	R1.___w = abs(R0).yyyy
21: c8070702 00c06cc0 ab09000b	      ALU:	MULADDv	R2.xyz_ = R11.xyzz, R9.xyzz, C256.xxxx
22: c8020700 00b3b3b1 f1080806	      ALU:	DOT2ADDv	R0._y__ = R6.yyyy, R8.wyyy, R8.wyyy
23: c8080705 006e6e6c f1080806	      ALU:	DOT2ADDv	R5.___w = R6.xxxx, R8.zxxx, R8.zxxx
      00006024 00001200     	EXEC ADDR(0x24) CNT(0x6) BOOL_ADDR(0x80)
24: 40470a08 0014c01b e1000785	      ALU:	MULv	R8.xyz_ = R0.xzww, R7.xyzz
                          						    	LOG_IEEE	R10.__z_ = abs(R5).wwww
25: 41880a01 001bc6b1 e1010180	      ALU:	MULv	R1.___w = R1.wwww, R1.zzzz CLAMP
                          						    	LOG_IEEE	R10.___w = abs(R0).yyyy
26: a8430a06 001ac483 810a0dfe	      ALU:	MULv	R6.xy__ = R10.zwww, C269.xzzz
                          						    	MUL_CONST_0	R10.__z_ = C510.y, R0.w
27: 38170009 00c0c06c e10a0906	      ALU:	MULv	R9.xyz_ = R10.xyzz, R9.xyzz
                          						    	EXP_IEEE	R0.x___ = R6.xxxx
28: 382c0000 000606b1 e1060606	      ALU:	MULv	R0.__zw = R6.zzzw, R6.zzzw
                          						    	EXP_IEEE	R0._y__ = R6.yyyy
29: 29130b00 00b0191b a1000d03	      ALU:	MULv	R0.xy__ = R0.xyyy, C269.ywww CLAMP
                          						    	SETNEs	R11.x___ = R3.wwww
      0000602a 00001200     	EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: 28230b00 046d1b1b a000ff04	      ALU:	ADDv	R0.xy__ = -R0.yxxx, C511.wwww
                          						    	SETNEs	R11._y__ = R4.wwww
2b: a84f0906 0000ac41 8109fe08	      ALU:	MULv	R6 = R9, C510.xxxy
                          						    	MUL_CONST_0	R9.__z_ = C264.x, R0.y
2c: a8280908 006c1b41 8201fe09	      ALU:	MAXv	R8.___w = R1.xxxx, C510.wwww
                          						    	MUL_CONST_0	R9._y__ = C265.x, R0.y
2d: a82c0a00 00067180 c1000009	      ALU:	MULv	R0.__zw = R0.zzzw, R0.yyyx
                          						    	MUL_CONST_0	R10._y__ = C265.y, R0.x
2e: a8430a0c 001ab080 81000908	      ALU:	MULv	R12.xy__ = R0.zwww, C265.xyyy
                          						    	MUL_CONST_0	R10.__z_ = C264.y, R0.x
2f: a8490c09 00c56c42 81000708	      ALU:	MULv	R9.x__w = R0.yzzz, C263.xxxx
                          						    	MUL_CONST_0	R12.__z_ = C264.x, R0.z
      00006030 00001200     	EXEC ADDR(0x30) CNT(0x6) BOOL_ADDR(0x80)
30: a8890c0a 0018b183 81000708	      ALU:	MULv	R10.x__w = R0.xwww, C263.yyyy
                          						    	MUL_CONST_0	R12.___w = C264.y, R0.w
31: 140f0700 000dad1b e10c0b0a	      ALU:	MULv	R0 = R12.yxzw, R11.yxxy
32: 0c160001 00b66bb1 e000000b	      ALU:	ADDv	R1._yz_ = R0.zzyy, R0.wwxx
                          						    	MUL_PREVs	R0.x___ = R11.yyyy
33: c8010701 001b6c6c eb090b00	      ALU:	MULADDv	R1.x___ = R0.xxxx, R9.wwww, R11.xxxx
34: 40870100 00c01b1b e10a0401	      ALU:	MULv	R0.xyz_ = R10.xyzz, R4.wwww
                          						    	LOG_IEEE	R1.___w = R1.wwww
35: c8070700 00b41bb4 eb090300	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R9.xzyy, R3.wwww
      00006036 00001200     	EXEC ADDR(0x36) CNT(0x6) BOOL_ADDR(0x80)
36: c80f0701 00000000 e1080100	      ALU:	MULv	R1 = R8, R1
37: c8070700 00c0c0c0 eb050001	      ALU:	MULADDv	R0.xyz_ = R1.xyzz, R5.xyzz, R0.xyzz
38: 38180100 041b1b1b a006ff01	      ALU:	ADDv	R0.___w = -R6.wwww, C511.wwww
                          						    	EXP_IEEE	R1.x___ = R1.wwww
39: c8070701 00c06c00 e1060100	      ALU:	MULv	R1.xyz_ = R6.xyzz, R1.xxxx
3a: c8070701 00c0c000 a1010400	      ALU:	MULv	R1.xyz_ = R1.xyzz, C260.xyzz
3b: 14070701 00c06c1b a1010502	      ALU:	MULv	R1.xyz_ = R1.xyzz, C261.xxxx
      0000303c 00002200     	EXEC_END ADDR(0x3c) CNT(0x3) BOOL_ADDR(0x80)
3c: c8070701 00b4b4b4 eb050201	      ALU:	MULADDv	R1.xyz_ = R1.xzyy, R5.xzyy, R2.xzyy
3d: c8070700 001bb4c0 eb000100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R0.wwww, R1.xzyy
3e: 0c878000 00c06c1b a1000f07	      ALU:	MULv	export0.xyz_ = R0.xyzz, C271.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R7.wwww	; COLOR
      00000000 00000000     	NOP
