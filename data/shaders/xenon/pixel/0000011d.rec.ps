      09556005 00001200     	EXEC ADDR(0x5) CNT(0x6) BOOL_ADDR(0x80)
05: 10285041 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R2.xyx CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
06: b8188041 1f1ffe88 00004000	      FETCH:	SAMPLE	R8.xyz_ = R2.zwz CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
07: 10389041 1f1fffd9 00004000	      FETCH:	SAMPLE	R9.yw__ = R2.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
08: 10487041 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R2.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 10082041 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R2.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: c8080301 006cb100 2103fd00	   (S)ALU:	MULv	R1.___w = C259.xxxx, C509.yyyy
      0000600b 00001200     	EXEC ADDR(0xb) CNT(0x6) BOOL_ADDR(0x80)
0b: c8080300 00bebe00 f0000000	      ALU:	DOT3v	R0.___w = R0.zxyy, R0.zxyy
0c: c8070306 00626200 e0030300	      ALU:	ADDv	R6.xyz_ = R3.zyxx, R3.zyxx
0d: c8070306 0062c000 e1060200	      ALU:	MULv	R6.xyz_ = R6.zyxx, R2.xyzz
0e: c8010303 0062c000 b007ff00	      ALU:	DOT3v	R3.x___ = R7.zyxx, C511.xyzz
0f: c8030302 00b06cc6 8b09fdfe	      ALU:	MULADDv	R2.xy__ = C510.zzzz, R9.xyyy, C509.xxxx
10: c8070307 00621b00 a107ff00	      ALU:	MULv	R7.xyz_ = R7.zyxx, C511.wwww
      00006011 00001200     	EXEC ADDR(0x11) CNT(0x6) BOOL_ADDR(0x80)
11: 58270307 00c0621b e1070880	      ALU:	MULv	R7.xyz_ = R7.xyzz, R8.zyxx
                          						    	RECIPSQ_IEEE	R3._y__ = abs(R0).wwww
12: 14070300 00b1c06c c1030001	      ALU:	MULv	R0.xyz_ = R3.yyyy, R0.xyzz
13: c8080300 046d6db1 d10202fe	      ALU:	DOT2ADDv	R0.___w = C510.yyyy, -R2.yxxx, R2.yxxx
14: 0c210303 001b6cb1 c10103fd	      ALU:	MULv	R3.x___ = R1.wwww, R3.xxxx
                          						    	MUL_PREVs	R3._y__ = C509.yyyy
15: a0430203 00b0b11b a003fe80	      ALU:	ADDv	R3.xy__ = R3.xyyy, C510.yyyy
                          						    	SQRT_IEEE	R2.__z_ = abs(R0).wwww
16: ad140000 00bebe41 f0000202	      ALU:	DOT3v	R0.__z_ = R0.zxyy, R2.zxyy CLAMP
                          						    	MUL_CONST_1	R0.x___ = C258.x, R3.y
      00006017 00001200     	EXEC ADDR(0x17) CNT(0x6) BOOL_ADDR(0x80)
17: 40820500 006c6cc6 a203fe00	      ALU:	MAXv	R0._y__ = R3.xxxx, C510.xxxx
                          						    	LOG_IEEE	R5.___w = R0.zzzz
18: 161f0005 00ac00c6 e1000501	      ALU:	MULv	R5 = R0.xxxy, R5
                          						    	MAXs	R0.x___ = R1.zzzz CLAMP
19: c8070305 00c06cc0 ab080005	      ALU:	MULADDv	R5.xyz_ = R5.xyzz, R8.xyzz, C256.xxxx
1a: 38270007 00c01b1b a107fe05	      ALU:	MULv	R7.xyz_ = R7.xyzz, C510.wwww
                          						    	EXP_IEEE	R0._y__ = R5.wwww
1b: 140e0300 00fcb11b e1070002	      ALU:	MULv	R0._yzw = R7.xxyz, R0.yyyy
1c: 0c870007 0015621b a1000403	      ALU:	MULv	R7.xyz_ = R0.yzww, C260.zyxx
                          						    	MUL_PREVs	R0.___w = R3.wwww
      0000201d 00001000     	EXEC ADDR(0x1d) CNT(0x2)
1d: 70070303 00c06c6c 81070506	      ALU:	MULv	R3.xyz_ = R7.xyzz, C261.xxxx
1e: c8070303 00b4b4be eb060503	      ALU:	MULADDv	R3.xyz_ = R3.zxyy, R6.xzyy, R5.xzyy
      0000601f 00005600     	COND_PRED_EXEC ADDR(0x1f) CNT(0x6) BOOL_ADDR(0x80) COND(1)
1f: c8080303 186c6c00 21050400	      ALU:	MULv	R3.___w = C261.xxxx, C260.xxxx COND(1)
20: c8070305 1abc6eb1 6cfe0101	      ALU:	CNDEv	R5.xyz_ = R1.yyyy, C510.xxyy, -R1.zxxx COND(1)
21: 17280001 19bebec6 f0020101	      ALU:	DOT3v	R1.___w = R2.zxyy, R1.zxyy CLAMP COND(1)
                          						    	MAXs	R0._y__ = -R1.zzzz CLAMP
22: 15040300 18bec01b f0020501	      ALU:	DOT3v	R0.__z_ = R2.zxyy, R5.xyzz CLAMP COND(1)
23: 04120000 1bc6b16c e0000000	      ALU:	ADDv	R0._y__ = R0.zzzz, -R0.yyyy COND(1)
                          						    	ADD_PREVs	R0.x___ = -R0.xxxx
24: c8020300 18b1c66c ab00fd00	      ALU:	MULADDv	R0._y__ = R0.xxxx, R0.yyyy, C509.zzzz COND(1)
      00005025 00005600     	COND_PRED_EXEC ADDR(0x25) CNT(0x5) BOOL_ADDR(0x80) COND(1)
25: c8010300 181bb100 e1030000	      ALU:	MULv	R0.x___ = R3.wwww, R0.yyyy COND(1)
26: c8090301 18b01b00 a100fd00	      ALU:	MULv	R1.x__w = R0.xyyy, C509.wwww COND(1)
27: c8030300 181bc500 a1010400	      ALU:	MULv	R0.xy__ = R1.wwww, C260.yzzz COND(1)
28: c8060301 18616c00 a1000500	      ALU:	MULv	R1._yz_ = R0.yyxx, C261.xxxx COND(1)
29: c8070303 18c0c000 e0030100	      ALU:	ADDv	R3.xyz_ = R3.xyzz, R1.xyzz COND(1)
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      0024602a 00002200     	EXEC_END ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80)
2a: ac830300 00b0b041 a1840708	      ALU:	MULv	R0.xy__ = abs(R4).xyyy, C263.xyyy
                          						    	MUL_CONST_1	R3.___w = C264.x, R3.y
2b: 10583001 1f1fffdf 00004000	      FETCH:	SAMPLE	R3._w__ = R0.xyx CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
2c: c8020303 04b11bb1 8b03fffe	   (S)ALU:	MULADDv	R3._y__ = C510.yyyy, -R3.yyyy, C511.wwww
2d: ac240300 001bb141 e1030308	      ALU:	MULv	R0.__z_ = R3.wwww, R3.yyyy
                          						    	MUL_CONST_1	R3._y__ = C264.x, R3.y
2e: c8030300 00b1c400 e1030300	      ALU:	MULv	R0.xy__ = R3.yyyy, R3.xzzz
2f: c80f8000 00000000 e2000000	      ALU:	MAXv	export0 = R0, R0	; COLOR
      00000000 00000000     	NOP
