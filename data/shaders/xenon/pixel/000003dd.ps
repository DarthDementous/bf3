//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   sampler2D $tranpcy;
//   float $usendotl;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $suncolour     c1       1
//   $sunintensity  c2       1
//   $usendotl      c3       1
//   $invscreensize c4       1
//   $latten0       c5       1
//   $lcol          c6       3
//   $wlightpos     c9       3
//   $worldviewpos  c12      1
//   $matvalue      c13      1
//   $fresnelterm   c14      1
//   $apptime       c15      1
//   $compressedhdr c16      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $spec          s2       1
//   $screenshadmap s3       1
//   $envmap        s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c15
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c16
defconst $diff, sampler2d, object, [1, 1], s8
defconst $envmap, samplercube, object, [1, 1], s4
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c14
defconst $invscreensize, float, vector, [1, 2], c4
defconst $latten0, float, vector, [1, 4], c5
defconst $lcol, float, matrix_columns, [4, 4], c6-8
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c13
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $spec, sampler2d, object, [1, 1], s2
defconst $suncolour, float, vector, [1, 3], c1
defconst $sunintensity, float, scalar, [1, 1], c2
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $usendotl, float, scalar, [1, 1], c3
defconst $wlightpos, float, matrix_columns, [4, 4], c9-11
defconst $worldviewpos, float, vector, [1, 3], c12
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=17
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=9

// interpolators: 9 interpolants: 9, components: 32
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_texcoord7 r7.xy
dcl_color_centroid r8

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 4, -127.5, 0.0529999994, 10
def c251, 2, -1, 1.5, 0.300000012
def c252, 0, 1, 0.5, 3.29999995
def c253, 0.0599999987, 0.150000006, 0.289999992, 255
def c254, 0.143999994, 0.298999995, 0.587000012, 5
def c255, 0.25, 0, 0, 0


/*    0.0 */     exec
/*   11   */     tfetch2D r16.x___, r6.zw, tf0, FetchValidOnly=false
/*   12   */     tfetch2D r7.__yw, r6.xy, tf7, FetchValidOnly=false
/*   13   */     tfetch2D r11.xzy_, r7.xy, tf1
/*   14   */     tfetch2D r10.xyz_, r6.xy, tf2
/*   15   */     tfetch2D r14.xwyz, r6.xy, tf8
/*   16   */     serialize
                 mul r12.w, c13.x, c250.w
/*    0.1 */     exec
/*   17   */     mul r4.w, r14.y, r8.w
/*   18   */     add r15.xyz, r8.zyx, r8.zyx
/*   19   */     dp3 r8.w, r3.zxy, r3.zxy
/*   20   */     dp3 r15.w, r10.zxy, c253.xyz
/*   21   */     mul r10.xyz, r10.xyz, c252.z
/*   22   */     mul r8.xyz, r11.xzy, c0.x
               + rsq r8.w, r8_abs.w
/*    1.0 */     exec
/*   23   */     mad r13.xy, r7.zw, c251.x, c251.y
/*   24   */     mul r7.xyw, r8.w, r3.xyz
/*   25   */     mul r12.xyz, r8.xyz, r14.xzw
               + muls r16.y, r13.xx
/*   26   */     mul r8.yzw, r10.zzyx, r11.yyzx
               + muls r16.z, r13.yy
/*   27   */     add r3.xw, -r16.yx, c252.y
/*   28   */     mul r12, r12.zyxw, r15
               + movs r8._, r3.x
/*    1.1 */     exec
/*   29   */     add r3.y, r12.w, c252.y
               + adds_prev r8.x, -r16.z
/*   30   */     max r3.z, r3.y, c252.x
               + sqrt r13.z, r8_abs.x
/*   31   */     dp3 r7.z, r13.zxy, r0.zxy
/*   32   */     dp3_sat r3.y, r7.wxy, r13.zxy
               + mulsc r16.x, c250.x, r8.y
/*   33   */     dp3 r7.x, r13.zxy, r1.zxy
               + mulsc r16.y, c250.x, r8.z
/*   34   */     mul r8.x, r7.x, r1.w
               + log r3.y, r3.y
/*    2.0 */     exec
/*   35   */     mad r8.x, r7.z, r0.w, r8.x
/*   36   */     mul r3.y, r3.z, r3.y
               + mulsc r16.z, c250.x, r8.w
/*   37   */     dp3 r7.y, r13.zxy, r2.zxy
               + exp r8.y, r3.y
/*   38   */     mad r8.x, r7.y, r2.w, r8.x
/*   39   */     mul r8.yzw, r16.xxyz, r8.y
/*   40   */     mul r16.xyz, r8.yzw, c1.zyx
               + adds r8.x, r8.xx
/*    2.1 */     exec
/*   41   */     mul r8.xyz, r8.x, r7.zyx
/*   42   */     mad r12.xyz, r16.zyx, c2.x, r12.zyx
/*   43   */     add r14.y, -r8.z, r1.w
/*   44   */     mul r3.xyz, r15.zyx, r14.xzw
               + movs r8._, -r8.y
/*   45   */     add r14.z, -r8.x, r0.w
               + adds_prev r14.x, r2.w
/*   46   */     dp3 r8.y, r14.xzy, r14.xzy
               + movs_sat r8.x, r4.z
/*    3.0 */     exec    // PredicateClean=false
/*   47   */     mul r2.x, r4.w, r3.w
               + rsq r8.y, r8_abs.y
/*   48   */     mul r8.yzw, r14.zzyx, r8.y
               + setp_ne r8._, c3.x
/*    3.1 */ (p0) exec
/*   49   */     (p0) mul r3.w, c2.x, c1.x
/*   50   */     (p0) cndeq r14.xyz, c252.xxy, -r4.zx, r4.y
/*   51   */     (p0) dp3_sat r4.w, r13.zxy, r4.zxy
               + (p0) movs_sat r4.x, -r4.z
/*   52   */     (p0) dp3_sat r4.y, r13.zxy, r14.xyz
               + (p0) movs r8._, r4.w
/*   53   */     (p0) add r4.x, r4.y, -r4.x
               + (p0) adds_prev r8.x, -r8.x
/*   54   */     (p0) mad r4.x, r4.x, c255.x, r8.x
/*    4.0 */ (p0) exec
/*   55   */     (p0) mul r4.y, r3.w, r4.x
/*   56   */     (p0) mul r4.xw, r4.yx, c251.w
/*   57   */     (p0) mul r4.yz, r4.w, c1.yyz
/*   58   */     (p0) mul r4.yz, r4.zzy, c2.x
/*   59   */     (p0) add r12.xyz, r12.xyz, r4.xzy
/*    4.1 */     alloc colors
/*    5.0 */     exec
/*   60   */     mul r6.z, c15.x, c252.z
/*   61   */     tfetch3D r1.x___, r6.xyz, tf6, FetchValidOnly=false
/*   62   */     serialize
                 add r15.z, -c14.x, c251.x
/*   63   */     add r8.x, r1.w, c12.y
               + muls r0.x, r2.ww
/*   64   */     add r14.xy, -r8.x, c10.xy
               + addsc r8.x, c12.x, r0.w
/*   65   */     add r16.xy, -r8.x, c9.xy
               + rcp r8.x, r5.w
/*    5.1 */     exec
/*   66   */     mad r0.x, r1.w, r1.w, r0.x
/*   67   */     mul r6.xz, r8.x, r5.xy
               + addsc r0.z, c12.z, r2.w
/*   68   */     dp3 r0.y, r7.yzx, r7.yzx
               + subsc r14.z, c11.x, r0.z
/*   69   */     cube r8, r8.wwyz, r8.zyw
               + subsc r14.w, c11.y, r0.z
/*   70   */     add r6.y, -r6.z, c252.y
               + rsq r1.z, r0_abs.y
/*   71   */     mad r1.y, r0.w, r0.w, r0.x
/*    6.0 */     exec
/*   72   */     mul r0.xy, r16.xy, r16.xy
               + rcp r0.z, r8_abs.z
/*   73   */     mad r5.yz, r8.yyx, r0.z, c251.z
/*   74   */     dp2add r0.z, r14.yw, r14.yw, r0.y
/*   75   */     mul r4.xyz, r7.yzx, r1.z
               + rsq r0.y, r1_abs.y
/*   76   */     dp2add r0.x, r14.xz, r14.xz, r0.x
/*   77   */     mul r17.x, r0.y, r0.w
               + rsq r15.x, r0_abs.x
/*    6.1 */     exec
/*   78   */     mul r17.y, r0.y, r1.w
               + log r0.x, r0_abs.x
/*   79   */     mul r17.z, r0.y, r2.w
               + log r0.y, r0_abs.z
/*   80   */     mul r0.xy, r0.xy, c5.xz
               + rsq r15.y, r0_abs.z
/*   81   */     mul r14, r14.yxzw, r15.yxxy
               + exp r0.x, r0.x
/*   82   */     dp3 r0.z, -r17.zxy, r7.yzx
               + exp r0.y, r0.y
/*   83   */     mul_sat r0.xy, r0.xy, c5.yw
/*    7.0 */     exec
/*   84   */     add r0.xzw, -r0.zxxy, c252.y
/*   85   */     muls r0.y, r0.xx
/*   86   */     muls r16.z, r0.yy
/*   87   */     mul r2.yzw, r16.xxyz, r15.xxyz
/*   88   */     mul r1.yz, r2.yyz, r4.y
/*   89   */     dp2add_sat r4.y, r14.xw, r4.zx, r1.z
/*    7.1 */     exec
/*   90   */     dp2add_sat r4.x, r14.yz, r4.zx, r1.y
/*   91   */     mul r0.xy, r4.yx, r0.wz
/*   92   */     mul r1.yz, r0.yyx, c7.xxy
               + subsc r1.w, -c252.y, -r1.x
/*   93   */     add r1.xw, r1.wy, r1.xz
/*   94   */     mul r1.yz, r9_abs.xxy, c4.xxy
               + mulsc r3.w, c254.w, r1.x
/*   95   */     mul r4.zw, r3.w, r13.xxxy
               + movs r5.w, r8.w
/*    8.0 */     exec
/*   96   */     mad r8.xy, r4.zw, c250.z, r6.xy
/*   97   */     tfetch2D r5.w___, r1.yz, tf3
/*   98   */     tfetchCube r6, r5.yzw, tf4
/*   99   */     tfetch2D r8.x_yz, r8.xy, tf5
/*  100   */     serialize
                 dp3 r3.w, r3.zxy, c254.xyz
/*  101   */     mul r8.y, r6.w, c253.w
/*    8.1 */     exec
/*  102   */     sgt r1.y, c252.y, r6.w
               + addsc r1.z, c252.z, r8.y
/*  103   */     frc r1.z, r1.z
               + movs r4.z, r3.w
/*  104   */     add r8.y, r8.y, -r1.z
               + movs r4.w, c253.y
/*  105   */     add r1.z, r8.y, c250.y
               + maxs r8.y, r4.zw
/*  106   */     min r8.y, r8.y, c252.y
               + exp r1.z, r1.z
/*  107   */     mul r5.yzw, r1.z, r6.xxyz
               + mulsc r2.y, c16.y, r8.x
/*    9.0 */     exec
/*  108   */     cndgt r5.yzw, r1.y, r5.yyzw, r6.xxyz
/*  109   */     mul r5.yzw, r8.y, r5.yyzw
               + mulsc r2.z, c16.y, r8.z
/*  110   */     add_sat r8.y, r2.w, c14.x
               + mulsc r2.w, c16.y, r8.w
/*  111   */     mul r8.yzw, r5.yyzw, r8.y
               + mulsc r8.x, c8.x, r0.z
/*  112   */     mul r5.yzw, r8.yyzw, r10.xxyz
               + mulsc r8.y, c8.y, r0.w
/*  113   */     mul r4.zw, r8.xxxy, r4.xxxy
               + mulsc r4.x, c6.x, r0.y
/*    9.1 */     exec
/*  114   */     mul r8, r5, c252.zw
               + mulsc r4.y, c6.y, r0.x
/*  115   */     mul r8.yzw, r8.yyzw, c13.z
               + movs r8.x, r8.x
/*  116   */     mad r0.xyz, r8.ywz, r11.xyz, -r2.ywz
/*  117   */     add r1.yz, r4.xxz, r4.yyw
               + subsc r8.w, c252.y, r8.x
/*  118   */     mad r8.xyz, r3.xyz, r1.ywz, r0.xzy
/*  119   */     mad r8.xyz, r8.w, r12.xzy, r8.xzy
/*   10.0 */     exece
/*  120   */     mad r8.xyz, r8.xzy, c15.x, r2.yzw
/*  121   */     mul r2.yzw, r8.xxyz, c16.x
/*  122   */     mov oC0, r2.yzwx
/*   10.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x01ff SamplingPattern 0x00ff
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] texcoord7 r7.xy
// [8] color0 r8.xyzw

