      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 10007081 1f1ffff8 00004000	      FETCH:	SAMPLE	R7.x___ = R4.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: c8040500 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
06: 08880006 00b1c6cb 2103ff03	      ALU:	MULv	R6.___w = C259.yyyy, C511.zzzz
                          						    	MULs	R0.___w = R3.wwzz
07: c8080506 016cb11b ab070306	      ALU:	MULADDv	R6.___w = -R6.wwww, R7.xxxx, C259.yyyy
08: c8080500 00c61b1b eb020200	      ALU:	MULADDv	R0.___w = R0.wwww, R2.zzzz, R2.wwww
09: c8080500 00c61b1b eb010100	      ALU:	MULADDv	R0.___w = R0.wwww, R1.zzzz, R1.wwww
      0000600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: 58470007 00c06cc6 20050080	      ALU:	ADDv	R7.xyz_ = C261.xyzz, C256.xxxx
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0b: a8880007 001b1b02 c0000003	      ALU:	ADDv	R7.___w = R0.wwww, R0.wwww
                          						    	MUL_CONST_0	R0.___w = C259.w, R0.z
0c: c8020501 041bc61b eb070101	      ALU:	MULADDv	R1._y__ = R1.wwww, -R7.wwww, R1.zzzz
0d: c8040501 041bc61b eb070202	      ALU:	MULADDv	R1.__z_ = R2.wwww, -R7.wwww, R2.zzzz
0e: c8080501 041bc61b eb070303	      ALU:	MULADDv	R1.___w = R3.wwww, -R7.wwww, R3.zzzz
0f: c8030500 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: c8030502 00b01bb0 eb000604	      ALU:	MULADDv	R2.xy__ = R4.xyyy, R0.xyyy, R6.wwww
11: c8010500 00c3c300 f0010100	      ALU:	DOT3v	R0.x___ = R1.wyzz, R1.wyzz
12: 58110001 006c1b6c 2101ff80	      ALU:	MULv	R1.x___ = C257.xxxx, C511.wwww
                          						    	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
13: c8070500 00156c00 e1010000	      ALU:	MULv	R0.xyz_ = R1.yzww, R0.xxxx
14: c80f0500 00a6cd00 f2000000	      ALU:	CUBEv	R0 = R0.zzxy, R0.yxzz
15: 4c240103 001b1bc6 e2000080	      ALU:	MAXv	R3.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1._y__ = abs(R0).zzzz
      05506016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: c8060501 0061b100 e1000100	      ALU:	MULv	R1._yz_ = R0.yyxx, R1.yyyy
17: c80b0503 00656100 a001ff00	      ALU:	ADDv	R3.xy_w = R1.yzxx, C511.yyxx
18: 10381081 1f1ffe88 00004000	      FETCH:	SAMPLE	R1.xyz_ = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
19: 90588061 1f1ffe88 0000c000	      FETCH:	SAMPLE	R8.xyz_ = R3.xyz CONST(5) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1a: 10489041 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R2.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1b: 10182041 1f1ff688 00004000	      FETCH:	SAMPLE	R2.xyzw = R2.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0009601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: b8280081 1f1fffc7 00004000	      FETCH:	SAMPLE	R0._x__ = R4.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
1d: b8140000 001b1b41 c10205ff	   (S)ALU:	MULv	R0.__z_ = R2.wwww, R5.wwww
                          						    	SUB_CONST_0	R0.x___ = C511.x, R0.y
1e: c8088000 00c66c00 e1000000	      ALU:	MULv	export0.___w = R0.zzzz, R0.xxxx	; COLOR
1f: c8070500 00c0c000 e0050500	      ALU:	ADDv	R0.xyz_ = R5.xyzz, R5.xyzz
20: c8070505 00c0c600 a109ff00	      ALU:	MULv	R5.xyz_ = R9.xyzz, C511.zzzz
21: c80b0505 00c0c000 e1050800	      ALU:	MULv	R5.xy_w = R5.xyzz, R8.xyzz
      00006022 00002200     	EXEC_END ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: ac170002 00c0c0c4 c1000203	      ALU:	MULv	R2.xyz_ = R0.xyzz, R2.xyzz
                          						    	MUL_CONST_1	R0.x___ = C259.z, R5.x
23: ac240005 001b6cc5 81030203	      ALU:	MULv	R5.__z_ = R3.wwww, C258.xxxx
                          						    	MUL_CONST_1	R0._y__ = C259.z, R5.y
24: c8070501 00c6c0c0 eb050107	      ALU:	MULADDv	R1.xyz_ = R7.xyzz, R5.zzzz, R1.xyzz
25: ac470001 00c0c0c7 c0010603	      ALU:	ADDv	R1.xyz_ = R1.xyzz, R6.xyzz
                          						    	MUL_CONST_1	R0.__z_ = C259.z, R5.w
26: c8070505 00c0c0c0 eb020100	      ALU:	MULADDv	R5.xyz_ = R0.xyzz, R2.xyzz, R1.xyzz
27: c8078000 00c06c00 a1050400	      ALU:	MULv	export0.xyz_ = R5.xyzz, C260.xxxx	; COLOR
      00000000 00000000     	NOP
