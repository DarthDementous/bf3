//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $screenshadmap;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $latten0       c2       1
//   $lcol          c3       3
//   $wlightpos     c6       3
//   $worldviewpos  c9       1
//   $matvalue      c10      1
//   $fresnelterm   c11      1
//   $apptime       c12      1
//   $compressedhdr c13      1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $screenshadmap s2       1
//   $envmap        s3       1
//   $frametexture  s4       1
//   $noisetex      s5       1
//   $bump          s6       1
//   $diff          s7       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c12
defconst $bump, sampler2d, object, [1, 1], s6
defconst $compressedhdr, float, vector, [1, 2], c13
defconst $diff, sampler2d, object, [1, 1], s7
defconst $envmap, samplercube, object, [1, 1], s3
defconst $frametexture, sampler2d, object, [1, 1], s4
defconst $fresnelterm, float, scalar, [1, 1], c11
defconst $invscreensize, float, vector, [1, 2], c1
defconst $latten0, float, vector, [1, 4], c2
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c10
defconst $noisetex, sampler3d, object, [1, 1], s5
defconst $screenshadmap, sampler2d, object, [1, 1], s2
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c9
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=15
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=7

// interpolators: 7 interpolants: 7, components: 26
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4
dcl_texcoord5 r5.xy
dcl_color_centroid r6

def c252, -1, 0.150000006, 2, 0
def c253, 0.5, 0, 1, -127.5
def c254, 0.0529999994, 255, 3.29999995, 1.5
def c255, 0.143999994, 0.298999995, 0.587000012, 5


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     mul r9.z, c12.x, c253.x
/*    8   */     mov r9.xy, r4.xy
               + addsc r5.z, c9.y, r1.w
/*    9   */     tfetch2D r8.__yw, r4.xy, tf6, FetchValidOnly=false
/*   10   */     tfetch3D r8.x___, r9.xyz, tf5, FetchValidOnly=false
/*   11   */     serialize
                 add r5.w, r2.w, c9.z
               + movs r6._, r0.w
/*   12   */     mul r9.xyz, r2.zwz, r2.zw
               + adds_prev r3.z, c9.x
/*    1.0 */     exec
/*   13   */     add r14.xy, -r5.w, c8.xy
               + subsc r8.y, -c253.z, -r8.x
/*   14   */     add r13.xy, -r5.z, c7.xy
               + rcp r5.z, r3.w
/*   15   */     mad r10.xyz, r1.zwz, r1.zw, r9.xyz
/*   16   */     mul r9.xy, r5.z, r3.yx
               + subsc r14.z, c6.x, r3.z
/*   17   */     mad r3.xyw, r0.wz, r0.wwz, r10.yzx
/*   18   */     mul r5.zw, r13.xxxy, r13.xxxy
               + subsc r14.w, c6.y, r3.z
/*    1.1 */     exec
/*   19   */     dp2add r12.w, r14.wy, r14.wy, r5.w
/*   20   */     dp2add r15.x, r14.zx, r14.zx, r5.z
/*   21   */     add r11.x, r3.y, r3.y
               + rsq r11.y, r3_abs.x
/*   22   */     add r3.xyz, r8.yzw, r8.xzw
               + rsq r11.w, r3_abs.w
/*   23   */     mul r10.xyw, r11.xyw, r0.zwz
               + subsc r9.z, c253.z, r9.x
/*   24   */     mul r8.xyw, r11.xyw, r2.zwz
               + mulsc r13.z, c255.w, r3.x
/*    2.0 */     exec
/*   25   */     add r15.y, -r10.x, r0.w
               + addsc r11.z, c252.x, r3.y
/*   26   */     mul r12.xyz, r11.wxy, r1.zzw
               + addsc r11.w, c252.x, r3.z
/*   27   */     add r15.z, -r12.y, r1.w
               + rsq r11.x, r15_abs.x
/*   28   */     add r15.w, -r8.x, r2.w
               + rsq r11.y, r12_abs.w
/*   29   */     mul r7.xy, r7_abs.xy, c1.xy
               + movs r6._, -r12.z
/*   30   */     mul r13, r13.xyz, r11
               + muls_prev r1.x, r1.z
/*    2.1 */     exec
/*   31   */     mad r9.w, -r10.y, r0.z, r1.x
/*   32   */     mul r0.zw, r13.zzzw, c254.x
               + movs r6._, -r8.y
/*   33   */     dp3 r0.x, r15.wyz, r15.wyz
               + muls_prev r0.y, r2.z
/*   34   */     add r9.xzw, r9.wyyz, r0.yzzw
               + rsq r0.x, r0_abs.x
/*   35   */     mul r0.xyz, r15.yzw, r0.x
/*   36   */     cube r0, r0.zzxy, r0.yxz
/*    3.0 */     exec
/*   37   */     mov r3.z, r0.w
               + rcp r1.x, r0_abs.z
/*   38   */     mad r3.xy, r0.yx, r1.x, c254.w
/*   39   */     tfetch2D r0.x___, r4.zw, tf0
/*   40   */     tfetch2D r2.xyz_, r9.zw, tf4
/*   41   */     tfetch2D r1._xyz, r5.xy, tf1
/*   42   */     tfetchCube r5, r3.xyz, tf3
/*    3.1 */     exec
/*   43   */     tfetch2D r3, r4.xy, tf7
/*   44   */     tfetch2D r0._w__, r7.xy, tf2
/*   45   */     serialize
                 add r7.xyz, r6.xyz, r6.xyz
/*   46   */     mul r2.xyz, r2.xyz, c13.y
               + mulsc r4.x, c0.x, r1.y
/*   47   */     sgt r0.w, c253.z, r5.w
               + mulsc r4.y, c0.x, r1.z
/*   48   */     mul r8.xyz, r7.xyz, r3.xyz
               + mulsc r4.z, c0.x, r1.w
/*    4.0 */     exec
/*   49   */     mul r10.xyz, r4.xyz, r3.xyz
               + movs r6.x, r5.w
/*   50   */     dp3 r0.z, r8.zxy, c255.xyz
               + mulsc r6.y, c254.y, r6.x
/*   51   */     add r5.w, -c11.x, c252.z
               + addsc r6.x, c253.x, r6.y
/*   52   */     frc r6.x, r6.x
               + mulsc r9.y, c253.x, r0.y
/*   53   */     add r6.x, r6.y, -r6.x
               + log r4.x, r15_abs.x
/*   54   */     max r1.x, r0.z, c252.y
               + addsc r0.y, c253.w, r6.x
/*    4.1 */     exec
/*   55   */     mul r11, r14.yxzw, r11.yxxy
               + log r4.y, r12_abs.w
/*   56   */     mul r6.xy, r4.xy, c2.xz
               + exp r2.w, r0.y
/*   57   */     mul r0.yz, r13.xxy, r12.x
               + exp r6.x, r6.x
/*   58   */     mul r4.xyz, r2.w, r5.xyz
               + exp r6.y, r6.y
/*   59   */     cndgt r4.xyz, r0.w, r4.xyz, r5.xyz
/*   60   */     mad r0.yz, r11.zzw, r10.w, r0.yyz
/*    5.0 */     exec
/*   61   */     mad_sat r5.xy, r11.yx, r8.w, r0.yz
/*   62   */     mul r7.xyz, r10.xzy, r7.xzy
               + mulsc_sat r0.z, c2.y, r6.x
/*   63   */     add r3.xy, -r9.xy, c253.z
               + mulsc_sat r0.w, c2.w, r6.y
/*   64   */     add r0.xyz, -r0.xzw, c253.z
               + muls r0.w, r3.xx
/*   65   */     min r1.x, r1.x, c253.z
               + mulsc r9.y, c5.x, r0.y
/*   66   */     mul r6.xy, r5.yx, r0.zy
               + mulsc r9.z, c5.y, r0.z
/*    5.1 */     exec
/*   67   */     dp2add r5.z, r6.yx, c4.xy, c253.y
/*   68   */     mul r4.xyz, r1.x, r4.xyz
               + mulsc r9.x, c3.x, r6.y
/*   69   */     mul r9.zw, r9.yyyz, r5.xxxy
               + mulsc r9.y, c3.y, r6.x
/*   70   */     add r5.xy, r9.xz, r9.yw
               + muls r8.w, r0.ww
/*   71   */     mul r5, r8.xzyw, r5
/*   72   */     mad r3.xyz, r7.xyz, r3.y, r5.xyz
/*    6.0 */     exec
/*   73   */     addsc_sat r0.w, c11.x, r5.w
/*   74   */     mul r4.xyz, r4.xyz, r0.w
/*   75   */     mul r4.xyz, r4.xyz, c254.z
               + movs r6._, r3.w
/*   76   */     mul r4.xyz, r4.xyz, c10.z
               + muls_prev r6.w, r6.w
/*   77   */     mad r6.xyz, r4.xzy, r1.ywz, r3.xyz
/*   78   */     add r6.xyz, r6.xyz, -r2.xzy
               + movs r6._, r6.w
/*    6.1 */     exece
/*   79   */     mad r6.xyz, r6.xzy, c12.x, r2.xyz
/*   80   */     mul oC0.xyz, r6.xyz, c13.x
               + muls_prev oC0.w, r0.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x007f SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xy
// [6] color0 r6.xyzw

