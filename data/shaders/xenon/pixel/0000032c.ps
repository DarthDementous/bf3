//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $ambientcolour;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4x4 $lcol;
//   float $lightningintensity;
//   float4 $matvalue;
//   float3 $rimlightcolour;
//   float $rimlightfade;
//   float $rimlightwidth;
//   sampler2D $screenshadmap;
//   float4 $shadowmask;
//   sampler2D $spec;
//   float3 $sundir;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   $lightningintensity c0       1
//   $incanglow          c1       1
//   $incanflag          c2       1
//   $lcol               c3       3
//   $wlightpos          c6       3
//   $invscreensize      c9       1
//   $shadowmask         c10      1
//   $matvalue           c11      1
//   $worldviewpos       c12      1
//   $sundir             c13      1
//   $rimlightwidth      c14      1
//   $rimlightfade       c15      1
//   $rimlightcolour     c16      1
//   $compressedhdr      c17      1
//   $ambientcolour      c18      1
//   $diff               s0       1
//   $incan              s1       1
//   $bump               s2       1
//   $spec               s3       1
//   $screenshadmap      s4       1
//

// Shader type: pixel 

xps_3_0
defconst $ambientcolour, float, vector, [1, 4], c18
defconst $bump, sampler2d, object, [1, 1], s2
defconst $compressedhdr, float, vector, [1, 2], c17
defconst $diff, sampler2d, object, [1, 1], s0
defconst $incan, sampler2d, object, [1, 1], s1
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c9
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lightningintensity, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c11
defconst $rimlightcolour, float, vector, [1, 3], c16
defconst $rimlightfade, float, scalar, [1, 1], c15
defconst $rimlightwidth, float, scalar, [1, 1], c14
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $shadowmask, float, vector, [1, 4], c10
defconst $spec, sampler2d, object, [1, 1], s3
defconst $sundir, float, vector, [1, 3], c13
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c12
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=15
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 29
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4
dcl_texcoord5 r5.xy
dcl_color_centroid r6
dcl_color1_centroid r7.xyz

def c252, 0, 0, 0, 0
def c253, 0, 0.5, 10, 0
def c254, 9.99999975e-005, 1, 3, -1
def c255, 0.0599999987, 0.289999992, 0.150000006, 5


/*    0.0 */     exec
/*    9   */     mul r8.xy, r8_abs.xy, c9.xy
/*   10   */     tfetch2D r11, r5.xy, tf0
/*   11   */     tfetch2D r13.xyz_, r5.xy, tf1
/*   12   */     tfetch2D r12.xyz_, r5.xy, tf3
/*   13   */     tfetch2D r5._yw_, r5.xy, tf2
/*   14   */     tfetch2D r8._xy_, r8.xy, tf4
/*    0.1 */     exec
/*   15   */     serialize
                 add r7.w, r1.w, c12.y
               + muls r5.x, -r0.ww
/*   16   */     add r8.x, r0.w, c12.x
               + muls r5.w, -r1.ww
/*   17   */     mad r8.yz, -r8.zzy, c10.yyx, c254.y
/*   18   */     add r10.xy, -r8.x, c6.xy
               + movs r6._, r2.w
/*   19   */     add r9.xy, -r7.w, c7.xy
               + adds_prev r7.w, c12.z
/*   20   */     mul r8.xw, r9.xy, r9.xy
               + subsc r10.z, c8.x, r7.w
/*    1.0 */     exec
/*   21   */     add r5.xzw, r5.xyyz, r5.wyyz
               + subsc r10.w, c8.y, r7.w
/*   22   */     dp2add r5.y, r10.yw, r10.yw, r8.w
/*   23   */     mad r7.w, -r2.w, -r2.w, r5.x
/*   24   */     dp2add r5.x, r10.xz, r10.xz, r8.x
/*   25   */     add r15.xy, r5.zw, c254.w
/*   26   */     dp2add r5.z, -r15.yx, r15.yx, c254.y
/*    1.1 */     exec
/*   27   */     mul r14.z, c11.x, c255.w
               + rsq r5.x, r5_abs.x
/*   28   */     dp3 r14.w, r12.zyx, c255.xyz
               + rsq r7.w, r7_abs.w
/*   29   */     mul r8.x, r7.w, -r0.w
               + rsq r5.y, r5_abs.y
/*   30   */     mul r10, r10, r5.xyxy
               + movs r6._, r7.w
/*   31   */     mul r5.xy, r9.xy, r5.xy
               + muls_prev r8.w, -r2.w
/*   32   */     add r9, r10, r8.xxw
               + sqrt r15.z, r5_abs.z
/*    2.0 */     exec
/*   33   */     mad r14.xy, r7.w, -r1.w, r5.xy
/*   34   */     dp3 r1.w, r15.zxy, r2.zxy
/*   35   */     dp3 r1.y, r15.zxy, r1.zxy
/*   36   */     dp3 r1.x, r15.zxy, r0.zxy
/*   37   */     dp3 r0.z, r1.wxy, r1.wxy
/*   38   */     mul r0.xyw, r14.xyz, r14.xyw
               + rsq r0.z, r0_abs.z
/*    2.1 */     exec
/*   39   */     dp2add r1.z, r9.yw, r9.yw, r0.y
/*   40   */     dp2add r2.w, r9.xz, r9.xz, r0.x
/*   41   */     add r2.xyz, r6.zyx, r6.zyx
               + rsq r8.x, r2_abs.w
/*   42   */     mul r0.xyz, r1.ywx, r0.z
               + rsq r8.w, r1_abs.z
/*   43   */     mul r5.zw, r14.xxxy, r8.xxxw
/*   44   */     mul r14, r9.xzyw, r8.xxw
               + movs r6._, c1.x
/*    3.0 */     exec
/*   45   */     mul r9, r5, r0.x
               + muls_prev r5.w, c253.z
/*   46   */     dp2add_sat r5.y, r14.xy, r0.zy, r9.z
/*   47   */     dp2add_sat r5.z, r14.zw, r0.zy, r9.w
/*   48   */     dp2add_sat r10.y, r10.yw, r0.zy, r9.y
/*   49   */     dp2add_sat r10.x, r10.xz, r0.zy, r9.x
/*   50   */     add r9.xyz, c18.zyx, c0.x
               + snes r5.x, r10.x
/*    3.1 */     exec
/*   51   */     add r0.xyz, r5.ywz, c254.xyx
               + snes r5.y, r10.y
/*   52   */     mul r5.xy, r0.xz, r5.xy
               + mulsc r0.z, c2.x, r0.y
/*   53   */     mad r9.xyz, r0.z, r13.xyz, r9.zyx
/*   54   */     mul r6.w, r11.w, r6.w
               + log r0.x, r5_abs.x
/*   55   */     add r0.z, r0.w, c254.y
               + log r0.y, r5_abs.y
/*   56   */     mul r0.xy, r0.z, r0.xy
/*    4.0 */     exec
/*   57   */     mul r5.xyz, r12.zyx, c253.y
               + exp r8.x, r0.x
/*   58   */     mul r2.xyz, r2.zyx, r11.xyz
               + exp r8.w, r0.y
/*   59   */     mul r0, r8.xzwy, r3.xxy
/*   60   */     mul r3.xw, r0.yw, r10.xy
/*   61   */     mul r0.xy, r0.xz, r8.zy
/*   62   */     add r3.yz, r0.xxy, r0.xxy
/*    4.1 */     exec
/*   63   */     mul r0, r3, c3.xxy
/*   64   */     mul r8, r3, c5.xxy
/*   65   */     add r8.zw, r8.xxxy, r8.wwwz
/*   66   */     mul r3, r3, c4.xxy
               + adds r8.x, r0.xw
/*   67   */     add r0.xw, r3.yx, r3.zw
               + adds r8.y, r0.yz
/*   68   */     mul r5.xyz, r5.xyz, r6.zyx
               + adds r3.z, r0.xx
/*    5.0 */     exec    // PredicateClean=false
/*   69   */     add r0.xyz, r9.xyz, r7.xyz
               + movs r6._, r2.y
/*   70   */     add r3.xy, r8.yw, r8.yw
               + muls_prev r6.z, r0.w
/*   71   */     mul r6.xy, r2.xz, r8.xz
               + setp_gt r6._, c14.x
/*   72   */     mad r6.xyz, r5.zxy, r3.xyz, r6.xyz
/*   73   */     mad r6.xyz, r2.xyz, r0.xyz, r6.xzy
/*    5.1 */ (!p0) jmp L15
/*    6.0 */     exec
/*   74   */     add r2.xyz, -r4.zyx, c12.zyx
/*   75   */     dp3 r0.x, r2.xzy, r2.xzy
/*   76   */     dp3_sat r0.w, r1.wxy, c13.zxy
               + rsq r0.x, r0_abs.x
/*   77   */     mul r0.xyz, r2.xyz, r0.x
/*   78   */     dp3 r0.x, r0.xzy, r1.wxy
               + movs r6._, -c14.x
/*   79   */     max r1.x, r0.x, c253.x
               + adds_prev r1.y, c254.y
/*    6.1 */     exec
/*   80   */     add r0.xy, -r1.yx, c254.y
/*   81   */     add r0.y, r0.y, -r1.y
               + rcp r0.x, r0.x
/*   82   */     mul_sat r0.z, r0.y, r0.x
/*   83   */     add r0.xy, -r0.wz, c254.yz
/*   84   */     mad r0.x, r0.x, c15.x, r0.w
/*   85   */     add r0.y, r0.y, -r0.z
               + muls r0.z, r0.zz
/*    7.0 */     exec
/*   86   */     mul r0.y, r0.z, r0.y
/*   87   */     dp2add r0.x, r0.y, r0.x, c253.x
/*   88   */     mad r0.xyz, r0.x, c16.zyx, c254.y
/*   89   */     mul r6.xyz, r6.xyz, r0.zyx
       label L15
/*    7.1 */     alloc colors
/*    8.0 */     exece
/*   90   */     mul r6.xyz, r6.xyz, c17.x
/*   91   */     mov oC0, r6
/*    8.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xy
// [6] color0 r6.xyzw
// [7] color1 r7.xyz

