      00096009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: 100000c1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R6.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: c8040800 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
0b: 584c0007 0071acc6 2106fd80	      ALU:	MULv	R7.__zw = C262.yyyx, C509.xxxy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
0c: c8080804 011bb1c6 ab000607	      ALU:	MULADDv	R4.___w = -R7.zzzz, R0.wwww, C262.yyyy
0d: a887000b 00626202 c0080806	      ALU:	ADDv	R11.xyz_ = R8.zyxx, R8.zyxx
                          						    	MUL_CONST_0	R0.___w = C262.w, R0.z
0e: c8030808 001a6d00 e1000000	      ALU:	MULv	R8.xy__ = R0.zwww, R0.yxxx
      0554600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: c803080d 006d1bb0 eb080406	      ALU:	MULADDv	R13.xy__ = R6.xyyy, R8.yxxx, R4.wwww
10: 104090c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R6.xyx CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: b82080c1 1f1ffe3f 00004000	      FETCH:	SAMPLE	R8.__x_ = R6.zwz CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: 1060c1a1 1f1ffe88 00004000	      FETCH:	SAMPLE	R12.xyz_ = R13.xyx CONST(6) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
13: 105081a1 1f1fffd9 00004000	      FETCH:	SAMPLE	R8.yw__ = R13.xyx CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
14: 103060e1 1f1ff447 00004000	      FETCH:	SAMPLE	R6._xyz = R7.xyx CONST(3) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      00026015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: 14040800 00bebe6c d0040401	   (S)ALU:	DOT3v	R0.__z_ = R4.zxyy, R4.zxyy
16: c8030807 00b06cb1 8b08fffc	      ALU:	MULADDv	R7.xy__ = C508.yyyy, R8.xyyy, C511.xxxx
17: 0c110008 0062c0b1 900cfefd	      ALU:	DOT3v	R8.x___ = R12.zyxx, C510.xyzz
                          						    	MUL_PREVs	R0.x___ = C509.yyyy
18: a8220a00 001b6c47 e1070800	      ALU:	MULv	R0._y__ = R7.wwww, R8.xxxx
                          						    	MUL_CONST_0	R10._y__ = C256.x, R6.w
19: 58430008 00b0b0c6 e1070780	      ALU:	MULv	R8.xy__ = R7.xyyy, R7.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
1a: b847000e 00c6c008 c10004fd	      ALU:	MULv	R14.xyz_ = R0.zzzz, R4.xyzz
                          						    	SUB_CONST_0	R0.__z_ = C509.w, R8.x
      0000601b 00001200     	EXEC ADDR(0x1b) CNT(0x6) BOOL_ADDR(0x80)
1b: b8830400 006d1b0a 8000fdfd	      ALU:	ADDv	R0.xy__ = R0.yxxx, C509.wwww
                          						    	SUB_CONST_0	R4.___w = C509.w, R8.z
1c: a8840000 02c6b141 c0000802	      ALU:	ADDv	R0.__z_ = R0.zzzz, -R8.yyyy
                          						    	MUL_CONST_0	R0.___w = C258.x, R0.y
1d: a04e0709 001bfcc6 e1000980	      ALU:	MULv	R9._yzw = R0.wwww, R9.xxyz
                          						    	SQRT_IEEE	R7.__z_ = abs(R0).zzzz
1e: a8410a04 00bebe46 f0070100	      ALU:	DOT3v	R4.x___ = R7.zxyy, R1.zxyy
                          						    	MUL_CONST_0	R10.__z_ = C256.x, R6.z
1f: a8840a04 00bebe45 f0070300	      ALU:	DOT3v	R4.__z_ = R7.zxyy, R3.zxyy
                          						    	MUL_CONST_0	R10.___w = C256.x, R6.y
20: 14020804 00bebec6 f0070204	      ALU:	DOT3v	R4._y__ = R7.zxyy, R2.zxyy
      00006021 00001200     	EXEC ADDR(0x21) CNT(0x6) BOOL_ADDR(0x80)
21: 0c140900 00b11b1b e1040203	      ALU:	MULv	R0.__z_ = R4.yyyy, R2.wwww
                          						    	MUL_PREVs	R9.x___ = R3.wwww
22: c801080a 006c1bc6 eb040100	      ALU:	MULADDv	R10.x___ = R0.zzzz, R4.xxxx, R1.wwww
23: c80f0809 00f8d000 e00a0900	      ALU:	ADDv	R9 = R10.xwyz, R9.xywz
24: 0018000a 006cc66c a200fd09	      ALU:	MAXv	R10.___w = R0.xxxx, C509.zzzz
                          						    	ADDs	R0.x___ = R9.xxxx
25: c8070800 006cc000 e1000400	      ALU:	MULv	R0.xyz_ = R0.xxxx, R4.xyzz
26: c802080a 04b11b00 e0000200	      ALU:	ADDv	R10._y__ = -R0.yyyy, R2.wwww
      00006027 00001200     	EXEC ADDR(0x27) CNT(0x6) BOOL_ADDR(0x80)
27: 15020800 01bebe6c f00e0700	      ALU:	DOT3v	R0._y__ = R14.zxyy, R7.zxyy CLAMP
28: 04140a0a 04c61b1b e0000301	      ALU:	ADDv	R10.__z_ = -R0.zzzz, R3.wwww
                          						    	ADD_PREVs	R10.x___ = R1.wwww
29: 40210000 00bebeb1 f00a0a00	      ALU:	DOT3v	R0.x___ = R10.zxyy, R10.zxyy
                          						    	LOG_IEEE	R0._y__ = R0.yyyy
2a: 58100008 0000006c e2080880	      ALU:	RECIPSQ_IEEE	R0.x___ = abs(R0).xxxx
2b: c80f080a 0000ac00 e10a0000	      ALU:	MULv	R10 = R10, R0.xxxy
2c: c80f0800 00a6cd00 f20a0a00	      ALU:	CUBEv	R0 = R10.zzxy, R10.yxzz
      0250602d 00001200     	EXEC ADDR(0x2d) CNT(0x6) BOOL_ADDR(0x80)
2d: 4c140101 001b1bc6 e2000080	      ALU:	MAXv	R1.__z_ = R0.wwww, R0.wwww
                          						    	RECIP_IEEE	R1.x___ = abs(R0).zzzz
2e: c8030801 006d6cc6 cb0001fc	      ALU:	MULADDv	R1.xy__ = C508.zzzz, R0.yxxx, R1.xxxx
2f: 90781021 1f1ffe88 0000c000	      FETCH:	SAMPLE	R1.xyz_ = R1.xyz CONST(7) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
30: 101801a1 1f1ff4c8 00004000	      FETCH:	SAMPLE	R0.xywz = R13.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
31: 16120808 00c61bc6 e1000805	   (S)ALU:	MULv	R8._y__ = R0.zzzz, R8.wwww
                          						    	MAXs	R8.x___ = R5.zzzz CLAMP
32: 1407080c 00626cc6 a10cfd0b	      ALU:	MULv	R12.xyz_ = R12.zyxx, C509.xxxx
      00006033 00001200     	EXEC ADDR(0x33) CNT(0x6) BOOL_ADDR(0x80)
33: 0c17010a 00c0626c e10c0100	      ALU:	MULv	R10.xyz_ = R12.xyzz, R1.zyxx
                          						    	MUL_PREVs	R1.x___ = R0.xxxx
34: 14070806 00c0b7b1 e10c060b	      ALU:	MULv	R6.xyz_ = R12.xyzz, R6.wzyy
35: 0c270106 00c06cb1 a106fc00	      ALU:	MULv	R6.xyz_ = R6.xyzz, C508.xxxx
                          						    	MUL_PREVs	R1._y__ = R0.yyyy
36: 38280808 00b11b1b e108040a	      ALU:	MULv	R8.___w = R8.yyyy, R4.wwww
                          						    	EXP_IEEE	R8._y__ = R10.wwww
37: 14070806 00c0b16c e106080b	      ALU:	MULv	R6.xyz_ = R6.xyzz, R8.yyyy
38: 0c470100 00c0621b a1060300	      ALU:	MULv	R0.xyz_ = R6.xyzz, C259.zyxx
                          						    	MUL_PREVs	R1.__z_ = R0.wwww
      00003039 00001000     	EXEC ADDR(0x39) CNT(0x3)
39: 70070800 00c06c6c 81000405	      ALU:	MULv	R0.xyz_ = R0.xyzz, C260.xxxx
3a: c8070800 00b4c6b4 ab0a0600	      ALU:	MULADDv	R0.xyz_ = R0.xzyy, R10.xzyy, C262.zzzz
3b: c8070800 00cdc362 eb010900	      ALU:	MULADDv	R0.xyz_ = R0.zyxx, R1.yxzz, R9.wyzz
      0000603c 00005600     	COND_PRED_EXEC ADDR(0x3c) CNT(0x6) BOOL_ADDR(0x80) COND(1)
3c: c8020808 186c6c00 21040300	      ALU:	MULv	R8._y__ = C260.xxxx, C259.xxxx COND(1)
3d: c8070806 1a166eb1 6cfd0505	      ALU:	CNDEv	R6.xyz_ = R5.yyyy, C509.zzww, -R5.zxxx COND(1)
3e: 17480804 19bebec6 f0070505	      ALU:	DOT3v	R4.___w = R7.zxyy, R5.zxyy CLAMP COND(1)
                          						    	MAXs	R8.__z_ = -R5.zzzz CLAMP
3f: 15080800 18bec01b f0070604	      ALU:	DOT3v	R0.___w = R7.zxyy, R6.xyzz CLAMP COND(1)
40: 04140808 1b1bc66c e0000808	      ALU:	ADDv	R8.__z_ = R0.wwww, -R8.zzzz COND(1)
                          						    	ADD_PREVs	R8.x___ = -R8.xxxx
41: c8010808 18c61b6c ab08fc08	      ALU:	MULADDv	R8.x___ = R8.xxxx, R8.zzzz, C508.wwww COND(1)
      00005042 00005600     	COND_PRED_EXEC ADDR(0x42) CNT(0x5) BOOL_ADDR(0x80) COND(1)
42: c8020808 18b16c00 e1080800	      ALU:	MULv	R8._y__ = R8.yyyy, R8.xxxx COND(1)
43: c8090805 186d1b00 a108fe00	      ALU:	MULv	R5.x__w = R8.yxxx, C510.wwww COND(1)
44: c8030808 181bc500 a1050300	      ALU:	MULv	R8.xy__ = R5.wwww, C259.yzzz COND(1)
45: c8060805 18616c00 a1080400	      ALU:	MULv	R5._yz_ = R8.yyxx, C260.xxxx COND(1)
46: c8070800 18c0be00 e0000500	      ALU:	ADDv	R0.xyz_ = R0.xyzz, R5.zxyy COND(1)
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006047 00001200     	EXEC ADDR(0x47) CNT(0x6) BOOL_ADDR(0x80)
47: b4120808 001bb143 80020e0e	      ALU:	ADDv	R8._y__ = R2.wwww, C270.yyyy
                          						    	ADD_CONST_1	R8.x___ = C270.x, R1.w
48: b4430805 04b1b0c3 a0080c0e	      ALU:	ADDv	R5.xy__ = -R8.yyyy, C268.xyyy
                          						    	ADD_CONST_1	R8.__z_ = C270.z, R3.w
49: b84c0503 046cac4a 80080b0d	      ALU:	ADDv	R3.__zw = -R8.xxxx, C267.xxxy
                          						    	SUB_CONST_0	R5.__z_ = C269.x, R8.z
4a: b8880500 00bebe8a d004040d	      ALU:	DOT3v	R0.___w = R4.zxyy, R4.zxyy
                          						    	SUB_CONST_0	R5.___w = C269.y, R8.z
4b: 58430808 00c7c71b e1030380	      ALU:	MULv	R8.xy__ = R3.wzzz, R3.wzzz
                          						    	RECIPSQ_IEEE	R8.__z_ = abs(R0).wwww
4c: c8010808 0019196c f1050508	      ALU:	DOT2ADDv	R8.x___ = R8.xxxx, R5.ywww, R5.ywww
      0000604d 00001200     	EXEC ADDR(0x4d) CNT(0x6) BOOL_ADDR(0x80)
4d: c8020808 00c4c4b1 f1050508	      ALU:	DOT2ADDv	R8._y__ = R8.yyyy, R5.xzzz, R5.xzzz
4e: 58100308 000000b1 e2080888	      ALU:	RECIPSQ_IEEE	R3.x___ = abs(R8).yyyy
4f: 58200308 0000006c e2080888	      ALU:	RECIPSQ_IEEE	R3._y__ = abs(R8).xxxx
50: 40200808 000000b1 e2080888	      ALU:	LOG_IEEE	R8._y__ = abs(R8).yyyy
51: 40100808 0000006c e2080888	      ALU:	LOG_IEEE	R8.x___ = abs(R8).xxxx
52: a84d0802 0084c649 c1040807	      ALU:	MULv	R2.x_zw = R4.xzzy, R8.zzzz
                          						    	MUL_CONST_0	R8.__z_ = C263.x, R8.y
      00006053 00001200     	EXEC ADDR(0x53) CNT(0x6) BOOL_ADDR(0x80)
53: a8230804 001ab0c8 c1030307	      ALU:	MULv	R4.xy__ = R3.zwww, R3.xyyy
                          						    	MUL_CONST_0	R8._y__ = C263.z, R8.x
54: 381f0803 000dadc6 e1050308	      ALU:	MULv	R3 = R5.yxzw, R3.yxxy
                          						    	EXP_IEEE	R8.x___ = R8.zzzz
55: 38230802 00b06cb1 e1040208	      ALU:	MULv	R2.xy__ = R4.xyyy, R2.xxxx
                          						    	EXP_IEEE	R8._y__ = R8.yyyy
56: c9020802 0018c7b1 f1030202	      ALU:	DOT2ADDv	R2._y__ = R2.yyyy, R3.xwww, R2.wzzz CLAMP
57: c9010802 00c5c76c f1030202	      ALU:	DOT2ADDv	R2.x___ = R2.xxxx, R3.yzzz, R2.wzzz CLAMP
58: c9030808 00b01900 a1080700	      ALU:	MULv	R8.xy__ = R8.xyyy, C263.ywww CLAMP
      00006059 00001200     	EXEC ADDR(0x59) CNT(0x6) BOOL_ADDR(0x80)
59: c8030808 04b01b00 a008fd00	      ALU:	ADDv	R8.xy__ = -R8.xyyy, C509.wwww
5a: c80c0802 00acac00 a1080a00	      ALU:	MULv	R2.__zw = R8.xxxy, C266.xxxy
5b: c8030808 00b0b000 e1020800	      ALU:	MULv	R8.xy__ = R2.xyyy, R8.xyyy
5c: c8040808 001ab0c6 d10202fd	      ALU:	DOT2ADDv	R8.__z_ = C509.zzzz, R2.zwww, R2.xyyy
5d: c8030802 00b0b000 a1080900	      ALU:	MULv	R2.xy__ = R8.xyyy, C265.xyyy
5e: c80c0802 00acac00 a1080800	      ALU:	MULv	R2.__zw = R8.xxxy, C264.xxxy
      0000405f 00002200     	EXEC_END ADDR(0x5f) CNT(0x4) BOOL_ADDR(0x80)
5f: c8030808 00c41900 e0020200	      ALU:	ADDv	R8.xy__ = R2.xzzz, R2.ywww
60: c8070808 0062bebe eb010800	      ALU:	MULADDv	R8.xyz_ = R0.zxyy, R1.zyxx, R8.zxyy
61: c8070808 00626c00 a1080f00	      ALU:	MULv	R8.xyz_ = R8.zyxx, C271.xxxx
62: c80f8000 00000000 e2080800	      ALU:	MAXv	export0 = R8, R8	; COLOR
      00000000 00000000     	NOP
