//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $ambientcolour;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4x4 $lcol;
//   float $lightningintensity;
//   float3 $rimlightcolour;
//   float $rimlightfade;
//   float $rimlightwidth;
//   sampler2D $screenshadmap;
//   float4 $shadowmask;
//   float3 $sundir;
//   sampler2D $tranpcy;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   $lightningintensity c0       1
//   $incanglow          c1       1
//   $incanflag          c2       1
//   $lcol               c3       3
//   $wlightpos          c6       3
//   $invscreensize      c9       1
//   $shadowmask         c10      1
//   $worldviewpos       c11      1
//   $sundir             c12      1
//   $rimlightwidth      c13      1
//   $rimlightfade       c14      1
//   $rimlightcolour     c15      1
//   $compressedhdr      c16      1
//   $ambientcolour      c17      1
//   $diff               s0       1
//   $tranpcy            s1       1
//   $incan              s2       1
//   $bump               s3       1
//   $screenshadmap      s4       1
//

// Shader type: pixel 

xps_3_0
defconst $ambientcolour, float, vector, [1, 4], c17
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c16
defconst $diff, sampler2d, object, [1, 1], s0
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c9
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lightningintensity, float, scalar, [1, 1], c0
defconst $rimlightcolour, float, vector, [1, 3], c15
defconst $rimlightfade, float, scalar, [1, 1], c14
defconst $rimlightwidth, float, scalar, [1, 1], c13
defconst $screenshadmap, sampler2d, object, [1, 1], s4
defconst $shadowmask, float, vector, [1, 4], c10
defconst $sundir, float, vector, [1, 3], c12
defconst $tranpcy, sampler2d, object, [1, 1], s1
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c11
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=15
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 31
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4
dcl_texcoord5 r5
dcl_color_centroid r6
dcl_color1_centroid r7.xyz

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 3, 1, -1, 0
def c255, 10, 0, 0, 0


/*    0.0 */     exec
/*    7   */     mul r8.zw, r8_abs.xxxy, c9.xxxy
/*    8   */     tfetch2D r5.__x_, r5.zw, tf1
/*    9   */     tfetch2D r15.xyz_, r5.xy, tf2
/*   10   */     tfetch2D r8.yw__, r5.xy, tf3
/*   11   */     tfetch2D r8.__xy, r8.zw, tf4
/*   12   */     tfetch2D r10, r5.xy, tf0
/*    0.1 */     exec
/*   13   */     serialize
                 mul r5.w, c1.x, c255.x
/*   14   */     add r0.w, r0.w, c11.x
               + movs r6._, r2.w
/*   15   */     add r7.w, r1.w, c11.y
               + adds_prev r1.w, c11.z
/*   16   */     mad r14.xy, -r8.wz, c10.yx, c254.y
/*   17   */     add r11.xyz, r6.zyx, r6.zyx
               + adds r5.x, r8.xx
/*   18   */     add r13.xy, -r7.w, c7.xy
               + adds r5.y, r8.yy
/*    1.0 */     exec
/*   19   */     add r12.zw, -r1.w, c8.xxxy
               + subsc r13.z, c6.x, r0.w
/*   20   */     mul r8.xy, r12.zw, r12.zw
               + subsc r13.w, c6.y, r0.w
/*   21   */     dp2add r7.w, r13.wy, r13.wy, r8.y
/*   22   */     dp2add r1.w, r13.zx, r13.zx, r8.x
/*   23   */     add r8.xyz, r5.xwy, c254.zyz
               + rsq r12.x, r1_abs.w
/*   24   */     add r9.xyz, c17.zyx, c0.x
               + mulsc r1.w, c2.x, r8.y
/*    1.1 */     exec
/*   25   */     mul r5.xy, r8.xz, r8.xz
               + rsq r12.y, r7_abs.w
/*   26   */     mad r9.xyz, r1.w, r15.xyz, r9.zyx
/*   27   */     mul r3.xy, r14.yx, r3.xy
               + subsc r1.w, c254.y, r5.x
/*   28   */     mul r3.zw, r12.zzzw, r12.xxxy
               + subsc r7.w, c254.y, r5.z
/*   29   */     add r1.w, r1.w, -r5.y
/*   30   */     mul r5, r13.yxzw, r12.yxxy
               + sqrt r8.w, r1_abs.w
/*    2.0 */     exec
/*   31   */     dp3 r1.w, r8.wxz, r2.zxy
/*   32   */     dp3 r1.y, r8.wxz, r1.zxy
/*   33   */     dp3 r1.x, r8.wxz, r0.zxy
               + movs r6._, r10.w
/*   34   */     dp3 r0.x, r1.wxy, r1.wxy
               + muls_prev r6.x, r6.w
/*   35   */     mul r6.z, r6.x, r7.w
               + rsq r6.x, r0_abs.x
/*   36   */     mul r0.xyz, r1.wxy, r6.x
/*    2.1 */     exec
/*   37   */     mul r6.xy, r3.zw, r0.x
/*   38   */     dp2add_sat r6.y, r5.wx, r0.yz, r6.y
/*   39   */     dp2add_sat r6.x, r5.zy, r0.yz, r6.x
/*   40   */     mul r6.xy, r3.yx, r6.yx
/*   41   */     dp2add r0.w, r6.yx, c5.xy, c254.w
/*   42   */     mul r2.xyz, r11.zyx, r10.xyz
               + mulsc r3.x, c4.x, r6.y
/*    3.0 */     exec    // PredicateClean=false
/*   43   */     mul r3.zw, r6.yyyx, c3.xxxy
               + mulsc r3.y, c4.y, r6.x
/*   44   */     add r0.xyz, r9.xyz, r7.xyz
               + adds r6.x, r3.xy
/*   45   */     mul r0, r2.xyz, r0
               + adds r6.y, r3.zw
/*   46   */     add r6.w, r0.z, r0.w
               + setp_gt r6._, c13.x
/*   47   */     mad r6.xy, r2.xy, r6.yx, r0.xy
/*    3.1 */ (!p0) jmp L11
/*    4.0 */     exec
/*   48   */     add r2.xyz, -r4.zyx, c11.zyx
/*   49   */     dp3 r0.x, r2.xzy, r2.xzy
/*   50   */     dp3_sat r0.w, r1.wxy, c12.zxy
               + rsq r0.x, r0_abs.x
/*   51   */     mul r0.xyz, r2.xyz, r0.x
/*   52   */     dp3 r0.x, r0.xzy, r1.wxy
               + movs r6._, -c13.x
/*   53   */     max r1.x, r0.x, c254.w
               + adds_prev r1.y, c254.y
/*    4.1 */     exec
/*   54   */     add r0.xy, -r1.yx, c254.y
/*   55   */     add r0.y, r0.y, -r1.y
               + rcp r0.x, r0.x
/*   56   */     mul_sat r0.z, r0.y, r0.x
/*   57   */     add r0.xy, -r0.wz, c254.yx
/*   58   */     mad r0.x, r0.x, c14.x, r0.w
/*   59   */     add r0.y, r0.y, -r0.z
               + muls r0.z, r0.zz
/*    5.0 */     exec
/*   60   */     mul r0.y, r0.z, r0.y
/*   61   */     dp2add r0.x, r0.y, r0.x, c254.w
/*   62   */     mad r0.xyz, r0.x, c15.zyx, c254.y
/*   63   */     mul r6.xyw, r6.xyw, r0.zyx
       label L11
/*    5.1 */     alloc colors
/*    6.0 */     exece
/*   64   */     mul r6.xyw, r6.xyw, c16.x
/*   65   */     mov oC0, r6.xywz
/*    6.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xyzw
// [6] color0 r6.xyzw
// [7] color1 r7.xyz

