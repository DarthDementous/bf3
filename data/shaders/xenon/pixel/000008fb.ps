//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $height;
//   float2 $invscreensize;
//   float4 $latten0;
//   float4x4 $lcol;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $invscreensize c1       1
//   $matvalue      c2       1
//   $latten0       c3       1
//   $lcol          c4       3
//   $wlightpos     c7       3
//   $worldviewpos  c10      1
//   $compressedhdr c11      1
//   $height        s0       1
//   $diff          s1       1
//   $lmap          s2       1
//   $screenshadmap s3       1
//

// Shader type: pixel 

xps_3_0
defconst $compressedhdr, float, vector, [1, 2], c11
defconst $diff, sampler2d, object, [1, 1], s1
defconst $height, sampler2d, object, [1, 1], s0
defconst $invscreensize, float, vector, [1, 2], c1
defconst $latten0, float, vector, [1, 4], c3
defconst $lcol, float, matrix_columns, [4, 4], c4-6
defconst $lmap, sampler2d, object, [1, 1], s2
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c2
defconst $screenshadmap, sampler2d, object, [1, 1], s3
defconst $wlightpos, float, matrix_columns, [4, 4], c7-9
defconst $worldviewpos, float, vector, [1, 3], c10
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=10
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=6

// interpolators: 6 interpolants: 6, components: 23
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4
dcl_color_centroid r5

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.5, 0, 1, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    5   */     tfetch2D r7.x___, r4.xy, tf0, FetchValidOnly=false
/*    6   */     serialize
                 mul r6.yz, r6_abs.xxy, c1.xxy
               + movs r5._, r3.w
/*    7   */     mul r6.w, c2.y, c255.x
               + adds_prev r6.x, c10.z
/*    8   */     mad r9.z, r7.x, c2.y, -r6.w
/*    9   */     add r10.zw, -r6.x, c9.xxxy
               + addsc r0.w, c10.y, r2.w
/*   10   */     dp3 r6.w, r0.zxy, r0.zxy
               + subsc r10.x, c8.x, r0.w
/*    1.0 */     exec
/*   11   */     add r7.x, r1.w, c10.x
               + muls r6.x, r3.zz
/*   12   */     add r7.xy, -r7.x, c7.xy
               + subsc r10.y, c8.y, r0.w
/*   13   */     mul r8.xy, r7.xy, r7.xy
               + rsq r7.w, r6_abs.w
/*   14   */     dp2add r6.w, r10.yw, r10.yw, r8.y
/*   15   */     dp2add r8.z, r10.xz, r10.xz, r8.x
/*   16   */     mul r7.z, r7.w, c2.w
               + rsq r9.x, r8_abs.z
/*    1.1 */     exec
/*   17   */     mul r7.zw, r7.zzzw, r0.xxxy
               + rsq r9.y, r6_abs.w
/*   18   */     mul r0, r7.zxwy, r9.zxzy
/*   19   */     add r8.xy, r0.xz, r4.xy
/*   20   */     tfetch2D r7.xyz_, r4.zw, tf2
/*   21   */     tfetch2D r6._w__, r6.yz, tf3
/*   22   */     tfetch2D r4, r8.xy, tf1
/*    2.0 */     exec
/*   23   */     serialize
                 mad r6.x, r2.z, r2.z, r6.x
/*   24   */     mad r6.x, r1.z, r1.z, r6.x
/*   25   */     mul r0.z, r6.y, c255.x
               + rsq r7.w, r6_abs.x
/*   26   */     mul r8.x, r7.w, r3.z
/*   27   */     add r6.xyz, r5.xyz, r5.xyz
/*   28   */     mul r7.xyz, r7.xyz, c0.x
/*    2.1 */     exec
/*   29   */     mul r3.xyz, r6.xyz, r4.xyz
/*   30   */     mul r8.y, r7.w, r2.z
               + log r5.x, r8_abs.z
/*   31   */     mul r0.x, r7.w, r1.z
               + log r5.y, r6_abs.w
/*   32   */     mul r5.xy, r5.xy, c3.xz
/*   33   */     mul r1, r10.yxzw, r9.yxxy
               + exp r5.x, r5.x
/*   34   */     mul r0.xy, r0.yw, r0.x
               + exp r5.y, r5.y
/*    3.0 */     exec
/*   35   */     dp2add_sat r2.y, r1.xw, r8.yx, r0.y
/*   36   */     dp2add_sat r2.x, r1.yz, r8.yx, r0.x
/*   37   */     mul_sat r0.xy, r5.xy, c3.yw
/*   38   */     add r0.xyz, -r0.yxz, c255.z
/*   39   */     mul r1.xyw, r7.xyz, r4.xyz
               + mulsc r2.z, c6.x, r0.y
/*   40   */     mul r5.xy, r2.yx, r0.xy
               + mulsc r2.w, c6.y, r0.x
/*    3.1 */     exec
/*   41   */     dp2add r1.z, r2.zw, r2.xy, c255.y
/*   42   */     mul r2.xyz, r1.xyw, r6.xyz
               + mulsc r6.x, c4.x, r5.y
/*   43   */     mul r6.zw, r5.yyyx, c5.xxxy
               + mulsc r6.y, c4.y, r5.x
/*   44   */     add r1.xy, r6.xz, r6.yw
/*   45   */     mul r1.xyz, r3.xyz, r1.xyz
               + movs r5._, r4.w
/*   46   */     mad r0.xyz, r2.xyz, r0.z, r1.xyz
/*    4.0 */     exece
/*   47   */     mul oC0.xyz, r0.xyz, c11.x
               + muls_prev oC0.w, r5.w
/*    4.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x003f SamplingPattern 0x001f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyzw
// [5] color0 r5.xyzw

