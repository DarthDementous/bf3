      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096004 00001200     	EXEC ADDR(0x4) CNT(0x6) BOOL_ADDR(0x80)
04: 10006081 1f1ff1ff 00004000	      FETCH:	SAMPLE	R6.___x = R4.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
05: c8040500 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
06: 58480000 00b1b1c6 2100ff80	      ALU:	MULv	R0.___w = C256.yyyy, C511.yyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
07: c8080506 011bb11b ab060000	      ALU:	MULADDv	R6.___w = -R0.wwww, R6.wwww, C256.yyyy
08: a8800005 00000002 c2050500	      ALU:	MUL_CONST_0	R0.___w = C256.w, R0.z
09: c8030500 00c7b000 e1000000	      ALU:	MULv	R0.xy__ = R0.wzzz, R0.xyyy
      0954600a 00001200     	EXEC ADDR(0xa) CNT(0x6) BOOL_ADDR(0x80)
0a: c8030500 00b01bb0 eb000604	      ALU:	MULADDv	R0.xy__ = R4.xyyy, R0.xyyy, R6.wwww
0b: 10488001 1f1ff478 00004000	      FETCH:	SAMPLE	R8.x_yz = R0.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 1038a081 1f1ffe88 00004000	      FETCH:	SAMPLE	R10.xyz_ = R4.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 10187001 1f1ff688 00004000	      FETCH:	SAMPLE	R7.xyzw = R0.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: b8280081 1f1ffff8 00004000	      FETCH:	SAMPLE	R0.x___ = R4.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0f: 2881060b 006c6c1b a1010402	   (S)ALU:	MULv	R11.x___ = R1.xxxx, C260.xxxx
                          						    	SETNEs	R6.___w = R2.wwww
      00006010 00001200     	EXEC ADDR(0x10) CNT(0x6) BOOL_ADDR(0x80)
10: 1404050b 006c6c6c a1010601	      ALU:	MULv	R11.__z_ = R1.xxxx, C262.xxxx
11: 0c210b04 00b1b16c 81010405	      ALU:	MULv	R4.x___ = R1.yyyy, C260.yyyy
                          						    	MUL_PREVs	R11._y__ = C261.xxxx
12: 14040504 00b1b1b1 a1010601	      ALU:	MULv	R4.__z_ = R1.yyyy, C262.yyyy
13: c8020500 006c6cc6 0b02ffff	      ALU:	MULADDv	R0._y__ = C511.zzzz, C258.xxxx, C511.xxxx
14: 0c240400 00bebeb1 d0030305	      ALU:	DOT3v	R0.__z_ = R3.zxyy, R3.zxyy
                          						    	MUL_PREVs	R4._y__ = C261.yyyy
15: 58480000 00bebec6 f0020280	      ALU:	DOT3v	R0.___w = R2.zxyy, R2.zxyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
      00006016 00001200     	EXEC ADDR(0x16) CNT(0x6) BOOL_ADDR(0x80)
16: a8270009 00c06c41 00090103	      ALU:	ADDv	R9.xyz_ = C265.xyzz, C257.xxxx
                          						    	MUL_CONST_0	R0._y__ = C259.x, R0.y
17: c8070509 00b1c0c0 eb000a09	      ALU:	MULADDv	R9.xyz_ = R9.xyzz, R0.yyyy, R10.xyzz
18: 59240000 00c6c61b e1000380	      ALU:	MULv	R0.__z_ = R0.zzzz, R3.zzzz CLAMP
                          						    	RECIPSQ_IEEE	R0._y__ = abs(R0).wwww
19: 1407050a 00c0c0b1 e0050500	      ALU:	ADDv	R10.xyz_ = R5.xyzz, R5.xyzz
1a: 0e270004 00c01bc6 e1040302	      ALU:	MULv	R4.xyz_ = R4.xyzz, R3.wwww
                          						    	MUL_PREVs	R0._y__ = R2.zzzz CLAMP
1b: c8070504 00b41bb4 eb0b0204	      ALU:	MULADDv	R4.xyz_ = R4.xzyy, R11.xzyy, R2.wwww
      0000601c 00001200     	EXEC ADDR(0x1c) CNT(0x6) BOOL_ADDR(0x80)
1c: c9060500 00c16cb1 8b000707	      ALU:	MULADDv	R0._yz_ = C263.yyyy, R0.yyzz, C263.xxxx CLAMP
1d: 28860000 00c1c11b e1000003	      ALU:	MULv	R0._yz_ = R0.yyzz, R0.yyzz
                          						    	SETNEs	R0.___w = R3.wwww
1e: b8160000 00c1c1c0 c10000ff	      ALU:	MULv	R0._yz_ = R0.yyzz, R0.yyzz
                          						    	SUB_CONST_0	R0.x___ = C511.z, R0.x
1f: a8270802 00c0c082 c10a0705	      ALU:	MULv	R2.xyz_ = R10.xyzz, R7.xyzz
                          						    	MUL_CONST_0	R8._y__ = C261.y, R0.z
20: a8170803 0014c082 c1080504	      ALU:	MULv	R3.xyz_ = R8.xzww, R5.xyzz
                          						    	MUL_CONST_0	R8.x___ = C260.y, R0.z
21: a8170906 00c0c041 c0090604	      ALU:	ADDv	R6.xyz_ = R9.xyzz, R6.xyzz
                          						    	MUL_CONST_0	R9.x___ = C260.x, R0.y
      00006022 00001200     	EXEC ADDR(0x22) CNT(0x6) BOOL_ADDR(0x80)
22: a8240909 00b16c41 81000605	      ALU:	MULv	R9.__z_ = R0.yyyy, C262.xxxx
                          						    	MUL_CONST_0	R9._y__ = C261.x, R0.y
23: a8470807 00c06c82 c1090106	      ALU:	MULv	R7.xyz_ = R9.xyzz, R1.xxxx
                          						    	MUL_CONST_0	R8.__z_ = C262.y, R0.z
24: 14070501 00c0b11b e1080107	      ALU:	MULv	R1.xyz_ = R8.xyzz, R1.yyyy
25: 0c8e0500 00fc1b1b e1010005	      ALU:	MULv	R0._yzw = R1.xxyz, R0.wwww
                          						    	MUL_PREVs	R5.___w = R5.wwww
26: c8070505 00b41bc9 eb070600	      ALU:	MULADDv	R5.xyz_ = R0.ywzz, R7.xzyy, R6.wwww
27: 14070505 00b4c01b e1030505	      ALU:	MULv	R5.xyz_ = R3.xzyy, R5.xyzz
      00003028 00002200     	EXEC_END ADDR(0x28) CNT(0x3) BOOL_ADDR(0x80)
28: c8070505 00c0b4b4 eb020405	      ALU:	MULADDv	R5.xyz_ = R5.xzyy, R2.xyzz, R4.xzyy
29: c8070505 00c0c0c0 eb020605	      ALU:	MULADDv	R5.xyz_ = R5.xyzz, R2.xyzz, R6.xyzz
2a: 0c878000 00c06c6c a1050800	      ALU:	MULv	export0.xyz_ = R5.xyzz, C264.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R0.xxxx	; COLOR
