//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float $apptime;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   samplerCUBE $envmap;
//   sampler2D $frametexture;
//   float $fresnelterm;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   sampler2D $lmap;
//   float $lmapscale;
//   float4 $matvalue;
//   sampler3D $noisetex;
//   sampler2D $spec;
//   float3 $suncolour;
//   float $sunintensity;
//   sampler2D $tranpcy;
//   float $usendotl;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $lmapscale     c0       1
//   $incanglow     c1       1
//   $incanflag     c2       1
//   $suncolour     c3       1
//   $sunintensity  c4       1
//   $usendotl      c5       1
//   $matvalue      c6       1
//   $fresnelterm   c7       1
//   $apptime       c8       1
//   $compressedhdr c9       1
//   $tranpcy       s0       1
//   $lmap          s1       1
//   $incan         s2       1
//   $spec          s3       1
//   $envmap        s4       1
//   $frametexture  s5       1
//   $noisetex      s6       1
//   $bump          s7       1
//   $diff          s8       1
//

// Shader type: pixel 

xps_3_0
defconst $apptime, float, scalar, [1, 1], c8
defconst $bump, sampler2d, object, [1, 1], s7
defconst $compressedhdr, float, vector, [1, 2], c9
defconst $diff, sampler2d, object, [1, 1], s8
defconst $envmap, samplercube, object, [1, 1], s4
defconst $frametexture, sampler2d, object, [1, 1], s5
defconst $fresnelterm, float, scalar, [1, 1], c7
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $lmap, sampler2d, object, [1, 1], s1
defconst $lmapscale, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c6
defconst $noisetex, sampler3d, object, [1, 1], s6
defconst $spec, sampler2d, object, [1, 1], s3
defconst $suncolour, float, vector, [1, 3], c3
defconst $sunintensity, float, scalar, [1, 1], c4
defconst $tranpcy, sampler2d, object, [1, 1], s0
defconst $usendotl, float, scalar, [1, 1], c5
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=15
// PsExportColorCount=1
// PsSampleControl=both

// interpolators: 9 interpolants: 9, components: 32
// UsesMemexport: false
dcl_texcoord r0
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3.xyz
dcl_texcoord4 r4.xyz
dcl_texcoord5 r5
dcl_texcoord6 r6
dcl_texcoord7 r7.xy
dcl_color_centroid r8

def c248, 0, 0, 0, 0
def c249, 0, 0, 0, 0
def c250, 4, 0.300000012, 10, 0.25
def c251, 2, 0.298999995, 1.5, -127.5
def c252, 0.587000012, 0.143999994, 255, 3.29999995
def c253, 0, 1, -1, 0.5
def c254, 0.0599999987, 0.150000006, 0.289999992, 5
def c255, 0.0529999994, 0, 0, 0


/*    0.0 */     exec
/*    9   */     tfetch2D r15.xyz_, r6.xy, tf2
/*   10   */     tfetch2D r3.___x, r6.zw, tf0, FetchValidOnly=false
/*   11   */     tfetch2D r9.xyz_, r7.xy, tf1
/*   12   */     tfetch2D r12.yw__, r6.xy, tf7, FetchValidOnly=false
/*   13   */     tfetch2D r7.xyz_, r6.xy, tf3
/*   14   */     tfetch2D r11.wyzx, r6.xy, tf8, FetchValidOnly=false
/*    0.1 */     exec
/*   15   */     serialize
                 adds r7.w, r8.xx
/*   16   */     mul r12.z, c6.x, c250.z
               + movs r8._, c1.x
/*   17   */     mul r4.w, r11.x, r8.w
               + muls_prev r12.w, c250.z
/*   18   */     mul r13.x, r7.w, r11.w
               + adds r10.x, r8.zz
/*   19   */     dp3 r9.w, r3.zxy, r3.zxy
               + adds r10.y, r8.yy
/*   20   */     mul r10.zw, r11.yyyz, c252.xxxy
               + mulsc r11.x, c253.w, r7.z
/*    1.0 */     exec
/*   21   */     mul r13.yz, r10.yyx, r11.yyz
               + mulsc r11.y, c253.w, r7.y
/*   22   */     mad r12.xy, r12.xy, c251.x, c253.z
/*   23   */     dp3 r8.x, r7.zxy, c254.xyz
               + mulsc r11.z, c253.w, r7.x
/*   24   */     mul r12.z, r12.z, r8.x
               + rsq r8.x, r9_abs.w
/*   25   */     mul r14.xyz, r8.x, r3.xyz
               + muls r3.x, r12.xx
/*   26   */     mul r8.xyz, r11.xyz, r9.zyx
               + muls r3.y, r12.yy
/*    1.1 */     exec
/*   27   */     mul r7.xyz, r8.xyz, c250.x
               + subsc r8.w, c253.y, r3.x
/*   28   */     add r8.xy, r12.zw, c253.y
               + subsc r8.z, c253.y, r3.w
/*   29   */     add r8.w, r8.w, -r3.y
               + mulsc r3.x, c2.x, r8.y
/*   30   */     mul r3.xyz, r3.x, r15.xyz
               + sqrt r12.z, r8_abs.w
/*   31   */     mad r3.xyz, r9.xyz, c0.x, r3.xyz
/*   32   */     dp3 r2.z, r12.zxy, r2.zxy
/*    2.0 */     exec
/*   33   */     dp3 r2.x, r12.zxy, r0.zxy
               + movs r8.x, r8.x
/*   34   */     dp3_sat r8.y, r14.zxy, r12.zxy
               + movs r8.w, c253.x
/*   35   */     dp3 r2.y, r12.zxy, r1.zxy
               + maxs r13.w, r8.xw
/*   36   */     mul r8.x, r2.y, r1.w
               + log r3.w, r8.y
/*   37   */     mad r8.x, r2.x, r0.w, r8.x
/*   38   */     mad r8.x, r2.z, r2.w, r8.x
/*    2.1 */     exec
/*   39   */     mul r13, r13, r3
               + adds r8.x, r8.xx
/*   40   */     mul r3.xyz, r8.x, r2.zyx
               + movs_sat r8.w, r4.z
/*   41   */     add r3.z, -r3.z, r0.w
               + movs r8.x, r11.w
/*   42   */     add r3.x, -r3.x, r2.w
               + exp r8.y, r13.w
/*   43   */     mul r0.xyz, r7.xyz, r8.y
               + movs r8._, -r3.y
/*   44   */     mul r0.xyz, r0.xyz, c3.zyx
               + adds_prev r3.y, r1.w
/*    3.0 */     exec    // PredicateClean=false
/*   45   */     mad r0.xyz, r0.zyx, c4.x, r13.xyz
/*   46   */     dp3 r8.y, r3.xzy, r3.xzy
               + mulsc r7.x, c251.y, r8.x
/*   47   */     mul r1.x, r4.w, r8.z
               + rsq r8.x, r8_abs.y
/*   48   */     mul r8.xyz, r3.zyx, r8.x
               + setp_ne r8._, c5.x
/*    3.1 */ (p0) exec
/*   49   */     (p0) mul r3.y, c4.x, c3.x
/*   50   */     (p0) cndeq r13.xyz, c253.xxy, -r4.zx, r4.y
/*   51   */     (p0) dp3_sat r3.w, r12.zxy, r4.zxy
               + (p0) movs_sat r3.x, -r4.z
/*   52   */     (p0) dp3_sat r3.z, r12.zxy, r13.xyz
               + (p0) movs r8._, r3.w
/*   53   */     (p0) add r3.x, r3.z, -r3.x
               + (p0) adds_prev r8.w, -r8.w
/*   54   */     (p0) mad r3.x, r3.x, c250.w, r8.w
/*    4.0 */ (p0) exec
/*   55   */     (p0) mul r3.y, r3.y, r3.x
/*   56   */     (p0) mul r3.xw, r3.yx, c250.y
/*   57   */     (p0) mul r3.yz, r3.w, c3.yyz
/*   58   */     (p0) mul r3.yz, r3.zzy, c4.x
/*   59   */     (p0) add r0.xyz, r0.xyz, r3.xzy
/*    4.1 */     alloc colors
/*    5.0 */     exec
/*   60   */     cube r8, r8.zzxy, r8.yxz
               + movs r12.z, r1.w
/*   61   */     mov r3.z, r8.w
               + rcp r1.y, r8_abs.z
/*   62   */     mad r3.xy, r8.yx, r1.y, c251.z
/*   63   */     mul r6.z, c8.x, c253.w
               + movs r7.y, r0.w
/*   64   */     tfetch3D r4.__x_, r6.xyz, tf6, FetchValidOnly=false
/*   65   */     tfetchCube r3, r3.xyz, tf4, FetchValidOnly=false
/*    5.1 */     exec
/*   66   */     serialize
                 mul r4.w, r3.w, c252.z
               + muls r6.z, r1.ww
/*   67   */     mul r6.xy, r10.zw, r10.yx
               + rcp r8.x, r5.w
/*   68   */     mul r8.xy, r8.x, r5.yx
               + muls r6.w, r2.ww
/*   69   */     mad r1.yz, r7.xxy, r7.wwy, r6.xxz
/*   70   */     add r8.zw, r4.zzzw, c253.zzzw
/*   71   */     add r4.xy, r1.yz, r6.yw
/*    6.0 */     exec
/*   72   */     add r8.z, r8.z, r4.z
               + frcs r0.w, r8.w
/*   73   */     mul r1.z, r8.z, c254.w
               + rsq r1.y, r4_abs.y
/*   74   */     mul r5.x, r1.y, r7.y
/*   75   */     mul r8.w, r1.y, r2.w
               + subsc r8.z, c253.y, r8.x
/*   76   */     mul r5.yzw, r1.yyz, r12.zzxy
               + movs r8._, -r8.w
/*   77   */     mul r1.zw, r5.zzzw, c255.x
               + muls_prev r1.y, r2.z
/*    6.1 */     exec
/*   78   */     dp2add r8.w, -r5.xy, r2.xy, c253.x
/*   79   */     add r1.yzw, r8.wwyz, r1.yyzw
/*   80   */     tfetch2D r8.x_yz, r1.zw, tf5
/*   81   */     serialize
                 add r8.y, r4.w, -r0.w
/*   82   */     sgt r2.w, c253.y, r3.w
               + addsc r8.y, c251.w, r8.y
/*   83   */     max r0.w, r4.x, c254.y
               + exp r8.y, r8.y
/*    7.0 */     exec
/*   84   */     mul r2.xyz, r8.y, r3.xyz
/*   85   */     cndgt r2.xyz, r2.w, r2.xyz, r3.xyz
/*   86   */     add r8.y, -r1.y, c253.y
               + movs r8._, -c7.x
/*   87   */     mul r8.y, r8.y, r8.y
               + adds_prev r2.w, c251.x
/*   88   */     min r1.y, r0.w, c253.y
               + muls r1.z, r8.yy
/*   89   */     mul r2, r1.yyyz, r2
/*    7.1 */     exec
/*   90   */     addsc_sat r8.y, c7.x, r2.w
/*   91   */     mul r1.yzw, r2.xxyz, r8.y
/*   92   */     mul r2.xyz, r1.yzw, r11.zyx
               + mulsc r1.y, c9.y, r8.x
/*   93   */     mul r2.xyz, r2.xyz, c252.w
               + mulsc r1.z, c9.y, r8.z
/*   94   */     mul r2.xyz, r2.xyz, c6.z
               + mulsc r1.w, c9.y, r8.w
/*   95   */     mad r8.xyz, r2.xyz, r9.xyz, r0.xyz
/*    8.0 */     exece
/*   96   */     add r8.xyz, r8.xyz, -r1.yzw
/*   97   */     mad r8.xyz, r8.xyz, c8.x, r1.yzw
/*   98   */     mul r1.yzw, r8.xxyz, c9.x
/*   99   */     mov oC0, r1.yzwx
/*    8.1 */     cnop

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x01ff SamplingPattern 0x00ff
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyzw
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyz
// [4] texcoord4 r4.xyz
// [5] texcoord5 r5.xyzw
// [6] texcoord6 r6.xyzw
// [7] texcoord7 r7.xy
// [8] color0 r8.xyzw

