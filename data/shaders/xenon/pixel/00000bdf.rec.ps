      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00006003 00001200     	EXEC ADDR(0x3) CNT(0x6) BOOL_ADDR(0x80)
03: 4c280001 00b16c1b a100ff00	      ALU:	MULv	R1.___w = R0.yyyy, C511.xxxx
                          						    	RECIP_IEEE	R0._y__ = R0.wwww
04: a8820104 001bb141 c10100ff	      ALU:	MULv	R4._y__ = R1.wwww, R0.yyyy
                          						    	MUL_CONST_0	R1.___w = C511.x, R0.y
05: c8050004 001bc400 e1010000	      ALU:	MULv	R4.x_z_ = R1.wwww, R0.xzzz
06: c80f0000 00b0fe00 a004ff00	      ALU:	ADDv	R0 = R4.xyyy, C511.zxyz
07: c80f0005 00b0fc00 a004ff00	      ALU:	ADDv	R5 = R4.xyyy, C511.xxyz
08: c80f0002 00a1f000 a004ff00	      ALU:	ADDv	R2 = R4.yyxy, C511.xyyz
      05556009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: 98083041 1f1ffff8 00004000	      FETCH:	SAMPLE	R3.x___ = R2.zyz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 200830a1 1f1fffc7 00004000	      FETCH:	SAMPLE	R3._x__ = R5.xzx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 20083001 1f1ffe3f 00004000	      FETCH:	SAMPLE	R3.__x_ = R0.xzx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 88083041 1f1ff1ff 00004000	      FETCH:	SAMPLE	R3.___x = R2.zxz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 100820a1 1f1ffff8 00004000	      FETCH:	SAMPLE	R2.x___ = R5.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: 10082001 1f1fffc7 00004000	      FETCH:	SAMPLE	R2._x__ = R0.xyx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0095600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: b8082041 1f1ffe3f 00004000	      FETCH:	SAMPLE	R2.__x_ = R2.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
10: 300820a1 1f1ff1ff 00004000	      FETCH:	SAMPLE	R2.___x = R5.xwx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
11: 30080001 1f1ffff8 00004000	      FETCH:	SAMPLE	R0.x___ = R0.xwx CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
12: c8020000 046c6c00 2002ff00	   (S)ALU:	ADDv	R0._y__ = -C258.xxxx, C511.xxxx
13: c8020000 00b1c600 e0000400	      ALU:	ADDv	R0._y__ = R0.yyyy, R4.zzzz
14: c8010000 006cb100 e6000000	      ALU:	SETGTEv	R0.x___ = R0.xxxx, R0.yyyy
      00006015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: c80f0002 0000b100 e6020000	      ALU:	SETGTEv	R2 = R2, R0.yyyy
16: c80f0003 0000b100 e6030000	      ALU:	SETGTEv	R3 = R3, R0.yyyy
17: c8040000 00a76c00 af03fe00	      ALU:	DOT4v	R0.__z_ = R3.wzxy, C510.xxxx
18: c8020000 00776c00 af02fe00	      ALU:	DOT4v	R0._y__ = R2.wzyx, C510.xxxx
19: c8020000 00c6b100 e0000000	      ALU:	ADDv	R0._y__ = R0.zzzz, R0.yyyy
1a: c8010000 00b16c00 e0000000	      ALU:	ADDv	R0.x___ = R0.yyyy, R0.xxxx
      0000301b 00002200     	EXEC_END ADDR(0x1b) CNT(0x3) BOOL_ADDR(0x80)
1b: a9120000 02bebe00 900101ff	      ALU:	DOT3v	R0._y__ = R1.zxyy, -C257.zxyy CLAMP
                          						    	MUL_CONST_0	R0.x___ = C511.w, R0.x
1c: c8010000 006cb16c cb0000ff	      ALU:	MULADDv	R0.x___ = C511.xxxx, R0.xxxx, R0.yyyy
1d: c81fc000 006c7600 a1000000	      ALU:	MULv	export0 = R0.xxxx, C256.zzyx	; COLOR
                          						    	RETAIN_PREV	export0.x___ = R0	; COLOR
