//
// Generated by 2.0.6534.1
//
// Parameters:
//
//   float4 $ambientcolour;
//   sampler2D $bump;
//   float2 $compressedhdr;
//   sampler2D $diff;
//   sampler2D $height;
//   sampler2D $incan;
//   float $incanflag;
//   float $incanglow;
//   float2 $invscreensize;
//   float4x4 $lcol;
//   float $lightningintensity;
//   float4 $matvalue;
//   sampler2D $screenshadmap;
//   float4 $shadowmask;
//   sampler2D $spec;
//   float4x4 $wlightpos;
//   float3 $worldviewpos;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   $lightningintensity c0       1
//   $incanglow          c1       1
//   $incanflag          c2       1
//   $lcol               c3       3
//   $wlightpos          c6       3
//   $worldviewpos       c9       1
//   $invscreensize      c10      1
//   $shadowmask         c11      1
//   $matvalue           c12      1
//   $compressedhdr      c13      1
//   $ambientcolour      c14      1
//   $height             s0       1
//   $diff               s1       1
//   $incan              s2       1
//   $bump               s3       1
//   $spec               s4       1
//   $screenshadmap      s5       1
//

// Shader type: pixel 

xps_3_0
defconst $ambientcolour, float, vector, [1, 4], c14
defconst $bump, sampler2d, object, [1, 1], s3
defconst $compressedhdr, float, vector, [1, 2], c13
defconst $diff, sampler2d, object, [1, 1], s1
defconst $height, sampler2d, object, [1, 1], s0
defconst $incan, sampler2d, object, [1, 1], s2
defconst $incanflag, float, scalar, [1, 1], c2
defconst $incanglow, float, scalar, [1, 1], c1
defconst $invscreensize, float, vector, [1, 2], c10
defconst $lcol, float, matrix_columns, [4, 4], c3-5
defconst $lightningintensity, float, scalar, [1, 1], c0
defconst $matvalue, float, vector, [1, 4], c12
defconst $screenshadmap, sampler2d, object, [1, 1], s5
defconst $shadowmask, float, vector, [1, 4], c11
defconst $spec, sampler2d, object, [1, 1], s4
defconst $wlightpos, float, matrix_columns, [4, 4], c6-8
defconst $worldviewpos, float, vector, [1, 3], c9
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsParamGen=1
// PsExportColorCount=1
config PsGenScreenXY=true
// PsSampleControl=both
config PsParamGenReg=8

// interpolators: 8 interpolants: 8, components: 28
// UsesMemexport: false
dcl_texcoord r0.xyz
dcl_texcoord1 r1
dcl_texcoord2 r2
dcl_texcoord3 r3
dcl_texcoord4 r4
dcl_texcoord5 r5.xy
dcl_color_centroid r6
dcl_color1_centroid r7.xyz

def c252, 0, 0, 0, 0
def c253, 10, -1, 0, 0
def c254, 1, 9.99999975e-005, 0.5, 5
def c255, 0.0599999987, 0.150000006, 0.289999992, 0


/*    0.0 */     alloc colors
/*    0.1 */     exec
/*    7   */     tfetch2D r0.___x, r5.xy, tf0, FetchValidOnly=false
/*    8   */     serialize
                 dp3 r0.z, r0.zxy, r0.zxy
/*    9   */     mul r5.zw, c12.yyyx, c254.zzzw
/*   10   */     mad r7.w, r0.w, c12.y, -r5.z
/*   11   */     mul r9.xy, r8_abs.xy, c10.xy
               + rsq r0.z, r0_abs.z
/*   12   */     mulsc r0.w, c12.w, r0.z
/*    1.0 */     exec
/*   13   */     mul r0.xy, r0.wz, r0.xy
/*   14   */     mad r0.xw, r0.xy, r7.w, r5.xy
/*   15   */     tfetch2D r10.xyz_, r5.xy, tf2
/*   16   */     tfetch2D r8.xyz_, r0.xw, tf4
/*   17   */     tfetch2D r0._yw_, r0.xw, tf3
/*   18   */     tfetch2D r11.xy__, r9.xy, tf5
/*    1.1 */     exec
/*   19   */     tfetch2D r9, r0.xw, tf1
/*   20   */     serialize
                 add r7.w, r2.w, c9.y
               + muls r0.x, -r1.ww
/*   21   */     add r5.x, r1.w, c9.x
               + muls r0.w, -r2.ww
/*   22   */     mul oC0.w, r9.w, r6.w
/*   23   */     mad r5.yz, -r11.xxy, c11.xxy, c254.x
/*   24   */     add r11.xy, -r5.x, c6.xy
               + movs r6._, r3.w
/*    2.0 */     exec
/*   25   */     add r12.zw, -r7.w, c7.xxxy
               + adds_prev r6.w, c9.z
/*   26   */     mul r12.xy, r12.zw, r12.zw
               + subsc r11.z, c8.x, r6.w
/*   27   */     add r0.xyw, r0.xyz, r0.wyz
               + subsc r11.w, c8.y, r6.w
/*   28   */     dp2add r0.z, r11.yw, r11.yw, r12.y
/*   29   */     mad r6.w, -r3.w, -r3.w, r0.x
/*   30   */     dp2add r0.x, r11.xz, r11.xz, r12.x
/*    2.1 */     exec
/*   31   */     add r14.xy, r0.yw, c253.y
               + rsq r12.x, r0_abs.x
/*   32   */     dp2add r0.y, -r14.yx, r14.yx, c254.x
/*   33   */     mul r0.w, c1.x, c253.x
               + rsq r6.w, r6_abs.w
/*   34   */     mul r0.x, r6.w, -r3.w
               + rsq r12.y, r0_abs.z
/*   35   */     dp3 r0.z, r8.zxy, c255.xyz
/*   36   */     mul r11, r11, r12.xyxy
/*    3.0 */     exec
/*   37   */     mul r12.xy, r12.zw, r12.xy
               + sqrt r14.z, r0_abs.y
/*   38   */     dp3 r13.x, r14.zxy, r1.zxy
/*   39   */     dp3 r13.y, r14.zxy, r3.zxy
               + movs r6._, r6.w
/*   40   */     dp3 r13.z, r14.zxy, r2.zxy
               + muls_prev r0.y, -r1.w
/*   41   */     add r1, r11.zwxy, r0.xxy
/*   42   */     mad r3.xy, r6.w, -r2.w, r12.xy
/*    3.1 */     exec
/*   43   */     mul r0.xy, r3.xy, r3.xy
/*   44   */     dp2add r6.w, r1.wy, r1.wy, r0.y
/*   45   */     dp2add r0.x, r1.zx, r1.zx, r0.x
/*   46   */     dp3 r0.y, r13.yxz, r13.yxz
               + rsq r0.x, r0_abs.x
/*   47   */     mul r0.z, r5.w, r0.z
               + rsq r0.y, r0_abs.y
/*   48   */     mul r2.xyz, r13.xzy, r0.y
               + rsq r0.y, r6_abs.w
/*    4.0 */     exec
/*   49   */     mul r12.zw, r3.xxxy, r0.xxxy
/*   50   */     mul r3, r1.xzwy, r0.xxy
/*   51   */     mul r1, r12, r2.y
/*   52   */     dp2add_sat r0.x, r3.yx, r2.xz, r1.z
/*   53   */     dp2add_sat r0.y, r3.zw, r2.xz, r1.w
/*   54   */     dp2add_sat r2.y, r11.yw, r2.xz, r1.y
/*    4.1 */     exec
/*   55   */     dp2add_sat r2.x, r11.xz, r2.xz, r1.x
/*   56   */     sne r1.xy, r2.xy, c255.w
/*   57   */     add r0, r0.wxyz, c254.xyyx
/*   58   */     add r3.xyz, c14.xyz, c0.x
               + movs r6.w, r0.x
/*   59   */     mul r1.xw, r0.yz, r1.xy
               + mulsc r1.y, c2.x, r6.w
/*   60   */     mad r0.xyz, r1.y, r10.xyz, r3.xyz
/*    5.0 */     exec
/*   61   */     add r3.xyz, r6.xyz, r6.xyz
               + log r2.z, r1_abs.x
/*   62   */     mul r1.xyz, r3.xyz, r9.xyz
               + log r2.w, r1_abs.w
/*   63   */     mul r2.zw, r0.w, r2.zzzw
/*   64   */     mul r3.xyz, r8.xyz, c254.z
               + exp r5.x, r2.z
/*   65   */     mul r3.xyz, r3.xzy, r6.xzy
               + exp r5.w, r2.w
/*   66   */     mul r6, r5, r4.xxy
/*    5.1 */     exec
/*   67   */     mul r2.yz, r6.yyz, r2.xxy
/*   68   */     mul r6.xy, r6.xw, r5.yz
/*   69   */     add r2.xw, r6.xy, r6.xy
/*   70   */     mul r6, r2.xywz, c3.xxy
/*   71   */     mul r4, r2, c5.xxy
/*   72   */     add r4.zw, r4.xxxy, r4.wwwz
/*    6.0 */     exec
/*   73   */     mul r2, r2, c4.xxy
               + adds r4.x, r6.xz
/*   74   */     add r6.xz, r2.xy, r2.wz
               + adds r4.y, r6.yw
/*   75   */     mul r6.z, r1.y, r6.z
               + adds r2.y, r6.xx
/*   76   */     add r0.xyz, r0.xyz, r7.xyz
               + adds r2.x, r4.xx
/*   77   */     mul r6.xy, r1.xz, r4.yw
               + adds r2.z, r4.zz
/*   78   */     mad r6.xyz, r3.xyz, r2.xzy, r6.xyz
/*    6.1 */     exece
/*   79   */     mad r6.xyz, r1.xzy, r0.xzy, r6.xyz
/*   80   */     mul oC0.xyz, r6.xzy, c13.x

// PDB hint 00000000-00000000-00000000


// interpolatorControl: ParamShade 0x00ff SamplingPattern 0x003f
// outputMask: mask: 0x1 oDepth: 0 oKill 0
// Input declaration table:
// [0] texcoord0 r0.xyz
// [1] texcoord1 r1.xyzw
// [2] texcoord2 r2.xyzw
// [3] texcoord3 r3.xyzw
// [4] texcoord4 r4.xyzw
// [5] texcoord5 r5.xy
// [6] color0 r6.xyzw
// [7] color1 r7.xyz

