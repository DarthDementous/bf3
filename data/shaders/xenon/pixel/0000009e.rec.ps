      02556008 00001200     	EXEC ADDR(0x8) CNT(0x6) BOOL_ADDR(0x80)
08: b80890c1 1f1ffe88 00004000	      FETCH:	SAMPLE	R9.xyz_ = R6.zwz CONST(0) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
09: 1050a0c1 1f1fffd9 00004000	      FETCH:	SAMPLE	R10.yw__ = R6.xyx CONST(5) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0a: 101880c1 1f1ff5c8 00004000	      FETCH:	SAMPLE	R8.xy_z = R6.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: 1068c0c1 1f1ff688 00004000	      FETCH:	SAMPLE	R12.xyzw = R6.xyx CONST(6) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: c808070b 006c6c00 2104ff00	   (S)ALU:	MULv	R11.___w = C260.xxxx, C511.xxxx
0d: c8080704 001b1b00 e10c0700	      ALU:	MULv	R4.___w = R12.wwww, R7.wwww
      0000600e 00001200     	EXEC ADDR(0xe) CNT(0x6) BOOL_ADDR(0x80)
0e: c807070d 00626200 e0070700	      ALU:	ADDv	R13.xyz_ = R7.zyxx, R7.zyxx
0f: c8010707 00bebe00 f0030300	      ALU:	DOT3v	R7.x___ = R3.zxyy, R3.zxyy
10: a888030d 00bfc0cb 9008fefc	      ALU:	DOT3v	R13.___w = R8.wxyy, C510.xyzz
                          						    	MUL_CONST_0	R3.___w = C508.z, R8.w
11: c80c0708 00ac6c1b 8b0afbfc	      ALU:	MULADDv	R8.__zw = C508.wwww, R10.xxxy, C507.xxxx
12: 581e0707 00fc6c6c a1090087	      ALU:	MULv	R7._yzw = R9.xxyz, C256.xxxx
                          						    	RECIPSQ_IEEE	R7.x___ = abs(R7).xxxx
13: a81d030a 006cf0c9 c10703fc	      ALU:	MULv	R10.x_zw = R7.xxxx, R3.xyyz
                          						    	MUL_CONST_0	R3.x___ = C508.z, R8.y
      00006014 00001200     	EXEC ADDR(0x14) CNT(0x6) BOOL_ADDR(0x80)
14: c8010707 04c7c7b1 d10808fc	      ALU:	DOT2ADDv	R7.x___ = C508.yyyy, -R8.wzzz, R8.wzzz
15: a827030b 0015c0c8 c1070cfc	      ALU:	MULv	R11.xyz_ = R7.yzww, R12.xyzz
                          						    	MUL_CONST_0	R3._y__ = C508.z, R8.x
16: c80e0707 00ab7600 e1030900	      ALU:	MULv	R7._yzw = R3.wwxy, R9.zzyx
17: a01f080b 0022006c e10b0d87	      ALU:	MULv	R11 = R11.zyxw, R13
                          						    	SQRT_IEEE	R8.x___ = abs(R7).xxxx
18: ac120e0a 0014be45 f00800fa	      ALU:	DOT3v	R10._y__ = R8.xzww, R0.zxyy
                          						    	MUL_CONST_1	R14.x___ = C506.x, R7.y
19: ad240e03 00cf1446 f00a08fa	      ALU:	DOT3v	R3.__z_ = R10.wxzz, R8.xzww CLAMP
                          						    	MUL_CONST_1	R14._y__ = C506.x, R7.z
      0000601a 00001200     	EXEC ADDR(0x1a) CNT(0x6) BOOL_ADDR(0x80)
1a: 1411070a 0014be1b f008010b	      ALU:	DOT3v	R10.x___ = R8.xzww, R1.zxyy
                          						    	MAXs	R7.x___ = R11.wwww
1b: b4140701 006c1b84 e10a01fc	      ALU:	MULv	R1.__z_ = R10.xxxx, R1.wwww
                          						    	ADD_CONST_1	R7.x___ = C508.y, R7.x
1c: 40120101 006c6cc6 a207fc03	      ALU:	MAXv	R1._y__ = R7.xxxx, C508.xxxx
                          						    	LOG_IEEE	R1.x___ = R3.zzzz
1d: c8010707 00b11bc6 eb0a0001	      ALU:	MULADDv	R7.x___ = R1.zzzz, R10.yyyy, R0.wwww
1e: ac410e01 00b16c47 e10101fa	      ALU:	MULv	R1.x___ = R1.yyyy, R1.xxxx
                          						    	MUL_CONST_1	R14.__z_ = C506.x, R7.w
1f: 3824070a 0014be6c f0080201	      ALU:	DOT3v	R10.__z_ = R8.xzww, R2.zxyy
                          						    	EXP_IEEE	R7._y__ = R1.xxxx
      00006020 00001200     	EXEC ADDR(0x20) CNT(0x6) BOOL_ADDR(0x80)
20: c8010707 00c61b6c eb0a0207	      ALU:	MULADDv	R7.x___ = R7.xxxx, R10.zzzz, R2.wwww
21: c80e0707 00fcb100 e10e0700	      ALU:	MULv	R7._yzw = R14.xxyz, R7.yyyy
22: 00170701 0015626c a1070107	      ALU:	MULv	R1.xyz_ = R7.yzww, C257.zyxx
                          						    	ADDs	R7.x___ = R7.xxxx
23: c8070707 006c6500 e1070a00	      ALU:	MULv	R7.xyz_ = R7.xxxx, R10.yzxx
24: c8070701 00626c62 ab01020b	      ALU:	MULADDv	R1.xyz_ = R11.zyxx, R1.zyxx, C258.xxxx
25: 1402070b 05c61bb1 e0070107	      ALU:	ADDv	R11._y__ = -R7.zzzz, R1.wwww
      00004026 00001000     	EXEC ADDR(0x26) CNT(0x4)
26: 04140b0b 046c1b1b e0070002	      ALU:	ADDv	R11.__z_ = -R7.xxxx, R0.wwww
                          						    	ADD_PREVs	R11.x___ = R2.wwww
27: 16810707 00b4b4c6 f00b0b04	      ALU:	DOT3v	R7.x___ = R11.xzyy, R11.xzyy
                          						    	MAXs	R7.___w = R4.zzzz CLAMP
28: 58170700 0062c06c e10d0c87	      ALU:	MULv	R0.xyz_ = R13.zyxx, R12.xyzz
                          						    	RECIPSQ_IEEE	R7.x___ = abs(R7).xxxx
29: 70070707 00626c6c c10b0703	      ALU:	MULv	R7.xyz_ = R11.zyxx, R7.xxxx
      0000602a 00005600     	COND_PRED_EXEC ADDR(0x2a) CNT(0x6) BOOL_ADDR(0x80) COND(1)
2a: c8040703 186c6c00 21020100	      ALU:	MULv	R3.__z_ = C258.xxxx, C257.xxxx COND(1)
2b: c807070b 1abc6eb1 6cfc0404	      ALU:	CNDEv	R11.xyz_ = R4.yyyy, C508.xxyy, -R4.zxxx COND(1)
2c: 17120408 1914bec6 f0080404	      ALU:	DOT3v	R8._y__ = R8.xzww, R4.zxyy CLAMP COND(1)
                          						    	MAXs	R4.x___ = -R4.zzzz CLAMP
2d: 15020704 1814c0b1 f0080b08	      ALU:	DOT3v	R4._y__ = R8.xzww, R11.xyzz CLAMP COND(1)
2e: 04810704 1bb16c1b e0040407	      ALU:	ADDv	R4.x___ = R4.yyyy, -R4.xxxx COND(1)
                          						    	ADD_PREVs	R7.___w = -R7.wwww
2f: c8010704 186cc61b ab04fb07	      ALU:	MULADDv	R4.x___ = R7.wwww, R4.xxxx, C507.zzzz COND(1)
      00005030 00005600     	COND_PRED_EXEC ADDR(0x30) CNT(0x5) BOOL_ADDR(0x80) COND(1)
30: c8020704 18c66c00 e1030400	      ALU:	MULv	R4._y__ = R3.zzzz, R4.xxxx COND(1)
31: c809070b 186d1b00 a104fb00	      ALU:	MULv	R11.x__w = R4.yxxx, C507.wwww COND(1)
32: c8030704 181bc500 a10b0100	      ALU:	MULv	R4.xy__ = R11.wwww, C257.yzzz COND(1)
33: c806070b 18616c00 a1040200	      ALU:	MULv	R11._yz_ = R4.yyxx, C258.xxxx COND(1)
34: c8070701 18c0b400 e0010b00	      ALU:	ADDv	R1.xyz_ = R1.xyzz, R11.xzyy COND(1)
      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      05006035 00001200     	EXEC ADDR(0x35) CNT(0x6) BOOL_ADDR(0x80)
35: c8040706 006cc600 2106fc00	      ALU:	MULv	R6.__z_ = C262.xxxx, C508.zzzz
36: c80f0707 00a6cd00 f2070700	      ALU:	CUBEv	R7 = R7.zzxy, R7.yxzz
37: 4c140202 001b1bc6 e2070787	      ALU:	MAXv	R2.__z_ = R7.wwww, R7.wwww
                          						    	RECIP_IEEE	R2.x___ = abs(R7).zzzz
38: c8030702 006d6cb1 cb0702fa	      ALU:	MULADDv	R2.xy__ = C506.yyyy, R7.yxxx, R2.xxxx
39: 904040c1 1f1fffc7 00008000	      FETCH:	SAMPLE	R4._x__ = R6.xyz CONST(4) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
3a: 90206041 1f1ff688 0000c000	      FETCH:	SAMPLE	R6.xyzw = R2.xyz CONST(2) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
      0002603b 00001200     	EXEC ADDR(0x3b) CNT(0x6) BOOL_ADDR(0x80)
3b: 08110207 001b1b1b e1010102	   (S)ALU:	MULv	R7.x___ = R1.wwww, R1.wwww
                          						    	MULs	R2.x___ = R2.wwww
3c: c8080707 001b1b6c eb000007	      ALU:	MULADDv	R7.___w = R7.xxxx, R0.wwww, R0.wwww
3d: 4c410704 001b1b1b a106fd05	      ALU:	MULv	R4.x___ = R6.wwww, C509.wwww
                          						    	RECIP_IEEE	R7.__z_ = R5.wwww
3e: 140c0705 00ac06c6 a004fc07	      ALU:	ADDv	R5.__zw = R4.xxxy, C508.zzzw
3f: 0c210707 001bb16c e0050405	      ALU:	ADDv	R7.x___ = R5.wwww, R4.yyyy
                          						    	MUL_PREVs	R7._y__ = R5.xxxx
40: 14010707 006c1bc6 a107fe07	      ALU:	MULv	R7.x___ = R7.xxxx, C510.wwww
      02406041 00001200     	EXEC ADDR(0x41) CNT(0x6) BOOL_ADDR(0x80)
41: 0c160702 006c16b1 e1070805	      ALU:	MULv	R2._yz_ = R7.xxxx, R8.zzww
                          						    	MUL_PREVs	R7.x___ = R5.yyyy
42: bc460702 00c1c684 a102fafc	      ALU:	MULv	R2._yz_ = R2.yyzz, C506.zzzz
                          						    	SUB_CONST_1	R7.__z_ = C508.y, R7.x
43: 2c270702 00c3c0c6 e0070205	      ALU:	ADDv	R2.xyz_ = R7.wyzz, R2.xyzz
                          						    	FRACs	R7._y__ = R5.zzzz
44: 64387041 1f1ff478 00004000	      FETCH:	SAMPLE	R7.x_yz = R2.yzy CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
45: c8020707 026cb100 e0040700	   (S)ALU:	ADDv	R7._y__ = R4.xxxx, -R7.yyyy
46: b4400307 00000005 e20707fa	      ALU:	ADD_CONST_1	R3.__z_ = C506.w, R7.y
      00006047 00001200     	EXEC ADDR(0x47) CNT(0x6) BOOL_ADDR(0x80)
47: 38420307 00b11bc6 65fc0603	      ALU:	SETGTv	R7._y__ = C508.yyyy, R6.wwww
                          						    	EXP_IEEE	R3.__z_ = R3.zzzz
48: c8070704 00c6c000 e1030600	      ALU:	MULv	R4.xyz_ = R3.zzzz, R6.xyzz
49: c8070705 00b1c0c0 ee070406	      ALU:	CNDGTv	R5.xyz_ = R6.xyzz, R7.yyyy, R4.xyzz
4a: 58210700 00bec06c b000fd82	      ALU:	DOT3v	R0.x___ = R0.zxyy, C509.xyzz
                          						    	RECIPSQ_IEEE	R7._y__ = abs(R2).xxxx
4b: c8040700 00b11b00 e1070000	      ALU:	MULv	R0.__z_ = R7.yyyy, R0.wwww
4c: 14010700 006cb1b1 a200fe07	      ALU:	MAXv	R0.x___ = R0.xxxx, C510.yyyy
      0000604d 00001200     	EXEC ADDR(0x4d) CNT(0x6) BOOL_ADDR(0x80)
4d: 0c280000 00b11b1b e1070201	      ALU:	MULv	R0.___w = R7.yyyy, R2.wwww
                          						    	MUL_PREVs	R0._y__ = R1.wwww
4e: c8020707 04b76200 f0000a00	      ALU:	DOT3v	R7._y__ = -R0.wzyy, R10.zyxx
4f: 14020707 05b1b16c 8007fc05	      ALU:	ADDv	R7._y__ = -R7.yyyy, C508.yyyy
50: 04820507 00b1b16c c10707fb	      ALU:	MULv	R7._y__ = R7.yyyy, R7.yyyy
                          						    	ADD_PREVs	R5.___w = C507.xxxx
51: 08210000 006cb1b1 a300fc07	      ALU:	MINv	R0.x___ = R0.xxxx, C508.yyyy
                          						    	MULs	R0._y__ = R7.yyyy
52: c80f0700 00ac0000 e1000500	      ALU:	MULv	R0 = R0.xxxy, R5
      00006053 00001200     	EXEC ADDR(0x53) CNT(0x6) BOOL_ADDR(0x80)
53: b2200707 00000043 c2070705	      ALU:	ADD_CONST_0	R7._y__ = C261.x, R0.w CLAMP
54: c8070700 00c0b100 e1000700	      ALU:	MULv	R0.xyz_ = R0.xyzz, R7.yyyy
55: ac1e0000 00fc2184 e1000307	      ALU:	MULv	R0._yzw = R0.xxyz, R3.yyxw
                          						    	MUL_CONST_1	R0.x___ = C263.y, R7.x
56: ac270002 0015b186 a100fb07	      ALU:	MULv	R2.xyz_ = R0.yzww, C507.yyyy
                          						    	MUL_CONST_1	R0._y__ = C263.y, R7.z
57: ac470002 00c0c687 a1020407	      ALU:	MULv	R2.xyz_ = R2.xyzz, C260.zzzz
                          						    	MUL_CONST_1	R0.__z_ = C263.y, R7.w
58: c8070707 00c0c0c0 eb020901	      ALU:	MULADDv	R7.xyz_ = R1.xyzz, R2.xyzz, R9.xyzz
      00004059 00002200     	EXEC_END ADDR(0x59) CNT(0x4) BOOL_ADDR(0x80)
59: c8070707 02c0c000 e0070000	      ALU:	ADDv	R7.xyz_ = R7.xyzz, -R0.xyzz
5a: c8070707 00c06cc0 ab070600	      ALU:	MULADDv	R7.xyz_ = R0.xyzz, R7.xyzz, C262.xxxx
5b: c8070704 00c06c00 a1070700	      ALU:	MULv	R4.xyz_ = R7.xyzz, C263.xxxx
5c: c80f8000 00000000 e2040400	      ALU:	MAXv	export0 = R4, R4	; COLOR
