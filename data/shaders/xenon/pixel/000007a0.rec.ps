      00000000 0000c400     	ALLOC PARAM/PIXEL SIZE(0x0)
      00096003 00001200     	EXEC ADDR(0x3) CNT(0x6) BOOL_ADDR(0x80)
03: 10000061 1f1ff1ff 00004000	      FETCH:	SAMPLE	R0.___x = R3.xyx CONST(0) ARBITRARY(2x4_SYM) LOCATION(CENTROID)
04: c8040400 00bebe00 f0000000	   (S)ALU:	DOT3v	R0.__z_ = R0.zxyy, R0.zxyy
05: 58490002 006db0c6 2103fd80	      ALU:	MULv	R2.x__w = C259.yxxx, C509.xyyy
                          						    	RECIPSQ_IEEE	R0.__z_ = abs(R0).zzzz
06: c8080401 011bb16c ab000302	      ALU:	MULADDv	R1.___w = -R2.xxxx, R0.wwww, C259.yyyy
07: a8870008 00c0c002 c0040403	      ALU:	ADDv	R8.xyz_ = R4.xyzz, R4.xyzz
                          						    	MUL_CONST_0	R0.___w = C259.w, R0.z
08: c8030404 00c7b000 e1000000	      ALU:	MULv	R4.xy__ = R0.wzzz, R0.xyyy
      09546009 00001200     	EXEC ADDR(0x9) CNT(0x6) BOOL_ADDR(0x80)
09: c8030404 00b01bb0 eb040103	      ALU:	MULADDv	R4.xy__ = R3.xyyy, R4.xyyy, R1.wwww
0a: 10386061 1f1ffe88 00004000	      FETCH:	SAMPLE	R6.xyz_ = R3.xyx CONST(3) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0b: b8285061 1f1ffe88 00004000	      FETCH:	SAMPLE	R5.xyz_ = R3.zwz CONST(2) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0c: 10487081 1f1ffe88 00004000	      FETCH:	SAMPLE	R7.xyz_ = R4.xyx CONST(4) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0d: 10180081 1f1ff688 00004000	      FETCH:	SAMPLE	R0.xyzw = R4.xyx CONST(1) VALID_ONLY ARBITRARY(2x4_SYM) LOCATION(CENTROID)
0e: c8080401 00bebe00 f0010100	   (S)ALU:	DOT3v	R1.___w = R1.zxyy, R1.zxyy
      0000600f 00001200     	EXEC ADDR(0xf) CNT(0x6) BOOL_ADDR(0x80)
0f: 14070403 00c01b6c 8107fe01	      ALU:	MULv	R3.xyz_ = R7.xyzz, C510.wwww
10: 0c270402 00c0c0b1 c10800fd	      ALU:	MULv	R2.xyz_ = R8.xyzz, R0.xyzz
                          						    	MUL_PREVs	R4._y__ = C509.yyyy
11: 58810104 00bec01b b007fe81	      ALU:	DOT3v	R4.x___ = R7.zxyy, C510.xyzz
                          						    	RECIPSQ_IEEE	R1.___w = abs(R1).wwww
12: 14010404 001b6c1b e1020401	      ALU:	MULv	R4.x___ = R2.wwww, R4.xxxx
13: 0e430104 00b01bc6 a004fd01	      ALU:	ADDv	R4.xy__ = R4.xyyy, C509.wwww
                          						    	MUL_PREVs	R1.__z_ = R1.zzzz CLAMP
14: a8170103 00c0c045 c1030502	      ALU:	MULv	R3.xyz_ = R3.xyzz, R5.xyzz
                          						    	MUL_CONST_0	R1.x___ = C258.x, R4.y
      00006015 00001200     	EXEC ADDR(0x15) CNT(0x6) BOOL_ADDR(0x80)
15: 40820601 006cc6c6 a204fd01	      ALU:	MAXv	R1._y__ = R4.xxxx, C509.zzzz
                          						    	LOG_IEEE	R6.___w = R1.zzzz
16: c80f0401 00ac0000 e1010600	      ALU:	MULv	R1 = R1.xxxy, R6
17: c8070401 00c06cc0 ab050001	      ALU:	MULADDv	R1.xyz_ = R1.xyzz, R5.xyzz, C256.xxxx
18: 38870103 00c06c1b a103ff01	      ALU:	MULv	R3.xyz_ = R3.xyzz, C511.xxxx
                          						    	EXP_IEEE	R1.___w = R1.wwww
19: c8070403 00c01b00 e1030100	      ALU:	MULv	R3.xyz_ = R3.xyzz, R1.wwww
1a: c8070403 00c0c000 a1030400	      ALU:	MULv	R3.xyz_ = R3.xyzz, C260.xyzz
      0000301b 00002200     	EXEC_END ADDR(0x1b) CNT(0x3) BOOL_ADDR(0x80)
1b: 14070400 00c06c1b a1030500	      ALU:	MULv	R0.xyz_ = R3.xyzz, C261.xxxx
1c: c8070400 00c0c0c0 eb020100	      ALU:	MULADDv	R0.xyz_ = R0.xyzz, R2.xyzz, R1.xyzz
1d: 0c878000 00c06c1b a1000604	      ALU:	MULv	export0.xyz_ = R0.xyzz, C262.xxxx	; COLOR
                          						    	MUL_PREVs	export0.___w = R4.wwww	; COLOR
