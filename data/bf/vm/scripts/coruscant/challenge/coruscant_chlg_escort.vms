// vim: set syntax=c :

/////////////MAKE SURE TO INCLUDE A BFStorylevelVarProp in your level

boolean Skip = false;
propRef obiwan;
propRef anakin;
float anakinhealth;
float obiwanhealth;
            
        
/////////////////////////////          INCLUDE DEFAULTS           /////////////////


callback void playerKilled(int killerId, int iResult, int iSpare)
{
//AddVMDebugHUDMsg("killed NPC iresult is", iResult, "test_objective_message");
//AddVMDebugHUDMsg("killed NPC killerid is", killerId, "test_objective_message");
            
   int iNumActive = BFObjectiveGetNumActive();
   int i = 0;
   if(iResult == 1)
   {
       ChallengeSetScore( ChallengeGetScore() + 100 );
   }

   for (i=0; i<iNumActive; i++)
   {
       int iActive = BFObjectiveGetNumForNthActive(i);
       if (lib_playerKilled(killerId, iResult, iSpare, iActive))
       {             nextObjective(iActive);
       }
   }
} 

function void Trigger(char16 inTriggerProp) //Used so can be called elsewhere in script (cant call a callback)
{    
    int iResult = 0;
    int iNumActive = BFObjectiveGetNumActive();
    int i = 0;
    int iActive = 0;
    for (i=0; i<iNumActive; i++)
    {
	iActive = BFObjectiveGetNumForNthActive(i);
	iResult = lib_triggeredProp(inTriggerProp, iActive);
	iResult = ObjectiveTriggerTests(iNumActive, inTriggerProp, iResult);

	if (iResult >= 1) nextObjective(iNumActive);
    }
}
callback int triggeredProp(int inType, char16 inTriggerProp, int pId)
{   
    Trigger(inTriggerProp);     
    return 0;
}

function void nextObjective(int iObjNum) 
{    
    int result =   lib_nextObjective(iObjNum);

    if(result==1)
    {
	//if next objective returns 1 it has updated a core objective and automatically moved us onto the next
	//so do objective setup with current objective
	if (!Skip)
	{
	    int iObjective = BFObjectiveGetCurrent();//GetLevelVarInt("mObjective");
	    char16 cName = BFObjectiveGetName(iObjective);
	    ObjectiveSetup( cName, iObjective, BFObjectiveGetSub(iObjective));            
	}
    }

    if(result==2)
    {
	//if nextobjective returns 2 it has updated a bonus objective so we will want to 
	//objective setup with the objective we passed to next objective
	if (!Skip)
	{
	    char16 cName = BFObjectiveGetName(iObjNum);
	    ObjectiveSetup( cName, iObjNum, BFObjectiveGetSub(iObjNum));            
	}
    }
}

function void JumpToObjective(int iStartObj, boolean Skiping)
{       
    Skip = Skiping;
    ResetProps();

    if (Skip)
    {
	BFObjectiveSetJumpTo(iStartObj);
    }

    Skip = false;
    nextObjective(BFObjectiveGetCurrent());

    char16 tSpawn;
    tSpawn = LevelVarToChar16("mCurrentSpawner");
    if (propExists(propRefFromChar16(tSpawn)))
        propTeleportToProp(getPlayerPropRefFromID(GetPlayerId()), propRefFromChar16(tSpawn));        

    logStr("Jumped To Objective");
    logInt(BFObjectiveGetCurrent());
}

callback void ObjectiveTimeExpired(char16 objName)
{   
    //if (lib_ObjTimeExpired()) nextObjective();

    int objNum = 0;
    objNum = BFObjectiveGetNumber(objName);   
    if (lib_ObjTimeExpired(objNum))
    {
	nextObjective(objNum);
    }
}
callback void playerSpawned(char16 teamName, int playerId)
{
    //int iObjective = GetLevelVarInt("mObjective");
    logStr("teamName: ");
    logchar16(teamName);
}
callback void finiteSpawnerComplete(char16 propId) 
{
    AddVMDebugHUDMsg("FINITE SPAWNER IS DEADED", 1, "test_objective_message");
}

/////////////////////////////          DEFAULTS END            /////////////////

callback void gameHasStarted()
{           
}

function void ResetProps()
{
// e.g    disableTrigger(propRefFromName("DeathTrigger"));       
}

function void ScriptHasStarted()
{
    //SetLevelVarsBFStory("obj_Mus", "vmTrig");
    SetBFStoryPrefixes("obj_CorEscort", "vmTrig");
 // obj_Mus is the link into the bf/mgrsetup/objectivesmgr.res file.
 // It will look for objectives in objectivesmgr: obj_Mus1, obj_Mus2 etc. so rename it for your level
 // vmTrig is the reference for trigger prop names in the editor, e.g. first trigger should be renamed to vmTrig1, then vmTrig2 etc
 // Remember to paste into each trigger props action variable:
 // propHasEnteredTriggerScript = "gamemodeTriggerSimple(triggerPropRef, thisPropRef);"

    ResetObjectives("mObjTmp", 15);

    //Reset CPs, Spawners, etc
    ResetProps();

    JumpToObjective(1, true);
}

function int ObjectiveTriggerTests(int iObjective, char16 inTriggerProp, int iResult) 
{
    int iSubObjective = BFObjectiveGetSub(iObjective);


    //No Change
        return iResult;
}

callback void shipReachedScriptedSplineSegment(propRef ship, propRef spline, int segment)
{
/* 
   if( (spline == propRefFromName("droidspline_1_1")) || (spline == propRefFromName("droidspline_1_2")) )
    {
        if(segment == 1)
        {

        }
    }
*/
    
    if(spline == propRefFromName("a1"))
    {
        AddVMDebugHUDMsg("Spline segment", segment, "test_objective_message");

        if(segment == 1)
        {
            activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Alright Anakin, try to stick with me, this is going to get rough.");    
        }
        else if(segment == 2)
        {
            activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "The way you fly master, I'll have trouble braking hard enough.");    
        }
        else if(segment == 4)
        {
            activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Grey Squadron, On my mark, dive!");    
        }

        else if(segment == 7)
        {
        

            AddVMDebugHUDMsg("!!!!Switching splines!!!!!", segment, "test_objective_message");
            BFShipStopFollowingScriptedSpline(obiwan);
            // Start it on the path
            propRef spline;
            spline = propRefFromName("a");
            BFShipFollowScriptedSplineNoAvoidance(obiwan, spline);
            
            
            // Start scripted droid spawns : coruscant_chlg_escort_sub1.vms script!
            forceTriggerTriggered(propRefFromName("trig_droidspn"));
            
         }
    }
    else if(spline == propRefFromName("b1"))
    {
        AddVMDebugHUDMsg("Spline segment", segment, "test_objective_message");
        if(segment == 7)
        {

            AddVMDebugHUDMsg("!!!!Switching splines!!!!!", segment, "test_objective_message");
            BFShipStopFollowingScriptedSpline(anakin);
            // Start it on the path
            propRef spline2;
            spline2 = propRefFromName("b");
            BFShipFollowScriptedSplineNoAvoidance(anakin, spline2);

        }
    }
    
        
    else if(spline == propRefFromName("a"))
    {
        AddVMDebugHUDMsg("Spline segment", segment, "test_objective_message");
        if(segment == 1)
        {
        }
        else if(segment == 2)
        {
        /*
            int iObjective = BFObjectiveGetCurrent();
            char16 cName = BFObjectiveGetName(iObjective);
            BFNPCGroupObjectiveSetTargetProp(cName, "droidgroup1", obiwan , 10.f, 20.f);
            BFNPCGroupObjectiveSetType(cName, "droidgroup1", k_objtype_attack_prop);
            */
            

        }
        else if(segment == 3)
        {
        /*
            // spawn fighters for 1st battle
            propRef droid1;
            propRef spline1;
            droid1 = SpawnAIVehicle(propRefFromName("droiddof_1_1"), "imp_engineer_npc_story", "cis_droidfighter", 0, false, k_seatPos_driver);
            spline1 = propRefFromName("droidspline_1_1");   
            BFShipFollowScriptedSplineNoAvoidance(droid1, spline1);
            
            propRef droid2;
            propRef spline2;
            droid2 = SpawnAIVehicle(propRefFromName("droiddof_1_2"), "imp_engineer_npc_story", "cis_droidfighter", 0, false, k_seatPos_driver);
            spline2 = propRefFromName("droidspline_1_2");   
            BFShipFollowScriptedSplineNoAvoidance(droid2, spline2);
            
            propRef droid3;
            propRef spline3;
            droid3 = SpawnAIVehicle(propRefFromName("droiddof_1_3"), "imp_engineer_npc_story", "cis_droidfighter", 0, false, k_seatPos_driver);
            spline3 = propRefFromName("droidspline_1_3");   
            BFShipFollowScriptedSplineNoAvoidance(droid3, spline3);
            
            propRef droid4;
            propRef spline4;
            droid4 = SpawnAIVehicle(propRefFromName("droiddof_1_4"), "imp_engineer_npc_story", "cis_droidfighter", 0, false, k_seatPos_driver);
            spline4 = propRefFromName("droidspline_1_4");   
            BFShipFollowScriptedSplineNoAvoidance(droid4, spline4);
            */
        }
        else if(segment == 5)
        {
            AddVMDebugHUDMsg("............ ADDED HEALTH BONUS! ...........", segment, "test_objective_message");
            anakinhealth = propGetHealthFraction(anakin);
            obiwanhealth = propGetHealthFraction(obiwan);
            if (obiwanhealth < 0.50f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "I'm badly damaged! Grey Squadron, you have to get them off me!");    
            }
            else if (anakinhealth < 0.45f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "Master, my ship is barely functioning!");    
            }    
            else if (obiwanhealth < 0.75f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "I'm taking a bruising here Grey Squadron!");    
            }
            else if (anakinhealth < 0.70f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "Grey Squadron, do your job! I'm hit!");    
            }    
            else if (obiwanhealth < 0.95f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Good job grey squadron, we're doing ok up here..");    
            }
            else if (anakinhealth < 0.90f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "I'm doing ok here, master.");    
            }    
            else // both ships are full health
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Great job Grey Squadron, hardly a scratch on us!");    
            }
            ChallengeSetScore( ChallengeGetScore() + 300*propGetHealthFraction(anakin) + 300*propGetHealthFraction(obiwan) );

        }
        else if(segment == 11)
        {

        }
        else if(segment == 12)
        {            
            anakinhealth = propGetHealthFraction(anakin);
            obiwanhealth = propGetHealthFraction(obiwan);
            if (obiwanhealth < 0.25f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "I'm badly damaged! Grey Squadron, you have to get them off me!");    
            }
            else if (anakinhealth < 0.25f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "Master, my ship is barely functioning!");    
            }    
            else if (obiwanhealth < 0.50f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "I'm taking a bruising here Grey Squadron!");    
            }
            else if (anakinhealth < 0.50f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "Grey Squadron, do your job! I'm hit!");    
            }    
            else if (obiwanhealth < 0.75f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Good job grey squadron, we're doing ok up here..");    
            }
            else if (anakinhealth < 0.75f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "I'm doing ok here, master.");    
            }    
            else // both ships are full health
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Great job Grey Squadron, hardly a scratch on us!");    
            }
            ChallengeSetScore( ChallengeGetScore() + 300*propGetHealthFraction(anakin) + 300*propGetHealthFraction(obiwan) );

            // spawn fighters for 3rd battle
        }
        else if(segment == 17)
        {
            anakinhealth = propGetHealthFraction(anakin);
            obiwanhealth = propGetHealthFraction(obiwan);
            if (obiwanhealth < 0.25f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "I'm badly damaged! Grey Squadron, you have to get them off me!");    
            }
            else if (anakinhealth < 0.25f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "Master, my ship is barely functioning!");    
            }    
            else if (obiwanhealth < 0.50f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "I'm taking a bruising here Grey Squadron!");    
            }
            else if (anakinhealth < 0.50f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "Grey Squadron, do your job! I'm hit!");    
            }    
            else if (obiwanhealth < 0.75f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Good job grey squadron, we're doing ok up here..");    
            }
            else if (anakinhealth < 0.75f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "I'm doing ok here, master.");    
            }    
            else // both ships are full health
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Great job Grey Squadron, hardly a scratch on us!");    
            }
            ChallengeSetScore( ChallengeGetScore() + 300*propGetHealthFraction(anakin) + 300*propGetHealthFraction(obiwan) );

        }
        else if(segment == 22)
        {
            anakinhealth = propGetHealthFraction(anakin);
            obiwanhealth = propGetHealthFraction(obiwan);
            if (obiwanhealth < 0.25f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "I'm badly damaged! Grey Squadron, you have to get them off me!");    
            }
            else if (anakinhealth < 0.25f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "Master, my ship is barely functioning!");    
            }    
            else if (obiwanhealth < 0.50f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "I'm taking a bruising here Grey Squadron!");    
            }
            else if (anakinhealth < 0.50f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "Grey Squadron, do your job! I'm hit!");    
            }    
            else if (obiwanhealth < 0.75f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Good job grey squadron, we're doing ok up here..");    
            }
            else if (anakinhealth < 0.75f)
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "I'm doing ok here, master.");    
            }    
            else // both ships are full health
            {
                activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Great job Grey Squadron, hardly a scratch on us!");    
            }
            ChallengeSetScore( ChallengeGetScore() + 300*propGetHealthFraction(anakin) + 300*propGetHealthFraction(obiwan) );

        }
        else if(segment == 24)
        {
		activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heroes/anakinep3_texboned", "AN_lnd_tlk01", "The General's Command Ship is dead ahead.");    
	}
        else if(segment == 25)
        {
		activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Oh, I have a bad feeling about this..");        
        }
        
        else if(segment == 27)
        {
            ChallengeEnd();
        }
    }
}

/////////////////////////////          OBJECTIVE TESTS            /////////////////

// We can test if certain objectives have been completed here, rather than trigger them immediately
// This is because sometimes it is much easier on the CPU to test here rather than set up triggers
// Also we can do complex objective tests here which aren't otherwise possible (e.g. if prop is destroyed)
function void ObjectiveTests(int iObjective) 
{
    //Tests for each game tick
    /*
    if (iObjective == 2)
    {
      if (!propExists(obiwan))
      {
            activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/obi_wan/young_obi_wan", "AN_lnd_tlk01", "Aaarrrrrrrrrggggggghhhhhhhhhh!");    
            ChallengeFail();
      }
      else if(!propExists(anakin))
      {
            activateTalkingHead(0.0f, 1.72f, -1.3f, 0.0f, 1.72f, -2.0f, 5.0f, "characters/heros/anakinep3_texboned", "AN_lnd_tlk01", "Aaaaaaaaaarrrrrrrrrggggggghhhhhhhhhh!");    
            ChallengeFail();
      }
    }
    */
    /*
    int iSubObjective = BFObjectiveGetSub(iObjective);

    if (iObjective == 1)
    {
        if (iSubObjective == 1)
        {
        
        }
        else
        {
        
        }
    }
    */
}

/////////////////////////////          OBJECTIVES            /////////////////

// MAIN OBJECTIVE SETUP FUNCTION (most of your code will go here)
// Set up what each objective actually is (the code for it anyway) and trigger events happening as player completes objectives
// Objective description strings and numbers are in mgrsetup/objectivesmgr.res + strings localisation file

function void ObjectiveSetup(char16 cObjectiveName, int iObjective, int iSubObjective)
{
    if (iObjective == 1) 
    { 
            //Player spawn
          propRef player = getPlayerPropRefFromID(GetPlayerId());
          SpawnInVehicle(player, propRefFromName("playerSpawn1"), StringToChar16("arc_challenge"), 5, k_seatPos_driver ); 
                  //SpawnInVehicle(player, propRefFromName("playerSpawn1"), "cis_tri_fighter", 5, k_seatPos_driver ); 
                
        ChallengeBegin();
        // Create Obi-wan
        obiwan = SpawnAIVehicle(
            propRefFromName("Obi_wan_dof_"),
            "rep_clonetrooper_npc_story", // todo: young obi wan kenobi 
            "rep_obiwan_starfighter",
            0, false, 3);

        // Create Anakin
        anakin = SpawnAIVehicle(
            propRefFromName("Anakin_dof_"),
            "rep_clonetrooper_npc_story", // todo: anakin skywalker 
            "rep_anakin_starfighter",
      	    0, false, 3);

        // Start it on the path
        propRef spline2;
        spline2 = propRefFromName("b1");
        BFShipFollowScriptedSplineNoAvoidance(anakin, spline2);
        
        // Start it on the path
        propRef spline;
        spline = propRefFromName("a1");
        BFShipFollowScriptedSplineNoAvoidance(obiwan, spline);
        
	BFAddFlyingAIPropCentricPatrolZone(obiwan, 120.0f );
	BFRemoveFlyingAIPatrolZone(vector( -188.176544, 2562.302002, 2243.443115));

	//BFAddFlyingAIPatrolZone(vector(2687.5f, 2035.4f, -1987.63f),5000.0);  //todo multiple patrol zones.
	
	AddPropToGroup(propRefFromName("escorts_g"), anakin);
	AddPropToGroup(propRefFromName("escorts_g"), obiwan);
	
	propRef playerV = getDriverVehicle(player);
	BFEnableSwitchSeats(playerV, false);
	

    // Setup escort scenario
    waitForGameTime(1.0f);
    
    ChallengeAddEscortProp(anakin, 1000.0f, 1300.0f);
    ChallengeAddEscortProp(obiwan, 1000.0f, 1300.0f);
          
        //ambient fighting
        //BFAddFlyingAIPatrolZone(vector(-2687.5f, 3014.4f, 987.63f),50.0);  //todo multiple patrol zones.
        
        

        // add objective indicators to obiwan and anakin
        addNewObjectiveIndicatorToProp(obiwan, k_objectiveIndicatorType_mainObjective);
        addNewObjectiveIndicatorToProp(anakin, k_objectiveIndicatorType_mainObjective);


        // droid fighters group 1
/* while (propGroupGetNumOfProps(propRefFromName("droidgroup1")) < 20)
        {
            propRef droid;
            droid = SpawnAIVehicle(propRefFromName("droid_1_1"), "cis_battledroid_npc_story", "cis_droidfighter", 500, false, k_seatPos_driver);
            addPropToGroup(propRefFromName("droidgroup1"), droid);
        }
*/
        //BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "droidgroup1", obiwan , 10.f, 20.f);
        //BFNPCGroupObjectiveSetType(cObjectiveName, "droidgroup1", k_objtype_attack_prop);
        nextObjective(1);
    } 
}

AllowCallback(CALLBACK_PlayerSpawned, playerSpawned);
AllowCallback(CALLBACK_PlayerKilledBF, playerKilled);
AllowCallback(CALLBACK_TriggeredProp, triggeredProp);
AllowCallback(CALLBACK_ObjectiveTimeExpired, ObjectiveTimeExpired);
AllowCallback(CALLBACK_GameHasStarted, gameHasStarted);
AllowCallback(CALLBACK_FSpawnerComplete, finiteSpawnerComplete);
AllowCallback(CALLBACK_ShipReachedScriptedSplineSegment, shipReachedScriptedSplineSegment);


///////////////This Script Actions

waitForGameTime(0.1f);
ScriptHasStarted(); //Do any setups

//Main game loop
while(1)
{
    int iNumActive = BFObjectiveGetNumActive();
    int i = 0;

    for (i=0; i<iNumActive; i++)
    {
      int iObjective = BFObjectiveGetNumForNthActive(i);
      ObjectiveTests(iObjective);

      logStr("tick");
      logInt(iObjective);

    }

    waitForGameTime(1.0f);
}

