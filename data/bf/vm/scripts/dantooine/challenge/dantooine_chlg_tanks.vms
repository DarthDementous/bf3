
// vim: set syntax=c :

///////////////////////////////
// Dantooine Tanks Challenge //
///////////////////////////////

boolean Skip = false;

int IsPlayerDead = 0;

/////////////////////////////          INCLUDE DEFAULTS           /////////////////


callback void playerKilled(int killerId, int iResult, int iSpare)
{
    int iNumActive = BFObjectiveGetNumActive();
    int i = 0;
    
    propRef pTank;
    pTank = propRefFromInt(iSpare);
    
    propRef pKiller;
    pKiller = propRefFromInt(killerId);    

//dirty hack using chrs placed in different tanks to up score - multipliers in the form of pickups for this level?

    if (isPlayerProp(pKiller) && iResult == 1)
    {
	int class = getVehicleClass(pTank);

	if (class == 0)
	{
//	    int snipercombo = ChallengeGetSniperKillCombo ();
//	    ChallengeAddScore(1);
	}
	else if (class == 1)
	{
	    int snipercombo = ChallengeGetSniperKillCombo ();
	    ChallengeAddScore(50);
	}
	else if (class == 2)
	{
	    int snipercombo = ChallengeGetSniperKillCombo ();
	    ChallengeAddScore(100);
	}
	else if (class == 3)
	{
	    int snipercombo = ChallengeGetSniperKillCombo ();
	    ChallengeAddScore(250);
	}
/*
	else if (class == 4)
	{
	    int snipercombo = ChallengeGetSniperKillCombo ();
	    ChallengeAddScore(500 );
	}
*/
	else
	{
	}
    }
    for (i=0; i<iNumActive; i++)
    {
	int iActive = BFObjectiveGetNumForNthActive(i);
	if (lib_playerKilled(killerId, iResult, iSpare, iActive)) 
	{
	    nextObjective(iActive);
	}
    }
}

function void Trigger(char16 inTriggerProp)
{    
    int iResult = 0;
    int iNumActive = BFObjectiveGetNumActive();
    int i = 0;
    int iActive = 0;
    for (i=0; i<iNumActive; i++)
    {
	iActive = BFObjectiveGetNumForNthActive(i);
	iResult = lib_triggeredProp(inTriggerProp, iActive);
	iResult = ObjectiveTriggerTests(iNumActive, inTriggerProp, iResult);

	if (iResult >= 1) nextObjective(iNumActive);
    }
}
callback int triggeredProp(int inType, char16 inTriggerProp, int pId)
{   
    Trigger(inTriggerProp);     
    return 0;
}
function void nextObjective(int iObjNum) 
{    
    int result =   lib_nextObjective(iObjNum);

    if(result==1)
    {
	if (!Skip)
	{
	    int iObjective = BFObjectiveGetCurrent();
	    char16 cName = BFObjectiveGetName(iObjective);
	    ObjectiveSetup( cName, iObjective, BFObjectiveGetSub(iObjective));            
	}
    }

    if(result==2)
    {
	if (!Skip)
	{
	    char16 cName = BFObjectiveGetName(iObjNum);
	    ObjectiveSetup( cName, iObjNum, BFObjectiveGetSub(iObjNum));            
	}
    }
}

function void JumpToObjective(int iStartObj, boolean Skiping)
{       
    Skip = Skiping;
    ResetProps();

    if (Skip)
    {
	BFObjectiveSetJumpTo(iStartObj);
    }

    Skip = false;
    nextObjective(BFObjectiveGetCurrent());

    char16 tSpawn;
    tSpawn = LevelVarToChar16("mCurrentSpawner");
    if (propExists(propRefFromChar16(tSpawn)))
        propTeleportToProp(getPlayerPropRefFromID(GetPlayerId()), propRefFromChar16(tSpawn));        

    logStr("Jumped To Objective");
    logInt(BFObjectiveGetCurrent());

}

callback void ObjectiveTimeExpired(char16 objName)
{   
    int objNum = 0;
    objNum = BFObjectiveGetNumber(objName);   
    if (lib_ObjTimeExpired(objNum))
    {
	nextObjective(objNum);
    }
}
callback void playerSpawned(char16 teamName, int playerId)
{
    logStr("teamName: ");
    logchar16(teamName);
}
callback void finiteSpawnerComplete(char16 propId) 
{
    AddVMDebugHUDMsg("FINITE SPAWNER IS DEADED", 1, "test_objective_message");
}

/////////////////////////////          DEFAULTS END            /////////////////

callback void gameHasStarted()
{           
}

function void ResetProps()
{
}

function void ScriptHasStarted()
{
    SetBFStoryPrefixes("obj_Dan_TChlg", "vmTrig");

    ResetObjectives("mObjTmp", 10);

    ResetProps();

    JumpToObjective(1, true);
}

function int ObjectiveTriggerTests(int iObjective, char16 inTriggerProp, int iResult) 
{
    int iSubObjective = BFObjectiveGetSub(iObjective);

    if (iObjective == 1)
    {
        if (iResult == 1) 
            JumpToObjective(10, true);
    }
    return iResult;
}

/////////////////////////////          OBJECTIVE TESTS            /////////////////


function void ObjectiveTests(int iObjective) 
{
    int iSubObjective = BFObjectiveGetSub(iObjective);

    if (iObjective <= 10) 
    {
	propRef player = getPlayerPropRefFromID(GetPlayerId());
	chrReplenishInventoryItemsOfType(player, "AMMO");
	if (!propValid(player) && !IsPlayerDead)
	{
	    IsPlayerDead = 1;
	}

	if (IsPlayerDead)
	{
	    ChallengeEnd();
	}
    }
}

/////////////////////////////          OBJECTIVES            /////////////////
// Create tank groups here
function void AddAAT(int i, propRef pGroup)
{
    propRef pGunner;
    
    char16 cName;
    cName = StringCatInt("gunDOF", i, "_");

    pGunner = SpawnCharacterBF("cis_assassindroid_npc_story", propRefFromChar16(cName), vector(0, 0, 0));

    cName = StringCatInt("tankDOF", i, "_");

    propRef pAAT;
    pAAT = SpawnAIVehicleWithObjectives(propRefFromChar16(cName), "cis_assassindroid_npc_story", "cis_aat", 0, false, k_seatPos_driver, StringToChar16(""));

    PassengerVehicleBF(pGunner, pAAT, false);
    SetAICanDrive(pAAT, true);

    addPropToGroup(pGroup, pAAT);
}

function void AddHailfire(int i, propRef pGroup)
{
    char16 cName;
    cName = StringCatInt("tankDOF", i, "_");

    propRef pHailfire;
    pHailfire = SpawnAIVehicleWithObjectives(propRefFromChar16(cName), "cis_assassindroid_npc_story", "cis_hailfire", 0, false, k_seatPos_driver, StringToChar16(""));
    SetAICanDrive(pHailfire, true);

    addPropToGroup(pGroup, pHailfire);
}

function void AddSnail(int i, propRef pGroup)
{
    char16 cName;
    cName = StringCatInt("tankDOF", i, "_");

    propRef pSnail;
    pSnail = SpawnAIVehicleWithObjectives(propRefFromChar16(cName), "cis_engineerdroid_npc_story", "cis_snailtank", 0, false, k_seatPos_driver, StringToChar16(""));
    SetAICanDrive(pSnail, true);

    addPropToGroup(pGroup, pSnail);
}

function void AddATRT(int i, propRef pGroup)
{
    char16 cName;
    cName = StringCatInt("tankDOF", i, "_");

    propRef pATRT;
    pATRT = SpawnAIVehicleWithObjectives(propRefFromChar16(cName), "cis_superbattledroid_npc_story", "rep_atrt", 0, false, k_seatPos_driver, StringToChar16(""));
    SetAICanDrive(pATRT, true);

    addPropToGroup(pGroup, pATRT);
}

function void AddStap(int i, propRef pGroup)
{
    char16 cName;
    cName = StringCatInt("tankDOF", i, "_");

    propRef pStap;
    pStap = SpawnAIVehicleWithObjectives(propRefFromChar16(cName), "cis_superbatledroid_npc_story", "cis_stap", 0, false, k_seatPos_driver, StringToChar16(""));
    SetAICanDrive(pStap, true);

    addPropToGroup(pGroup, pStap);
}


/*
function void AddHover(int i, propRef pGroup)
{
    char16 cName;
    cName = StringCatInt("tankDOF", i, "_");

    propRef pHover;
    pHover = SpawnAIVehicleWithObjectives(propRefFromChar16(cName), "imp_stormtrooper_npc_story", "rep_clone_hover_tank", 0, false, k_seatPos_driver, StringToChar16(""));
    SetAICanDrive(pHover, true);

    addPropToGroup(pGroup, pHover);
}

function void AddIft(int i, propRef pGroup)
{
    char16 cName;
    cName = StringCatInt("tankDOF", i, "_");

    propRef pIft;
    pIft = SpawnAIVehicleWithObjectives(propRefFromChar16(cName), "imp_stormtrooper_npc_story", "republic_ift_redwhite", 0, false, k_seatPos_driver, StringToChar16(""));
    SetAICanDrive(pIft, true);

    addPropToGroup(pGroup, pIft);
}
*/

function void ObjectiveSetup(char16 cObjectiveName, int iObjective, int iSubObjective)
{
    if (iObjective == 1) 
    {
	propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	BFNPCTeamObjectiveSetTargetProp(cObjectiveName, 1, p , 10.f, 20.f);
	BFNPCTeamObjectiveSetType(cObjectiveName, 1, k_objtype_attack_prop);	
	
	playerForceClassSwitch(chrRefFromPropRef(p), "STR_CHRNAME_REPHEAVYTROOPER");
    	
//	lib_SetupTeamZone(cObjectiveName, 1, "TankPatrolZone", "TankTargetZone", k_objtype_hold_area);
	
	AddATRT(2, propRefFromName("Spwn-1"));
	AddATRT(4, propRefFromName("Spwn-1"));

	SetObjectiveKillSpawners(1, iObjective);
	
    }
    else if (iObjective == 2)
    {	
	if (iSubObjective == 1)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCTeamObjectiveSetTargetProp(cObjectiveName, 1, p , 10.f, 20.f);
	    BFNPCTeamObjectiveSetType(cObjectiveName, 1, k_objtype_attack_prop);
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    
	    AddATRT(4, propRefFromName("Spwn-2_1"));
	    AddATRT(5, propRefFromName("Spwn-2_1"));
	    AddATRT(2, propRefFromName("Spwn-2_1"));

	    SetObjectiveKillSpawners(1, iObjective);
	}
	else
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    spawnGroupSetActive(propRefFromName("tank2_"), true);
	    
//	    lib_SetupTeamZone(cObjectiveName, 1, "TankPatrolZone", "TankTargetZone", k_objtype_hold_area);
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCTeamObjectiveSetTargetProp(cObjectiveName, 1, p , 10.f, 20.f);
	    BFNPCTeamObjectiveSetType(cObjectiveName, 1, k_objtype_attack_prop);	
	    
	    AddATRT(2, propRefFromName("Spwn-2"));
	    AddATRT(5, propRefFromName("Spwn-2"));
	    AddATRT(4, propRefFromName("Spwn-2"));

	    SetObjectiveKillSpawners(1, iObjective);

	    SetNumSubObjectives(1, iObjective);	 
	}
    }
    else if (iObjective == 3)
    {	
	if (iSubObjective == 1)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    
	    BFNPCTeamObjectiveSetTargetProp(cObjectiveName, 1, p , 10.f, 20.f);
	    BFNPCTeamObjectiveSetType(cObjectiveName, 1, k_objtype_attack_prop);
	    
	    AddATRT(5, propRefFromName("Spwn-3_1"));
	    AddHailfire(4, propRefFromName("Spwn-3_1"));
	    AddHailfire(10, propRefFromName("Spwn-3_1"));

	    SetObjectiveKillSpawners(1, iObjective);
	}
	else
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
//	    lib_SetupTeamZone(cObjectiveName, 1, "TankPatrolZone", "TankTargetZone", k_objtype_hold_area);
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    
	    BFNPCTeamObjectiveSetTargetProp(cObjectiveName, 1, p , 10.f, 20.f);
	    BFNPCTeamObjectiveSetType(cObjectiveName, 1, k_objtype_attack_prop);	
	    
	    AddHailfire(11, propRefFromName("Spwn-3"));
	    AddATRT(2, propRefFromName("Spwn-3"));
	    AddATRT(1, propRefFromName("Spwn-3"));

	    SetObjectiveKillSpawners(1, iObjective);
	    
	    SetNumSubObjectives(1, iObjective);	 
	}
    }
    else if (iObjective == 4)
    {
	if (iSubObjective == 1)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    
	    BFNPCTeamObjectiveSetTargetProp(cObjectiveName, 1, p , 10.f, 20.f);
	    BFNPCTeamObjectiveSetType(cObjectiveName, 1, k_objtype_attack_prop);
	    
	    AddSnail(1, propRefFromName("Spwn-4_1"));
	    AddHailfire(2, propRefFromName("Spwn-4_1"));
	    AddSnail(11, propRefFromName("Spwn-4_1"));
	    AddATRT(10, propRefFromName("Spwn-4_1"));

	    SetObjectiveKillSpawners(1, iObjective);
	}
	else
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    spawnGroupSetActive(propRefFromName("tank4_"), true);
	    
//	    lib_SetupTeamZone(cObjectiveName, 1, "TankPatrolZone", "TankTargetZone", k_objtype_hold_area);

	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCTeamObjectiveSetTargetProp(cObjectiveName, 1, p , 10.f, 20.f);
	    BFNPCTeamObjectiveSetType(cObjectiveName, 1, k_objtype_attack_prop);	
	    
	    AddSnail(11, propRefFromName("Spwn-4"));
	    AddATRT(5, propRefFromName("Spwn-4"));
	    AddHailfire(2, propRefFromName("Spwn-4"));
	    AddATRT(4, propRefFromName("Spwn-4"));

	    SetObjectiveKillSpawners(1, iObjective);
	    
	    SetNumSubObjectives(1, iObjective);	 
	}
    }
    else if (iObjective == 5)
    {
	if (iSubObjective == 1)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    
	    BFNPCTeamObjectiveSetTargetProp(cObjectiveName, 1, p , 10.f, 20.f);
	    BFNPCTeamObjectiveSetType(cObjectiveName, 1, k_objtype_attack_prop);	
	    
	    AddHailfire(1, propRefFromName("Spwn-5_1"));
	    AddHailfire(2, propRefFromName("Spwn-5_1"));
	    AddSnail(10, propRefFromName("Spwn-5_1"));
	    AddATRT(4, propRefFromName("Spwn-5_1"));
	    AddATRT(5, propRefFromName("Spwn-5_1"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	}
	else 
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());

//	    lib_SetupTeamZone(cObjectiveName, 1, "TankPatrolZone", "TankTargetZone", k_objtype_hold_area);

	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);

	    BFNPCTeamObjectiveSetTargetProp(cObjectiveName, 1, p , 10.f, 20.f);
	    BFNPCTeamObjectiveSetType(cObjectiveName, 1, k_objtype_attack_prop);		    

	    AddHailfire(1, propRefFromName("Spwn-5"));
	    AddHailfire(2, propRefFromName("Spwn-5"));
	    AddSnail(10, propRefFromName("Spwn-5"));
	    AddATRT(4, propRefFromName("Spwn-5"));
	    AddATRT(5, propRefFromName("Spwn-5"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	    
	    SetNumSubObjectives(1, iObjective);	
	}
    }
    else if (iObjective == 6)
    {
	if (iSubObjective == 1)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);

	    BFNPCTeamObjectiveSetTargetProp(cObjectiveName, 1, p , 10.f, 20.f);
	    BFNPCTeamObjectiveSetType(cObjectiveName, 1, k_objtype_attack_prop);		    
	    
	    AddSnail(1, propRefFromName("Spwn-6_1"));
	    AddSnail(2, propRefFromName("Spwn-6_1"));
	    AddATRT(5, propRefFromName("Spwn-6_1"));
	    AddAAT(10, propRefFromName("Spwn-6_1"));
	    AddAAT(11, propRefFromName("Spwn-6_1"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	}
	else if (iSubObjective == 2)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    
	    AddSnail(1, propRefFromName("Spwn-6_2"));
	    AddSnail(2, propRefFromName("Spwn-6_2"));
	    AddATRT(5, propRefFromName("Spwn-6_2"));
	    AddAAT(10, propRefFromName("Spwn-6_2"));
	    AddAAT(11, propRefFromName("Spwn-6_2"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	}
	else
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    spawnGroupSetActive(propRefFromName("tank6_"), true);
	    
	    lib_SetupTeamZone(cObjectiveName, 1, "TankPatrolZone", "TankTargetZone", k_objtype_hold_area);
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);

	    AddSnail(1, propRefFromName("Spwn-6"));
	    AddSnail(2, propRefFromName("Spwn-6"));
	    AddATRT(5, propRefFromName("Spwn-6"));
	    AddAAT(10, propRefFromName("Spwn-6"));
	    AddAAT(11, propRefFromName("Spwn-6"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	    
	    SetNumSubObjectives(2, iObjective);	
	}
    }
    else if (iObjective == 7)
    {
	if (iSubObjective == 1)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    
	    AddAAT(1, propRefFromName("Spwn-7_1"));
	    AddAAT(2, propRefFromName("Spwn-7_1"));
	    AddSnail(10, propRefFromName("Spwn-7_1"));
	    AddHailfire(11, propRefFromName("Spwn-7_1"));
	    AddHailfire(4, propRefFromName("Spwn-7_1"));
	    AddHailfire(5, propRefFromName("Spwn-7_1"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	}

	else
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    lib_SetupTeamZone(cObjectiveName, 1, "TankPatrolZone", "TankTargetZone", k_objtype_hold_area);
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    
	    AddAAT(1, propRefFromName("Spwn-7"));
	    AddAAT(2, propRefFromName("Spwn-7"));
	    AddSnail(10, propRefFromName("Spwn-7"));
	    AddHailfire(11, propRefFromName("Spwn-7"));
	    AddHailfire(4, propRefFromName("Spwn-7"));
	    AddHailfire(5, propRefFromName("Spwn-7"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	    
	    SetNumSubObjectives(1, iObjective);	
	}
    }
    else if (iObjective == 8)
    {
	if (iSubObjective == 1)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank8_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank8_", k_objtype_attack_prop);
	    
	    AddAAT(1, propRefFromName("Spwn-8_1"));
	    AddSnail(2, propRefFromName("Spwn-8_1"));
	    AddHailfire(5, propRefFromName("Spwn-8_1"));
	    AddSnail(4, propRefFromName("Spwn-8_1"));
	    AddHailfire(10, propRefFromName("Spwn-8_1"));
	    AddAAT(11, propRefFromName("Spwn-8_1"));

	    SetObjectiveKillSpawners(1, iObjective);
	}

	else if (iSubObjective == 2)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank8_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank8_", k_objtype_attack_prop);
	    
	    AddAAT(1, propRefFromName("Spwn-8_2"));
	    AddSnail(2, propRefFromName("Spwn-8_2"));
	    AddHailfire(5, propRefFromName("Spwn-8_2"));
	    AddAAT(11, propRefFromName("Spwn-8_2"));
	    AddSnail(4, propRefFromName("Spwn-8_2"));
	    AddHailfire(10, propRefFromName("Spwn-8_2"));

	    SetObjectiveKillSpawners(1, iObjective);
	}

	else
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    spawnGroupSetActive(propRefFromName("tank8_"), true);
	    
	    lib_SetupTeamZone(cObjectiveName, 1, "TankPatrolZone", "TankTargetZone", k_objtype_hold_area);
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank8_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank8_", k_objtype_attack_prop);

	    AddAAT(1, propRefFromName("Spwn-8"));
	    AddSnail(2, propRefFromName("Spwn-8"));
	    AddHailfire(5, propRefFromName("Spwn-8"));
	    AddAAT(11, propRefFromName("Spwn-8"));
	    AddSnail(4, propRefFromName("Spwn-8"));
	    AddHailfire(10, propRefFromName("Spwn-8"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	    
	    SetNumSubObjectives(2, iObjective);	
	}
    }
    else if (iObjective == 9)
    {
	if (iSubObjective == 1)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());

	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank8_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank8_", k_objtype_attack_prop);

	    AddAAT(1, propRefFromName("Spwn-9_1"));
	    AddAAT(2, propRefFromName("Spwn-9_1"));
	    AddAAT(10, propRefFromName("Spwn-9_1"));
	    AddHailfire(4, propRefFromName("Spwn-9_1"));
	    AddAAT(5, propRefFromName("Spwn-9_1"));
	    AddAAT(11, propRefFromName("Spwn-9_1"));
	    AddSnail(7, propRefFromName("Spwn-9_1"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	}

	else 
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    lib_SetupTeamZone(cObjectiveName, 1, "TankPatrolZone", "TankTargetZone", k_objtype_hold_area);
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank8_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank8_", k_objtype_attack_prop);
	    
	    AddSnail(1, propRefFromName("Spwn-9"));
	    AddHailfire(2, propRefFromName("Spwn-9"));
	    AddSnail(10, propRefFromName("Spwn-9"));
	    AddAAT(4, propRefFromName("Spwn-9"));
	    AddSnail(5, propRefFromName("Spwn-9"));
	    AddHailfire(11, propRefFromName("Spwn-9"));
	    AddAAT(7, propRefFromName("Spwn-9"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	    
	    SetNumSubObjectives(1, iObjective);	
	}
    }
    else if (iObjective == 10)
    {
	if (iSubObjective == 1)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank8_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank8_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank10_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank10_", k_objtype_attack_prop);
	    
	    AddAAT(1, propRefFromName("Spwn-10_1"));
	    AddAAT(2, propRefFromName("Spwn-10_1"));
	    AddAAT(3, propRefFromName("Spwn-10_1"));
	    AddAAT(4, propRefFromName("Spwn-10_1"));
	    AddAAT(5, propRefFromName("Spwn-10_1"));
	    AddAAT(6, propRefFromName("Spwn-10_1"));
	    AddAAT(7, propRefFromName("Spwn-10_1"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	}

	else if (iSubObjective == 2)
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank8_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank8_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank10_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank10_", k_objtype_attack_prop);
	    
	    AddAAT(1, propRefFromName("Spwn-10_2"));
	    AddAAT(2, propRefFromName("Spwn-10_2"));
	    AddAAT(3, propRefFromName("Spwn-10_2"));
	    AddAAT(4, propRefFromName("Spwn-10_2"));
	    AddAAT(5, propRefFromName("Spwn-10_2"));
	    AddAAT(6, propRefFromName("Spwn-10_2"));
	    AddAAT(7, propRefFromName("Spwn-10_2"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	}
	
	else
	{
	    propRef p = getPlayerPropRefFromID(GetPlayerId());
	    
	    spawnGroupSetActive(propRefFromName("tank10_"), true);
	    
	    lib_SetupTeamZone(cObjectiveName, 1, "TankPatrolZone", "TankTargetZone", k_objtype_hold_area);
	    
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank2_", p , 10.f, 20.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank2_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank4_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank4_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank6_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank6_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank8_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank8_", k_objtype_attack_prop);
	    BFNPCGroupObjectiveSetTargetProp(cObjectiveName, "tank10_", p , 20.f, 40.f);
	    BFNPCGroupObjectiveSetType(cObjectiveName, "tank10_", k_objtype_attack_prop);

	    AddAAT(1, propRefFromName("Spwn-10"));
	    AddAAT(2, propRefFromName("Spwn-10"));
	    AddAAT(3, propRefFromName("Spwn-10"));
	    AddAAT(4, propRefFromName("Spwn-10"));
	    AddAAT(5, propRefFromName("Spwn-10"));
	    AddAAT(6, propRefFromName("Spwn-10"));
	    AddAAT(7, propRefFromName("Spwn-10"));
	    
	    SetObjectiveKillSpawners(1, iObjective);
	    
	    SetNumSubObjectives(2, iObjective);	
	}
    }
    else if (iObjective == 11)
    {
	ChallengeEnd();
    }
}

AllowCallback(CALLBACK_PlayerSpawned, playerSpawned);
AllowCallback(CALLBACK_PlayerKilledBF, playerKilled);
AllowCallback(CALLBACK_TriggeredProp, triggeredProp);
AllowCallback(CALLBACK_ObjectiveTimeExpired, ObjectiveTimeExpired);
AllowCallback(CALLBACK_GameHasStarted, gameHasStarted);
AllowCallback(CALLBACK_FSpawnerComplete, finiteSpawnerComplete);


///////////////This Script Actions

waitForGameTime(0.1f);
ScriptHasStarted();
ChallengeBegin();

//Main game loop
while(1)
{
    int iNumActive = BFObjectiveGetNumActive();
    int i = 0;

    for (i=0; i<iNumActive; i++)
    {
	int iObjective = BFObjectiveGetNumForNthActive(i);
	ObjectiveTests(iObjective);

	logStr("tick");
	logInt(iObjective);
    }
    waitForGameTime(1.0f);
}


